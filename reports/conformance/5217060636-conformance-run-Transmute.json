{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "43ab8532-9000-4072-8651-64695d9c5099",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c1027b6f-5042-4806-a510-845e444b945c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8744ae30-671d-4309-9555-04d8952c709e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e51199e2-122c-4578-bc14-73e083e16e1a"
                }
              }
            ]
          },
          {
            "id": "3e2da9a8-efe0-4d61-a7a7-cceb690e641f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf763d1f-7551-4fec-a0a2-7225bd386713",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "20e3212b-6b55-47ae-b2c9-6c60d2ee2d8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9abadb75-e1a7-43f7-8731-2fab373aa531",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "18d94481-7a17-45d9-8d38-9b6c4659facb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b08cf80e-cf19-480d-86d7-5a0a1e042c23",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d25ee28c-b2be-4372-a8e1-8c1435bc4d64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f3e2371-ba95-4387-9d04-eb373e82f9f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efafb306-5798-4dcc-b18a-7b562763e9cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51345299-d0ba-4b30-b0e4-150f0a9273c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02a2dc56-a5ff-401e-8ad0-234931800d38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcdd7bef-8e20-41f7-b28e-97d5d17de15d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c0b77cf-154c-48fc-822f-35a981e5e4b4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7f53612e-cb09-490e-a489-09ba37100a80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4304742d-4082-4061-a77c-e0f1a4888e2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e86a2ce-8da0-4f43-9002-d2679cb0eeb6"
            }
          }
        ]
      },
      {
        "id": "95009d90-bf70-4c9d-8d43-c1abf3a9acc6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a59770ed-cdb9-44ca-ad62-9a0151e5c3da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e96098a-cae0-44e3-aaef-041e55b5283e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06b8d8d4-9926-4daa-9c96-0cd1fcde5b95",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8238bfa7-cff4-4ca8-b9e0-7cd1ffff8216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "217a2114-5fc0-4066-ab54-da0706a53d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b722edf-a8ac-4d85-9a4a-bbcc186b4e18",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051a61c8-147a-4f9d-8802-000539404fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10a1457f-d015-4ffb-be77-51c6562c1b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd88f89f-0d45-49a4-ad9f-c79b6f20d01d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e981f9-2432-4799-b9f4-98777af5f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5e659e1-fb4c-48a8-89f4-c83406c17927"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "934cadfa-f0ba-4fe7-8183-25f4e9eaa3d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "178e8160-7541-49a1-a249-26eafb244992",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0513cda-956e-4949-ab0c-5e97855f6b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4614e89-33f9-4ea4-ab92-97048f3f8ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511f64f9-7f2c-4343-8ade-c99eb66d6f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188a2fa0-9776-4a77-8c82-4b4b5ad542ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08312c7d-52ad-40c4-8e90-22368975505e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae18db36-1959-4c2d-bce0-1e9f5e5c3796",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3df1f60d-fc8e-48d3-83a0-b83d80e31071",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d0c6e7b6-ef42-4e58-919e-83cd8f8aaeae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db04e5bd-d943-4a3b-a452-98457df505ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "137e46b2-ce88-4ad8-b31c-3dfda32d59dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f759d8e8-5aeb-41dd-91a6-6c081873bb5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f95ad3b-5c87-45c7-93ff-aaa712601d9b"
            }
          }
        ]
      },
      {
        "id": "550b5570-c236-49fe-9f87-357603f47451",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "db10cf7d-d522-4b01-82b2-809166766b81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ec88737-2f49-4f7a-8f69-d23234c01fcd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0357d6ca-c7b6-4573-bd2e-cfcbf06eb066",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5487ff-46fa-47e2-84b9-88df469eba8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671e2983-6e6c-4a5f-b03d-c3aefcf75c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a7bf8c-7b71-4412-a0f0-fbe300f0faa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "544c613e-7dd2-4c48-bd5b-9b3bdd33ef15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4579545-bcb2-465d-959e-9b1f19e18ed5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55570cc-b59e-448f-8fc2-fedad6911fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282d1964-0c3d-4f13-b748-2a906008fbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f28ee4-26c8-4bf2-821a-322b40525d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a57c7a9a-1e50-4d7d-a644-55dcd17d502b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c33265-4aae-405f-957a-c663af96b7e7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589dc228-0a68-429c-82a5-672aef85f1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcdc94f-9168-439c-861d-030d506cefe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba99d5-cf96-462f-8d95-295c52e94f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a629f7c-734c-48cd-b49a-2d4a6eef331d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7d3db0-792f-4b17-92af-1e39e7c29555",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60ecdc5-6195-4ad9-bc46-234d8e8595c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ddde28-e9ff-49ae-906e-8ae39f762bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7982480-97ff-4db0-9398-fc401f81693b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57553bf8-05e2-4444-bbee-f242d3d72ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d74fa22-caf3-4ae6-b489-9c449a0fac7e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d487f5ea-5d6f-468a-8de2-75154abaafdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0278a86-d6d8-4cfc-b629-96d08cf27851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba25b674-ff64-445d-b08b-a0271cf51a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1dd54bf-6841-4748-9660-942cd48bd16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776753ef-5f03-4035-af0b-f50ec19044f3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1d35ee-af67-4d41-9449-1a98ef065e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6af853-da9e-474c-98b9-4eca5ad98811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a465f44f-7b60-47e7-9e55-6bb22ca26547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c64dda7-9c42-4b04-993d-07caf8e79803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560bffbe-7bac-46a7-b595-4b7d90a871b1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9af06c-78ba-48bf-99e2-76148bbed57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba3317b-9215-48a5-aa74-21cc487cd75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63f385a-40ac-4801-9c2d-68fa35d581b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e8e8a8-f85a-4cdc-9c7d-bb60c394525f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9baadd9-0b34-4819-96fe-8f15db513fc9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5fe107-12c5-4a90-852a-62a10da76b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eadc8e-cf5b-4425-bb63-8441e396c3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1459033a-72b8-4086-b2d1-8932ec490eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47383e61-36dd-4a4f-9b72-dc39050f9527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e4a84f-d5e2-4ac8-8930-43b951737eb6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eef4ac1-4379-4214-81d3-4f881d9f5eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6220a04-c29d-4764-ba55-ac61c6219c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ea60ae-75ee-4279-9052-4a724ef2a1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a10f0eed-e277-46a1-abcf-cbd9e0210311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf8415d-83bb-4b58-bc1c-c87c7faaf1fc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f7b511-2d14-4c88-b833-859a61befa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe360b6b-efa2-4a4e-889e-81ecd6313929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e925333e-8d10-4984-bba7-719b0a123953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80a9d889-ebd1-4948-92dc-78efa9e89f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85acd8a-6e16-40aa-986a-3b4f912f63d4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94e6660-74ba-433c-81b9-c8cd09b55471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9c2221-0088-41cf-9297-e3d7e8c4858f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01763419-8255-464f-a504-48d490df706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d217e2cb-8963-4f9c-bcf6-ebdcbee15f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d0e94b-b93b-4f3f-b1ce-7acbc48954f2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3608eb3-979b-47e1-a211-55bac7da7b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a790ce-f5da-4a76-b2f5-fce570b27640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee169a6b-668a-4278-83e5-fb7239c75547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a621e4b-2399-4916-9598-949c32407cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c434072-9186-4731-abcd-7f574f65bbf8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809000c0-3837-4492-a0c6-538baef3c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc82619b-e3d6-4c1f-90ad-a0d0e61fb6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d19e47-250f-4076-a59c-9251f5005e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf1d0bb-814e-46d3-a8c7-f1acfe8115bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bee6fe-0bb1-4ad3-b64d-f849e1c26867",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df7c7e6-001e-4c82-b0c6-61198738be3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd757387-a7cb-4b81-a3f8-ce7c12edb165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ed9b6a-31fb-4a42-8cc2-f13e90aaf666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0915b89-0be6-4edb-8e61-42fb84d21885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b8b066-cd98-479a-b3d0-557d41607160",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a285e850-95e4-497e-bb11-27b811531b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eef24a7-1e6d-4dc8-9fde-e53281bb0b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df97372-cf46-4377-b390-8b29e5a2a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2708889-8642-4bda-9126-a0aa92f316c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbab596-99f9-4713-b4c5-473243241534",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4ab900-5012-4564-a88f-a2ab1ec4a38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bf3c63-a616-4baf-ade0-182fe14284f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b907157a-889b-4dcd-ba87-eac1c0dce022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "306267ac-e179-4325-acfd-50ba60bbc40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530cf191-d195-41ae-aa14-7a118348eeef",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7602a0ba-b7a9-4b5b-8f0a-f95fad962fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a083f97-59a4-49a8-b4cd-49b7ee0c94b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba414f17-32b2-4531-a4f8-4c23082772bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22cd9f9-00e4-44bd-ae91-ce7dce08dad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95c365f-df4f-431f-96fb-e106d804f322",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea66e8a-3374-4500-b1f7-0189b5ec03d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52df9db9-4a19-48e0-ab18-9cbb4295ad3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7d08db-34b0-450b-b36d-9321d648bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7e0efb-e849-4b5e-b185-7af4cf66a091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33376002-8090-42b2-8f9d-84da3b535378",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caf47de-5112-4616-ad7a-4e7d1a4643db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df9b1ea-d974-4f8f-b8f2-6d04c33a1f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50d1cf2-a4e9-48b2-a67f-503bc255ebb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b84ad0a-3ead-4373-8f5b-f75d57b73cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a353618-be24-4578-a6dc-27ff00f4134c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f955fd0c-959b-464c-8206-cdcf0a528421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e826bc-e5fa-4ea0-b238-dfaa505a3dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b57edb9-7b52-4914-baa2-a1225bab3236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "befba188-f2b8-4745-8f4e-8a171ce54b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905c886b-9c4d-401b-8344-b16548d8961f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900f620d-e143-4ad3-8d6f-6034d5192c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277dac29-abc0-4808-8d43-77f93493f259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc560ed-7c82-4502-b9b6-b2e8591fb70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ac622b-c071-4d32-9852-30e1ed2b8dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d645827-56a9-440a-8935-d7250208bc11",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6869eb64-503b-4767-8649-de1747e3fe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0161f0-be84-457b-a63c-d4fae20596d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ddcbac-b8dc-401c-b1fd-d47bab3164a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74d9219d-2857-4911-b1e8-a991d583a4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84905703-cf90-42c4-8434-5723c82384b3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cbad4b-777d-4515-a002-061adc17fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368e08e5-39f7-405c-8dae-dd3cd8c9466f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a9b01c-614b-4b07-9e81-80619e9276a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d674aa65-d3a6-430e-9604-09c9d72f8adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d295e95-578b-4405-a61b-3ad3f3d0cc35",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec1b9f8-3d10-49d2-9f9d-07cec72e6d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccd5897-8c27-4c3b-a87b-1546eb7d1e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ce8eb0-8523-4a73-a78c-3b9183953484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4a0665-b2aa-4b30-954f-9eee980b4da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ae233b-f31e-497f-a0ab-b385b7d2e593",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c913dd-90ff-4164-bc06-4f49f705ed7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b20d63-c71e-4f92-b297-90e2d5461134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09903742-633a-4b1d-a937-8abfb8620c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efa29c0-8b17-4bc4-8f6f-bf9a2a8a32c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1c0498-500e-4d3d-b6f4-54331e4713bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a94745e-c8a2-487c-b738-99cce3ae9795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81c8544-0751-463a-84be-d727346d9f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3096e10-49ea-485b-82b9-1b90a69f7a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70558810-f6e8-48ad-b8b2-64af32461624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2eecb5-3adc-4742-9e69-ee7b0538803e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86565ae-d955-4fef-b22c-6f5ce86737ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c50348-05f5-4260-ba5e-96ffa3d507ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955fe9e4-c7dd-4462-808e-9b4f5f3feac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bb4c75-0c2e-4e20-872c-05f3392d1d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e00e909-8fef-4853-8712-9647f7b6e13b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1086b274-11ea-4a7d-832e-5a932804c742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08909a17-24cd-482d-a58f-34693e8fd571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d103a72-9f32-4821-a2ba-093e725b6c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a5e1b9-db6a-4fcc-a934-78d77f881672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a10c4ff-34f9-45e7-a30e-1e24d9ebb78f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be0d9cd-4038-41a2-ac24-bad6f8add9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8486e029-efcf-4b81-a8d4-afe2b885270f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf58d123-2de0-46b3-abc9-0f0e9f903fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3635ea0-a3f8-466a-a356-af336a037cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3359b8c0-649e-4f2d-ae75-19409d2269ca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a63e1-14fd-4bd9-ac24-0aa968d2ef3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f222b4b4-ec4f-46b0-89cf-9b592a630b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbe2668-3552-4999-9e1f-666b7d99d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c8f5ec-c4d4-418a-b57f-c0fb4cb2f8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ac55cd-a2e5-47c5-8f44-d3ed646ee55d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae117d7-294b-43ca-af20-8e53840e0878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2085d67-550a-4624-ba1e-a095f0ccb9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b3d1db-da4d-40a4-9393-a3dedf87c990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbe0e21-45dd-48d3-b800-c77dd27f159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83839055-6417-4879-889c-ac8fc596a251",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b001cdd1-3f34-4246-bf0d-24bd6fe149e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c512ea6c-52ae-4f23-bc95-cd6dad334427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835ef411-9fc3-4d07-8f26-4b4bdd1dca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb6e076-e2b6-4831-af86-bd3af5c4b8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9854171-9d66-4405-8076-8a0bf55e6c80",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3529d52d-5784-40bf-91df-c52b14b25d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8f027d-e8cf-40b7-bfa2-ee366af8081c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bde7b9-7028-4180-af05-4777575734c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40eed9a0-4ef9-4476-9bb2-b6a9eda594d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07729e6f-9738-40b5-8c96-d95268b3cb84",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb906b3-add3-42b5-b490-da9b49150ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f5a394-1fb7-4ca5-baaa-fa59bc509910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8fd2f-fb28-4814-92d4-a682496f7e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "730acf21-2344-4ac3-86a7-2f5b3e3da2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7593bb-8d77-496f-b072-80b468d1a7f6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075f9d24-da56-4323-ad42-94193c55f0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e6ecf9-4292-4fc8-9402-149e0e7b2519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395a069-df3d-4d67-88e6-228c591ad590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2664ff36-fd9d-44b1-bcf3-202617d6c3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404da6a2-5069-48d0-a166-8abb213c01ed",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1efaa1-c2bc-42dd-8207-60149d39e52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91ef4ffa-2275-4eb6-bcbb-9a3f2f04b3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da282bf-af36-4777-b353-a97cc3564894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68026d60-c6e0-4e58-94b6-0cc69144f4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467cb38b-32c5-49a7-87e2-0c8aaf54fb09",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6a5e1c-8bb0-4ee8-8334-37135b4b9616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40829c0-2fed-4d26-8fd5-557fb39f8645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9034058-1626-4140-bd11-cd67f455d763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08d0633a-0487-4c84-b253-52cd5fb3d00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d716737b-bddf-40ef-abdc-720475b871cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d384fa-2254-44c7-bbb6-5e14d25296e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a6c99f-e0d3-4a62-957a-11e0fe9b5d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aef85d3-05d5-4162-bf08-4704e9c53491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c6d97d-eb72-402f-8394-20e72c148a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d46f68-f88a-49e1-bf1e-c1ed0b404c6f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a3dba4-8088-446b-8e59-14bbb63dc18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0833f26f-dfb6-4a2f-8208-ac576e7c76d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d262ed-0522-45fd-a67f-0eab5939108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10d2b499-7337-4f79-9505-7ae4d7fd430a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b55ca8-d9b1-46b5-9aba-43340398c22a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688326d0-1d57-44a4-87bb-9816775b458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a1d3cc-dae2-4fcd-87b2-c58e29486cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a4ba88-c7a8-48bb-a8e6-e4eb31e34e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a969e4f7-71cb-469b-bdb6-ed38a220e6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f8f033-0011-410d-be79-8b3d78a17152",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cdceaf-00e4-4054-ae95-e1566c5e87fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730d72ed-af00-4b03-b14b-39fff8e6ffee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56bc299-d067-43b4-b6df-0fa383891b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05648226-c37d-4b9b-b7f0-c178e43ae7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c75f9-91ed-4777-a6e7-058b88bc2d9a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bc167-eebe-439b-88be-afc80344ab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3849744e-770f-43f9-919d-970272499f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10db6b2b-b354-4b55-8ec2-2cf54aaddc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "42a4aba7-cf28-4657-99d8-221ba764511b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0e27b6-3cc7-43ba-8c32-52f2b8d93114",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6018f9b8-e3c4-48ad-945e-19b2bc75bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7970f870-7369-457f-affc-1eac4fc3a9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265a9050-4cad-4576-b1f9-35ec81a217d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7092625a-370f-449c-828b-a134dbb31ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dd23ed-bcdd-445c-b20a-0e63603fb4e2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700c4509-7c25-4b95-a0b9-5b36960cf1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514cce29-abcd-494c-a028-80df90b90a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f06d54b-c62a-4bcb-a1ef-ca3abe35e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde68ea6-0db9-47ab-957f-30e898104637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be1841a-833b-4a00-b6b6-9d1cba55b26e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb60608-98e5-454d-8c1f-f1f5585bdbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26ab840-4c98-4574-8514-6bcb3a5ad486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7aa9a7-bbf2-41b5-a3c7-2c4181187246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f70dcc-5506-44ca-a23a-9675b0d6f6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e898f0bd-dc69-4f6e-af78-118dd2ab9070",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0ddb4f-a252-47d1-a69b-7ed16d166458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33d5ed1-563b-473d-9191-54e5da1c03fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685d4cb2-aae9-4028-a30b-e8235bc4c3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4033b65b-d699-4a2c-b175-99beb1b11e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2ddf60-4ad0-4d80-99b1-046dab79c8f5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59303f90-bb1a-4559-b118-a8b129c217e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7efe6e-1dd2-4487-8552-05a6f1616f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167b9d9f-9f3a-4b0c-bf48-88709c04f1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "819ab338-25dd-4f25-9787-4cf84a3c5184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5238c9ce-3cab-43b0-8c2f-63029605363d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b85f4d3-a0c3-4c37-a332-55c455af4d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c838a565-5d4f-4ec7-a539-9d6084f0f3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e1a8ff-834b-40d7-bb86-a2a1890fa39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d42690-a148-4099-8a36-1e5204278f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68159b3c-50ef-4194-8a73-dc642b8d6613",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35087551-d76c-4b1f-b1d3-ae1dade8c967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9214c92-21d9-43af-b5ad-74b81a374f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2924fb-8022-4425-8b9d-2183805124af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0188ce-7a65-4b73-ac03-d951c0c714fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0ac572-a8be-4eee-8e55-f6001cb6f933",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127ce70d-c001-4571-a23b-c945479bc892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d82202e-bc86-48d7-a2e2-5c4b322ceb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846a7daa-9bc5-40e9-98ac-fd134835a82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd789efe-4237-4f37-9be6-c09b26f1d97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92e61da-d397-4b74-8863-9947ea5cd8c1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be92c7c-3dd9-4e69-9427-6f4b5e84e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94ff91c-ab37-4a7e-9a86-0ff7e5ac955c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254330b8-67bb-48d0-8813-42fbbd9f9602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2023211-3c56-415a-b518-b6d40dd1bce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3701b4d2-fc48-4c83-9096-7be108d11cf9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb4fe58-6dab-4242-ab0c-849b7cd1a7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4140efe8-f186-4646-9fe0-9fb8ea94251f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f589234-5c38-4e16-92b2-cfdd4fd60c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d441ee11-a8bd-4d35-ab8d-1c8e76507f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faf4759-f3b0-4268-913b-fa0f741aca3d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3be365d-f42f-4f9f-ba05-ea1a4a7b1544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241d2fe6-9455-4ab4-915b-f83050130555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1269c301-c212-46bf-b37a-acb48f747310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbc569c-4c76-40e2-bc75-eef05133079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9513fa4-cea5-4ccc-a1c1-1a117b1db48c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec7df9b-5e9b-43fe-b0fb-480e850edec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80086ed7-3876-4cd3-beaa-7e7fe0425fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a824b1-2f16-4879-9fd0-b003e9feefd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d124c6-95a7-400a-a324-0590c81237c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a18c68-afe3-4ef8-9d5f-927be433d079",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916bfdb6-b9a3-4621-a9a0-34a16ab52465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c50f03d-f2ec-4e3b-b3da-8b5f4b415b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ba04b4-d25c-46c9-a5de-3704604a18bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee63c25f-d71c-47d6-95b0-6799dacb8a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5911eb40-78a0-484a-9daa-b640071fb29f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b8c0ce-d41e-4533-9057-8a4d410a07a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bdcdc9-309e-4fd4-89f3-4ebc5caa4f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a6d9cf-3bd1-49aa-8161-db841be21d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f95e8188-322b-4404-bd89-b8a1a1f966f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19f02e6-4d6b-42f0-9705-6e1acdfcff86",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8962ba73-8fe2-4fcb-b8d5-382a3b6fdc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d73c39-80c0-49ca-9daa-718d7d7f5578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2744c4c-14c0-406e-be4b-83cd21e33709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79ba8e16-a609-4a1e-8bd1-28a13fe51b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a59331a-03ba-4395-ad1a-940e4e34c1af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93928bf-d6c9-4cb7-b344-4089124ca078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83687131-f0d1-4ca2-a06d-edda2825ad1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5967f3f-f640-41d5-af6a-705e7623faa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6926b7a-bb21-4aee-8617-ace0f531002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa6c713-63c2-4090-bba3-9f35fd773565",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba263353-5086-4a3b-840a-edfb0afe770f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c30682-7274-45f1-bb3f-a4fd3c3d512b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4ee533-032e-420c-8a08-4e4f4ef7d1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f52c7c-1ef4-4aff-9111-e352530123a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e8df46-e18d-4f9b-bbd1-9f9495fefa26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ca1a7a-5822-434a-86be-a06898b2b3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e53285d-086c-4c31-8734-39cf34db9ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578a4b6d-f1e8-4f9c-a37c-211fb107a665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb30d98b-a046-4df1-afc3-8342bca802dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829e4e78-ac3e-44e8-a6bd-3d36d966ddb7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f72851b-c7e1-4a2a-8cbd-da1acaff4888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c39c8fb-7111-42b4-abfa-87d6df41cea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f5fd22-fa87-4e83-9103-e4c537ca05e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "85466f3b-e159-4d95-95ee-b3a7c8fe1641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fde1934-3f57-4487-ac1e-1949d1fb1361",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5131d5-eab1-423b-86e0-72948b810503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88eec9e-2e50-4aa6-9afc-cef145440f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19dd360-7f85-4310-8df7-6a534d026095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c167e784-33d9-4802-969d-97825cc01ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2825a306-df5c-43b7-973f-61ba3a46e50f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007cce9a-686d-4178-b4bc-1b46a6d27f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab772b5f-1b3e-4f9f-9bbf-5a97e8d64fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea805d-097b-46ae-a002-06c3fc253a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cebec87b-b8a1-4092-8b25-4538858127ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a1fda-7f7c-4b34-a681-f84a828eba75",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e5fe10-3ac6-41d6-ac6f-8b58de9b6ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072d435e-a779-4c46-a5f7-953951c4f15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada9b587-9f0e-481a-a303-58ce0c8e12c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60013475-da00-4fc1-8cee-04c0d6dd2dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9604fb1c-75a5-4ae4-aba3-3e2b72575b12",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95caadbd-8320-4c75-8ecc-5cb40dcaafe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f0a37e-5080-4ecb-a320-0c732574cfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648131f9-8db1-429f-be0d-b5dd8caa649d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69dd1406-25df-401d-9b0f-919b61afced2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd29296-523c-4209-893b-26bfd75730bd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736563b6-31f0-4e18-b613-e1b795aa8240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7ab7f3-bb4d-4c67-85cb-61c4d058fbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6186ad7-5510-4876-8943-36b1083f1199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb7578d-5122-43bc-9e19-419ac11719fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8626a99-03d2-4d0a-8a26-5a831429b1d5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01705b1f-d91d-4565-90e6-6fbcd0a389c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c887a5-91dc-4949-b941-294c12c4cf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed6804c-0061-4db2-abae-40cdbd954798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9fe192-8b37-4504-9c27-4d8190da0436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e41b8be-60a5-4d86-be90-59a0e4a6637e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b85e62a-b570-4528-a4b3-58169fd42e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e14801-5cc7-41f1-84b5-9736b8c9353b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacbb6e1-60a2-4899-83c2-ffff8ace3ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22d1a77-d834-4ae1-821b-44cf1e1d7453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bfd803-8e94-445b-a606-2065a43c0370",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48a266f-9273-4e1a-b187-35a42c6eebff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379ac24a-94c1-44ad-b6e3-8c1eba6cc7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a8b047-df31-4bbf-bac1-09c880818d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe09b48-d317-4af1-8d0d-b0c2eb380f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405f9b53-e978-4cca-a08b-e805c2bce8c9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3398ff24-01f2-408b-aef2-691a2ada7d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c060cc21-adf9-4448-a2c8-55e181754ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5562ad68-3945-42a7-9062-b11d31612724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d74a7ee-3fec-4c0c-89a2-e44cbeee6b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e639d7-91cc-4226-bf73-42013420bf72",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e269e-c081-4949-898d-4e86d7c49afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433132e3-e1d1-4409-b5df-fed2b0c30f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2a1383-d035-4a70-a2da-9db9493d7b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d612a4-b617-441f-9030-d3610278d518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8a10a0-eb85-42ee-9598-195c1cf5a16b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa804b22-30f3-4b47-b3ba-6f7285ccd2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afddb80a-6c77-410e-a393-19c42a4da090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7b00c7-9ac6-41db-9328-1dfe1837fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ebd254-536a-45a6-be40-ece40e9e465f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67966b64-3a48-4f7e-9022-e20b26950495",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a62782c-1959-4645-b38d-b9a21e04a3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be80efc-3494-43bf-9273-dbda20f2633c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78af4faf-9a6a-4779-9139-8c3ed9a0bea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52c3a084-f981-4d29-bc8c-0c4409ee84b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1881a06f-1523-4ae6-b825-42a8139057a6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129f2965-b2b9-4b77-a08b-3a8bd4c8249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f14550e-c746-4e72-95d3-dceaeeb067b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27db432-9359-4cb6-8a9b-460edcb98bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10b35b3e-d020-499a-b48a-aa935e2731e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2678ef35-72c7-4547-9885-dbe3831ae96e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea6830-e3a7-4510-bc76-718740c62f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1453e793-1756-4b4c-a849-55656a6021f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519c88e3-c1b8-4149-bb0c-bd395f97d434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da778a2-e18f-4df4-ad8b-f23cea73e7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8677e7-ea88-430d-8eb2-6e138d8ff855",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbf28f5-099b-41bf-a05b-2cc352a3925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0656408-278f-4f90-b245-6432b0b0ea96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd510f3f-9d99-4f14-99df-4e13f86e363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ff61a0-f44c-4da2-88a5-d6ddc103088a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ebd8a6-03ad-4ec6-9058-6ab7f56ca485",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12be0b0a-e1b7-4a65-96c1-2ee4f23c0e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e71a69-3167-4cd2-9391-2d027417bde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49a6e62-69f5-492b-a7b0-adb2554cf90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "488c1150-d711-491d-8ecb-d34f91a19613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5a93a6-e571-4051-af80-64be20b171b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab4b551-aeb4-4db5-88d8-b4369175ca6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f99d61-662a-4e6a-a5ad-a82485764e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e5a844-54e7-4fc7-9cff-c3ebea76d65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f082aa42-13b4-4376-a76f-62f7a981b62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9914625f-528d-464b-94d5-66f7acec076a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fe87e3-7e9c-453c-b0fe-21d8ecb04cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ce921d-7c2e-4225-b4f5-a7ff9fc3eabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f04e18-ee2b-40db-8e22-71af8bb805af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd13fc73-f656-477b-86ef-9d65f1290e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cb7294-21db-4013-b3be-87c521edf062",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defc1d46-5060-4dad-b48c-ab5f861eea20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df71791-0b01-4e07-9280-923d161f653d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d9fe2e-d707-4298-baff-1ab9d5830d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9208b95-4a49-4790-bf92-8eed9a9072cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ac0840-6ea0-4093-818b-135b4069077f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3669111a-746d-456f-9602-24006c789dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a199584-53f2-412d-9e24-769f298d8b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8854d1ca-d66c-4497-90fd-f85c095506aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "069b666c-ee3e-4d3e-9a55-541a40975b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814da59a-ad6b-4107-901c-1c5b2ed5ddfe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfff239-c64a-42fa-87ef-cf4e1af199d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc8f2cd-4d3c-4aa2-ac7c-99001445a812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf22370-a1f0-4b04-b698-b48269097b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eee65c1-5dec-42d3-84ce-98e903caabbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dac20c9-1c34-4821-92ae-416e29ee1c12",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f65aff-552d-42a6-b697-8ee7198cdb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10405bb-e773-4f90-a635-0a37c0098731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5369378e-0345-4f16-8a3c-bcdc7ab8c2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebfc98d-6a8d-4815-9111-88eac30e330d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f390e897-3475-4c19-a988-35828b776547",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f009dd44-2d9d-4e4a-8a85-18a6eb4105d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896b48c6-7fe1-4986-bd4e-fb67cda9131d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a0797e-d9f4-4d6f-bd30-3466b218be88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a264877-4a94-4482-b482-1f88db6eb399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd283a1-c318-4f86-b194-81b628ed2cee",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eba2808-bc80-4fa4-9a71-0142db8926bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66264bd-bba1-4641-9079-a314198b40c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df46e92f-c8d7-4e6d-96ec-45973cdcf98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe3d5a5-0632-458d-99ea-ffd7e946811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b838cf77-c322-4f97-bc83-def69093a471",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85de8c8-0e2b-4dce-9123-4f6a4ac7cefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f600edb-aa91-422d-a5f0-70e794542604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412329b0-71cb-4ab0-970a-c211cd5db4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f964c5b7-b55b-4897-90a2-28a16be941d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589ff007-b94c-4ba4-aece-fdd60245ca45",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b074594b-461b-431b-b1c9-521298f0cc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79d7a6d-aa49-4ea4-a0f8-557f0d098c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624c63d9-b352-4270-9551-375e3854cb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45e3fc5f-23c1-4221-934c-b63721e888bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6817c55-3e98-49db-981e-3071ef1e1801",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb87e435-1135-4ff7-8e3d-3b9e803aeb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6422101e-2627-487c-a0be-9ecfd7f0821a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40639d29-0d20-4b7f-9e6e-5d31a4a710e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e54871a-fe18-4850-8879-362650a00e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f6bfc6-6cd1-4c47-82e3-0b25fc3b0063",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf1883c-3c6f-4b1b-a425-dada68391861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aca497-c5b3-4d2f-b1b5-f21d824776ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8389f804-a5c8-47a4-ad6b-f252d90e4fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae20fe85-48aa-43a3-85a2-15f2f2e4761d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae5759c-3ff3-498a-a416-aa11c5464075",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140756ca-48a9-48fd-84df-1c124081f83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9e4a6c-be1f-4482-b22f-5c1e7a652f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e42de8-b35c-499a-8a24-c28c6b3ae372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b86be0-412c-446e-aba6-2fbf26eba683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed866c45-41a6-4c5a-95c5-e27752e095f9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff3442b-c25a-4c33-91b4-1853521f7f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e54608c-4fc9-47b3-b027-880a2097562e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c8c24f-fe2c-411b-a332-79eca7c265be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2a218d-f601-4979-8425-7ed4429c34e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bc1a9f-1ca6-496e-8903-75a6fd2bfa7a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd03589-e713-4e94-8cdc-1ff7d0d8b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "10036bc3-cba6-4adb-ad67-98c5dcaf83e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4feab8-6f02-4357-9d0a-ff383b1badf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb14c09b-c5d3-4724-96b9-ae75cf43c75f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b1f4152-279d-4ad3-b3d7-1a3eb3de0dfc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4d6dd88-f5a5-4deb-9342-5c19942c3009",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37be327-9b7f-449d-9e7f-194b96319866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ffde28b-dfd6-4126-b7a6-4494382c4877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d87141-1f23-48f8-a88c-5649cc51ef46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "434f6e49-06ba-4cd2-bbe7-27fd654f3232"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff6bc6ca-b618-48d6-b563-c9935c846a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6a930f2-9556-48b3-b4b9-c919b069bd65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "992981b5-468f-4426-8fef-b7fae6d95bb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59bb9569-3e8e-49dc-81a2-e44e27699760"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71ad2c4c-85ba-44e7-8f5c-9a2552c9d163",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b4c6e3f-4646-406a-bc6c-e5d2e71ffd02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79692025-223e-46c1-8b31-977dba3f1364",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf818678-7941-4987-9cb1-4f50e9cf1b48"
                }
              }
            ]
          },
          {
            "id": "b4f01de8-0bd3-4035-bc06-497a2731121d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16328593-8669-471d-bb46-f4de548e6656",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72b78095-0067-49a9-8145-557206657944",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86eb0c2d-9793-4b40-95b9-d1c8d01859c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd508b07-c28e-4566-a774-d10fda1743ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48546f28-e40b-4612-8e5a-94fc5183558e"
                    }
                  }
                ]
              },
              {
                "id": "b9ab4fcf-e432-4232-9896-ddfc409b9630",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc90581e-d989-4854-a0f4-dddb71bdc14a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "368adf7e-1ed1-4a76-90b7-89b6a5763148"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9f48e12-0c1c-46a7-904d-af26464163bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77478a53-db75-4056-922c-d6659af15c79"
                    }
                  }
                ]
              },
              {
                "id": "63481575-0b01-42a2-80e5-c0e7f7ed713d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65f4ba3-d1b4-485c-8db1-0d805eda250e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4475a6eb-e17f-4b2e-acbe-3189522f1cef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03be9321-2b72-4969-b9e5-e344530194eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "275a9474-61f1-414a-a721-69b7877c63b8"
                    }
                  }
                ]
              },
              {
                "id": "ead285bb-cf90-47cc-9bd3-dd23991dadde",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b1ccd7a-0893-4e97-82a2-3ff72816cac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bb9943b-78a2-4426-b675-6912ce6719cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bede5ab7-b28e-414c-a81a-a59ce3d8fc67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f878e216-7880-4358-b67f-5ac4c5a02c1f"
                    }
                  }
                ]
              },
              {
                "id": "a5b13682-09e2-4852-851a-675e508b5b45",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "270b295d-159a-4b18-a5eb-a78ede6936e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac1bfd32-6ec7-45e7-9904-a7421836cc63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bd60523-b9e5-4513-8b37-f8ebd18ca2c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b312d473-4217-40a8-b883-933ae5e60e81"
                    }
                  }
                ]
              },
              {
                "id": "456d34f7-f8dc-4477-b7f9-024efabdbc2d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "deab47e3-f978-46ab-a111-fe4055198458",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acbce7d6-dc37-4760-b15b-20c020bb84f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3043e2f-0249-4cf9-a251-08479270a612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8bef58b-7bcb-4ad4-b79a-727250d28271"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03814090-0af7-4a0d-9de0-0027e97325aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26f0e7e7-b30c-4c78-9f2f-ee8d914a0e71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd2f028d-9563-4eab-8633-92e2d9b25cdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe6a5589-9afc-4f4a-a185-366bd01e994e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63251321-4c8d-492f-b7a7-7cce4715cc55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "26d0a1ee-15ec-49c0-ac2d-2d41a52a5afc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07b6b89a-26cc-4928-8277-d4796326fdb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3acc79f-0345-454a-a4ba-7859d3092dcf"
            }
          }
        ]
      },
      {
        "id": "adc5ef64-a171-45ba-a84a-047cc6944947",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "985c84b3-af94-4198-a6bd-b84d0677b2b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45b911bf-21cf-4ae6-8372-49a76e9bd78f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3873210-b95b-43ae-93ac-eb49bf26c015",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b35cc7-041f-4532-9e9d-3341e2b1077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e114aa67-506f-4c59-b783-50ba93f7b252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e622e9-df62-44fe-9aaa-f003b70a1166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e37bf48-c0c0-4fe9-8103-2b816dab1abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38b6732-d9ef-4ae8-ad2b-5d26dbd210ae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56097379-2efe-49f1-96ea-fcb27975fc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b4c238-c14f-49c1-bce6-7345564fa723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df354297-d410-4b92-ad22-6b98d2d8cc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57485ab8-1582-465e-8227-0e2e21756dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d364f73-b1c9-4782-ab06-dadb53be9922",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed1b9b1-9fdd-4645-a504-bddb07c9dfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdac0e9d-7bc0-4313-970c-44c12e211e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d050be5-3ba6-4027-8578-d1cc5e90a4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0456dcd-14b6-4146-a9a7-a2fdcef0f436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78294a8-c864-4003-82c9-e3c4c8fe3a76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb6fdff-20d0-4bd3-9ed7-dc3bee98f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c0e4b7-19c9-48f1-91eb-e177760243b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8bbb10-2fc3-4f00-a8c9-cafa633a3bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1c6606-d72d-4e96-b264-a5f04879e2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405169f4-b21d-4a96-b4be-e47b1d48ddd7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b120181-199f-4858-a025-ecc6828b1fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7095b955-b0a9-4ee5-968d-bf96d8c1658a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0855b4de-6417-4718-afa3-bee807c5ea05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6518b6b-3875-47c1-bed8-d731a17aa064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d955742-ecc9-44e2-9841-ebdb4f716e7c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf7882a-cf4f-400d-b48c-bb0664a38f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e75e9c-7c4d-4ef3-851e-509e5f8c11af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c10b8e-f223-45cf-a59d-dfb1df5d84ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b1f4a5-3173-46f2-84a6-70cc7315f920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3549f8c-62e8-4b87-a4c5-10f8230d0347",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef6a183-7a4c-4e84-a393-323557cdf46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c4297a-e86d-408e-90be-539131d112e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e232d9-cd0c-4b1a-bc92-a9192c018372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ba2122-c9ff-4212-b465-68e8a530a8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb783d1-353d-464b-9eb8-9823d762c559",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb97352-434b-4186-ab5e-b0cc3dedb5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3ea569-9cfe-44b5-ba56-ca3fb7e16873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa74612-2b7a-475c-9ca1-1d5f9d5bae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e91e2ab-57a2-4fed-9fe2-30a3006972f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce3eaa1-d4c9-41a4-8466-e2787914ecbe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8749d44-ccaf-4875-8a3a-e08168f0c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7cfcd4-770d-4674-840c-82e09e15149d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73dfb9d-578f-4539-891c-3d02fc6b8cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6842e8d-e2ef-4ef8-8686-2e97d3d1471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767f5dcd-3cbd-4559-8816-1f3435dddec2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b015f7ac-dfd7-4c24-aecc-ea12fb680424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79627fd2-92f3-4636-ae61-1969f5851243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc5f28a-0245-4273-a636-fba2893d7564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7c2d7b-7450-4e12-931d-49d0066c14d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9207eb-4220-4a58-b749-eb8270f4cbaf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba62f831-5a3f-4041-9e47-0065b0e09fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2433b8-7753-4333-be96-785dd4b3e4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d901a9-e2a3-404a-b6ee-40634b485eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2b733864-5763-4a83-84c4-912b87132724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c77747-8c1a-4703-b934-b37ea6afe3ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fe2015-c7e1-430b-8edf-46198a983784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3741d5de-1271-40d6-a750-4b010e541c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ab247-78f3-40d7-b8c5-f0fcb06e7f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c28ea70e-8b9d-4735-acb1-b0f9330741bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5dcd09-12b8-4f7c-84e3-f5e0ad2665bb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668f4eb5-003b-4f35-ab33-cbe017060ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0919ecd9-d9a5-4e8f-a67f-a2b9050904d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e9860d-013d-4411-b45c-b07056555bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f60dc4-75d9-46f8-9606-3b0861f003e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74a1a3b-67be-4805-a3ad-c5a186154063",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a66e5c-15e0-4a42-aeb5-27d4954dbcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2172ad8-50c7-4051-ad14-487428ca6015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a72878-b0ed-48de-a6b6-fbb9180efaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "571bc03a-7b53-4011-b5e7-b9dbbb7f098f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0676eb7c-197e-4e03-b948-6d8ebdaa9e6c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb998ac9-a250-4f27-bc92-fec8916732d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8921d2-023a-4e61-87e9-7fe1d73abba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2236cf6-0491-46ed-87ce-58f2f00bd907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a838d96c-cdb2-4d49-8499-ca24ccd38a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1ad264-bb55-4ce4-ac1e-84a96dbf34b0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eacb43a-5322-4942-82b4-46264b5d58cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5fca1e-464c-4216-b7d2-873b521a176e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2f664c-42a2-481b-8552-8bd5a1453c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "847564a0-5fb2-42a7-8ad6-43cc8740911b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d028df72-411f-4004-83a6-d70e16db6ed3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ec8b6b-ea08-4c61-a30b-7594452aa3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1830ab5-5380-410a-b866-6957c78cba46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e9ca08-9e1a-4071-abb5-b5c89f5688ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b115af6c-a559-4ba4-b5c3-7a98d775d960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74049275-f918-4438-8bbe-3355ed69f9dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e667c408-1e8c-4045-90b7-7daafe873099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e11a6c-892a-4285-8222-01af3d731d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7615c440-f4ab-4578-ab32-53e01a9c7bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01efb37-7a7e-4657-9a1c-ccd1fc48cfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4d8842-cc14-4604-8816-d1fe82e7c1b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699f8b4a-d23a-4170-891e-8fcb09b13a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d9e462-65fa-4c76-ad1d-569f188b3e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410c0719-f1dc-4cbd-8373-4226f6588efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7243aac1-b327-4e56-886a-6fe2ce219297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46655a3-c8ad-4707-b13f-82304f43a71b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b0500d-327a-4c72-8fe3-1362d6db1834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e316902d-3f36-4043-a62c-f41c7a1e24c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b83cbe-2354-4510-823e-a63955c7d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14aca7c-32cc-4f4c-9173-98a654c1204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7a4fa1-a743-4102-880f-fe1e22f37156",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d61d1b-9cb5-4c58-9af2-6035706170b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57513edc-a9c1-4d4f-81c8-824feadf5542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f737f6-e1fe-4d0f-b2ac-8d3f1734907a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2bac86-c875-449b-bd6e-e2f0afec031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf93d33-55cc-43f6-996f-dfa810a923d1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1586535b-1458-4a2b-9f29-eeee7aa631e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d115a9a8-5662-46d9-a44c-13f3ac64219b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1315d43-15dc-486a-83fc-2ee1e35539f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb23380-f61a-4e3f-89d9-c346d74be89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b926aad-6d69-4c67-92ef-1b031a07ee18",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1dbe8b-9c0b-4295-aa46-9ccdec1270e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083dba7a-905a-4128-a006-c8391a4bff7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765ccacd-d7d9-4a8b-97dc-2d9ed9115d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2ad49b-271c-4598-b712-00895c5120c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdde9c58-6552-4bf8-a28f-27d096252caa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08c1016-ce2a-4622-bd7b-440c3972dd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f9dd32-8bf4-4c0d-94d6-295264c23399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a7349c-fb9e-4ca3-9723-7161d72739f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68c88bfa-29bd-4c63-95a6-3eac14172e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b65b7c-eeee-4e5e-81be-c3af0ddb5fb7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc09f7-eaca-4c1a-b9b7-e0790ffb4134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e817857-787e-458d-a3ca-97fd0564cfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c58efe6-7b3e-4b94-b7a0-5fb7bf42ff9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12eaa49f-cf30-4ffb-9036-ac2fbdf8c221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcf6105-8037-415a-bc25-4f2cc9c9b66d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906d5800-92db-43c8-a99c-ef9ffc882e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3483f24f-2bf4-4a7a-9ac5-e287e37b9c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798dc59e-e877-4d1f-8b6f-f1642a137e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d340796-4704-4001-8c9c-78760f6f2c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8b3559-5c7e-4c38-ba59-fa78c70bf953",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c5b5bf-5623-4174-9821-ecccae953400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b91873-f71f-4954-be63-ab2be04da558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045dbe53-bb8d-40b3-9bef-ca77bbccf1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a78e0d-6442-4d8f-be22-1cd3a98f9a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4e9837-ac99-4922-8140-7aa5d18c339e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb79ad3-ad2d-4799-a841-eac6c2459228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff9150-1946-4418-81d6-e213e01ea063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0629d93-8735-4a90-b01a-e8995ca04263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6c0f0e-6054-4af6-9131-9ddbdc1aa2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1274694b-4fba-41cf-9b57-c54d2a862d19",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9351c324-155b-4616-b9d1-48415467c0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faee63a-f469-475f-bfd2-399efd4ead94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb332645-04d9-44ce-813d-0d43b690844f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ee27d7-3e40-4a62-a67e-91d31e9b891e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02293185-ef06-4236-92a3-dbfe6e0af41b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a468edf-11f3-470c-94dc-93fdb9bd94e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e02195b-44ea-424e-8fdc-9555b38fcd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2660f-579e-474f-a4d7-f7687b273a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a373979-339c-4a7a-a6e7-68335e192c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218ea73e-d66b-4d12-ae87-bdef7562b6fb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdee0816-582f-4fe4-9f8d-63ef2669bc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11d0d70-f609-490d-9ee2-dc01a9cf2eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7229635d-2c47-47fa-85b1-ad0ce7c1bdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86238b7-d8fa-491f-8f60-1b0a55287465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62815830-e3cf-453e-85c9-aeb34c626fa0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e975b7-1e89-480f-900e-c3a29ec942f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca77f0bc-5d3a-436b-8351-9214968cb0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7719a9-6dcf-4624-9920-b6802e05104c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "445236c7-67aa-4ad4-b54d-cb002c1064cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36b21fb7-384f-4dff-b08d-9b69004d1922",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc321a14-950a-4df1-8da2-08cf9596c577",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39396feb-f641-4d7e-9b9e-7e769545053d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61cc4376-27e4-4ca8-80ae-4888863ae57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfa349b-8d16-404d-b54f-ac6b21c7807c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "872e2c0f-d2ad-45e3-9cee-5eed9eb949d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9b55403-8f52-41ec-a6f3-1ee0fee3c824",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cde90fc8-d891-4bec-9257-14fe77e3ce4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f4e873-6cc0-408e-81d6-2b96fc16061b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "034f0d39-a14b-4acc-a24d-467aa03b841c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "119ac23c-8fc5-446c-8f3a-00b63e63c0e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1c008fd4-4eea-4314-acbe-fcacc4c6c452"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d595220-f926-41fb-9ff9-390427049cff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96c87b45-c4f3-4ad1-9b23-f8b183c066b1"
            }
          }
        ]
      },
      {
        "id": "ed0b4bdf-5ece-42ce-8905-2030d5d5eddb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b0730667-63f2-4a6d-b898-667c66e7d37f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e240e0d3-3208-4b86-ac01-5cce3026da8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e95e9c9b-35f5-4e51-ba4e-7c6ddc6e20ff",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7039456-31c5-42fe-8b8f-6dd10d42f0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aaf942-89e2-42b5-bfbe-f746b7dfa4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b550d3-e486-4666-9e86-d8d4a1c3c072",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39de0be1-74cb-4134-8383-4c9400198fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a68c78-9761-4ac6-aadc-2427ad76ea19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c02932-dd75-40b0-b0c2-664579a9959d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d180a291-fb12-4adf-827b-6f5ce9fc397e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcad8921-0a0a-4328-87c2-dcbf07a0d8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56c0a06-b71c-4f35-b7ac-0a26b52b3ca0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77912f5a-8d12-48d5-a67f-ce9e13c58ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ac6ab7-195f-4e4a-8909-ab324cd139b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba42115-b29c-4355-a2df-48340e35fb5b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eef176e-2e10-4b1e-9038-91d93c401f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da0eef9-df31-42b9-9647-e0536016ad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70fd38c-05ee-4532-bc02-acd08f3266e9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aca6796-2f5c-495e-9b6a-87b92db11a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8858b5-88f5-41f9-aa8c-e60e0df2619b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c37249-c629-4e21-8f51-bafd9069ee9d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9626bb4-4066-4f4e-b463-dac283ce9402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd825281-95dc-4701-b9f6-9a20c08df912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49000490-8809-4e2e-b32d-8c2c66dd7c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5125d4-90a7-4b22-a75f-9bd5a4b48ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30126e2c-d1ae-4c98-be95-dda0437e6247",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7d5917-d93a-4f8b-97f3-b2ac423e46d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36d1d57-f6fc-4908-ad83-25c3363a108a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca231eaa-b92f-4621-a1d5-b7d6a53da175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21c68cb-0f81-45e7-9cb1-397d31cec86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17709cb4-7980-499e-a9d5-c1e3ccab34aa",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b8bbd5-ca41-440d-b9a5-2b9acba4f654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8852e3-96f7-44e3-a15d-8019254472a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fe7d98-114a-4d84-8d30-5e0e29a348c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2e497e-4211-43aa-982c-f8726090ed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3524fd1-cd56-471a-97b2-de7176bc36d2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324c0881-0d25-4ff6-a86a-c349ff5c6479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b20b35-36ff-4bc3-bf69-6d97f2b2421f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b1131c-501d-440f-8fb3-034d4b2595f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f6d23a-9b30-4e5f-ab80-8482a57f0f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a80c37-5022-4f1d-887b-f4a0514b0392",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9bff06-65f3-439d-bea4-976337e9dc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6e2146-b694-4ee8-a41c-e30f9d4aeddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9eebb6-19df-4ce2-a074-c12e3b4737cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c908c629-8224-483d-8a0a-e517e651a315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfda82d-6b7a-4a2c-baea-4e89c1228743",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acccdd90-19e0-4ee4-a915-2dc9d2e3eba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd849666-7d28-44fa-9dba-6aac64637147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290c4b5c-a8ae-41df-a57a-1bb0776e5bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44fc7a9-6b5f-4abf-8d6a-f463ff21f844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ae1369-bf45-4649-a587-02e49b96e80f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873077be-b7bc-4f32-801e-601e9b060278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924a0857-30f9-46b8-87a2-e501cdf60b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2475ae-739d-4282-a476-d22c6937c072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b60091-dc6a-4235-99ca-35a98f521d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd64e793-d1d1-4f80-b0bb-b44fad897af8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cd404f-5bed-44ff-bb50-9b9580d5be73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9bcdeb-a3b8-4fe5-83fc-ee76122abd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eec9d12-d4e6-48ca-9037-ec0fe8d0e907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bde155-10f7-4bb5-87c5-de6bfd5704a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71f1afa-f696-4733-90c3-de47ad59d066",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c86a7-2186-4597-8ec1-7115985f2671",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423634df-8bbc-4b26-874d-4fedb5927537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafbd9f7-521d-43f4-8892-1a95e4db6a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6b89a5-5b82-40b1-8dc3-b20298d8fd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bb1732-4dae-4c01-822c-b18d686fb233",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b816726-a5f3-4943-bdaf-ad98c1f4e45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3c14e6-7535-45f9-8fdb-0a05727d7b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c97030-5bbc-4d9f-a8d6-5c37908e2636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b90c11-06fa-4769-9e12-9896ea748154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aabb9ec-ba29-498e-ab00-13c41ae19ce8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad2900a-e4e1-40d7-8178-8b85f8664df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a137a5-d16f-4045-9a87-0948986897c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfab671-2e59-4713-95d8-e65f85b03d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6074d8-8984-4623-bcde-fefe2aa37d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891031bf-8ab8-4a83-82f5-89afd5f59ba7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119af83d-6fa1-46e3-bc13-bb40e5d6d02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a19a08-97a8-4906-8df7-dead8051ff5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b134e1e6-8ef1-4eaa-a625-83076b399c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f67db8-86c0-4c4c-a829-9f7f5c1da035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e9c016-0086-4f6d-988d-50b2b26fa947",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea10653-a4ae-4a0c-b66c-11f1ffbf9e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47e54b6-ecae-450f-9744-6d167bdbfb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4829a04-446e-4fd4-9646-88c49f05fcf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93636652-f814-4994-9bb3-6885526f1e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999d25a-c385-40d8-8aa3-06bc93a5fa4e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50017d25-3840-444e-aa40-412c8d1c8c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02e7a66-c8f1-4f4c-94e6-6056970e5f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd303354-39f4-4e46-8e1d-8a10d38baeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee985e4-6826-43cb-9cb9-9c2cc0eb3957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff3bb0-b960-4456-a2f6-e523a4904b54",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954ae96-2fe7-4255-a090-d070e1636e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ec7d9c-6a93-44b2-8d2e-c2d7aef4a1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a128d9-ccb7-4500-a2f2-198e75b5b0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e689c47f-e3be-4999-8ac9-96c725e86761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ebcc5f-73c1-4634-a75a-4e1f4d66d6e0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c311762-cdb6-4308-a9f5-ed76e0801f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc8d707-66d9-4567-8d22-f2014663dec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e82fe-2ede-4c07-a147-702c737adf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866efbcd-edd9-4ecf-89f3-7d16c67b5da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52b6d9-dfa2-431d-8ac1-f83dd1138085",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ad66fc-8394-44a9-ae9a-9cdef559bb98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f253f5e4-d9be-41f6-a295-82c2cec7b210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f1482c-d962-42d7-b9a4-12e8003e9037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca42102-577d-4268-95d3-60dce3f9b94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e054b5-6cec-4102-8f42-d5ccd3c88793",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a23699-34bf-487e-9541-d682779dbf19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bce25b5-cccf-4321-a16f-635274c1294a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2f4806-baeb-4afe-b6dc-692138aac758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f2307f-7140-43bc-83f3-bd1f7d578189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094918c9-b838-42f2-87c3-f4992fb77807",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33ea801-2afc-4f22-9352-7055c9c37cf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45347c5c-aea8-4765-baa5-6c0feaa202c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d06866-ee74-4314-ac87-acaaa61d952f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf13c84a-84ae-47f4-ae28-3c028d7eeaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e8e7f6-c17a-4b1f-aa0c-31c4fde3309c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038387de-fdbd-4e3a-a8ca-c0f915c2db72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb447e3-57a9-4288-a679-aa46df9fbd9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d26b8b-74a6-4192-bd67-7939a21be1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38702a09-122c-4638-8c47-080c2f08dd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bea09b8-6c04-42ea-a3af-2cb532ab0f67",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4914b79f-8fdb-4d52-a6bf-7f5e2da37e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c72616-758b-4d14-9f2a-150994513c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819355cd-b56a-471d-ba46-502f91ec1d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab65d6c-ec3f-4b66-90ba-0a4f6c3b09e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ab5a7-5915-4eeb-9e77-cb24a4f9a510",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911aeee4-f053-44be-abcb-01a3ff30ce09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e16f96a-2f43-4fbd-ba4e-a7caba35c31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a72b806-9ccb-4192-bbc3-2e2f790b40c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adaf150-e967-46b6-9fc1-721261ea9ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7a844c-3103-4416-9694-dc42e93d117a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd0ec9c-a7ad-4560-acb0-5fcf926008bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5281942-ea5d-4c6e-ad5f-cd5a76606fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7e5391-de77-4c95-a7c1-543e705e26cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d5e8e5-ede2-47ef-b002-8c3942be9a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2edf05f3-bab6-4d68-90a2-52b49ba65fe0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db235b9-8527-4c43-8caf-c36f582b7127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2985ae-bbc9-4499-b592-23cac06155d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e2d416-d3e0-4852-90f9-c58a6fad5b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5eeb39-0430-4e47-b134-1237fbfbb593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f1a6aa-c8a2-4ece-b522-11be5725a45b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3821dc16-ed10-4b0c-a0ba-2add5893eea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11f7bf2-8211-442b-b1f4-0f6dc5060908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4279fd-9660-40ca-86a5-1bff78651268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db61676-2b23-417f-bbb6-74ba4ab790fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5228487-c070-4a41-88b2-ca4f0a4bf4e1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce694ef-9823-4c77-be1d-181114eae6f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c2dc1b9-55ad-45bd-9b59-6006422cccac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8961d6c1-005a-4dae-b747-d8580124874d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45293cb6-d462-42d8-98fc-b33673775458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9259d140-35e1-4658-abea-590982dc3466",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e37f90-58e5-40da-ae52-ca53050e75e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08f7307-78dc-4787-a855-e7d5a6f04422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fb7111-8ed7-4425-83e8-64b900280fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c7617d-1a58-48f1-9b6f-9031fb594579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057ded6e-c1b4-4a4f-894b-ec40e6d022ea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ed68be-f67b-46d6-8259-9e4627cc68c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafe7ce0-60a0-41e0-b9d9-ad7ca6002223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b931d539-e8ca-4515-827d-c20289d6738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3294c79-4aeb-48c2-a07b-138f54eea812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a003271-0cbf-49ec-9bb0-daeb5cac1022",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79725a03-10b5-4618-8663-0f13e221668c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc0e5e6-be6a-4325-a18a-c93e492299fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f003d6ca-4129-4e0a-831f-c9bca78860b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fe65e7-f082-4fd1-b2cd-abd418e05c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df2b7cf-34ae-402f-a068-d7c101ac1577",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee8dcfa-d292-42a5-8896-d051d099b406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991ad6be-3d6a-49ba-b574-2579011a07d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3117b1-7ead-4776-8dba-bc17fc90ab99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873db836-0013-4b5b-ba5d-b5643be0316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb5ecdc-264e-4d8c-bd40-76cb1679a296",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c415d83-9765-4836-af5d-2e1c88b68ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5882c589-7429-4d74-a583-61527004e68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb7ca7b-eca2-496f-a215-8d6da87e7cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b90bda-461e-4e94-8777-2914bf522a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fff290-0d27-42fe-8b27-da81482397b6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e255d5bd-b044-49c9-b3d2-2344183da2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df98c0dd-8d21-4fb1-8059-53747764cfbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87151d3b-df8d-4ad9-971e-7e3543ee15d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac94e285-7fc5-4e01-a899-5d7fa210ee29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63962864-6b69-4404-b02f-ee05596d408e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5a1689-5aa1-4e19-a3d0-90b55e72ac77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b76f8e-a1c5-4544-8067-e181a5d74000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d77dfe-2c41-4b6f-888c-89ba68e21484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce11c639-ba8d-45f4-a4fa-f894ad963fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6250cb33-d9d3-4301-b90b-8fab2b1fec02",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61053c4e-c330-4766-ae53-7e4373bf3fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65655b1c-3029-4f41-80ec-4b54d887100f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d42dc7-d677-49c6-acbe-da84fa30f485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f6d09b-5264-439e-9604-8ce3cd14d87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fec3c5-c38a-4763-93fc-5606014550c4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba06b77-6ff9-4ca7-9524-a8cc1ec5284d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e62546-623a-408d-85e3-796fd8174824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b551a0f0-d3cb-4ffd-a6c9-d8cff60ae9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d1aca5-39a8-4a0b-acbf-676a02afb27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19155003-58e0-4b6d-891b-ac1cfbfe8da4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de38b9-d9b2-4d24-853f-e94c5b6ee684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaea75f-a07a-4193-b301-6c94bc57adf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d91dd6f-f202-4a89-8bf3-cd93c4d0742f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b656f9dc-0f9e-4ca1-bdf8-50e236d10030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2911358a-3a17-4843-a43e-b072eabfc2b9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45470f45-de28-46a8-a5ce-aff35a8e4078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb6ca17-e695-45ed-8773-3dd92f28b6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fcaa2c-755c-4114-878b-9aa126b92242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d1d7a4-74f7-4bfa-9653-fc8f1c370948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02a2fa9-9eb7-4d97-bd7d-de67510e7ab6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45921f78-78e1-44e2-a7c4-2d6f29b8435c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7056d2-25b4-4573-b848-179a5dea10b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e7daf9-d5b1-4f00-bee5-20547c105d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210f102-5944-4264-9ca4-62e35e78972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284e03f1-80eb-43f4-bd71-1454d605e0b9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e82371e-b850-496e-bbe7-90673120391f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4206d0-a7cf-468e-9cb7-9a1b0f2fd517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd31d508-150c-4e90-8983-eebf25402154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f918429d-7e7d-4321-9efb-22b3c5e3e782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053c03da-88ce-4c61-97b7-8deb65036077",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81abe96-61eb-45e0-af2c-91d7a274651b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf100f4-7224-4acf-9b62-623436c95cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6768504-6efe-40b8-959e-7387b60fe773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee0a761-5673-461e-beb6-5dfee306e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c240f63-cef8-4254-b256-a0142056e080",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67c732f-958c-4a0a-a664-b650e647404c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c6dcda-f2a3-4332-8c31-fc37f94026bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d09990a-76bd-4c3c-a604-01ac7781f85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c60458-3cfa-48af-bc8c-e52789bb21c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8110593b-49f8-4ec8-b7ad-72f9a1bbe5fe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96678dbd-b8c5-4db9-8aff-075cfd1c296d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5ad9ea-a1c7-44c0-a33e-9ed8854be8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3163971-7c8b-45d5-a309-b940af1d5555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdddc30-3d53-431b-83b6-715f6b7f36a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38316bb9-d43d-4ef5-8959-37ec21a98377",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4195a30b-76a2-495f-bef2-9d99efd3d420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d057fd35-9a51-49ab-bf96-cb6053681834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f456bfc-1c29-403f-9fb2-3ad12a614db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f96f4cb-23d8-4cab-94d2-51beba00b6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86e57e7-8f49-4c07-b981-9fa1d92a9fb5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488a7531-098a-4a7c-a8b4-d5f9265b5344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ad87bc-7b35-4e78-af10-11a151c006ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc187d2e-94e9-4e3a-9380-6c2609cc91ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688bfc6e-fbe5-4d5c-a91d-e3f5aafa94a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc289ebe-c17f-492b-b4c4-255bd657c0eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d9abdf-1f51-45d8-a84c-02263f35c313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc2e6e9-3eaf-493c-8472-ac6cae51f88c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09637d51-d803-43fd-9005-4be8af9350e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1767d889-64a0-4b00-924c-74a91b618b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ef42a9-b638-4fac-89db-9e348065a7a8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8463c140-631f-4fe9-ac39-03f64bd4908c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b55748f-bf6a-40cb-b59b-3e8c6788cfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454df5ee-09c9-496b-bb3e-d9a5304b9077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f3582e-8e55-4bd6-9c5c-ea18ec9e86c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9037f4d2-7969-4f84-931c-f9ca2ed4092a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26673281-af0e-4272-b35d-d2af05a9a6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632e78db-fb46-426e-952f-4109f8b0ac9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462cfc4d-5b5d-477b-8de0-ba01c4f7971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742a8eb8-6ae6-4d87-a5c8-5212df8571e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c94600d-2485-4fd6-9069-27bc6d328cfc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb61e02-33b6-4725-9fb2-7be6b2069523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7226ab-eb93-49ac-af44-c1da83a8ef0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522980a5-db07-47ce-b04d-24d580c11cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1000976-9396-413a-b65b-08ffa7eb67c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596d9876-0f05-49f4-8724-fd71192f8275",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23583ca8-926f-4e4c-b407-0d02b3658afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0837db-6156-4b91-936e-3987c23d043d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04274c7-e99d-4e72-9c44-0e0468560a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afacc387-5985-46cc-b964-676e647fd92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55481dbc-862a-494e-b746-37cad8248ace",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6053a68-75f6-463b-b995-fd7580215d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f0a313-587d-484b-853e-760b7e78dfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67fd50f-2a68-48e7-a2eb-d3b643754e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5213fd9b-67a1-446a-a527-ea425f094864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec0df6-b889-4b4a-baa2-80ed1ec8a7dd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa1c134-3100-4992-836d-e250d753bc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffb3dc3-ace3-466d-919f-9f6153ad418f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97ef3bc-2321-464c-aea3-80fd963d11c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0633801-a4b2-49f3-a471-d19c6b3bc226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadf2195-7d95-4a38-9e4c-9c660e5b36cf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22b9dbb-41a9-4498-b0fe-3cbd2895ec96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a5bed7-ba08-4681-8ff2-11fb6c694e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9dd65b-ba61-416f-b6e1-89c58e0c4709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2825dc-eabc-437f-bab8-2c4aed81d11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e91a33-f170-47fe-b281-989ce0679eba",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd294b85-5280-4f0d-b083-1d5d9afbd9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1bcf18-ce76-4876-913c-0f8f9d913d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0097c2-46e6-41c8-af3a-7585cf80e74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edb4bef-3a9a-4c6c-89bb-c58bcc5f524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1405942-b9a9-4d22-9179-6a30c1b86f1e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d59f9e4-cb27-49f0-8e01-30c02d287aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f463b7-eadb-4962-9285-5c96c56a5842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1271d9-7a9a-4a74-98e8-ef1fa1f35a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e73073-a054-4613-830a-0592fbb7cce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee55092-7bba-41b0-a4b7-8955ce9dc2d9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6160b3b-d196-47f6-9026-2a2126fc06b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df6036a-18f8-4b41-9135-ca5d0aee930a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b74712-e538-42d4-b66d-8b7fc5aff214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357774ef-2fc1-4dd3-bd8d-b2081eb9026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b21a9ac-5677-4b0d-9cf3-4d785dd0c6a0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f82e4ed-5806-4285-92bf-60b50c3b52e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181f3abf-a3d0-4a86-8052-e5dbe25c7397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4f0c7f-646d-4d0e-b594-aa56823da257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6e8c6a-16a5-4628-a675-001b9e9971cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae4f60-c5d5-4d7e-b237-8cfeb72cda79",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c000e432-e646-48ac-8a99-e730bcf21d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb7d7d3-dbc2-4899-80cc-e7e0e9eb4e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be044da-f0e0-4906-8bee-543421945a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1196d997-936b-4bbf-9895-9119f0949db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7370f7-3782-470f-8e14-bf2e4098ea36",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5663ecd4-c098-40ae-8b70-06b01e144bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95bd06c8-e9fe-4e45-87bb-fc33344c348a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058b8825-806d-4e71-9763-b35bd60c12f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21476aa-7383-4216-b43d-ebed3c090c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdba921-02e7-4dc6-956a-bd959522be6e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e846fe0-7649-4f3d-8924-932b8d0c95eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee07734-0dcb-4ac5-bedb-04e4358621d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c881e5a-0243-4a95-966e-93076001afe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6bac1b-0af9-4249-930c-31ef67bcd389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41f359d-e5e5-47e4-8a79-23191f620392",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bc5cdd-4b7b-479e-a02f-32c67265b171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9cc512-c56d-4146-a273-405dbc93d62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5299af-6911-46f4-aefe-8126bf84cf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faf2409-93db-4791-8f44-6228a12a26be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d16225-bb5b-4619-8ec3-4398ffc10669",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd711df-f865-4df6-b821-d517a126dc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb3d1e2-1119-4520-9229-d5162d2cb602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc50c8-cb60-4371-9b1e-f76ab534f343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe30fe2-eff1-47b4-aa7e-b386d792a4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c753f50-939f-4e57-8801-c25e41c22997",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1fee48-7b6e-40fa-8931-68df7c6f743b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57152fcc-b61a-43d6-8aef-d2b19604390c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36331af-6f3a-4e5e-a5ff-1060bfff0c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5d4e10-7ebe-4284-9754-03be827b4622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefc3a48-5e71-4e9a-b4f1-a4e262119157",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4153d4-3d9f-4845-96c2-df9d49af53d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d43b6263-8c10-4a7e-8fe4-62141073a400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397dab81-a84f-4bb7-842a-892fb9aa5faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b0aac8-6232-4afa-a370-fcf1528edfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b8fc01-9cd1-45c7-ac4d-1e7ed86460b1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f277d7c3-2109-4412-bbdc-f25a90116dfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af97befc-3472-444c-b8fd-aadc0ff34125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dadabc-0961-4519-baaf-fa61073dca2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45088357-8ade-42a5-81fd-c8509c2828e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff0d086-e7a7-4d92-b1c0-fcd3b9c8ab20",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231cfb7c-8430-4916-9116-7bd8885a34c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724782b5-629a-4024-8cdc-b9330e0a2538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7df16f-dbb1-457b-9b4f-47fe6a859999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76f9b59-29f0-4a2e-930b-528f6639590f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205df731-6938-40bf-8586-395ceabbe13a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d6c876-ea29-4b19-afd7-6616b6cab555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9119880-40e1-403d-8548-ab2ca229e9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e2246a-a1d4-4188-abcd-4c0cf88efe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdb85e9-2974-4e71-8291-e4952328411b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1f5631-530e-4566-8c3e-77e3a1fe4d9c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4434ffc7-b995-43ed-81ae-ac1db98ddae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec7a36a-b1ac-4160-9d7a-d3fbde25fd6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fadcfa-626e-4567-bf69-5fee7a5b3eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024c88aa-47c7-4b31-94a9-30d18c47d31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56871749-12b1-4aeb-b0e6-0a99a6f7d348",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c843c1-bd2f-430f-b2c1-901c11391ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce18edf-bf8b-4485-8cea-479c75cdc567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d10c49f-db7c-40ef-bcea-062d5f4d3dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f7faf4-9f5a-45ef-aaa3-0ab85a9b4ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809b91ba-4d2e-4446-916b-4a4cc775b3fc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15049ef-ea4f-4575-a074-b0f80195821e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d6d718c-8c38-4ad2-99c2-fe4cf15d5415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0fc0c7-cc9f-4611-8d9a-5dbba8919265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a272de3-2c4c-40da-bb48-251f85cde9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6a19df-fe06-47ca-afcc-2a14c83534ba",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bd17ef-29ef-4a5d-acfb-a3578ed62ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715a4b4d-0038-4616-92ee-57f48e81274f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242d8792-6581-4fcf-9dc9-cea194cd9668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb0b8ca-7ad1-4796-842f-2e3c3340311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd9a261-3a57-4b0f-882c-d1558e4b0531",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9cfa3c-d86e-46ff-a547-2bcd51504dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702a5c46-8c77-484d-9b5e-741a9491bf85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30661fb-cfe8-4ff4-9e7f-60e99d0f570d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead1cdaf-8800-4bee-9cf4-0593ead9d333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46c996e-e563-43e9-9ddc-225ceb272fa5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f31d26-b57c-4ad6-8e45-f8b4a068e43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8655a650-dd4d-4998-a650-5dc06d2954fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9a2c39-98e4-4353-ba8d-39b079c65b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee12f83-69b6-4081-bf3b-3a160ad152ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69716782-e3cd-4daa-86f2-8ed6e4f0e3f9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad63456-302a-4f35-8924-55f54abf17c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3851b5b-18db-4ce2-8eb3-5a0fc15ee3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaedf64c-f8d8-4561-a908-86fc24d4df99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b6567a-a1f2-47d0-a43f-d612faf77df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e4e11e-0447-44cf-9493-f3359d7b2c15",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf124c6-1476-4589-86f1-233e5582bd89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa8bcba-65dd-4792-8059-0393698987a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012be552-dd3b-46ca-b1d2-5087320126e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3cbfbc-12a4-4b10-90d3-9d4db848f1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5282595-41ea-4899-9884-762ca6803834",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82164c0a-4506-410d-96e4-bd0890eba9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "051ff3ef-5a2d-43f7-b58c-74c197f5f95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadef177-bc2e-4219-b76e-fee88090ae79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada9f9d6-3c66-481c-848c-a6c76d6ccb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69361535-a135-47f9-ae21-2344040a9e6d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24727773-3ccf-4036-b57e-b19118225953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f68abae-cee1-4c07-8eaa-b09167653092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2100c4a0-f62a-4029-ba53-7849b882fd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d5b830-e7d1-49a2-bc78-a2762baf0193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd0206c-7575-4cbb-9870-c86ed54e3b49",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdae58ad-5cc7-483e-a3fb-cff674cdbe1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7141a536-9fc9-4d28-bb26-07ded94ca639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652a8808-21a4-4eb8-962b-387509395ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dac1e60-a67f-400b-ad37-94c31c8d0655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8825ab-bf23-4638-a751-0a6bcec56d06",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7e1fa0-e156-4e10-b78c-88358552b90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04834ec1-95c3-49bb-be61-3db2c2fd9291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6305d755-d8c1-4347-bd6c-c046e072931e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34faa9c5-02d2-4a03-b4d2-bcf72e34772d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c3d72f-e1bb-429b-9a2b-0ce64b2ca6ff",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff8a075-f029-4c11-81d2-2cb9b881b036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "952f5e74-58e4-4a3d-80d9-0093ce2e960d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fcfbc7-13eb-4b21-ac43-b8c03a7d6059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2952bdc3-3aba-42da-a982-1c0b76a2d9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c7281d-af92-4259-8753-c964befc0845",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f69d54a-a353-41a3-8eaf-3b83c2a0915f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2ab28f-5edd-43a7-a7fa-bf14d34dcb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0a70c5-783d-461f-a0ee-aa34f7971ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8029088-003b-402e-ab54-94294583ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01cefec-e30b-4476-b68e-48afd050e7fd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ca32a5-eb12-47ff-8037-77e8f785789d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2dbe905-459e-4c85-9e2f-113ff9bfc470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df39527-ad7f-4c8a-9651-5406c15daef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120df9ec-933e-4d91-8e60-910d3abf2888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ba35a8-b5f5-4854-a12a-ed005721cadf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1401e6d4-735e-4cbb-9486-258110187f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de65959e-0356-465c-8af6-2b4af6da93df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c249bf85-e0c6-4dff-a6f2-1ae8111fbd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab17587-4f66-4b54-9be2-3bdc865cc21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e6d293-203e-41b5-b3ae-d4fe12416e52",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5cc647-9bf7-45a7-bdbe-059f75dbf9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858fe8df-c433-466f-b03b-008a8362a1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7db9cbd-51b5-440c-8709-fbfba79de31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fe8a0d-c481-4524-acb9-cd5372b00d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03dc3d1-c0b0-40e8-9b90-0d2ddb9d8465",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5151c4f3-c7d6-4dd7-9fa8-a3a92e31c96d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ad951a-3a3b-499d-9faf-db2cb48f4cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5d467f-abe4-4a44-9aef-350d663ae811",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacb792c-f276-464c-88af-108534baa5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8719958-900b-40c7-b3fd-ad7f16e02471",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d419332-89b7-433c-984e-b2045c55101c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71fe83e-91fc-4b5d-8db0-8e1276a1f0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43235c66-852b-4b4f-b6e0-dcc93bae8a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f647f3c-5d84-4f16-ab54-367cbd1f3f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de666a2c-eb42-4fd1-bf4f-fd46d9c20e4a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aa6f49-d3f6-483f-b080-aa124cefc1b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e02e7ba-181f-4b60-a63c-e3656cc39992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b674f90-6d6f-46ab-a837-754041ae69b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcd2f7e-b0ff-47b8-8294-4b8f224a30da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f41427-edbe-4f90-97cf-474844a89e2f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa825e42-5968-4778-a781-ede297b44fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7a64633-23b0-41be-bc0c-824abbd67a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee16b6ac-f226-4b3f-9f76-f5a6e9fa11d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3df0a8-e513-440e-8bab-c4a3ffb9988e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32ef617-6417-4653-942b-753e82cff729",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb2fabd-1556-4ee5-9cb8-fd9848196485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef2a91a-af01-4a21-9f91-4715e4dd8c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2db3547-7480-4ea6-8202-9da729c943fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3678d4f-624f-4f49-97bb-d51ccc441e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da285d1-4395-45f7-92aa-ead220c440c1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4feb23-6e54-412a-89ef-23fe80c68a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c0d401-9dc5-49eb-9458-de640d2e381d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f623d6-6d13-4a63-aa52-cb2bc5edcc90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47d4553-94fe-4d8c-b513-b84b713ad2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d3f8e1-c6d3-42dc-bdb2-3caed5c80b70",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5685ad-a1a7-48db-af49-1616a0746615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59af448f-3f09-4330-9e5f-f5a8b71a3a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d00b742-be33-4df4-a68f-4e7ae54fa3db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373cfa31-8f87-4e8f-a702-0839a118b92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb35729-552e-4bfc-a986-07cb7952ca6a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93139cc-ade8-4a54-828e-5cd26e0a92d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "278e0d05-4dd3-4767-8d3f-3e2c0810f0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8206eb32-817e-4bbd-87c7-5633fb15a852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbe19c0-103f-4a96-9775-f092e0aa8e49"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faad10c9-92a0-481b-962f-a763630832c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4afce3d-4336-41c9-944a-44ae2634e5bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f284cd0-fcba-4ea7-968f-6b1a43cc1cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf9f876c-3c2e-43ff-bdc3-92b858479153"
                    }
                  }
                ]
              },
              {
                "id": "3337a408-a1ce-4ea3-b36a-cf0e680145cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e81229c-738e-4c2e-af75-4df78ad9a565",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e9dcfd-f7f1-4b8a-a299-3cf5b835b121",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f58d69bf-b5ce-448e-b860-e8b68a32c77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a02d589-6fb1-46b0-98fe-d1c4a8cfef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60fac949-fa03-4d2c-b29f-7f3fec2e2dbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6141f69b-e96a-47b4-9276-906d6d680aba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d46f2872-38e9-40ae-b5b6-6bd180fba09f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa9a5969-4721-4be5-9199-fdf004f7d068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "329b5ca5-0b58-4f89-9951-3e8131e0b8fc"
                    }
                  }
                ]
              },
              {
                "id": "31e0cb50-81ba-4681-89ea-5bfc6ccaec9e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d4dbe36c-34c9-4665-9c78-a9d8ed745bcb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c08b0a-447d-4044-b2d0-52e224ee6cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97cfa1af-8639-4ff8-ac02-eb0f011a7c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548788fa-9f8f-41a5-8120-096e3391bb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ef7d7-6342-4991-a3ee-d84aec7728e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9ae208dd-974c-4202-9f2a-1719eabcdced",
            "name": "Positive Testing",
            "item": [
              {
                "id": "872de8e3-4302-4158-9a9f-fdfa55b6b9b2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74c6ff98-d22a-4709-9e15-fd36413cac44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11246616-a487-46a0-8984-9563f847625d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "600639d6-35ca-4ffb-a616-1ac2ab331b40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1475ab08-f566-4d37-838e-25a3c2417c07"
                    }
                  }
                ]
              },
              {
                "id": "d2f77837-f3c5-4151-a0fb-d45939fa3142",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec024060-d4ab-4cd1-ad1a-b049a016ff11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cc5b0c5b-70dd-4b63-8a52-a57289149d07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c37355a-882b-41a6-a48c-70d229cac1c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f53941c2-a7a3-458a-9f0f-a14636585b7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b96a0dd-01b4-488d-b5e4-d60c75c42221",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c263fe21-a0a6-46b4-b845-787d1d7c1db2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f18b3f3f-b8ef-4678-9431-6954c78de068",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38c14037-6e66-4c4e-ad7e-a68d3a62d938"
            }
          }
        ]
      },
      {
        "id": "8da49879-70ac-44d4-9dd4-eb40ea2606ce",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f482223e-b2d7-4657-bc58-f9b43865f60f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59b7a438-be0b-401a-b8f9-93a99285d4a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef8d5ad3-9adc-44fc-a121-cfe592a07b7e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608700eb-88fb-4273-8b47-d26de90f0846",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "526fafb0-8d9c-4dea-bdf7-31cff19f5480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226ca9c9-7f19-49cc-a6de-9f2346b38090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eebc9f24-c45f-4bb8-b40f-590df89dc11c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed325c94-2c91-408f-9c3a-76e0b02665df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78790450-2373-4f34-8e02-bfce14d0f979"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b946610-ee7f-42fe-befc-11d64768522d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6ed7b20-8716-482c-917e-4547baa4c7f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e044e0f9-b0d4-4f6a-aa39-785b5f4d51c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "97bf7999-6be3-41e3-8761-c5a0c82bba68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59d040ca-7296-45ae-92fe-1b9bc90643c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bcacb96-615e-405f-acc4-e7afea352409"
            }
          }
        ]
      },
      {
        "id": "3c5035c6-3b89-4400-8e1f-75fc8939ff80",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "45da71ab-ffe0-4370-acfe-3941ddaa3859",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fda8894-aa17-4c49-b18f-0dc80f123798",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8f525e2-da89-4ca8-8f50-fbdf3f35ac78",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8ee42f-1e30-496e-ae8b-51014874efcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe73c773-77c7-42e2-ab53-dac683ab6b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02a46a0-fc51-463b-ba80-d1944c016b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e08ee97-7b62-4313-acd0-fac09390314d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "511fc7a1-bb59-42c4-ae52-e1fde2e74c86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df5e72a9-844d-4ecd-b1e0-e2e4e805cb6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81f10bba-a974-4175-962c-4db15d5a1281",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8d96158-ab19-43c4-a9eb-f421c584ed1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d681a837-80b5-405b-88f8-596ea83481f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9555c16d-9448-4505-98a4-694d87f325b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "331feb46-3ab2-4629-9f3e-d8540e9f5813",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a110fbc4-9141-4860-b7f5-9163e12f5943"
            }
          }
        ]
      },
      {
        "id": "de8db6eb-9fd4-4615-ab0a-ff4e81648503",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "695d827e-f829-4e7e-8718-76f577d7a7e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bb4da54-06a2-4371-a819-2012f7248e7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6aa03be3-9319-4b6d-bce0-3b2c498ed132",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94497d52-c84c-44fc-bcd1-127ddd9a783f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74dcf140-2fd4-4281-916f-4a45930a2113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5319a50-fc75-4af0-a29b-febe729569e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff9a1ef-52e5-4ffc-b86e-e958005a3669"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bba94a05-8a3c-48c9-8305-5effa04f1fa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b836af53-d730-4c7d-aeac-da75b9b6136d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cfaff15-4e63-457c-8073-2f3f13ced004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1ffe801-65ec-4924-a239-f7f2d6a83334"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f05577c-6ca3-45f9-af82-a1bc3287c78f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a68058eb-2da7-486e-9484-06c11971b857"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23d12300-f563-4026-8bdc-226bd1c443af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18c5f1aa-2d90-4644-8c4b-2c2003e42025"
            }
          }
        ]
      },
      {
        "id": "45814750-5a6b-4660-8073-f86b443e0e82",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ec28932-c3f2-448d-9522-f422dafe3347",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68102925-3194-4429-9088-8f0885c3a2d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4d8e912e-dbd2-4238-8cc2-cfc2a6c45cbf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12e78864-4e33-417b-b187-fdc437a2ebba",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61da167b-ee57-497e-8b4f-c180c18d0c75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 768.5284552845528,
      "responseMin": 10,
      "responseMax": 7510,
      "responseSd": 969.0135737443851,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686271516363,
      "completed": 1686271716415
    },
    "executions": [
      {
        "id": "c1027b6f-5042-4806-a510-845e444b945c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9fb2c89b-76e0-49bb-984d-6a09d1f7280d",
          "httpRequestId": "d48702eb-f1cb-47b9-843f-7e0f3690cbd2"
        },
        "item": {
          "id": "c1027b6f-5042-4806-a510-845e444b945c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "89878483-58dc-4db8-b2a2-140036dfd014",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "3e2da9a8-efe0-4d61-a7a7-cceb690e641f",
        "cursor": {
          "ref": "6d4d3ece-47d1-42e7-8e85-5a3c2ec5ef5f",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67b5e5ab-a204-48e7-871f-13630fd2f143"
        },
        "item": {
          "id": "3e2da9a8-efe0-4d61-a7a7-cceb690e641f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6d7cc682-d0e9-4bc2-8305-faa1f0f259b0",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "b08cf80e-cf19-480d-86d7-5a0a1e042c23",
        "cursor": {
          "ref": "36837731-99ad-4a24-97f1-b7fc99e560b5",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e72bb48b-6c89-433f-94fc-0354a92afc51"
        },
        "item": {
          "id": "b08cf80e-cf19-480d-86d7-5a0a1e042c23",
          "name": "did_json"
        },
        "response": {
          "id": "959b1fb7-73a0-40f1-84d6-ded151fbf14d",
          "status": "OK",
          "code": 200,
          "responseTime": 1387,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b8d8d4-9926-4daa-9c96-0cd1fcde5b95",
        "cursor": {
          "ref": "7481275a-b609-4402-bb3c-0a8afadb33b3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d40fdbab-adfb-4315-b6fe-9bc45f2afbfd"
        },
        "item": {
          "id": "06b8d8d4-9926-4daa-9c96-0cd1fcde5b95",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba45e889-ab06-4d18-a161-aab30d7d9471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b8d8d4-9926-4daa-9c96-0cd1fcde5b95",
        "cursor": {
          "ref": "7481275a-b609-4402-bb3c-0a8afadb33b3",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d40fdbab-adfb-4315-b6fe-9bc45f2afbfd"
        },
        "item": {
          "id": "06b8d8d4-9926-4daa-9c96-0cd1fcde5b95",
          "name": "did:invalid"
        },
        "response": {
          "id": "ba45e889-ab06-4d18-a161-aab30d7d9471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b722edf-a8ac-4d85-9a4a-bbcc186b4e18",
        "cursor": {
          "ref": "1125ffab-480a-4dfb-85ee-1aa56b812b73",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "da0adaaa-fd24-45df-acb3-4bfcdbfe1983"
        },
        "item": {
          "id": "6b722edf-a8ac-4d85-9a4a-bbcc186b4e18",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd43490d-4c7b-4d0d-8450-0ff9ff3f76a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 676,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd88f89f-0d45-49a4-ad9f-c79b6f20d01d",
        "cursor": {
          "ref": "082e0fc2-d4e8-40b5-876e-234611ed22a4",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0c8353ff-9ebe-45d1-8144-d4655d7b89f5"
        },
        "item": {
          "id": "dd88f89f-0d45-49a4-ad9f-c79b6f20d01d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "adb065f6-ae9d-4e68-80eb-97af419609d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 937,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178e8160-7541-49a1-a249-26eafb244992",
        "cursor": {
          "ref": "97df5a6c-2de9-4ac1-8b1a-fa1012f0a181",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f872274c-5a43-4de4-b742-ef7a5cfe42cb"
        },
        "item": {
          "id": "178e8160-7541-49a1-a249-26eafb244992",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c2eea138-cc7d-48fe-a162-bcc120f7fdf0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae18db36-1959-4c2d-bce0-1e9f5e5c3796",
        "cursor": {
          "ref": "0d977802-bac0-4e81-b8a7-bf18edff8a2a",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0bd7a6f-132f-4b5b-ab13-57e28b0e9f32"
        },
        "item": {
          "id": "ae18db36-1959-4c2d-bce0-1e9f5e5c3796",
          "name": "identifiers"
        },
        "response": {
          "id": "314d13e5-fa1b-4d9f-bd4f-b13fee4eef49",
          "status": "OK",
          "code": 200,
          "responseTime": 1332,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0357d6ca-c7b6-4573-bd2e-cfcbf06eb066",
        "cursor": {
          "ref": "11668a45-a116-46c2-9488-d55b4d895087",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "85f2245a-2859-43a9-808e-2817959f28b2"
        },
        "item": {
          "id": "0357d6ca-c7b6-4573-bd2e-cfcbf06eb066",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "89da8c54-76e3-42e0-8536-d5daeaf271b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4579545-bcb2-465d-959e-9b1f19e18ed5",
        "cursor": {
          "ref": "92927a81-24ab-44da-a8a0-ec2a0e130a83",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fee29280-7414-43a4-9315-29db903f5bae"
        },
        "item": {
          "id": "a4579545-bcb2-465d-959e-9b1f19e18ed5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab850c4c-e1ca-4f89-9bb9-05a0e5134f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c33265-4aae-405f-957a-c663af96b7e7",
        "cursor": {
          "ref": "4e6c563c-7792-4fef-a6e2-e2a47d9691ce",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eb28db18-6168-447a-9738-bcfb666a30c5"
        },
        "item": {
          "id": "88c33265-4aae-405f-957a-c663af96b7e7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec758427-2dac-4f37-920b-113c60fea0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7d3db0-792f-4b17-92af-1e39e7c29555",
        "cursor": {
          "ref": "defbc2df-1a4e-4844-b781-032e0cf9aee1",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1c95dd50-0085-43e0-b64d-cd3aa31c70b3"
        },
        "item": {
          "id": "2c7d3db0-792f-4b17-92af-1e39e7c29555",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "adbb6a80-668f-4e94-b2a1-864ffb9a08a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d74fa22-caf3-4ae6-b489-9c449a0fac7e",
        "cursor": {
          "ref": "c5608e51-b514-4236-bd36-3f5245c04a29",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8228ac54-e3c8-412d-aa04-9fed56bef1e0"
        },
        "item": {
          "id": "5d74fa22-caf3-4ae6-b489-9c449a0fac7e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "772173fb-6d80-484b-80ad-2e02a1981520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776753ef-5f03-4035-af0b-f50ec19044f3",
        "cursor": {
          "ref": "5e921e3f-3878-4204-968c-22b721ad08a8",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b9eb8f0f-c1c3-4392-bc90-31af15891579"
        },
        "item": {
          "id": "776753ef-5f03-4035-af0b-f50ec19044f3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3f3581a0-5224-4ea0-b358-19eddc366e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560bffbe-7bac-46a7-b595-4b7d90a871b1",
        "cursor": {
          "ref": "0ea6290c-6f9f-48a6-8d31-7ff8d9897716",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5be5c9d9-e6c8-4aca-8cc7-5b134f2b97f4"
        },
        "item": {
          "id": "560bffbe-7bac-46a7-b595-4b7d90a871b1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1b327386-ee81-485f-8317-4c183d6a64de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9baadd9-0b34-4819-96fe-8f15db513fc9",
        "cursor": {
          "ref": "9385aba9-ae6a-49e3-bd3f-fde3ddf64a5a",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7e080db1-9983-4bf8-9c5f-a6e521452986"
        },
        "item": {
          "id": "e9baadd9-0b34-4819-96fe-8f15db513fc9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fab55ef9-434b-4c24-b99f-755cb7401bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e4a84f-d5e2-4ac8-8930-43b951737eb6",
        "cursor": {
          "ref": "b861339b-8562-4071-af5a-f5fce4d39333",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3306883c-8e11-448e-9cab-86e12a94b337"
        },
        "item": {
          "id": "84e4a84f-d5e2-4ac8-8930-43b951737eb6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "51fcff15-30a4-41f2-a62a-0cb159d600ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf8415d-83bb-4b58-bc1c-c87c7faaf1fc",
        "cursor": {
          "ref": "b81b8838-12a2-4820-b3c1-6dd94f706c50",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8a6a8130-b348-44f5-a9c3-95aaf48bdf01"
        },
        "item": {
          "id": "abf8415d-83bb-4b58-bc1c-c87c7faaf1fc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "510de933-e0c0-47ef-ac22-233ca8da9466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85acd8a-6e16-40aa-986a-3b4f912f63d4",
        "cursor": {
          "ref": "057b3ac5-61af-4b7d-b739-5964f08957f1",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0f2badc9-0399-429a-8f76-053920dd2361"
        },
        "item": {
          "id": "d85acd8a-6e16-40aa-986a-3b4f912f63d4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "85b27204-0d52-4af6-9b92-c0528f201629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d0e94b-b93b-4f3f-b1ce-7acbc48954f2",
        "cursor": {
          "ref": "02ced164-747c-436d-8082-0580ea781c17",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7adf3113-8bbc-4f3b-979f-47d887ab053e"
        },
        "item": {
          "id": "97d0e94b-b93b-4f3f-b1ce-7acbc48954f2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4199a271-5f41-4548-99ca-9f5e2b3356ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c434072-9186-4731-abcd-7f574f65bbf8",
        "cursor": {
          "ref": "3e579e9f-c40a-41e5-a2aa-4578901fa4b2",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c9d74614-c244-4852-b423-32ce8ecc5a0b"
        },
        "item": {
          "id": "3c434072-9186-4731-abcd-7f574f65bbf8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "31f431d0-dd9e-491c-a746-6959120d7cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bee6fe-0bb1-4ad3-b64d-f849e1c26867",
        "cursor": {
          "ref": "f1983c66-4c33-4275-80e0-f4af68e635f1",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d2f27272-afbf-41bf-8966-6b6ed05e6480"
        },
        "item": {
          "id": "44bee6fe-0bb1-4ad3-b64d-f849e1c26867",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9f998569-31a2-4c5e-94d9-5980c622decc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b8b066-cd98-479a-b3d0-557d41607160",
        "cursor": {
          "ref": "4e13f677-60eb-43aa-abf0-4de2d6eeddfd",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7673b449-4558-41fb-a78c-c6653f515c06"
        },
        "item": {
          "id": "76b8b066-cd98-479a-b3d0-557d41607160",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "afd726ff-e88f-43e6-a79b-2a06b62ffc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbab596-99f9-4713-b4c5-473243241534",
        "cursor": {
          "ref": "46d237e1-21d3-48db-91e9-ade819fd90df",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "53ceae15-4c15-4e53-b0b9-755c1f34b9b2"
        },
        "item": {
          "id": "4cbab596-99f9-4713-b4c5-473243241534",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b37c97a5-2915-4ed5-95f0-68658e16fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530cf191-d195-41ae-aa14-7a118348eeef",
        "cursor": {
          "ref": "ec51b0c7-237f-48d1-9849-9891d083b2f8",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "806f95e8-c18d-4246-96c4-5bde4f2a42fd"
        },
        "item": {
          "id": "530cf191-d195-41ae-aa14-7a118348eeef",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d14d334f-141a-4d8f-9d0f-d07bdf9d9e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95c365f-df4f-431f-96fb-e106d804f322",
        "cursor": {
          "ref": "361c42cb-c816-4cba-8d63-315eb07fe8b5",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "72fcbc43-f81f-4bd1-b735-2af0aca0d415"
        },
        "item": {
          "id": "f95c365f-df4f-431f-96fb-e106d804f322",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "90c9466d-5225-4c0b-b3a9-caac47adb2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33376002-8090-42b2-8f9d-84da3b535378",
        "cursor": {
          "ref": "c68087a2-8b5e-4372-b4ec-bb16e1e6b512",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b0473d7-d4a7-4bc0-ba0d-5fe4235fcd28"
        },
        "item": {
          "id": "33376002-8090-42b2-8f9d-84da3b535378",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "30b1e0a1-a219-4535-bd81-d0d5c43a28e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a353618-be24-4578-a6dc-27ff00f4134c",
        "cursor": {
          "ref": "5f96a18c-2660-4093-b027-f8d37bc82a6e",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7bc45507-2f21-445d-b64a-7da56dad3782"
        },
        "item": {
          "id": "5a353618-be24-4578-a6dc-27ff00f4134c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3d223360-46f0-4429-a34d-118b3a5c221e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905c886b-9c4d-401b-8344-b16548d8961f",
        "cursor": {
          "ref": "7add4b17-3e4a-4ce5-9e0c-6b7ecde8295e",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "25f62c7b-1790-4600-b05d-172e6dda48f1"
        },
        "item": {
          "id": "905c886b-9c4d-401b-8344-b16548d8961f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3efc90ad-f607-4e09-abd3-f6ec31d0d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d645827-56a9-440a-8935-d7250208bc11",
        "cursor": {
          "ref": "0745d897-9be0-4b5f-91b6-85f2d2a9fe53",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b9877c6f-e1ea-40d6-aebd-8aa320a12a11"
        },
        "item": {
          "id": "3d645827-56a9-440a-8935-d7250208bc11",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ecce3dd0-483d-49ae-93e8-36c3a3993e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84905703-cf90-42c4-8434-5723c82384b3",
        "cursor": {
          "ref": "a64c9a22-fc58-464a-98d3-74b4e3cc2c71",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f6deb96d-0650-4c6d-af64-b0b33d40d9cf"
        },
        "item": {
          "id": "84905703-cf90-42c4-8434-5723c82384b3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fbdebc38-9cf8-462e-8598-67e9b49eae0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d295e95-578b-4405-a61b-3ad3f3d0cc35",
        "cursor": {
          "ref": "2902ad28-6224-4379-94aa-c859c0562cf2",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5c567668-fd68-4c24-84e2-63ffbfdfd404"
        },
        "item": {
          "id": "3d295e95-578b-4405-a61b-3ad3f3d0cc35",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6112dcdc-a158-481a-b1d2-add386811b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ae233b-f31e-497f-a0ab-b385b7d2e593",
        "cursor": {
          "ref": "6a6ae972-c469-4012-921a-c548fe2eb9e1",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ff58aa8b-0655-4aa8-8e7c-12408af8617b"
        },
        "item": {
          "id": "30ae233b-f31e-497f-a0ab-b385b7d2e593",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e045e42c-8b76-48ac-999c-bfcb246046c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1c0498-500e-4d3d-b6f4-54331e4713bf",
        "cursor": {
          "ref": "6b1ad5f3-3772-4800-a2c8-09a3c8555109",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "624ede58-4f4a-4fd4-bc31-74cf2cbc1c05"
        },
        "item": {
          "id": "eb1c0498-500e-4d3d-b6f4-54331e4713bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "893f4ebc-67cf-4b23-8ff3-6b4105fdb858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2eecb5-3adc-4742-9e69-ee7b0538803e",
        "cursor": {
          "ref": "9244850c-a9d1-4dbc-87c2-f1c3774d7091",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a494982c-53c6-456f-ac95-4b8764ec622f"
        },
        "item": {
          "id": "fc2eecb5-3adc-4742-9e69-ee7b0538803e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1982309f-2177-48b0-850e-dce3577d45e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e00e909-8fef-4853-8712-9647f7b6e13b",
        "cursor": {
          "ref": "08dd82bb-35c0-46cf-a485-9aa328ae4f99",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "651596e5-d3b6-43aa-adcc-84b104aa2a0d"
        },
        "item": {
          "id": "3e00e909-8fef-4853-8712-9647f7b6e13b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8662afbf-2cce-46ba-90ca-6c7b93627eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a10c4ff-34f9-45e7-a30e-1e24d9ebb78f",
        "cursor": {
          "ref": "e937c30c-db52-4824-b1ec-ae0bf46099ff",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "67608008-f739-4635-ba44-42b7029476dc"
        },
        "item": {
          "id": "8a10c4ff-34f9-45e7-a30e-1e24d9ebb78f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a924f7d8-6c92-4168-935b-35e45cb57e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3359b8c0-649e-4f2d-ae75-19409d2269ca",
        "cursor": {
          "ref": "0db8db3c-ff5b-4f70-a73c-ad45b9579ac9",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "da522616-7281-437b-a159-40fcea7f6e94"
        },
        "item": {
          "id": "3359b8c0-649e-4f2d-ae75-19409d2269ca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "387a73f6-ef3b-4c69-a960-9e4deda784e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ac55cd-a2e5-47c5-8f44-d3ed646ee55d",
        "cursor": {
          "ref": "083b51db-a54e-48e6-9153-f1e9b9b816df",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "157002d1-fe0b-4517-9471-0e64b0d45eef"
        },
        "item": {
          "id": "66ac55cd-a2e5-47c5-8f44-d3ed646ee55d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4a9b14ea-83f3-4530-aeae-b1c0518fadf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83839055-6417-4879-889c-ac8fc596a251",
        "cursor": {
          "ref": "a91d1f21-0036-4ed9-9423-a6912bb64623",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f467600d-ff69-4885-a7e3-47ee846585ad"
        },
        "item": {
          "id": "83839055-6417-4879-889c-ac8fc596a251",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "89129744-9048-45a2-a2d7-878bf5af19cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9854171-9d66-4405-8076-8a0bf55e6c80",
        "cursor": {
          "ref": "43984375-5c51-48c8-a951-65276027130a",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e506ca1a-c3ec-4eff-9305-387781686d20"
        },
        "item": {
          "id": "b9854171-9d66-4405-8076-8a0bf55e6c80",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aeecf9d4-fd6f-4699-897f-dc2b98e8f60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07729e6f-9738-40b5-8c96-d95268b3cb84",
        "cursor": {
          "ref": "a43ee004-1973-4d8e-82ec-5acc794c81af",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9ab03fa6-4204-44fe-bb30-8fd42ff6808f"
        },
        "item": {
          "id": "07729e6f-9738-40b5-8c96-d95268b3cb84",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e8e776ec-bd84-435e-ad15-0752d74bf1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7593bb-8d77-496f-b072-80b468d1a7f6",
        "cursor": {
          "ref": "b3f2dec4-639a-49b6-ad18-ef6897c08183",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3ac16b4e-3579-4963-8533-9816bb0fb9a8"
        },
        "item": {
          "id": "be7593bb-8d77-496f-b072-80b468d1a7f6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "432e18c6-bf8c-4ddb-a97a-c9ffbc960989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404da6a2-5069-48d0-a166-8abb213c01ed",
        "cursor": {
          "ref": "94e8fab8-4924-477c-8664-0db11cf4f7f9",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "282f2833-db2b-43e7-9af0-477fe5cd2341"
        },
        "item": {
          "id": "404da6a2-5069-48d0-a166-8abb213c01ed",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "50733567-42ce-43f7-b35a-c7954880c4b1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 787,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467cb38b-32c5-49a7-87e2-0c8aaf54fb09",
        "cursor": {
          "ref": "446c6cef-5a1c-4360-bf44-8bad5e116da3",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "853818d8-0673-489e-a5c3-d6e23454d4ee"
        },
        "item": {
          "id": "467cb38b-32c5-49a7-87e2-0c8aaf54fb09",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b4dad0a9-7ef4-4d56-93f9-7a24982cd01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d716737b-bddf-40ef-abdc-720475b871cb",
        "cursor": {
          "ref": "c0cd96c7-8f71-4c4a-94ad-c7db06b1c097",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "82c6591b-cd49-440b-845a-22f9f0695bfe"
        },
        "item": {
          "id": "d716737b-bddf-40ef-abdc-720475b871cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9793c96b-2ef4-4d4a-ae1b-e45fcc3ed8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d46f68-f88a-49e1-bf1e-c1ed0b404c6f",
        "cursor": {
          "ref": "1fdd6afe-ca38-4abb-a98c-24ea5b9a98b1",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3189b057-f7ea-4b02-8406-d1c30fdd2c8c"
        },
        "item": {
          "id": "98d46f68-f88a-49e1-bf1e-c1ed0b404c6f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "13dfcccf-3e3d-4d2d-97cb-0b65cce89f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1390,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b55ca8-d9b1-46b5-9aba-43340398c22a",
        "cursor": {
          "ref": "6b8452b0-35e5-4042-b24d-778825b07464",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0d66bc3e-8b36-4f0b-96e3-03f5030989f5"
        },
        "item": {
          "id": "24b55ca8-d9b1-46b5-9aba-43340398c22a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7a3c010f-1eef-4e6e-9266-8dbf516467d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f8f033-0011-410d-be79-8b3d78a17152",
        "cursor": {
          "ref": "52a78608-0843-4ad0-ae49-3d3fdd1c25cd",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f2c5e1c9-1656-4508-978a-c39c44a17fbb"
        },
        "item": {
          "id": "67f8f033-0011-410d-be79-8b3d78a17152",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4f5a7af2-a5ce-45fc-b3df-c536ddb917bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c75f9-91ed-4777-a6e7-058b88bc2d9a",
        "cursor": {
          "ref": "0293e174-14af-4ee7-b68c-d559c0f4f876",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2caa7c45-67ed-4f54-ba3d-d14034a2f2b0"
        },
        "item": {
          "id": "630c75f9-91ed-4777-a6e7-058b88bc2d9a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "845d030d-97d4-4cbd-8478-c67c8fbe9b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0e27b6-3cc7-43ba-8c32-52f2b8d93114",
        "cursor": {
          "ref": "a0786680-e9c7-43e9-8a4c-1ad9f44c2669",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1153f3c4-0691-4456-b114-606a68609728"
        },
        "item": {
          "id": "0f0e27b6-3cc7-43ba-8c32-52f2b8d93114",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9c6c15b7-0e09-496f-821b-f6fd8040ef3b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 929,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dd23ed-bcdd-445c-b20a-0e63603fb4e2",
        "cursor": {
          "ref": "7ba53646-228f-4c0a-be16-227677f357ec",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20261fbd-fc18-4b75-b808-ed151b29eb35"
        },
        "item": {
          "id": "74dd23ed-bcdd-445c-b20a-0e63603fb4e2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "92e2759f-02b7-438f-aaff-045471c8e2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be1841a-833b-4a00-b6b6-9d1cba55b26e",
        "cursor": {
          "ref": "0df99849-4ca2-4f4e-aea0-2ec38c9ddaa6",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "56854c8c-e4df-4448-8937-38a12cbeef25"
        },
        "item": {
          "id": "1be1841a-833b-4a00-b6b6-9d1cba55b26e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ca2de8fd-5e5f-4512-b30b-e9ed10e47cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e898f0bd-dc69-4f6e-af78-118dd2ab9070",
        "cursor": {
          "ref": "91a4a54f-51df-4cb0-8a00-bdf5ffebe324",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "622368d3-7b70-49a6-922c-2bf758f97df2"
        },
        "item": {
          "id": "e898f0bd-dc69-4f6e-af78-118dd2ab9070",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "548dfa64-cbd1-40a6-a52d-5f79328a75c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1063,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2ddf60-4ad0-4d80-99b1-046dab79c8f5",
        "cursor": {
          "ref": "019798cc-2291-44f7-aaa2-e7a04997a260",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "32e7460b-57f4-4ff6-9145-6252af6a57c5"
        },
        "item": {
          "id": "ce2ddf60-4ad0-4d80-99b1-046dab79c8f5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4a32f9b0-2a4d-4cbf-a139-591e2b8e67a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5238c9ce-3cab-43b0-8c2f-63029605363d",
        "cursor": {
          "ref": "9bd6f145-ce75-48a8-9f3d-3ba546c91374",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1dc15461-8b06-4c73-9f09-f413b1ceea48"
        },
        "item": {
          "id": "5238c9ce-3cab-43b0-8c2f-63029605363d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c04e568a-4afc-4e20-b732-b36ad0ca480d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68159b3c-50ef-4194-8a73-dc642b8d6613",
        "cursor": {
          "ref": "e58642b1-29c7-43ed-8b31-e196ab2c6a36",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c65eedaf-a84e-40e1-b92a-851805f7f4c8"
        },
        "item": {
          "id": "68159b3c-50ef-4194-8a73-dc642b8d6613",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dba446de-8c9a-4177-9b90-237dcd668688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0ac572-a8be-4eee-8e55-f6001cb6f933",
        "cursor": {
          "ref": "b7d465c5-8033-4b25-ab0a-2b7edf3d3790",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0a7378af-a2c2-4546-b966-6ee04213d1ee"
        },
        "item": {
          "id": "3c0ac572-a8be-4eee-8e55-f6001cb6f933",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "10adf99a-81f8-475c-8fce-d8864bc08aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92e61da-d397-4b74-8863-9947ea5cd8c1",
        "cursor": {
          "ref": "9bb8f7cb-d985-45a0-a21d-6797311a36fa",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "643d1b26-bf4a-4a8c-8d33-2d5d27b11083"
        },
        "item": {
          "id": "e92e61da-d397-4b74-8863-9947ea5cd8c1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bd60241c-0bbf-4c5f-802e-51322404ce32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3701b4d2-fc48-4c83-9096-7be108d11cf9",
        "cursor": {
          "ref": "e6c5a0b3-eb44-4c96-99cf-58a1b7d961d2",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fc458d06-1682-4bfa-820a-b5cecba816df"
        },
        "item": {
          "id": "3701b4d2-fc48-4c83-9096-7be108d11cf9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c72b9ec1-aa15-49b7-94b7-17137604e709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faf4759-f3b0-4268-913b-fa0f741aca3d",
        "cursor": {
          "ref": "fa71640d-0dfb-45db-8220-91041df80d96",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fa5c32c1-0c18-41e7-ac00-1ebe4e38d88b"
        },
        "item": {
          "id": "8faf4759-f3b0-4268-913b-fa0f741aca3d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c0abf783-2295-4c1f-8a4d-463da6e44815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9513fa4-cea5-4ccc-a1c1-1a117b1db48c",
        "cursor": {
          "ref": "b111eac5-819b-415f-b44b-8abed704efd4",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e64d3e2-7382-4779-8080-5aac83865258"
        },
        "item": {
          "id": "a9513fa4-cea5-4ccc-a1c1-1a117b1db48c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6fe82942-4d9b-4da7-8295-b48489a56a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a18c68-afe3-4ef8-9d5f-927be433d079",
        "cursor": {
          "ref": "c44509dd-532a-4451-8e03-783ce7d43140",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c200ab42-cbe4-483a-91e6-071524eee08d"
        },
        "item": {
          "id": "79a18c68-afe3-4ef8-9d5f-927be433d079",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4dd7b198-96c5-40d4-be34-bfa97ac26f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5911eb40-78a0-484a-9daa-b640071fb29f",
        "cursor": {
          "ref": "21a69b53-e90e-4297-a77f-c8708b70cad0",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "aab0f4e4-6968-4390-bafe-58c213df3d19"
        },
        "item": {
          "id": "5911eb40-78a0-484a-9daa-b640071fb29f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "801d01f8-38ad-48b6-826e-3b6c593879f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19f02e6-4d6b-42f0-9705-6e1acdfcff86",
        "cursor": {
          "ref": "67505135-578f-47e6-b394-004fc0510322",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b3e0706d-9e05-4127-85f8-251b3ef65817"
        },
        "item": {
          "id": "c19f02e6-4d6b-42f0-9705-6e1acdfcff86",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0e65326c-833a-4707-9119-852d8dd5157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a59331a-03ba-4395-ad1a-940e4e34c1af",
        "cursor": {
          "ref": "776edbdb-d8a8-4d2d-aa2d-d8b897331b97",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2d90829a-32d7-4345-b620-46140bfb5c8b"
        },
        "item": {
          "id": "0a59331a-03ba-4395-ad1a-940e4e34c1af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b56ca4e6-acb9-4660-93f6-da3ccebc81d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa6c713-63c2-4090-bba3-9f35fd773565",
        "cursor": {
          "ref": "f020c01d-eb9c-40d3-b0eb-45067d47170c",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "89fbd238-d258-4bed-8577-4323931d37c5"
        },
        "item": {
          "id": "8aa6c713-63c2-4090-bba3-9f35fd773565",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d43b345b-25cf-49aa-9a81-20f118770e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e8df46-e18d-4f9b-bbd1-9f9495fefa26",
        "cursor": {
          "ref": "20afbbf3-2aca-4cdb-bd99-1e75fbef1bc5",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4ecb5d82-091c-4afe-be22-fef9c3b57b6a"
        },
        "item": {
          "id": "69e8df46-e18d-4f9b-bbd1-9f9495fefa26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c343a667-d25d-4f48-b853-d6ed16250504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829e4e78-ac3e-44e8-a6bd-3d36d966ddb7",
        "cursor": {
          "ref": "28d453c0-821c-409f-8ff7-1f1baf964a11",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4430360b-6b3c-46c9-a790-255aab71b942"
        },
        "item": {
          "id": "829e4e78-ac3e-44e8-a6bd-3d36d966ddb7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "35c83be8-80cd-4957-b500-b9399160be0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fde1934-3f57-4487-ac1e-1949d1fb1361",
        "cursor": {
          "ref": "57ddfcbc-9331-4e5c-87cf-1f78b94386e8",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e4493e7d-8e91-4dfe-a4a7-b0284a164812"
        },
        "item": {
          "id": "3fde1934-3f57-4487-ac1e-1949d1fb1361",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce9f6513-cdbe-488e-9f98-b9847e7b3934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2825a306-df5c-43b7-973f-61ba3a46e50f",
        "cursor": {
          "ref": "01230f4d-cd06-4a53-a01d-d301421f6db3",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "28cbbc6a-4ee1-496a-b907-222d83beb419"
        },
        "item": {
          "id": "2825a306-df5c-43b7-973f-61ba3a46e50f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8f58081e-49df-4ac4-9b3e-24c1beb0fc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a1fda-7f7c-4b34-a681-f84a828eba75",
        "cursor": {
          "ref": "77819d83-00e9-47e8-abb8-be50a5e8cf6b",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aa0b35a3-15d8-4841-90a3-b4a2cc3f36c8"
        },
        "item": {
          "id": "038a1fda-7f7c-4b34-a681-f84a828eba75",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3c90c826-68b6-404c-b585-76e5d36fcb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9604fb1c-75a5-4ae4-aba3-3e2b72575b12",
        "cursor": {
          "ref": "cbbc4894-bd0c-41b9-907a-5434a5b17ae7",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bfb56ac2-3072-4734-b45b-c96d82eb147d"
        },
        "item": {
          "id": "9604fb1c-75a5-4ae4-aba3-3e2b72575b12",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8b23e59a-d616-4a73-af32-f034e5850bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd29296-523c-4209-893b-26bfd75730bd",
        "cursor": {
          "ref": "2c342bf4-9746-4740-ae36-8e25c9c4874b",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a12f0252-95b0-4970-9d6b-4c09e74c2f45"
        },
        "item": {
          "id": "fbd29296-523c-4209-893b-26bfd75730bd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e2235fc-4964-40d8-bf8d-323da52bb46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8626a99-03d2-4d0a-8a26-5a831429b1d5",
        "cursor": {
          "ref": "410987d0-8bce-4fae-a6e5-e9a34dfa88a6",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5e5be7e0-c28f-4cdf-ac4f-2f838e0a317f"
        },
        "item": {
          "id": "c8626a99-03d2-4d0a-8a26-5a831429b1d5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98ac78a7-0d6a-46cf-9f5b-6e8a42f77979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e41b8be-60a5-4d86-be90-59a0e4a6637e",
        "cursor": {
          "ref": "87ac6fc7-3f47-42f3-b57f-3877d8e41bc9",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7f8dc51d-11bc-4660-92af-1f02dd757409"
        },
        "item": {
          "id": "9e41b8be-60a5-4d86-be90-59a0e4a6637e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ff566216-2b37-4d76-855c-97b7ef92a8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bfd803-8e94-445b-a606-2065a43c0370",
        "cursor": {
          "ref": "66688257-aede-4646-981d-7945b0743a53",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d95a7c49-17ec-480c-b3d0-798af1038ecb"
        },
        "item": {
          "id": "05bfd803-8e94-445b-a606-2065a43c0370",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cd2a999c-45ae-4e79-ad8e-d68b25165a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405f9b53-e978-4cca-a08b-e805c2bce8c9",
        "cursor": {
          "ref": "299324f4-01f5-4762-a267-c0b4224cd2d3",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0ecd9507-e749-466c-a337-0c6985678e95"
        },
        "item": {
          "id": "405f9b53-e978-4cca-a08b-e805c2bce8c9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "996dd017-fd6f-4bed-aa1f-4dad4860058d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e639d7-91cc-4226-bf73-42013420bf72",
        "cursor": {
          "ref": "b8c0bb51-4fc2-4945-b526-542b60d9bb68",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "397039b4-ce99-4c3b-9b1c-2e0eebf3c7a5"
        },
        "item": {
          "id": "b4e639d7-91cc-4226-bf73-42013420bf72",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "db025837-644a-42d4-8f2b-f16ae830282b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8a10a0-eb85-42ee-9598-195c1cf5a16b",
        "cursor": {
          "ref": "47ce0b9f-4d4b-4146-8608-1005c11cd414",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7d8f2d68-8d00-4c1a-bed8-10650312a13d"
        },
        "item": {
          "id": "fe8a10a0-eb85-42ee-9598-195c1cf5a16b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fb9f2995-3dd5-4b7f-9f57-e529d8460b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67966b64-3a48-4f7e-9022-e20b26950495",
        "cursor": {
          "ref": "fa3f1e75-d36f-46c4-bb11-7463d5858e9f",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0393929a-d92d-4d42-a838-98f558ecbdc8"
        },
        "item": {
          "id": "67966b64-3a48-4f7e-9022-e20b26950495",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8f3de0b0-bb6f-4c7b-b6b5-cfb9e0ecf743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1881a06f-1523-4ae6-b825-42a8139057a6",
        "cursor": {
          "ref": "ae8782ec-f9f8-44e1-9833-f0c7362f97c6",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74ef27b9-cb73-4995-ad07-fcb079e1ec49"
        },
        "item": {
          "id": "1881a06f-1523-4ae6-b825-42a8139057a6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7683f40-6db3-46aa-9451-afa150cd7ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2678ef35-72c7-4547-9885-dbe3831ae96e",
        "cursor": {
          "ref": "e4772638-04a2-46e4-beb4-a1cab6902678",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4dbe7734-7d7b-4dea-aa72-26cd76c87221"
        },
        "item": {
          "id": "2678ef35-72c7-4547-9885-dbe3831ae96e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d94b8aaf-3cca-4645-ba27-0c683cdacaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8677e7-ea88-430d-8eb2-6e138d8ff855",
        "cursor": {
          "ref": "a2585d80-3096-41c8-b8b6-4fbb87178894",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "23a1dd8a-b939-4098-ba6b-07a0f86653ef"
        },
        "item": {
          "id": "2a8677e7-ea88-430d-8eb2-6e138d8ff855",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d1c517c4-3a26-48f1-af77-0f93b231818a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ebd8a6-03ad-4ec6-9058-6ab7f56ca485",
        "cursor": {
          "ref": "40d24e03-0ff6-47ef-9182-a71fb37f5adb",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9c55f6a8-4b14-45b1-bc79-9ff9acf611da"
        },
        "item": {
          "id": "55ebd8a6-03ad-4ec6-9058-6ab7f56ca485",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f4214ea5-f73d-44e5-be2b-5e7272f2d6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5a93a6-e571-4051-af80-64be20b171b4",
        "cursor": {
          "ref": "20a1eb5a-4b1c-49dc-8db5-f39e34f94a36",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d5de35bd-e9aa-4c93-8c58-448adab3af17"
        },
        "item": {
          "id": "fc5a93a6-e571-4051-af80-64be20b171b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b29e398f-4ec3-4c82-ad6f-e0d346c8b924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9914625f-528d-464b-94d5-66f7acec076a",
        "cursor": {
          "ref": "c53d2032-9035-4f63-b356-eadee1aea3f9",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f5215a18-1130-40ac-8710-fb4096285864"
        },
        "item": {
          "id": "9914625f-528d-464b-94d5-66f7acec076a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4b153f14-adb0-488b-a85a-d35eafbfe510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cb7294-21db-4013-b3be-87c521edf062",
        "cursor": {
          "ref": "7c193c25-7ee9-48ae-a208-7e1bcfc550fc",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1b3d7a77-aa0b-48f6-9d65-9b4940d734ee"
        },
        "item": {
          "id": "75cb7294-21db-4013-b3be-87c521edf062",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "13e1b851-bd24-4205-ae47-a3df511bc722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ac0840-6ea0-4093-818b-135b4069077f",
        "cursor": {
          "ref": "1fbbcbfc-2640-48f3-9191-e80e453b837f",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0b7198ac-f0cc-4a37-9c98-bb11f45b0b60"
        },
        "item": {
          "id": "39ac0840-6ea0-4093-818b-135b4069077f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a61a27a4-a90b-421c-8134-835320429bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814da59a-ad6b-4107-901c-1c5b2ed5ddfe",
        "cursor": {
          "ref": "96810f13-0a10-4f69-92f8-1587658cf95d",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2d587b2b-607c-44dc-8342-9d9530b0acd1"
        },
        "item": {
          "id": "814da59a-ad6b-4107-901c-1c5b2ed5ddfe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "70d6ca1d-fd93-43c0-84de-7ff9fc69b4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dac20c9-1c34-4821-92ae-416e29ee1c12",
        "cursor": {
          "ref": "36a54fe2-5d2b-4433-ad6a-4d61ec70df87",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "02eef21a-e74a-4b91-8135-7953d30e9f42"
        },
        "item": {
          "id": "2dac20c9-1c34-4821-92ae-416e29ee1c12",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "694d78f1-9a50-4d67-9b54-fc31fa859f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f390e897-3475-4c19-a988-35828b776547",
        "cursor": {
          "ref": "db93a596-48e1-4a2e-8aac-fa9e89afdaf7",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1fceb836-11a2-4a13-b295-4de072a4804e"
        },
        "item": {
          "id": "f390e897-3475-4c19-a988-35828b776547",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "aa1dc3e7-1667-498e-979a-d0b27ec1297f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd283a1-c318-4f86-b194-81b628ed2cee",
        "cursor": {
          "ref": "67c02d9b-9797-4983-a4b5-5dd8f4ae1ab6",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "12f2be65-4f41-493f-bfd7-6c915d07953c"
        },
        "item": {
          "id": "1bd283a1-c318-4f86-b194-81b628ed2cee",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f771fea4-2ccb-4d30-945a-5f01a1f2bf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b838cf77-c322-4f97-bc83-def69093a471",
        "cursor": {
          "ref": "05eea5f0-f7cb-4e41-a723-7cd3a3b029c7",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c400beb5-7d4e-4486-ba24-210968dafcae"
        },
        "item": {
          "id": "b838cf77-c322-4f97-bc83-def69093a471",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a950d920-1fea-41dd-ac15-b62179c00776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589ff007-b94c-4ba4-aece-fdd60245ca45",
        "cursor": {
          "ref": "fbc7fc70-ae04-48da-84a0-71a36edcbeaa",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ee7d306a-9ed2-49aa-a60e-aa1655784aa4"
        },
        "item": {
          "id": "589ff007-b94c-4ba4-aece-fdd60245ca45",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cb18976d-833b-4b6b-bb83-7bacd21e180c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6817c55-3e98-49db-981e-3071ef1e1801",
        "cursor": {
          "ref": "ae911c17-ef0d-4400-b9df-6f9ad97e10e5",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4e2c2823-704c-43e9-a088-a3393de534bd"
        },
        "item": {
          "id": "d6817c55-3e98-49db-981e-3071ef1e1801",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "48c3765d-978f-4c4c-9f4c-c0ae3a39566c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f6bfc6-6cd1-4c47-82e3-0b25fc3b0063",
        "cursor": {
          "ref": "ed09af5b-1f79-42cc-aaad-26e2d61cb4d3",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "19d51a68-3283-44f0-8f62-f56323c7563b"
        },
        "item": {
          "id": "10f6bfc6-6cd1-4c47-82e3-0b25fc3b0063",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f3d73c64-5eb1-4fbc-b4b4-f5936e9ee193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae5759c-3ff3-498a-a416-aa11c5464075",
        "cursor": {
          "ref": "ee77c958-0d16-4301-9df7-f6e74d8c33d0",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5c922c8f-8fea-4933-a8e2-92c504a9e35f"
        },
        "item": {
          "id": "9ae5759c-3ff3-498a-a416-aa11c5464075",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8720890e-42e9-42cb-aaa2-59d0676a96f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed866c45-41a6-4c5a-95c5-e27752e095f9",
        "cursor": {
          "ref": "2fd10d62-76ff-4e19-b156-006b8c88728b",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6b4d52ab-daa3-4428-8036-84d2b90225b6"
        },
        "item": {
          "id": "ed866c45-41a6-4c5a-95c5-e27752e095f9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "740f3590-ffb7-4e89-ad0e-01e40b2cbce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bc1a9f-1ca6-496e-8903-75a6fd2bfa7a",
        "cursor": {
          "ref": "84fc17af-4ea6-427f-876b-438f8e4fbf4f",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2d960b5-5731-4637-9f4f-ef85b7d611fc"
        },
        "item": {
          "id": "a1bc1a9f-1ca6-496e-8903-75a6fd2bfa7a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c9141ede-8822-4d98-a8ac-79e80d78fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d6dd88-f5a5-4deb-9342-5c19942c3009",
        "cursor": {
          "ref": "6d97fba1-7d66-4f5f-b9eb-6f0ca43af83c",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "28e4e39d-cf2b-4c68-b023-9ba2313dd2ee"
        },
        "item": {
          "id": "b4d6dd88-f5a5-4deb-9342-5c19942c3009",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9060ef9f-1b82-46e2-9484-6739cc27ce27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16328593-8669-471d-bb46-f4de548e6656",
        "cursor": {
          "ref": "939d696c-c88c-47e4-b585-1565bfb86e23",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0e126502-9267-4554-9772-17d3fa7d1367"
        },
        "item": {
          "id": "16328593-8669-471d-bb46-f4de548e6656",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ffbb474c-e99c-4bb4-8f1c-7509141b57a9",
          "status": "Created",
          "code": 201,
          "responseTime": 6872,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ab4fcf-e432-4232-9896-ddfc409b9630",
        "cursor": {
          "ref": "ce35715b-6df5-40f9-a31a-73445ebcf701",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "37b3eb89-fc20-40cd-88f5-99e412bf0f1b"
        },
        "item": {
          "id": "b9ab4fcf-e432-4232-9896-ddfc409b9630",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3fe18641-958e-4e10-be5a-12674837701e",
          "status": "Created",
          "code": 201,
          "responseTime": 6371,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63481575-0b01-42a2-80e5-c0e7f7ed713d",
        "cursor": {
          "ref": "4b4f9ff0-6f02-449f-bf38-705577e07233",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "08e38a44-a006-4d61-85d6-03223f230d3f"
        },
        "item": {
          "id": "63481575-0b01-42a2-80e5-c0e7f7ed713d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "030d9c84-26fb-48c5-92e7-71d1d116c805",
          "status": "Created",
          "code": 201,
          "responseTime": 6265,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead285bb-cf90-47cc-9bd3-dd23991dadde",
        "cursor": {
          "ref": "472d5890-83a4-4fbe-a80e-18b9f28535e7",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "516e9f01-0660-4baf-8090-cab2d0db3405"
        },
        "item": {
          "id": "ead285bb-cf90-47cc-9bd3-dd23991dadde",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b6d64e50-e956-48b0-83ff-6b3ed99d6c25",
          "status": "Created",
          "code": 201,
          "responseTime": 6992,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b13682-09e2-4852-851a-675e508b5b45",
        "cursor": {
          "ref": "18a509ee-41c0-4941-8f91-3185b45986a6",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0e95733a-f428-443d-ae41-72233d55ec70"
        },
        "item": {
          "id": "a5b13682-09e2-4852-851a-675e508b5b45",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b1e0563e-a83b-4dd8-af27-f7b422e7304a",
          "status": "Created",
          "code": 201,
          "responseTime": 6481,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "456d34f7-f8dc-4477-b7f9-024efabdbc2d",
        "cursor": {
          "ref": "794b7fde-c828-49b7-a257-e039c1b8edc1",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ba8b3b8a-cd44-4b84-9de4-a5065fe8763e"
        },
        "item": {
          "id": "456d34f7-f8dc-4477-b7f9-024efabdbc2d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "546768bf-8903-4068-9af8-13618c5103c7",
          "status": "Created",
          "code": 201,
          "responseTime": 7510,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3873210-b95b-43ae-93ac-eb49bf26c015",
        "cursor": {
          "ref": "a7ed5613-c113-4196-a575-ed6465da8588",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "07206181-81ac-4286-95dc-aed42e328438"
        },
        "item": {
          "id": "c3873210-b95b-43ae-93ac-eb49bf26c015",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f4e9121-77e5-48f9-9be4-628ae9756ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38b6732-d9ef-4ae8-ad2b-5d26dbd210ae",
        "cursor": {
          "ref": "704a5f37-9235-4d39-a773-e47fa4ab2f2a",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9737f9d8-13c1-4f4a-a42b-b91074a55627"
        },
        "item": {
          "id": "b38b6732-d9ef-4ae8-ad2b-5d26dbd210ae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7612b334-98c8-4ab4-ae0b-f7fde76a90e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d364f73-b1c9-4782-ab06-dadb53be9922",
        "cursor": {
          "ref": "9e75aa4b-95dc-471c-8bf5-3e64bff86d8f",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7bec3d9a-b8ee-4ca9-8ddb-97740965be14"
        },
        "item": {
          "id": "4d364f73-b1c9-4782-ab06-dadb53be9922",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0b30e181-3c0f-49aa-a2d9-349764a0e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78294a8-c864-4003-82c9-e3c4c8fe3a76",
        "cursor": {
          "ref": "77ee14da-75c2-4340-aa62-6dbadb0cf18e",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ef41e0b4-e70b-4d93-8cb0-c8427539987b"
        },
        "item": {
          "id": "c78294a8-c864-4003-82c9-e3c4c8fe3a76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bcf9265d-75a8-4f17-ba24-6c384db061f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405169f4-b21d-4a96-b4be-e47b1d48ddd7",
        "cursor": {
          "ref": "46103ebb-5490-4e1c-8808-e22c50d17ce3",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d2ae8e05-3040-4324-9c32-ceff39ceeb39"
        },
        "item": {
          "id": "405169f4-b21d-4a96-b4be-e47b1d48ddd7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75a4ac69-88ad-4841-b259-1e53b90e886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d955742-ecc9-44e2-9841-ebdb4f716e7c",
        "cursor": {
          "ref": "d69687c7-3053-4bff-8800-52e874138ef9",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6bac9a2-eecf-41a6-a6a9-2bf69c95d8ed"
        },
        "item": {
          "id": "9d955742-ecc9-44e2-9841-ebdb4f716e7c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2267d0c-f24c-4199-9429-3b7567ec41a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3549f8c-62e8-4b87-a4c5-10f8230d0347",
        "cursor": {
          "ref": "7f32e3e6-47b1-44c5-9fe9-ae83d4c035ee",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c3e386ce-3cf8-4dc0-bedb-f1c0a255e6ce"
        },
        "item": {
          "id": "f3549f8c-62e8-4b87-a4c5-10f8230d0347",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea509b75-a2cf-425e-be44-1b9fa25633ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb783d1-353d-464b-9eb8-9823d762c559",
        "cursor": {
          "ref": "b19cbb88-f495-4497-ba34-246e601d8459",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e9258512-caa3-4045-8510-d22c64902cc4"
        },
        "item": {
          "id": "8fb783d1-353d-464b-9eb8-9823d762c559",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "53525dfe-95e8-423e-bc05-784df04e71e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce3eaa1-d4c9-41a4-8466-e2787914ecbe",
        "cursor": {
          "ref": "0c87d417-a374-46b3-83da-a2a23a70fe17",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "75301377-fc16-4d75-944e-da7cb360a7ee"
        },
        "item": {
          "id": "1ce3eaa1-d4c9-41a4-8466-e2787914ecbe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f423d21a-9d6f-4cfb-81ca-455094692b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767f5dcd-3cbd-4559-8816-1f3435dddec2",
        "cursor": {
          "ref": "99d6d62a-6b69-4ed5-bc31-e7e382a39b33",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "253b061e-8f5f-44cf-bae4-b7ce53ffc100"
        },
        "item": {
          "id": "767f5dcd-3cbd-4559-8816-1f3435dddec2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "133af127-276c-4cfc-b051-feb228801170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9207eb-4220-4a58-b749-eb8270f4cbaf",
        "cursor": {
          "ref": "14e07e24-8d5f-40b6-93e5-ad905255f2f6",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e706e1ab-fea6-4b6b-9b95-54f42f72483e"
        },
        "item": {
          "id": "bd9207eb-4220-4a58-b749-eb8270f4cbaf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e3a07124-9d34-43d1-ba1d-c556f4fa9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c77747-8c1a-4703-b934-b37ea6afe3ac",
        "cursor": {
          "ref": "e295cf6e-c42a-456c-819f-dd6b5ed9a477",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a3fb83d6-c64d-48ba-8981-f738f3d4a1bf"
        },
        "item": {
          "id": "f5c77747-8c1a-4703-b934-b37ea6afe3ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e00da4cc-5992-4f4b-962b-89ff8ae91614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5dcd09-12b8-4f7c-84e3-f5e0ad2665bb",
        "cursor": {
          "ref": "576e20ca-1ae6-4daf-bb57-82f9f69e8d44",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0f45b017-c906-44f2-9519-ad0f405dd320"
        },
        "item": {
          "id": "ff5dcd09-12b8-4f7c-84e3-f5e0ad2665bb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c1e81f0d-b96c-4ed1-9e1d-51c1f3e722e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74a1a3b-67be-4805-a3ad-c5a186154063",
        "cursor": {
          "ref": "2efbb305-4442-4d92-85d1-bd6a0c6e7451",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2a501dfb-5443-4543-9b80-e460b3922369"
        },
        "item": {
          "id": "c74a1a3b-67be-4805-a3ad-c5a186154063",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ab409bb4-36fe-4a75-a86b-3f6757b0adcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0676eb7c-197e-4e03-b948-6d8ebdaa9e6c",
        "cursor": {
          "ref": "5d51f380-7e37-4958-ba40-3c0d97afd83c",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0ebcd715-9ad7-4654-9cb8-6000e158dbc6"
        },
        "item": {
          "id": "0676eb7c-197e-4e03-b948-6d8ebdaa9e6c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "21a18091-aa30-4802-9ec1-87875ef067f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1ad264-bb55-4ce4-ac1e-84a96dbf34b0",
        "cursor": {
          "ref": "8a9c03ee-46c7-4513-a1a1-89e70ea5faec",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e8a6961a-6668-4410-ad08-a97cf12cd52b"
        },
        "item": {
          "id": "7f1ad264-bb55-4ce4-ac1e-84a96dbf34b0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "df3c192a-001b-4cb2-bc0d-a452307ee2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d028df72-411f-4004-83a6-d70e16db6ed3",
        "cursor": {
          "ref": "836e5b56-a136-4751-8a74-fe078f12bb2f",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "88c6c276-c2eb-477f-9801-71d775348ce6"
        },
        "item": {
          "id": "d028df72-411f-4004-83a6-d70e16db6ed3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e887f51b-b0cb-44f3-b2e3-971627e56eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74049275-f918-4438-8bbe-3355ed69f9dd",
        "cursor": {
          "ref": "be18e53f-804b-4e20-82e5-cf9d485d83ad",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7546c6f4-a807-496c-97fd-83fd6bf55808"
        },
        "item": {
          "id": "74049275-f918-4438-8bbe-3355ed69f9dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "42052bfe-6182-4935-a49d-d7ec35a7d12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4d8842-cc14-4604-8816-d1fe82e7c1b0",
        "cursor": {
          "ref": "868a77d2-4660-40cd-b2aa-0976d5e1525f",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c4bba26a-ea5a-489a-9f5e-5aae843e39a8"
        },
        "item": {
          "id": "5a4d8842-cc14-4604-8816-d1fe82e7c1b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0a6c50bc-9891-4265-826c-f424af50ad08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46655a3-c8ad-4707-b13f-82304f43a71b",
        "cursor": {
          "ref": "237d12f3-28fc-4ef7-bf0e-edba8d7fb0c6",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cb9626e8-abe3-4155-aa01-eb54b0f28a34"
        },
        "item": {
          "id": "a46655a3-c8ad-4707-b13f-82304f43a71b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "db3baccb-697f-4da3-a45d-a29cb7f48fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7a4fa1-a743-4102-880f-fe1e22f37156",
        "cursor": {
          "ref": "3b144c85-f404-4c58-8ab0-854fc4d32ca0",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "584a658b-1ba8-474a-bec4-7a10b99aa1bb"
        },
        "item": {
          "id": "ce7a4fa1-a743-4102-880f-fe1e22f37156",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5bf388b2-77b8-438d-bf73-fd32215fa4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf93d33-55cc-43f6-996f-dfa810a923d1",
        "cursor": {
          "ref": "a42173aa-7f04-4816-81d6-c33858df0f2c",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a8410b6b-2a6b-4c0b-99e7-a993f107fff7"
        },
        "item": {
          "id": "aaf93d33-55cc-43f6-996f-dfa810a923d1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "332fab9e-f04b-47a4-abf5-69cc0859cce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b926aad-6d69-4c67-92ef-1b031a07ee18",
        "cursor": {
          "ref": "8c2ed295-4777-4e9e-82fe-fc88271e41ad",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "515cead2-2d6e-4cf3-835c-21928f3d4fbb"
        },
        "item": {
          "id": "4b926aad-6d69-4c67-92ef-1b031a07ee18",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "00a1c672-f050-4cfb-80e9-1efb310bdd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdde9c58-6552-4bf8-a28f-27d096252caa",
        "cursor": {
          "ref": "600ca5cc-762b-42a7-b965-2e54525f03b5",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f873dfc1-2524-400d-ab94-b69b39383f8f"
        },
        "item": {
          "id": "fdde9c58-6552-4bf8-a28f-27d096252caa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14d3f57a-0cb1-491b-968f-fb3fbe6859a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b65b7c-eeee-4e5e-81be-c3af0ddb5fb7",
        "cursor": {
          "ref": "f170f68b-ceec-442b-b6e6-b95458d14042",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "adb8ec5a-ed28-4d0c-a000-9bb5a5fa763a"
        },
        "item": {
          "id": "74b65b7c-eeee-4e5e-81be-c3af0ddb5fb7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f5ea60eb-5170-49c3-85dd-11234c8ab5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcf6105-8037-415a-bc25-4f2cc9c9b66d",
        "cursor": {
          "ref": "51fdda03-4ed1-42fb-ada0-6102659dc085",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7f42774c-b16a-432d-9c17-8b243be28588"
        },
        "item": {
          "id": "0bcf6105-8037-415a-bc25-4f2cc9c9b66d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df099007-421a-4757-b5d2-aa87025a7fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8b3559-5c7e-4c38-ba59-fa78c70bf953",
        "cursor": {
          "ref": "de9850fa-0fc4-4fcc-b6c2-af4ec9bdd68b",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dd7e78e2-6c93-4fb4-be5e-65e1ba6c9f9c"
        },
        "item": {
          "id": "ff8b3559-5c7e-4c38-ba59-fa78c70bf953",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "12394b59-0610-40cc-812a-1c1cb866f864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4e9837-ac99-4922-8140-7aa5d18c339e",
        "cursor": {
          "ref": "14d8cb0d-21d6-4eac-952f-4b94e339ff34",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dbc3e86e-e295-432c-9c8e-9e7fba324c25"
        },
        "item": {
          "id": "8a4e9837-ac99-4922-8140-7aa5d18c339e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f2e04bee-f292-4891-93bd-dd02f34a7ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1274694b-4fba-41cf-9b57-c54d2a862d19",
        "cursor": {
          "ref": "62def612-759d-4568-ba1e-fc8678b251ce",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2051b705-2553-45a2-85fe-b7e8e0e40902"
        },
        "item": {
          "id": "1274694b-4fba-41cf-9b57-c54d2a862d19",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9bc988e-c4b6-43ba-b649-e5c10d78052b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02293185-ef06-4236-92a3-dbfe6e0af41b",
        "cursor": {
          "ref": "97da2163-e570-4896-8052-79230fd929e7",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "33510dc2-b4fb-422e-b353-6cdeae318bde"
        },
        "item": {
          "id": "02293185-ef06-4236-92a3-dbfe6e0af41b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0fae35d-25df-4423-a62d-5b107da16878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218ea73e-d66b-4d12-ae87-bdef7562b6fb",
        "cursor": {
          "ref": "011d3263-033e-449b-bd92-088e4ce91181",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1c755e3c-4d25-42e0-b6bf-f7014eb6221f"
        },
        "item": {
          "id": "218ea73e-d66b-4d12-ae87-bdef7562b6fb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e7ea5c35-60a5-4fd9-a4b2-eb56f542f313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62815830-e3cf-453e-85c9-aeb34c626fa0",
        "cursor": {
          "ref": "83346664-7365-4049-802c-01873ad9700d",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2e6373f4-a9b1-489d-be3e-8b96f888afaa"
        },
        "item": {
          "id": "62815830-e3cf-453e-85c9-aeb34c626fa0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c2c45b85-7b23-4427-9612-5a690a047605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc321a14-950a-4df1-8da2-08cf9596c577",
        "cursor": {
          "ref": "ea18ccf8-37bd-41f5-85bc-fbe6a4dbe0b7",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7db7fb7c-d3d1-47d6-86f7-8f1319d7c544"
        },
        "item": {
          "id": "fc321a14-950a-4df1-8da2-08cf9596c577",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e6f0c71-3d31-4fde-a392-ab5188cc2058",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95e9c9b-35f5-4e51-ba4e-7c6ddc6e20ff",
        "cursor": {
          "ref": "fbe1ff91-eae3-4512-b892-15c42fd7e4c0",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f9699b00-b5d0-4850-8b69-c32c351a3291"
        },
        "item": {
          "id": "e95e9c9b-35f5-4e51-ba4e-7c6ddc6e20ff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "21da4db4-5273-46a8-89a0-4b5003c08ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b550d3-e486-4666-9e86-d8d4a1c3c072",
        "cursor": {
          "ref": "5d801b2f-88cd-439a-940b-4ff42191ecfc",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "26c2f818-0121-4d75-b147-41447bdf9838"
        },
        "item": {
          "id": "b5b550d3-e486-4666-9e86-d8d4a1c3c072",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "27089207-e950-44b8-a995-d0147d14ed0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c02932-dd75-40b0-b0c2-664579a9959d",
        "cursor": {
          "ref": "ca85e5ac-d17e-42f0-b1a5-778375367861",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "efe15b7d-0ffc-4f18-ade1-8bd766fecb52"
        },
        "item": {
          "id": "43c02932-dd75-40b0-b0c2-664579a9959d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6fbbd27e-1578-4298-ace2-2f9e8ae030fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56c0a06-b71c-4f35-b7ac-0a26b52b3ca0",
        "cursor": {
          "ref": "3f744b81-87e5-4ed7-898b-f961f8c9903d",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2485edfd-bb3b-4c22-a0a1-4a249c83d740"
        },
        "item": {
          "id": "a56c0a06-b71c-4f35-b7ac-0a26b52b3ca0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "70df6269-5ace-47a3-8e95-e3ebd66f0a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba42115-b29c-4355-a2df-48340e35fb5b",
        "cursor": {
          "ref": "ae8d30b6-9b0d-4c09-af64-72c97952004e",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "da80dcb0-faa1-4c40-8e4d-ebfb62728109"
        },
        "item": {
          "id": "8ba42115-b29c-4355-a2df-48340e35fb5b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "430073b0-bacf-41d3-9a01-b7b2e24e23f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70fd38c-05ee-4532-bc02-acd08f3266e9",
        "cursor": {
          "ref": "a5eb63ec-f324-42d2-b624-26eb55d0cf94",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7fd61bca-8862-493e-8f96-fa09dbd1e28a"
        },
        "item": {
          "id": "a70fd38c-05ee-4532-bc02-acd08f3266e9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "85d58758-c632-4b4a-b3f9-8fd3ccd2291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c37249-c629-4e21-8f51-bafd9069ee9d",
        "cursor": {
          "ref": "96c782e2-17fc-4be0-85ef-886c76b83319",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "007bb763-e96b-4ecc-8a69-191707ef504a"
        },
        "item": {
          "id": "e7c37249-c629-4e21-8f51-bafd9069ee9d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "859eaad7-037c-48df-a326-112804dc891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30126e2c-d1ae-4c98-be95-dda0437e6247",
        "cursor": {
          "ref": "3758be86-ca6b-4c41-bd71-0df3725d6c19",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2e4d0a20-2a97-42c3-9c24-fb759a1afd61"
        },
        "item": {
          "id": "30126e2c-d1ae-4c98-be95-dda0437e6247",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0d443ed8-6a44-445f-9c67-36945b557186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17709cb4-7980-499e-a9d5-c1e3ccab34aa",
        "cursor": {
          "ref": "953fb805-7300-4b80-9475-a23aa0894524",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8c894425-1926-4489-b261-43213997b63c"
        },
        "item": {
          "id": "17709cb4-7980-499e-a9d5-c1e3ccab34aa",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "32c9ef9d-5b84-45b7-a056-16153c010d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3524fd1-cd56-471a-97b2-de7176bc36d2",
        "cursor": {
          "ref": "4ad94919-0856-4376-8400-72d05a1e6390",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4bfe958d-a4f7-4cd7-b990-95967cde3ba1"
        },
        "item": {
          "id": "e3524fd1-cd56-471a-97b2-de7176bc36d2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "013519fb-7761-4bd7-9b51-7352778d57d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a80c37-5022-4f1d-887b-f4a0514b0392",
        "cursor": {
          "ref": "a6a393b4-1b0d-4918-bb40-12fdd3b9ab2c",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6ca325e5-d68a-4166-8300-abc9e89f8935"
        },
        "item": {
          "id": "e0a80c37-5022-4f1d-887b-f4a0514b0392",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b8d20938-affc-4e5e-be9b-cc2da83453d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfda82d-6b7a-4a2c-baea-4e89c1228743",
        "cursor": {
          "ref": "e0299b10-60cd-479b-aa4f-3dac83c0ed02",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c571cb81-f443-43ce-99cd-068129ddb3bb"
        },
        "item": {
          "id": "acfda82d-6b7a-4a2c-baea-4e89c1228743",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07e47bc1-4a69-4d61-924f-e087c439e00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ae1369-bf45-4649-a587-02e49b96e80f",
        "cursor": {
          "ref": "af7012a0-d21f-4966-9955-71f388bb064f",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "77ce1667-43bd-4b22-9484-809f33effdd1"
        },
        "item": {
          "id": "d5ae1369-bf45-4649-a587-02e49b96e80f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "760258cb-1fac-4281-b4ab-dd9458bcfd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd64e793-d1d1-4f80-b0bb-b44fad897af8",
        "cursor": {
          "ref": "49032856-3d1c-419a-bb7a-d913981a2f39",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3a30b96d-b57c-46d1-ba8a-c74acc85acf0"
        },
        "item": {
          "id": "fd64e793-d1d1-4f80-b0bb-b44fad897af8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "961ff8a1-706e-49a9-a3a7-b7cc984e4b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71f1afa-f696-4733-90c3-de47ad59d066",
        "cursor": {
          "ref": "5ab6ddc0-fa88-449a-ae16-883f5572bc1a",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5650f7b9-7a1f-4e2b-8363-16b925c98627"
        },
        "item": {
          "id": "f71f1afa-f696-4733-90c3-de47ad59d066",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "790cc7c4-def1-430a-b98e-ac76bba7435b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bb1732-4dae-4c01-822c-b18d686fb233",
        "cursor": {
          "ref": "89ee4fd3-481e-4759-9098-33dd9018217d",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4e02047c-7281-4490-8325-d6994f2dfd0d"
        },
        "item": {
          "id": "35bb1732-4dae-4c01-822c-b18d686fb233",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4e5eb907-b296-4224-80d8-64dd841b2239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aabb9ec-ba29-498e-ab00-13c41ae19ce8",
        "cursor": {
          "ref": "33c165ed-9f3e-412b-9f5c-aedbd77b69dc",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "51718bee-a1b2-4251-8c26-ad174e0df343"
        },
        "item": {
          "id": "5aabb9ec-ba29-498e-ab00-13c41ae19ce8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8a93cd1f-1382-4c03-81a4-7a422086647b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891031bf-8ab8-4a83-82f5-89afd5f59ba7",
        "cursor": {
          "ref": "08dba58e-8edb-42ea-8e12-4dbf084268da",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1e95ddf2-7d3d-4341-bbbf-eb41fb8ac121"
        },
        "item": {
          "id": "891031bf-8ab8-4a83-82f5-89afd5f59ba7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ea87e702-73a7-45cd-b543-a7bbee908730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e9c016-0086-4f6d-988d-50b2b26fa947",
        "cursor": {
          "ref": "49142026-196b-4075-bad6-9dab2914d1db",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1bf8eb27-3a5a-4122-ad6b-17e49ef3a97b"
        },
        "item": {
          "id": "92e9c016-0086-4f6d-988d-50b2b26fa947",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "1d6093c8-a654-4cf0-9072-b57dbdee7653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f999d25a-c385-40d8-8aa3-06bc93a5fa4e",
        "cursor": {
          "ref": "5e951175-ab8f-4dde-825b-919f413a8088",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "43040106-260f-4469-b3ca-6404283844e3"
        },
        "item": {
          "id": "f999d25a-c385-40d8-8aa3-06bc93a5fa4e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "db997f98-df97-40ad-8673-815c3a4bd4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbff3bb0-b960-4456-a2f6-e523a4904b54",
        "cursor": {
          "ref": "8d82e6d8-7a22-4163-ac44-cef44c174b35",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "93652f99-3913-429b-9808-f7db366a9c83"
        },
        "item": {
          "id": "dbff3bb0-b960-4456-a2f6-e523a4904b54",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "79513612-9917-4a55-9261-91cff2330754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ebcc5f-73c1-4634-a75a-4e1f4d66d6e0",
        "cursor": {
          "ref": "cca28f6d-695a-4cae-89a6-93edf9af9bc8",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c7ed51ba-dbf3-4db5-87ad-c1cde07ca476"
        },
        "item": {
          "id": "75ebcc5f-73c1-4634-a75a-4e1f4d66d6e0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c239953d-c692-425f-9439-0e6b0391bf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52b6d9-dfa2-431d-8ac1-f83dd1138085",
        "cursor": {
          "ref": "741c90ff-3547-4a14-ae0a-a7cd6cd54d61",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "39092ce5-5537-455d-97ec-6046d60a8c28"
        },
        "item": {
          "id": "2e52b6d9-dfa2-431d-8ac1-f83dd1138085",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d167a22b-b936-49cd-8a8b-53395d7243db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e054b5-6cec-4102-8f42-d5ccd3c88793",
        "cursor": {
          "ref": "82c31b84-d6d1-48f2-a2b9-0983466bc405",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9aee90de-ca8b-4d23-8728-f76f3a20b5cf"
        },
        "item": {
          "id": "d1e054b5-6cec-4102-8f42-d5ccd3c88793",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9f24a937-62ed-4101-881e-ecdb19de2dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094918c9-b838-42f2-87c3-f4992fb77807",
        "cursor": {
          "ref": "0909cc3f-12ce-4997-b31d-c10261a102b8",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6600c707-1693-4996-a92c-cc275d315d60"
        },
        "item": {
          "id": "094918c9-b838-42f2-87c3-f4992fb77807",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "373b63a1-4595-4645-84c9-58f73f3b831d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e8e7f6-c17a-4b1f-aa0c-31c4fde3309c",
        "cursor": {
          "ref": "4f1ea2cc-a236-46a6-bc8f-b8fb454014ab",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "94be4f22-9c31-465f-88f7-b9228417ab10"
        },
        "item": {
          "id": "d8e8e7f6-c17a-4b1f-aa0c-31c4fde3309c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b0844fbf-3dcb-456f-ac3b-01bdaff7acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bea09b8-6c04-42ea-a3af-2cb532ab0f67",
        "cursor": {
          "ref": "cceb1861-33f3-4936-be36-5f54ef0fb6de",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "58cd32c9-2938-479b-a59f-4ff07fb6e756"
        },
        "item": {
          "id": "0bea09b8-6c04-42ea-a3af-2cb532ab0f67",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "aac14475-0b3f-450d-ae43-34bb67954705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ab5a7-5915-4eeb-9e77-cb24a4f9a510",
        "cursor": {
          "ref": "aa4793ea-3ba2-4361-a1e2-710df58671cd",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6aee736d-12e5-412c-84d1-403f844f56f5"
        },
        "item": {
          "id": "4e0ab5a7-5915-4eeb-9e77-cb24a4f9a510",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ea99ea64-82f9-43c6-9247-dfab46cb77a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7a844c-3103-4416-9694-dc42e93d117a",
        "cursor": {
          "ref": "2a8ec1eb-fb26-4ea4-a594-d9f8b750e807",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "54c281e6-a414-4d22-91c8-0c1b75fab98c"
        },
        "item": {
          "id": "9a7a844c-3103-4416-9694-dc42e93d117a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6f26ea71-6ff2-4280-9c01-bc67304c48cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2edf05f3-bab6-4d68-90a2-52b49ba65fe0",
        "cursor": {
          "ref": "cf347324-68cd-451c-8322-ae6c6b3376f6",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6c97fe0-cd71-43a1-8a86-c0eab167cd5b"
        },
        "item": {
          "id": "2edf05f3-bab6-4d68-90a2-52b49ba65fe0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f6e3aa8d-914b-4a51-b04b-7fc3c48c6dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f1a6aa-c8a2-4ece-b522-11be5725a45b",
        "cursor": {
          "ref": "d8d962a2-798d-4bbd-b9bb-06b6515c18d6",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "21945846-1339-4394-a6e5-a2a38bcb8fdb"
        },
        "item": {
          "id": "d0f1a6aa-c8a2-4ece-b522-11be5725a45b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b103c6a5-6eaf-4a13-a58c-b4991fe0da3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5228487-c070-4a41-88b2-ca4f0a4bf4e1",
        "cursor": {
          "ref": "6b7bde7c-0904-41e0-956e-caa056f8a4ff",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b7937b50-f897-4896-8346-327ca2335a14"
        },
        "item": {
          "id": "c5228487-c070-4a41-88b2-ca4f0a4bf4e1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "80cc5f88-d8f4-4f41-b7d5-2caa89e14f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9259d140-35e1-4658-abea-590982dc3466",
        "cursor": {
          "ref": "90f67f41-1c00-41ea-8172-5e4e1accf534",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "15ba7fd1-9f8c-47ca-ad1d-f2c9fde47cb6"
        },
        "item": {
          "id": "9259d140-35e1-4658-abea-590982dc3466",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "200631a9-c13d-403f-a6a0-842e895e0bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057ded6e-c1b4-4a4f-894b-ec40e6d022ea",
        "cursor": {
          "ref": "d0c1ea16-102c-44d8-a373-cea45c4a2510",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5c427d49-75f6-4606-a94f-25692c84fb78"
        },
        "item": {
          "id": "057ded6e-c1b4-4a4f-894b-ec40e6d022ea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f6d4a82a-52c1-4480-a3eb-5625b264a265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a003271-0cbf-49ec-9bb0-daeb5cac1022",
        "cursor": {
          "ref": "3962046f-895b-4d1c-93c5-a793dc1aba72",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "83132011-2a96-468b-b88c-48a2a8b847b8"
        },
        "item": {
          "id": "1a003271-0cbf-49ec-9bb0-daeb5cac1022",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3dc7261b-d7f9-4802-8010-0bb56da307a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df2b7cf-34ae-402f-a068-d7c101ac1577",
        "cursor": {
          "ref": "c53d4c35-f5df-4f9a-ac44-a20869bb3d36",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bfa7f0e3-fdef-4aae-b1c5-8715b65bfbe4"
        },
        "item": {
          "id": "6df2b7cf-34ae-402f-a068-d7c101ac1577",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6db9c273-44bf-4d2e-adcd-aae7fbb521cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb5ecdc-264e-4d8c-bd40-76cb1679a296",
        "cursor": {
          "ref": "93c01217-fa3b-42de-9151-7eca54b34528",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8fbf3253-0351-49ab-9c60-75b16c45b424"
        },
        "item": {
          "id": "6eb5ecdc-264e-4d8c-bd40-76cb1679a296",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "20111b56-5353-456c-9992-1a1a7d103d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fff290-0d27-42fe-8b27-da81482397b6",
        "cursor": {
          "ref": "1aa08b44-2f16-4d7a-822c-caf8f185155a",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "42fc1301-fe76-401a-8da0-d82707b97833"
        },
        "item": {
          "id": "a0fff290-0d27-42fe-8b27-da81482397b6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d24e144-7589-4c23-b0d2-9e79249dc0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63962864-6b69-4404-b02f-ee05596d408e",
        "cursor": {
          "ref": "8cd186fa-ef7f-406d-af86-69dbccbc860f",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "62d970a0-aad3-4130-a954-7a8093e523a5"
        },
        "item": {
          "id": "63962864-6b69-4404-b02f-ee05596d408e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8e83aeff-c32e-4257-9230-12754a4ae191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6250cb33-d9d3-4301-b90b-8fab2b1fec02",
        "cursor": {
          "ref": "c0b1495a-a211-4e39-a368-c3374dd880d2",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ba90155b-09e5-40c0-a391-8ce83292b6b8"
        },
        "item": {
          "id": "6250cb33-d9d3-4301-b90b-8fab2b1fec02",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "51ea59b0-05c6-49a1-bb59-5047b4af8b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fec3c5-c38a-4763-93fc-5606014550c4",
        "cursor": {
          "ref": "dfe44cf7-fafc-4cdd-ac60-c410bf86d82f",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b18fb469-33a4-4398-bffb-952001812f97"
        },
        "item": {
          "id": "a2fec3c5-c38a-4763-93fc-5606014550c4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5ef90678-4aab-4cea-af3b-05fe063c8c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19155003-58e0-4b6d-891b-ac1cfbfe8da4",
        "cursor": {
          "ref": "41f0c9cc-4f56-401c-a40e-11c725a12b30",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1864920a-0f69-410a-bc00-ff51f757139c"
        },
        "item": {
          "id": "19155003-58e0-4b6d-891b-ac1cfbfe8da4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ea0f7c31-553c-4d82-8199-5349f44e6353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2911358a-3a17-4843-a43e-b072eabfc2b9",
        "cursor": {
          "ref": "c308f5c2-a25a-4df1-a81a-402f8de9ac02",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d4e79529-d489-4f07-9c2e-1d4a59b71aa9"
        },
        "item": {
          "id": "2911358a-3a17-4843-a43e-b072eabfc2b9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "28375f95-d35e-4416-8455-2a722db29760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02a2fa9-9eb7-4d97-bd7d-de67510e7ab6",
        "cursor": {
          "ref": "16f5d462-ae36-42a8-a9a0-77cbf59b13e6",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2585f88a-1672-4d13-a83f-cf261f03b656"
        },
        "item": {
          "id": "d02a2fa9-9eb7-4d97-bd7d-de67510e7ab6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b3fa9c49-f1ac-4f60-8456-7cded77d7e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284e03f1-80eb-43f4-bd71-1454d605e0b9",
        "cursor": {
          "ref": "46ef4a8c-251d-4e76-93c8-26067b9e9844",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "45cd325d-7240-4885-a0d8-9360732c1cb8"
        },
        "item": {
          "id": "284e03f1-80eb-43f4-bd71-1454d605e0b9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f9d1565a-39a5-403a-9fd2-28131293a9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053c03da-88ce-4c61-97b7-8deb65036077",
        "cursor": {
          "ref": "d49158be-031a-4071-9a0b-af45087ff52f",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0a737e37-3f08-41bf-87ed-12df302a0bff"
        },
        "item": {
          "id": "053c03da-88ce-4c61-97b7-8deb65036077",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ad31ad23-905e-4267-b46a-d2050844d43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c240f63-cef8-4254-b256-a0142056e080",
        "cursor": {
          "ref": "b4654705-fa0f-456f-9bee-42e06ec595cb",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e0ab06b9-b68a-46e9-a376-3e6a8b7eddb4"
        },
        "item": {
          "id": "9c240f63-cef8-4254-b256-a0142056e080",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "121d9c7c-e98f-46a3-b9f5-ba3d13b7fdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8110593b-49f8-4ec8-b7ad-72f9a1bbe5fe",
        "cursor": {
          "ref": "6ceb9c05-636c-4aa0-91c8-e44d66101848",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7fc5a5d7-a496-4f06-8b65-e893a1563865"
        },
        "item": {
          "id": "8110593b-49f8-4ec8-b7ad-72f9a1bbe5fe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "83284450-0827-47ec-afd2-21730a80f284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38316bb9-d43d-4ef5-8959-37ec21a98377",
        "cursor": {
          "ref": "405c1e81-1cb0-422d-8299-2da619ccd8c3",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b00230d5-de72-445b-bafe-5f0ddf51951e"
        },
        "item": {
          "id": "38316bb9-d43d-4ef5-8959-37ec21a98377",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b5c99127-64aa-4be7-b220-8befde81441b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86e57e7-8f49-4c07-b981-9fa1d92a9fb5",
        "cursor": {
          "ref": "078fcd07-3a5e-47cd-bc30-e4f25e5dcb0a",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a775fc1f-115f-451e-b32a-e23b75a6faee"
        },
        "item": {
          "id": "a86e57e7-8f49-4c07-b981-9fa1d92a9fb5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "515d1b79-a343-4bef-9017-29b44c389a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc289ebe-c17f-492b-b4c4-255bd657c0eb",
        "cursor": {
          "ref": "f95474dd-e0a7-44c4-a5f1-129f7edb5294",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e2481952-a1e5-41af-ab49-46cd7a6b5379"
        },
        "item": {
          "id": "cc289ebe-c17f-492b-b4c4-255bd657c0eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ced5cde5-88cb-4983-be73-97d6fbe17623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ef42a9-b638-4fac-89db-9e348065a7a8",
        "cursor": {
          "ref": "8c40c4dd-9f6d-4978-a1d8-a3de530940f8",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4ea88507-f8f1-4b7b-ad7c-4ba58b5dab7a"
        },
        "item": {
          "id": "f7ef42a9-b638-4fac-89db-9e348065a7a8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3ce5b723-a90d-489f-a58c-0f32d901d468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9037f4d2-7969-4f84-931c-f9ca2ed4092a",
        "cursor": {
          "ref": "78531ab6-112c-40c6-9b5d-4c715c147b9b",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3ed0d280-e14f-4bf7-b3ed-841d401b41b7"
        },
        "item": {
          "id": "9037f4d2-7969-4f84-931c-f9ca2ed4092a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "84575218-00be-40e2-8173-b673bd7c45a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c94600d-2485-4fd6-9069-27bc6d328cfc",
        "cursor": {
          "ref": "63b1a015-da84-4541-987a-396023ba277a",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6c020a8a-c28f-46a2-a0dc-68bf819a2630"
        },
        "item": {
          "id": "4c94600d-2485-4fd6-9069-27bc6d328cfc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e003e37f-23da-49d7-8c59-5c123e2c0998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596d9876-0f05-49f4-8724-fd71192f8275",
        "cursor": {
          "ref": "db038312-db2c-44a7-abdd-6a3930a777a9",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9e8fe7ac-0e6a-4df6-b2a1-f409918dd464"
        },
        "item": {
          "id": "596d9876-0f05-49f4-8724-fd71192f8275",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b577ec2d-59c5-497f-9772-5a5abadda185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55481dbc-862a-494e-b746-37cad8248ace",
        "cursor": {
          "ref": "dee9e3a9-3ab7-47a9-928d-773701968a2e",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb1decce-359d-46af-a367-ff66ea25f601"
        },
        "item": {
          "id": "55481dbc-862a-494e-b746-37cad8248ace",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "413452ae-fcad-4cf7-8f73-5231cbff7dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec0df6-b889-4b4a-baa2-80ed1ec8a7dd",
        "cursor": {
          "ref": "5867ba54-dc3f-460c-80f3-efbb7c3c6a0a",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5b2b7679-ea0c-4a37-aa64-15ca113e3c5f"
        },
        "item": {
          "id": "bcec0df6-b889-4b4a-baa2-80ed1ec8a7dd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e2c22613-3f86-4253-a7e9-ff7b962f5a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadf2195-7d95-4a38-9e4c-9c660e5b36cf",
        "cursor": {
          "ref": "e0024a1f-c364-440c-bef3-b355f23d072d",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e4d6aa5e-c2a9-47b2-a41d-7ded25b5fc6e"
        },
        "item": {
          "id": "cadf2195-7d95-4a38-9e4c-9c660e5b36cf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "75dda543-1ddd-426c-9afe-65a6ec27b975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e91a33-f170-47fe-b281-989ce0679eba",
        "cursor": {
          "ref": "a9e59dca-77b0-4e29-a188-304fce7cf793",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "94825659-e5ac-43e2-8ff1-b4c79029687d"
        },
        "item": {
          "id": "78e91a33-f170-47fe-b281-989ce0679eba",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f5347418-ab7d-4fba-82d4-12b02b2c446f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1405942-b9a9-4d22-9179-6a30c1b86f1e",
        "cursor": {
          "ref": "7735c273-b4f5-4286-a8c2-fd1406dc56ca",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6e2de532-8a92-42a5-a4a8-558b6337f710"
        },
        "item": {
          "id": "f1405942-b9a9-4d22-9179-6a30c1b86f1e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "baaae2aa-b831-4144-8460-e357f7445e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee55092-7bba-41b0-a4b7-8955ce9dc2d9",
        "cursor": {
          "ref": "224512fc-a73d-46ab-badd-5a9433014c1a",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cc9d79d1-ef30-4880-bb09-3a35c7c9126d"
        },
        "item": {
          "id": "cee55092-7bba-41b0-a4b7-8955ce9dc2d9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2d7956cb-8f8c-4330-bc6d-e7b0eee64863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b21a9ac-5677-4b0d-9cf3-4d785dd0c6a0",
        "cursor": {
          "ref": "c50295d9-664c-4763-af00-9748e0dcc075",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a72dccad-771a-42a5-9e64-3adbf29a1a47"
        },
        "item": {
          "id": "9b21a9ac-5677-4b0d-9cf3-4d785dd0c6a0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f5c1de66-ed22-462a-8142-20c0dfa50b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae4f60-c5d5-4d7e-b237-8cfeb72cda79",
        "cursor": {
          "ref": "48a5c913-6f45-4dc5-9cbc-1ecb496d718a",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "49a9cc3e-d51a-4142-b57a-af0f4b11df5d"
        },
        "item": {
          "id": "13ae4f60-c5d5-4d7e-b237-8cfeb72cda79",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c186a20c-2800-4b06-82b4-53c613d006a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7370f7-3782-470f-8e14-bf2e4098ea36",
        "cursor": {
          "ref": "c456c103-c32a-42f7-9a13-c0460fde81c1",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7beb164b-fcaa-4fad-b1fc-979940338a67"
        },
        "item": {
          "id": "aa7370f7-3782-470f-8e14-bf2e4098ea36",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ed0d00c2-760b-406d-b145-71e104bc7746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdba921-02e7-4dc6-956a-bd959522be6e",
        "cursor": {
          "ref": "4de0afc8-af8b-46c3-ae6a-68afde8ba104",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d45cc0ca-9881-41e5-8117-61253b4c031e"
        },
        "item": {
          "id": "0bdba921-02e7-4dc6-956a-bd959522be6e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1dd2c973-29c2-4474-b5d0-a03bfbc672e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41f359d-e5e5-47e4-8a79-23191f620392",
        "cursor": {
          "ref": "cbe4cca8-8d91-41cf-9d3b-36c2ef45c0ee",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2b475c1f-26b6-477a-925a-9b343cc71c4d"
        },
        "item": {
          "id": "c41f359d-e5e5-47e4-8a79-23191f620392",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b86e6629-0892-4b2d-ae46-2da9a830042f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d16225-bb5b-4619-8ec3-4398ffc10669",
        "cursor": {
          "ref": "b5f1fb9f-5cc3-4672-8324-172b650510ed",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9aea6375-526d-4fa2-b87a-1e4c7b4194dd"
        },
        "item": {
          "id": "11d16225-bb5b-4619-8ec3-4398ffc10669",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b6c15251-689d-4a8b-b589-47b168bed02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c753f50-939f-4e57-8801-c25e41c22997",
        "cursor": {
          "ref": "2b98e918-073c-40dd-baed-fc26402af0d4",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f27e7bc8-47e6-48e1-806f-57e50a9f1027"
        },
        "item": {
          "id": "2c753f50-939f-4e57-8801-c25e41c22997",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c506027c-88b7-441e-8e7c-c0b7c2dd3da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefc3a48-5e71-4e9a-b4f1-a4e262119157",
        "cursor": {
          "ref": "71a51d0b-339d-4039-bc33-e16aa2791b60",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "951aaa79-b8cf-4e93-acbb-affbadce6e18"
        },
        "item": {
          "id": "eefc3a48-5e71-4e9a-b4f1-a4e262119157",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "83087230-3dee-4519-904d-fd27c6265ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b8fc01-9cd1-45c7-ac4d-1e7ed86460b1",
        "cursor": {
          "ref": "82418755-de8d-4e0a-82bb-7045e67579bc",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "988e38b9-e40e-4eaf-859b-31c98df684dc"
        },
        "item": {
          "id": "60b8fc01-9cd1-45c7-ac4d-1e7ed86460b1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f9cd9ec1-469d-4e0d-a0ab-31710218da59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff0d086-e7a7-4d92-b1c0-fcd3b9c8ab20",
        "cursor": {
          "ref": "71478d25-797a-48ad-91af-a89f72d32b5f",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2a0e3d80-f33a-4209-9893-a3bd1114c85b"
        },
        "item": {
          "id": "cff0d086-e7a7-4d92-b1c0-fcd3b9c8ab20",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a712d157-80df-4d91-9049-aeee797d37f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205df731-6938-40bf-8586-395ceabbe13a",
        "cursor": {
          "ref": "8da1faf8-d1b9-4535-a657-04b4a86522c1",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1c880f8b-d4ea-4e0b-8ce8-5f137998548e"
        },
        "item": {
          "id": "205df731-6938-40bf-8586-395ceabbe13a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e259d130-add2-4033-a3c8-b6ef1462dc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1f5631-530e-4566-8c3e-77e3a1fe4d9c",
        "cursor": {
          "ref": "89ad5395-abea-4762-be80-073fd09a9cfe",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c672ae1a-f242-45d2-9f1b-f7848492b7bd"
        },
        "item": {
          "id": "6a1f5631-530e-4566-8c3e-77e3a1fe4d9c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6a2ebd71-a180-4f9d-b8bd-aa0e6847c4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56871749-12b1-4aeb-b0e6-0a99a6f7d348",
        "cursor": {
          "ref": "f3d733bd-d4d9-422b-98ea-c07d38624eee",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9844d2fd-6426-4751-976d-b0c06bea2795"
        },
        "item": {
          "id": "56871749-12b1-4aeb-b0e6-0a99a6f7d348",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c140a29-62f4-45e6-a1e3-33676bf9a9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809b91ba-4d2e-4446-916b-4a4cc775b3fc",
        "cursor": {
          "ref": "567769c7-f6cd-4000-8e84-21452332cf37",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "38ea6d4b-47f3-4d26-96bc-0eae2532cfbd"
        },
        "item": {
          "id": "809b91ba-4d2e-4446-916b-4a4cc775b3fc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ca496029-059e-44bb-9e65-a129f1fee6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6a19df-fe06-47ca-afcc-2a14c83534ba",
        "cursor": {
          "ref": "feee471b-94c5-4aa5-be9e-315536e197e6",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5aa2efd3-41d9-4eb7-a4ab-dab2dd8fc495"
        },
        "item": {
          "id": "bd6a19df-fe06-47ca-afcc-2a14c83534ba",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5a57a6d6-8982-4ff6-9cb3-aecb9a13fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd9a261-3a57-4b0f-882c-d1558e4b0531",
        "cursor": {
          "ref": "7feaa3cd-724a-4f87-af96-4cff92c17d4e",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7aea43d3-d2e0-4f57-aa45-77d65f2dfc8f"
        },
        "item": {
          "id": "ebd9a261-3a57-4b0f-882c-d1558e4b0531",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e3b9128a-c777-4e8b-934c-5694300ced5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46c996e-e563-43e9-9ddc-225ceb272fa5",
        "cursor": {
          "ref": "8357de08-22dc-40bc-807d-662da1105a97",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f0b6de9f-b0b2-4b47-a016-b7e85f099157"
        },
        "item": {
          "id": "b46c996e-e563-43e9-9ddc-225ceb272fa5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "01d36756-01b2-42cf-80eb-bc8ca1a1bd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69716782-e3cd-4daa-86f2-8ed6e4f0e3f9",
        "cursor": {
          "ref": "c3ddbb0d-243a-4c6b-b498-3d9b74f63361",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9225e504-e768-4853-a282-ad993214eab8"
        },
        "item": {
          "id": "69716782-e3cd-4daa-86f2-8ed6e4f0e3f9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6bdcacab-c376-4352-a297-a3aed7442e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e4e11e-0447-44cf-9493-f3359d7b2c15",
        "cursor": {
          "ref": "9f461d2c-84e6-47cb-ae4a-c450c4d162e1",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e61c7b54-c565-4566-9362-0135791b4e57"
        },
        "item": {
          "id": "d2e4e11e-0447-44cf-9493-f3359d7b2c15",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "311338d9-dfca-4d29-a4a0-f596ccd305a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5282595-41ea-4899-9884-762ca6803834",
        "cursor": {
          "ref": "50085e9c-d376-4cc5-b5d8-344a2c4d9633",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f4690470-2d3f-4f6e-939e-e7db93fed192"
        },
        "item": {
          "id": "f5282595-41ea-4899-9884-762ca6803834",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2eef830c-fe1c-4f21-898e-a7ff2ba6f32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69361535-a135-47f9-ae21-2344040a9e6d",
        "cursor": {
          "ref": "dc708e3f-7242-45bc-8e18-db768a9e58ea",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b58dda03-9c9a-4318-a991-1d53e8e13bb9"
        },
        "item": {
          "id": "69361535-a135-47f9-ae21-2344040a9e6d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cfbfd3bd-c45e-4a57-9feb-3fa8d4798eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd0206c-7575-4cbb-9870-c86ed54e3b49",
        "cursor": {
          "ref": "d4b79b07-5804-4771-803e-5fbdfa3a99a2",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "69a37fa5-ef89-4bd7-9fd1-5755497e2147"
        },
        "item": {
          "id": "ddd0206c-7575-4cbb-9870-c86ed54e3b49",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c372a845-284a-44ff-9eba-06cd48ee1b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8825ab-bf23-4638-a751-0a6bcec56d06",
        "cursor": {
          "ref": "1eea8f10-bf2d-4e65-be1c-03dde8333709",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "531d8170-02a7-4e23-b105-322bcd8be861"
        },
        "item": {
          "id": "7f8825ab-bf23-4638-a751-0a6bcec56d06",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5a8b8556-6458-44db-9d30-3d61749023d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c3d72f-e1bb-429b-9a2b-0ce64b2ca6ff",
        "cursor": {
          "ref": "ac30d4b4-43ff-4fa6-9d80-4168cbcf6b04",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3db1e3a0-9329-4757-8060-e4dc5f928434"
        },
        "item": {
          "id": "93c3d72f-e1bb-429b-9a2b-0ce64b2ca6ff",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "033df164-f395-43e3-a266-01e167b22f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c7281d-af92-4259-8753-c964befc0845",
        "cursor": {
          "ref": "47d60a0b-d8c4-4da1-a1ea-8b09c5ef5600",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c859aaee-9b1c-410c-a0be-6b02eb8c2ef3"
        },
        "item": {
          "id": "93c7281d-af92-4259-8753-c964befc0845",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "48a98cb5-3f68-4b73-a356-a32fcc52e2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01cefec-e30b-4476-b68e-48afd050e7fd",
        "cursor": {
          "ref": "aab38c93-9329-4bf5-8e94-6d6cd1e53967",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4d3bb10a-b741-43e2-b7e3-542b8ba5f07b"
        },
        "item": {
          "id": "c01cefec-e30b-4476-b68e-48afd050e7fd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7602436c-45ac-4ebf-928d-91e04a8fcd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ba35a8-b5f5-4854-a12a-ed005721cadf",
        "cursor": {
          "ref": "bb2969a2-3d7d-49dd-9474-234eb4564310",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d919d3dd-06a5-4e95-8fb7-1f49756da7f5"
        },
        "item": {
          "id": "32ba35a8-b5f5-4854-a12a-ed005721cadf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2f98f6a2-c40e-4f3f-9bbf-6ef621af96de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e6d293-203e-41b5-b3ae-d4fe12416e52",
        "cursor": {
          "ref": "c4260df3-150f-4320-87d0-6e9fdbed256f",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "037d2e41-18fb-4e54-99f5-827ebfd16f8f"
        },
        "item": {
          "id": "60e6d293-203e-41b5-b3ae-d4fe12416e52",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "13cdb2d4-8ef3-40be-8dd2-00227210d1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03dc3d1-c0b0-40e8-9b90-0d2ddb9d8465",
        "cursor": {
          "ref": "67eee624-f811-43b1-a935-6697f830d303",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "711e8c28-4b4d-4e37-84f7-6b850ef985d9"
        },
        "item": {
          "id": "d03dc3d1-c0b0-40e8-9b90-0d2ddb9d8465",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a3343c88-f6ae-41c9-adad-7b1f8ea470ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8719958-900b-40c7-b3fd-ad7f16e02471",
        "cursor": {
          "ref": "b5660f6f-3c70-4a7c-9edc-cbc78b964010",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b937bae7-1542-4fc3-8d3c-8e1991ab871a"
        },
        "item": {
          "id": "c8719958-900b-40c7-b3fd-ad7f16e02471",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f9bc49a-9c39-413d-bf0b-4c244152bd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de666a2c-eb42-4fd1-bf4f-fd46d9c20e4a",
        "cursor": {
          "ref": "14617c70-7dcc-4a5d-ad26-5736c317d989",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "78f37b59-343a-4e9b-b857-cec5190d0a68"
        },
        "item": {
          "id": "de666a2c-eb42-4fd1-bf4f-fd46d9c20e4a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ea19a5e7-9be1-45f3-a857-13223ca95b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f41427-edbe-4f90-97cf-474844a89e2f",
        "cursor": {
          "ref": "f1e5d21f-e405-4d7c-a654-cd1201381792",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "56443c84-2cee-4968-bf44-e70f562942bc"
        },
        "item": {
          "id": "d2f41427-edbe-4f90-97cf-474844a89e2f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fb152d92-8e8f-45d8-99ce-0cc99a6e0591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32ef617-6417-4653-942b-753e82cff729",
        "cursor": {
          "ref": "1b00ea79-52dd-4c39-a2c8-13ae41324d9d",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "95488290-b0ba-419e-bc8d-e5f09dd9e143"
        },
        "item": {
          "id": "a32ef617-6417-4653-942b-753e82cff729",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "81b62057-d6e3-4f04-aa43-be09bb6a4854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da285d1-4395-45f7-92aa-ead220c440c1",
        "cursor": {
          "ref": "7ed1faad-449f-4cf0-a502-877a05c47042",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd6ed913-1ac2-49c1-8745-1d03cec7a17e"
        },
        "item": {
          "id": "0da285d1-4395-45f7-92aa-ead220c440c1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "981294ea-31cd-4435-bf26-88a4b1556982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d3f8e1-c6d3-42dc-bdb2-3caed5c80b70",
        "cursor": {
          "ref": "b1d87ccc-cb11-49b5-bd81-358feb74c590",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "df1b37a8-a48d-48ef-a5a0-06c9efe888bb"
        },
        "item": {
          "id": "a6d3f8e1-c6d3-42dc-bdb2-3caed5c80b70",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a6393c56-5101-4fc6-a42c-36d80a2ae40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb35729-552e-4bfc-a986-07cb7952ca6a",
        "cursor": {
          "ref": "a929c867-aab4-4984-bb49-eaf96a0e021a",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6332c910-e540-4da7-a53d-1e529837afb9"
        },
        "item": {
          "id": "8cb35729-552e-4bfc-a986-07cb7952ca6a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8fd63de1-0af9-4465-8cc5-2f8b9535c41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e81229c-738e-4c2e-af75-4df78ad9a565",
        "cursor": {
          "ref": "eed643b7-ed2c-4365-82a8-8e5d27ab3c32",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "85ef3c25-471d-47db-889a-edf44752cb8d"
        },
        "item": {
          "id": "8e81229c-738e-4c2e-af75-4df78ad9a565",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5df05683-237a-43b1-a820-abd8f44ede05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4dbe36c-34c9-4665-9c78-a9d8ed745bcb",
        "cursor": {
          "ref": "a191c2e1-1fb8-478d-8287-14a9e8e7ae31",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1051ae80-2e1d-4363-8d2b-26cc357e2f0d"
        },
        "item": {
          "id": "d4dbe36c-34c9-4665-9c78-a9d8ed745bcb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "afacb473-0c79-4c4d-bf34-94d2780c60e3",
          "status": "OK",
          "code": 200,
          "responseTime": 626,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "872de8e3-4302-4158-9a9f-fdfa55b6b9b2",
        "cursor": {
          "ref": "4fee79b6-4329-4114-a603-f11ed1765219",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2d6c2abb-81f5-4371-b402-81a5cc654198"
        },
        "item": {
          "id": "872de8e3-4302-4158-9a9f-fdfa55b6b9b2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ae871cc9-d7ae-47f3-9ee5-f0c5c630ea85",
          "status": "OK",
          "code": 200,
          "responseTime": 1893,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f77837-f3c5-4151-a0fb-d45939fa3142",
        "cursor": {
          "ref": "00c4c698-8f20-49a9-b748-3c844e95295b",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "229d1038-b2d6-4474-9964-c80b8a5f3e13"
        },
        "item": {
          "id": "d2f77837-f3c5-4151-a0fb-d45939fa3142",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "944e1ac0-8a92-44bd-8fa5-7d6d3a3ee819",
          "status": "OK",
          "code": 200,
          "responseTime": 1776,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d5ad3-9adc-44fc-a121-cfe592a07b7e",
        "cursor": {
          "ref": "dfd83863-0b74-484c-80ea-93693b0bfe05",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7dcb4608-d3db-41b9-952d-ef2d6baf1cd8"
        },
        "item": {
          "id": "ef8d5ad3-9adc-44fc-a121-cfe592a07b7e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9926b68-7a1a-4515-9255-6cea12dd0046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8d5ad3-9adc-44fc-a121-cfe592a07b7e",
        "cursor": {
          "ref": "dfd83863-0b74-484c-80ea-93693b0bfe05",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7dcb4608-d3db-41b9-952d-ef2d6baf1cd8"
        },
        "item": {
          "id": "ef8d5ad3-9adc-44fc-a121-cfe592a07b7e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e9926b68-7a1a-4515-9255-6cea12dd0046",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f525e2-da89-4ca8-8f50-fbdf3f35ac78",
        "cursor": {
          "ref": "de144ba6-6735-4d71-86cf-826d0d923bbb",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "489a934e-8bc3-44b3-9b23-56ad0915b592"
        },
        "item": {
          "id": "a8f525e2-da89-4ca8-8f50-fbdf3f35ac78",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "49510517-3d5d-424a-a71e-b81a25962aa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa03be3-9319-4b6d-bce0-3b2c498ed132",
        "cursor": {
          "ref": "72d7cc29-f5e3-4774-9ea8-39f22c8f367e",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8f40a858-d3c0-4cf6-a66d-eb2e5f3b572b"
        },
        "item": {
          "id": "6aa03be3-9319-4b6d-bce0-3b2c498ed132",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d96ad17-a1a4-4aaf-9ad3-ddf555b07533",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}