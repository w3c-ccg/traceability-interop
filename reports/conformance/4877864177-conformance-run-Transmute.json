{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9335abe0-d0c0-43d2-8e26-a9f98aaeef2d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "79a42cc0-7b6d-4d95-a4d0-f741bf35561b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0720a8c9-86d5-4981-80e1-42e5c422dece",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9b1bbfd-6a06-41e9-b00f-5ee18a208055"
                }
              }
            ]
          },
          {
            "id": "69d4d822-972d-4cd3-8c5c-a0d5ea229c62",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "316fc8db-e432-4f80-b13a-c63e5e6843a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "91d0882e-10f2-47a3-9fd8-df466af6bd8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d1de021-0958-4bc3-871d-0bc77b44b306",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "807b6a59-04c8-4162-bbdd-7380931025c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d81f917d-b934-4887-b675-9b232520dcaf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a8f0134-e271-4989-ac8d-533b44b1fad6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0961b854-4f9a-448b-8c07-0c36043a9d4c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f88df458-6016-4142-890d-193a173b9057",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9257832-38b5-46b7-99b6-517dc631c527"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c010c994-66e7-483d-bf00-2465fa96e2e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c58a2a7-8276-4885-95db-a117c81f4583"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08aaf2f7-57e3-4049-893a-4194a1a7d656",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1589594c-a870-40c0-9c29-d3438c2b4657"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12582be4-8c81-471d-91a3-47c217c8040c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57087c1f-ca4f-4cb2-bd03-7c54dfc48f23"
            }
          }
        ]
      },
      {
        "id": "39e3e601-14c4-4e47-b9c0-27cfd1c9b019",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c02e1bb0-efa7-461c-ba45-77d72fb28f61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d629b73f-9dfc-42da-9e32-b88fcbb02145",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea0a8c73-ee16-401f-a494-1de87a2f7bf7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e5b8a4-7bdd-4356-b02d-fb99110755cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "093bf4b5-2aae-4cea-94c4-cffce9b9d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408355e5-8a86-422a-899a-ce27e3124a9d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f531160-a640-4f4f-b37f-f7b5e6f38fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0049d9a-a2b9-4e1a-bf1c-b25bf4f69573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1a0ce6-4fcb-47f3-93f4-672633279518",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70256e36-2d98-4a6a-9814-b66a9fa7f454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a1b2236-4c87-47ac-a25c-72ba042b27e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c627fe97-695c-418f-9726-84a980ebdb65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15d66676-2613-4ac8-b1ff-56bf59ea4eec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b191ff6a-36fa-4fe7-b4db-273e4e28d2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b88bfc5c-dadb-4c5b-b01d-4023be46c1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e5c78-710a-4f65-a750-d1653679725c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a036dd-0ed2-4d78-89e4-5e9f6fe1a577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5c05dd-bdbd-4b10-ab1b-f46c08532efe",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea3a592-596f-4395-bc4a-2a5b01249044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd551f87-5a0b-49da-bfe8-b82e0cb48660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb7ac46-e24b-4a68-baf1-f5d22d848ce0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e87b5723-a199-470b-8220-a5cca523c95a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7cb46033-deaa-499e-92b9-0f01eb44bd36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28d002c5-6c71-4651-9329-b1511c4d6819",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3349b4b8-e554-40b0-b151-8c96f880f2a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fd517b38-0150-4c53-a16e-0220313683b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d685ea5-cdc1-4144-bc9e-989e141cbb25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d6b96954-5b6e-4ae7-a649-5ba233bc87d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94da999f-2736-4a8e-b609-16c772d56d55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc1ec033-979e-47ee-99b9-395ea1432dbc"
            }
          }
        ]
      },
      {
        "id": "1f89ab2f-e620-44f0-ad2d-66be8172e143",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bdee5148-b22b-4ea4-bff0-0665475b7aa9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a91797e-ad4a-4ec0-9ac4-5e7aeb59859e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "31af7986-507d-46b5-abd5-1c49ee675d6e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0951eaed-aac4-412e-b466-e617003be8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c91801-83b6-4ff6-b16d-30f6b37989bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba32168-87da-4a96-8d41-9db8a1945324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4755c97a-108a-4a5a-b69a-47f02ba31e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cfebcd-f68a-4b05-8945-db5387883677",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06a595c-9aad-4f8a-836d-3f5a360ac9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073e7588-9a82-4d15-be57-104cd62a72e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5124a-77c6-4d98-894f-091c96bb7f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2a75a8f-5283-4bed-8ff1-692317d40bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1317fdb0-1210-4fb9-bcd6-78b40faa9113",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41da54b5-5c0e-4b74-b80b-255d60fa4216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899ef761-96d8-466a-a936-0423d2f402f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9e43b7-7493-4e8c-8d9f-aa6de7c533df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4699dde1-45cb-4515-a12f-12a379781d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ef638e-cf6c-4d57-a970-0a0c645ab45b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa17cab-1c16-4d0a-8b98-5ceabec3df4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9671369-bcef-4bda-9234-74f572c4f181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48667b83-5872-49b8-9921-97859e370944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85c4590a-fd72-4623-a6de-4c088ef1c4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ecec4d-4bfc-4577-9f0a-8b38687d6b4e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3e4e24-719b-47dc-ba99-c0c22b666a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110f9d0d-0297-486d-9bc6-745a95fb0e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b607d313-48ae-465b-a2fb-04402d8ceb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac9ee74-31c7-4bef-95be-670ae54c5cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f28653-26d0-461e-a7fc-363493d09c03",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775ba0f3-5cf1-476e-8d5d-e8e3de0a79a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc2a9cb-7603-43b9-ac46-1ec3c2f00f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121cbbd2-7651-4083-84a6-e89affc76208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a001ebf-4723-4ba9-963f-5baffa87b73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5931bb8-6aad-4e2a-897c-36130305635e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9792e9b-726b-42f9-beb7-9492a0c50b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a2182b-bd6c-423b-b6d7-cca7871b5b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549c4544-5c14-4432-9f82-19d60e8a8ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5625318e-47ae-4534-9018-f70adbbdb39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c317b0c4-79c6-4e23-a9e5-cc052fdf3288",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0ee07e-b3f5-4bdc-bc09-7ad321be1b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3054a648-3570-47ea-9785-b5b76951b5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d405a07-976d-4280-90bd-3c9ab384d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79c437a2-5163-4d09-b8e2-0747d26a66cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266db1ca-5aa1-47e3-829f-8d1aaffab794",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fd365a-9e3d-4b71-b257-c36800d67a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac947c02-0b9f-473e-8d52-5c2721329417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fd07ed-1050-427b-b4c1-43dd3f3d5520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a4ca96e-37c2-430c-bd7b-a6d49213552f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d9ae28-c4ba-4dec-b022-c22581b755a1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b9983e-15b1-4a5f-b8d6-4918cfae6637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd25145-8b5c-4fd6-8644-393691c903ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cfaa8f-bcae-4e42-a39a-be5ccdd16fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cecf0b74-521e-4dd4-8c43-cdffe1d83819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11ebfd9-2356-4772-8de2-7bc13199366a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8516c24f-89ad-40d5-af8e-2e211acd9cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f148e067-f0b5-4e89-9c20-096dfb649e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6418a751-9912-49c5-95f7-231678bef221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1e849cf-2d8f-47b8-86c8-109956ba6473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aeaa0f-0d97-4e25-b1a9-d2ed16a65a48",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee65a282-710f-4060-85b2-9fa79d554df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09fcbf1-1241-4969-8c65-d8471e2bb2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40445b2-aa0d-4185-843a-19d6ecefc12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b1513dd-2b49-4764-8a46-ffdd6d7b0515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a0c068-6d25-4aa3-a602-9f5d2af15354",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55111231-c3b2-40ae-9d1e-905d4a54dcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ff49e9-2069-48a4-95f3-e7cbed0e326b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0018a08b-40a4-4181-be70-024d31898324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3c3d82a-0d90-4d98-9e0f-a91ec90195ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f0c875-67d3-4ccb-a604-1e86725a205f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c3f0af-35dd-4bb7-bcfb-24abc7a79861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ba73b-a887-429f-840d-4f1924352776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f568604-10ab-4c5e-992f-5216e37453ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8969416a-0533-485d-8850-d86a4ed71528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b669fb-4f4b-490f-b502-cd63134bffb8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677512af-6d1a-4c99-9923-9c141286f9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd7231f-88fe-4712-894b-c538a42a7858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5dcaa1-1185-43c6-9f65-8f3b483a9a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a18821c2-af8d-4608-ad2f-77f035a440b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45db70bf-2f67-4d13-93c5-1481c642a060",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b6b60e-1230-4355-955b-0d362ccfc1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6936cacd-bedc-48a1-8b7b-10c4babaa228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09a71dd-dcf3-48f4-bf76-90cd96ce907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b944f05-9f1e-4a67-9ccb-923f99a75af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50bcd04-6d56-441c-8b78-ad982f7a688d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da22ba6-0a45-43dd-87ab-75c1f4764096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24adc388-4a60-4c5e-9c6a-d24870233582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b875f5-a981-413d-bc48-20611841ca86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b054591-137c-4d3d-a68b-33d26c689efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b116d60-663b-48bd-8257-1e6413a72e94",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc0514-a741-40b5-8abf-dcda5b649c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ac0d7d-0b88-4c5d-900b-9a5a47d092a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf27a521-844d-445e-b539-7d1046d4dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "977eb262-8cd9-4c40-981a-a04569dc7db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a119641-3011-44e6-af7e-914a90495d35",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c8427a-6bb3-4fad-a293-ae0d2f9bbb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585c12e4-cbb2-4bf7-883d-05bd3c6636b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9520e9f5-df8d-48ec-bcfd-00b7074d1517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e19f064e-d20c-4b4e-87b7-c94d36c9d848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ef140a-455f-4f57-8aca-adae3020c3ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad58510-9e5a-4cfe-bc55-306f52f0504d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab4f36e-d7c1-49b7-985a-e2e1206c2d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285fc591-33a2-482a-bdca-114f077956b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a302cf31-6854-4639-bdcb-71626f262313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f70337-8139-437a-9a87-b092711bd6a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce98bd97-eae8-4b4b-97cf-48d1cc35c12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e747423-5e34-4f32-85ac-d9a765e64889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707d38bb-41ba-4cec-87e6-773137edb813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41804ab-97b3-48bf-baf4-512d9b648a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc944f6-37c0-4b24-902e-888ba68aa732",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488b532c-b963-47f6-8025-be523ed11ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66449f44-e6ea-41db-8f49-3b2efbba3c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20c3afd-6a74-49ee-b6d3-ed03f08f280f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "046b0cac-f307-4bfd-a3e5-88037be075a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877cee86-db60-4554-8f53-611b64e71aec",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dde6ea1-df9d-4f8c-8bec-da2922a25c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8aff4a-3228-4049-baae-657be81eb5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92b2317-f676-43aa-8e18-8c9b3da6f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a39b3a12-8e4c-446c-a171-14c1201d413e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e25c62-899b-4ea4-801d-45e4c7d409f9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5185971-6aed-4c33-83cc-5cebc4ee8694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5089529d-b0f1-4886-ab23-fcf2e10da9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926811a7-3146-4869-a31d-f00f259bd80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "024cc4c7-f962-4f07-9cb7-2101b9a9b230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf2fea1-0fdc-4c36-a17d-adeed2994dee",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b45708-54d0-4e20-bd9a-cb88734f4ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ceba9f-1210-4857-aa8c-1ed9b6a19e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833b609c-272c-43cb-bf69-d9b612ffcc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "395144b8-2065-4c5f-8bd4-085af438c6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dee0031-56f3-4d41-b096-ba5e2cd85f62",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cfac1f-c420-4ea6-8d21-0ddfb62a3c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3f0cfd-3fc4-4924-8497-aac072d35b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc987800-37e7-4179-ae77-9ab9d015cd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be511ff3-a070-42dd-a9a2-90529fc30578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e54a2-21b8-446e-b848-bf3b5089039c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d712688-8c4f-4fb5-b285-8e29eeedd2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd732c-a81b-4927-8170-e7d7b2b6cf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05931171-36de-4353-9ce6-5bfa37a1be9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0bb014-cbb0-4ca0-b736-593d9fa16e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2648955-21e3-4e61-b6be-3fcced981818",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2725f6-e174-46eb-a071-04cfbb4eae8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cd51b3-7440-4287-b560-be1aa18c2f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc3e2c5-8f7e-458e-bd2d-0d176485a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51bfc39e-6a30-4a76-a0e5-9fb863244e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003646ba-ea72-4eb6-b6a8-605a2ac0f47d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd93331-52ae-41b5-86e1-19e80b9c549d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b281aa43-ceaa-40db-96c5-c25b22424d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878d8711-1b47-438f-9327-aeb2733c592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a533d70f-3d94-4953-89b9-5b7e4a933650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24570a2d-4d33-4f51-bb5d-02a0c475eee9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b998077-6855-4745-9d14-898329c912f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1def73e4-ebd7-46a2-9a34-93686ee8ea1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0435a0b5-449b-4df4-bb1c-1aecfbcf957d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9baef26d-dc3c-4e6d-8e97-e048c3a79d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c0052d-d035-4e16-b6fb-aaae5e325b02",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521ab061-e358-4d2c-ab9d-666f8af951d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f4255a-e16b-4e97-be4d-cfab8e8a9b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e97f94f-ad03-4583-b7bc-cb7b8504c7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b054ed95-4044-4a4a-abce-3ddf6adc91c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102c4089-df34-4267-959e-341591c8ef9a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30647bb4-c7b9-4cdc-af57-c467bfaab5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a77398f-4e64-44c2-b146-00abf76904a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f676c02-adbd-454d-83af-b39c769dfc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92b97a07-1497-41db-8dbd-a4397e98d6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a54ec7-5112-46f3-83ef-184f95a1e1c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11465b4-c7e7-4e93-aef3-9618506cb3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e73c672-fe04-4af1-b90b-3befdc8d7e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2573a54d-ee12-47f5-b7e7-1fa80b8e8571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db674ea9-0431-4c63-9988-6234200bdcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9c57e-8198-4b6f-81e4-959105fdc56d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3031e211-ffc1-4ceb-ad23-b6f5c24e1390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f304c8-23ce-4125-be68-0a2cea4b10c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9015b13-63b5-445c-9c5a-bd0b76d3ab4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1104d234-ff03-470b-a0d3-776e1989542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141bc144-ea2d-4fe5-a1af-5147ddcb9a4b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca91f547-0669-4663-a9ca-8e627b280ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73d073b-0293-4a72-888b-3d588de722c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06202186-24a2-440c-bae5-6f50c5eb1528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "76f36dea-8f90-4595-9dac-4c95121221aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2582c9cb-9275-4ec5-8d5f-b9e35b5066ba",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf318b7b-312d-499a-adcc-8f31a0421356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc2d4400-d8ff-44df-a47b-b77739537d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2a6421-f35b-4fa9-b483-2039895d26f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31e410b4-23dd-43e7-a1c0-f5593c3bf880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a45d8ef-8ffd-4a04-8285-24618c00b1f8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3aca650-8671-48b9-95a5-82b5bd4cd9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c36442-130b-490b-8211-672655837c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98cdd2-6f35-4ae5-8282-44a197418393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6afdd3f0-1668-4ea7-b3e0-e0e0b0c08032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b192478-27f4-4384-bd99-f746c9ee87ca",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420ebcab-e31e-4b39-8b78-33f5fa45baf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2892b8c9-123a-4ae7-aa67-be3e5da27faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421cb571-3967-4bee-abac-1275cfacba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "254213b8-e4fe-4de6-9bfb-beac51ca0682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ea458b-c7f5-46a6-bae2-eb04bb6b0566",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab34d720-d389-4ad6-a208-d51080a86e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788b2b15-31c3-4040-968b-f2a592fe5130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c4d5e4-57dc-4100-a157-277fce6fe9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4da0ff3-a6ee-4cf2-8e53-0102291e0811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edd081a-bb50-4a1e-9170-a8d1c294ee01",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806caf1b-2b92-4f04-985f-cbbf952888cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2766a6a2-26b7-493b-ae50-485f8894b37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aba79f5-1a82-4a28-8dc7-b6cb8fe19b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "299b6aa7-ea7c-40a2-a9d4-8f375c8b92f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d332022-7da8-4081-96c1-9328871d1211",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de487574-4bc2-4ed4-ae3f-66daa3d198f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f808e12-8798-4549-b947-c9ff362e5c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ec4d7c-f45b-4607-9ac4-3ff3f4ace0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1059666-98d5-44ab-b8ae-5a4f88ef6f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8916ec07-26f0-4412-9745-5fc249cfa278",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261ccfbb-cb97-40f2-83b4-6a2472746a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de213faf-186a-4e50-b887-42e81a8cf4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aa3e0a-e786-487d-b3fd-33192356e4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf433ae-4ab2-4ffb-80c0-c63fd0f33a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdfd4ae-a4fe-43ab-af37-4f5d81634331",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61493c-4a9d-4e77-8786-73a95db50ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fc59a1-e6aa-4388-9ea3-1b51c41ec3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0377aea4-e056-4831-871f-a224fd61e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a9cda3f-0e36-4dff-871e-2a1781893af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7f3719-6a9d-4446-9663-fd7413766367",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9525527f-e6b5-46ca-aab4-3cfb54cf5ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06135b62-521b-4722-ac82-78686f188e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586ca151-0a7b-4026-960b-d704630b67de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "605b647d-0043-4e27-9206-596b327b5f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8552689c-206a-43bd-82b4-6e423536d9a3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daba6c07-b439-40d3-9bf3-3bac1eda3798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b714119a-e751-468b-9b77-ed080996db77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366023e0-37cf-4801-9757-e862201f3b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3eebb78-3c14-46ee-b02e-24171b02c054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7ca737-64c2-42d6-9b5b-3e5d699d801c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501601ee-4afd-45c9-9e99-62a94820462c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd37d83-e100-4d55-bfc4-9d46bc877f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504c8799-10dc-4e23-af93-b42af09bd73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3033171-e0c1-4ed3-9e60-8538293cf05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53071550-bf1d-4d10-a024-787781be91af",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc024c08-71f5-4472-8f68-7825f34980a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bba424-62cb-463f-a9db-68605f070a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d28b6ae-a686-4eef-867d-7cc1ad6d58fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d64a76f-371b-4e95-b83c-b232136b19b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26532b22-d771-435f-a0cc-0567cc9d566a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39a421b-697b-47a6-8a9e-afc6b36d67f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e259ea-157f-4f0a-b363-f364db125739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c27352-06cd-4e38-8c95-5c79aa042aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f9e5a3-0ab3-410c-be78-b5f1f15c6a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d550ad05-12d2-4709-82fb-bb5396d1f80a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a21ba4-018f-4d21-bf4c-9f0570b53808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf62aa28-98c6-4caf-a76d-ccb4d21729ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872535df-3a56-4f61-9fe5-11580a7c7630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15c3a4ca-5dc8-4523-a2da-ce9f194909c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6084e4-b41d-4dbb-ada8-55ee550f79a7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d998c51-7b9d-45d3-8a2c-3a0f3a786101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1031e065-addb-4b65-a958-5d16267c54d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969a60ad-494a-4ca1-860e-88c5ba270ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9aff6783-ea9d-47ab-a757-cbda2cdf5df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486dc549-4654-4e8d-9bfe-21e2c534db42",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32977ef-8817-4034-8c99-8beb1357410d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b1cb18-97fc-4e87-a71f-3bfd0ffa228c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77944c2e-a1ad-423c-96cf-6a626c5aea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d27c7f-b8ee-41a1-9861-8d7603305a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2703296c-94e2-4340-aee1-582660dc1e26",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486a9681-1a08-4f57-8f53-65f6bea531da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e84476-9aba-468c-abcd-c5a26662b76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e84a9a5-1bb1-475b-8205-0960eb96a390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b0071f-146f-41f9-afa5-15b6f81f6e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2264023e-e7f4-41f9-b490-e38f78f1dde9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3ef93a-b164-45f5-8d44-f97870fcaa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c45a2c-f33a-4788-93b8-88c203b04b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d681d928-31f2-4f5d-b9c8-fc0534fe9119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "205b3e9b-0f24-4673-b1e4-3fd7d69dd40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedd6ca0-19e3-4724-b709-b386dc9b6094",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7441943f-0ccc-44ed-bc30-0649c2f8b6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287f9fa2-b287-444a-b144-f5b3393dd40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e23823-4cf8-4381-a51c-17322829e2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02bd3376-c491-4f5a-861f-8cbce5209573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e023c14b-66a4-4e04-88d9-3058734b627c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd2b2db-a9c4-43fa-a567-0f4d3aa6e112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfe221a-68f2-4676-901e-fc2939e041f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836dd11-a5b3-4431-aae4-0a0524e03dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f487bc63-9845-4654-9ac4-f759454639fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26d41b7-d8e6-40a4-8394-1d00c57da37e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7bb6c9-490f-4461-a1cb-0676f9147f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae60d11f-f0e2-404e-899c-89b656f64d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c89517-9b47-4d2f-8e92-ab5800869330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd8ffff-2015-4eb3-a4d2-9d3a2b67817c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4558251-bd0b-4f75-99b6-149b775365a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e901b26f-09e5-44ac-9817-ecf00acf790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db349ac-8d81-4637-8a59-288ececeb595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f7c276-9f85-45b5-9b95-8654ce7f3ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b26bed4-9419-4bfd-b040-3a6ba9a412c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a6bd1e-1d75-41c0-8ed5-99bd1ed34356",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcace79-2454-4bfe-b728-355dd3a3ddbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0e0aa7-2998-4997-83a4-3bdb2afbce8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd69a10-6695-429b-9706-5a1ee79a0b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2550817f-7ebb-473a-9f2a-1053558621fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6b952e-f352-472f-8f88-4d42207d8672",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a994da-cfab-49a2-91f6-b180bd9081b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e486eb68-f76f-418a-a459-482924e5f9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55ea502-8ea4-49bb-a916-8653cfebd120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20cb4acc-b315-4729-a9ba-a6a64e93f918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790619c4-ca18-4339-b82d-ee1ecbc4705b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812be3c6-6d1b-465c-bbe9-af8d65531c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ce5c71-c259-4f4e-b7e2-87f9ba6671b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cdc2df-acf3-467d-b425-21fbc54fbfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4327c14c-01f3-464f-9fc1-a0086ef49ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3a7e10-da34-4b2c-9733-460e1c7e53b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0472ea24-034e-4c26-ba63-fb39eafbb677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6d6cc5-6d3c-47c1-a8f5-fe73cedf3ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f04b728-5f44-4f62-a1fd-392a794bf0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "094aed41-26c2-43b5-91f8-f19dc820734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a423bab7-28e8-4b9d-b5b5-24dc6b570aab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da29a72-566d-4110-9085-8906ac67b65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30967b9f-df56-4802-be60-9bcfb98122dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586f9b6f-07b2-44f0-ba80-6735031198ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "591bfda8-2733-494e-b652-074367ca2afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec9e098-989f-4ed5-b080-81c41d5866c2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a410991-78a2-48fe-81d6-72c1549c30c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dea9b17-1d08-46d6-b096-09de03ec2a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3693f125-ac47-4c34-9452-f57d0741c773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2524df3d-4822-4455-a477-034fc6e63a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a5300e-c1b2-48b2-b897-c83c0153dbd7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f442d7f-ff56-4269-9001-12551a3896f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eb1adb-1b9d-479f-8771-6ede1741a16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ea24d-063f-4fc3-af3d-bbbefd02520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3157721b-ecea-4b7f-a809-c6cfa7b89595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b05303-e8af-42a4-835a-18f341580655",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b288bac9-bcbd-4e40-b9d8-11d154b223c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc35915b-05ec-488e-b207-96e68aa4718f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2abc2f-191a-4757-b5e6-aff0142d8dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ee4e97-6734-4d2b-a73f-735a34626347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1535ab5-d984-49eb-8b4c-c94062af3e0d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d452142-4074-4d55-8cd3-51737e809c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72657c1b-36b6-492b-8aa7-aef1ce340572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6197ddd3-8916-4579-80a7-af7d007f310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8cf0fa-cfa7-4d3f-89e7-10c3221adb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1fe8a6-6229-4b1d-9298-339b5b5d3856",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0948c02b-f5bf-4aad-ab3c-be15690f42a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeed1a5d-9325-4e13-a32e-42afdb551e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97e1ee2-c953-42f8-b4d6-0adae8ef496a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7684e968-2191-4aac-82af-ccb6598cad77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9bf9af-77c6-4a5a-b007-e7532196889e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1684e8-b33f-4fb0-a81b-b9e651eda794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19458004-4e68-4fa5-a9be-4a5bee72ddf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0945d1a-b4f3-494b-b950-4d1edfda1a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bbf5a9-a2ed-4233-9b2a-8c4af8cabac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd15be2-f342-476c-af66-784c713b3743",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c3565-6542-4188-a5b1-1eb9d05680e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994e8384-7fae-40fb-96df-25a0aad2f13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4467308-6fd2-4371-a613-04b0de28d904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6e64a5-d5ef-4ff6-b9d0-b8331555692a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9128002f-ca9d-4186-a2c9-869585b3743d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b5acd-277a-4c47-bd42-2ec84d19e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3813d18c-ee09-480e-a8a3-3920015f3255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6420e6ab-871b-4482-b00a-fd2990a6b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1545a8e-4514-4af9-b43a-88cd080ef6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4154df-2660-4fdf-9b06-9327ee9b7714",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821170e5-174f-4c7a-8d64-f80f719f503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae15064-3b0a-4240-9c4f-54c0efb0608f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cec217-7bdc-437b-981a-c2e82d0b7407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "205c9019-acbb-4e91-abde-b73d884c3773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3ec3be-ba6a-4a93-a2bf-b6a348b5d4b4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f9855a-b520-464c-bbf5-b90fd624a740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc7efa2-8cae-4cab-8f1c-794382e298b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfce5ecf-b90d-48ab-b2b5-c9f58871726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4758bee-bdc1-426e-8dba-8b74d04445fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a04415d-3064-438e-ac8c-15d8cfbda6aa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b39c2c2-4785-4f9c-a42a-bef45a151ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36deab29-e4e9-4597-9e15-478886e913c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc3db65-ae0e-4d4d-8fdf-8527f44459c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e961e0f-24e2-4c6c-b83c-876e4ca89518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb11fe02-612e-4c7e-bcef-f981738a1dd8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c138ac5-f683-4eda-a203-ad39f8df3ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafeb083-e614-4167-ba1e-29968362d529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a8f14a-34f5-4e28-a45d-9c0d4286f760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5059ebb6-32b6-446a-92b5-3c91102d236a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e271404-b761-4056-860f-5df97ad96d6a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965ec8a0-bd87-42be-b106-6d349bcf6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a9c82d-f47d-4521-b42a-d8805af0c37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7118c6-ed54-4618-beb7-498db497f8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cab1c1-7b39-45cf-ac39-0bb2a257b3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ffe984-8df2-400d-afa8-d148d926a87b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76de999c-91fd-4777-9374-82b2347d922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8a8295-0600-4967-9dff-8500693b9c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca31a654-fae2-4ef2-b6e3-05a081c86b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "747826f4-95c1-479b-ba6e-f741c030d288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a221fd73-71c1-4fcd-a491-8934e2fa8bfa",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a378a86-c628-4985-992c-b42b0ead5dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3ea22e-81f4-4cca-8c11-a0d95635e32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95290104-4330-4ca5-94c0-6452b97eed41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3de9492-32fb-4981-bfc1-f7026b36e0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6dafea-f048-4f86-a05e-342187c7add1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629b6127-c1f0-40f6-82f8-6955a909344e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cddd1f-1109-4ee4-9e1b-611140df8488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7968ae-2fde-42a4-941a-7bcad146cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd48a56b-e23d-40fe-9565-b3a1446fc50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38d0ff1-966e-4dca-b763-aa8f98ef891b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5489f5a9-b245-4f4b-9929-414a7ebfc40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e4e307-32c4-43d0-9698-d1eb875781d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2465fbe4-ddea-4562-8612-ccc0d44b7161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cba3fd2b-67f8-4e2f-9580-5711dd4935ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bd61d4-abcf-4f1b-9246-7862d0666049",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c09b47-873c-426b-9960-0485b78cd817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a19b5d3-1ea3-43c1-86b8-28979a789d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1544e4f-67b8-4ce1-bd39-3c46fb1b548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8faa7b-37d4-4f71-84bc-c6acf34f8bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddc982b-455f-4893-a82b-9e046ffe2e1c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bce7e14-3e84-470e-b7ff-8d7c73ffc9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca512e35-26cd-4809-b23d-0d20c2f296a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b042960b-5678-4f5c-b4ac-9b6d465bf8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e71fc7b4-2d45-4f13-be88-ebeecfaf3162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ead8cb-7bc4-4fa1-8c01-ed52982b0c84",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70be189-4d56-476e-b48e-9dcc1897b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd90cdb-b1ca-4b66-967a-e5627197a8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7fd48f-8c9c-45b6-992f-44a383d5b516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9f37c0-83cd-4243-9226-a0b1532a0d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead53971-3670-4e86-a992-d4822b2268ce",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c3ad2d-80b4-4102-b8c0-1a0cb292139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa77c998-16b9-4e50-9a15-5d1ae3048509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68593a81-a011-441e-8068-80a6de804200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1134bf-1575-49f1-b670-c2095895b528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf5863b-5d0c-4af8-8244-0ae8ef33735a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b224b9fe-c176-428d-9236-32fc80c71e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0b7b2a-3f51-497c-82f8-8c5aa8fb158d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0460b0b-3446-42a8-aab3-33932735508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18b3851-089a-4eb4-9f04-e6ed1fe02336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fabdb3-8d80-4000-9598-fd68dd809b88",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a2f51-9886-411c-addb-78914aef3a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7220a2ef-5cd9-4bcd-b48e-c3ba3366bb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09dbb0f-83d6-45ce-91f4-c6535f5519a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42150569-06af-452c-9d66-2034beb11b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b76441-c8a5-4a6f-ba21-199b645aa366",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ab158d-2e8c-4ad5-be47-a7cc2cde1071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fa6291-1b5d-4060-9215-ce491a7396f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fbeb94-8dbb-46b9-88bd-7281d5cdbc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d24a3db4-46d1-47e1-89fd-bff920cdf57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe19e40d-23fe-421a-8b95-06d805a20328",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91ca790-887f-4dc0-b4cf-74cecde45836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a464c122-d0a1-4e61-8178-9c2b4b79fb87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83918de6-2bbc-4dfe-bb28-681f70e8ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1da78e7d-de55-4fca-a279-9f079d379aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5aaa4b3-0887-4c23-b4ec-23923b0b0a54",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d98138-2c27-48d9-8dfd-6bac7e1c40ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65119d6b-09ee-4c86-83da-97a5f969bbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7867616-81dc-4112-957e-0d4ac4399810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eee19ae6-c505-4ecb-b1cd-7a4232f31770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1aac9b-17c8-4505-b241-998eedf9ed2b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4903ad8-547a-44e8-a7cf-adfaae126e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e8f662-b782-4e3d-b800-e37bb04ac3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07b872e-d164-422a-85e8-60030cd81d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4c5ebe-f801-4192-8868-94d4bab381eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04802bc4-4fc8-4e42-ada5-200bbeb386d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a2ed05-b5f0-4dea-bf2c-415fb54f3730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ec5b98-2b6c-4d78-8226-a3c1e65d1036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528c0c4e-4bfe-4597-8a20-07bbc87b1b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "38a11f36-362b-4c05-8bf7-7d38e509ec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefec942-30fd-4d6b-8dbc-c2bde6071d64",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d562d64f-9384-421e-a8fe-24d14f0df828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62808c1e-4932-4274-b1c0-6d3ccd9a2e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd3b9e6-1714-454e-bd69-2577581bcef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3306c30a-0612-4e41-9386-82aa655ef430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1e6dc4-497e-48e6-8714-774f1a05783c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe5fb62-d4b2-4540-9d72-a59afd911dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a7a44bf-c584-4b47-8237-4289e45315e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74851624-9782-4c58-9c1c-4fabb801f891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a197c9a9-4655-4e13-87ad-ce110b36e844"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5054acea-cc38-46c8-9a9a-85f6c6fcb8c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e1c2ee2-f7a8-4f64-8be9-797958dd1a73",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061826c5-e25d-438f-95ac-724567151657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "857001d0-bbb1-4220-b95d-71ca3613724b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f813d5e-5d15-4b69-b28d-8a174118f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9735091b-6723-4945-8e8c-027917049e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cbfe87-26f5-4b45-9c98-686e2aded759",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61bf5a5-d849-4052-b839-d6094ac57f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5377fa71-d2a4-4018-80cd-336196989ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0baa0f-7ac9-4525-804b-d289e2a78d0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09feb22f-074d-439e-9b0d-57596c4cac51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c56372-0878-4535-8a5d-f430e818cb36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6efddd8-f54e-42b0-8bdc-43e05d3e1805"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a12d36ad-e41c-4749-acca-51c459e587e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2f51a07-ee7c-448d-910c-1be38e692d25"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5bb31f6-ac36-4acb-8a17-ba1d4e660c83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d099aae7-3421-422d-b1c3-9d74a72dfac8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d0d7dd1-5c66-4958-afeb-b1580ccc430d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68f87e14-1b8c-4706-8879-a2ef6ab2dbb9"
                }
              }
            ]
          },
          {
            "id": "2b653fa7-b87c-4e3b-b16e-4c339f85c4da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "418b2046-aa16-4381-b98b-99064267aae0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fe18b31-860e-46ed-ac23-afaf2656769d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6aa83fb-5d56-495b-a592-e62c8b67419e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08714c6e-ead8-47ed-be44-656985c8534f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97cfc58c-beb9-479f-8dae-dc76868dc213"
                    }
                  }
                ]
              },
              {
                "id": "36b59a12-b842-4203-9b68-39fd54f8cc44",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "535d0989-6a95-4a0a-8f42-9b34253ed061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "310bd27d-995d-4934-b353-c971e57abcbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d58458ff-686a-49de-9300-af4f40f423eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "141dc500-d1a1-43dc-9687-a665b0edd6b3"
                    }
                  }
                ]
              },
              {
                "id": "71c354c0-a3de-4e3d-9293-956f4a57b49e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58586536-51a4-4405-898d-dd73dca7be8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f8cf55c-71c6-4d3d-9751-284ec254ee39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5202259-62b3-4678-a80d-b715f316f089",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdd6bd6f-a1b7-49c5-958f-dc0fcccdd901"
                    }
                  }
                ]
              },
              {
                "id": "f15e5bd4-5b74-496a-8f82-d3334eae0530",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95798bae-18b7-466e-ae78-5d839e2d3560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32ee55ab-2645-498f-882f-c43dcf2e150d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ddb8aa7-f43d-4f35-8e80-c8dcecc358a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ae5c07cc-dac3-4633-a2cb-06ac17bef2b8"
                    }
                  }
                ]
              },
              {
                "id": "b16e450c-a538-45a8-8c61-0d7d2b808fea",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9718a1db-5104-4b92-be53-064d39df194f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "381ee744-65e5-4564-98c6-8f0b095ea3c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0730c66e-9e30-4207-8e9d-3ac2395350a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d4d773ba-dd80-49bc-86b1-de30947285ab"
                    }
                  }
                ]
              },
              {
                "id": "1aee52aa-ab63-41ed-96be-4bcd7ca943d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c41c5a84-a372-4ef9-84ad-48ea494418d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdd16389-6a9f-4087-98f5-0846e51b13fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b68de84-2040-4d34-9077-cbe8f95b790b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "02807a10-9671-4278-be45-98a69c9ad0f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0eaa992-28e8-42de-96cd-1a05d0d052fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d626ba3-82ec-4cea-96a8-5e1dfd997108"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eea52047-d6fa-4eb2-adce-857ef04c4534",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b39703a4-3021-4921-a62e-d554c9f6692c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0a471b1-7bbc-4d17-a297-b520639d63fe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "08713d0c-67b5-4e48-acfb-9cc2e1921aed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5337f8f6-fad7-47c6-b132-05e912e533c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3b6666a-e20a-4056-a89a-13429cacae5d"
            }
          }
        ]
      },
      {
        "id": "22ea3e02-b99a-4a4b-b224-14f0826edb1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "39ade130-7ac1-4de4-bae5-7e2add558fea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b04f299-e723-4477-b6f1-c0857a412e42",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89685020-6c55-4844-bd65-92f51a39cfcd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add120a5-1424-448c-bde0-ec34c089c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e28485-dba5-4a8c-9170-fc5b3dfca693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a743c25-2ace-4960-a09e-627dff7e18a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e15f6eb-3aeb-4d41-a0fe-95e3b72e661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fa5082-9701-4464-a5f2-4069d9d069bd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb54359-fffb-4202-9585-fd25f5924135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880c6fb0-f9b0-4f45-8011-f7741fdea74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7adcb14-298f-48e4-87f5-73cd852ff67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "850f4123-0a64-44d4-8a8c-56d7e58ec11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a84403a-9fd8-4b6c-a02c-8cab450d6f1d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7895e3-c3f1-417d-a5b9-9e4587f6255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97e27f3-0e4f-4cc2-bac8-85ae28e3f7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f779464f-6567-4950-b17f-6bef373e47b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d759def4-459c-4a3e-819d-fdaa99ddf7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6b4f6e-4663-4ffb-8901-5a19a1602253",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e5b6ca-b292-47f8-95a0-67a7f0daa425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba994e88-03a0-49d2-b810-cdb553c19e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ed3541-5aa3-4024-8772-fc4d466eefaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e3f1b4-4c5d-491b-a42d-866316733024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31832719-419d-405c-a345-f687fd004116",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498a316c-89fc-4bde-9a82-a99db138f37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a21f137-7770-4f30-a252-901a0e2cac9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2cc568-9136-4c6b-b6fe-db6c8c3d1315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce2f8ab-619f-4016-8cd5-37b62762071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fa37be-5f5e-4d13-9072-717a0d261516",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602ebef3-05de-49f9-9775-6c80ec039d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6d7f61-fa8a-46d8-ba7e-f39a0d551205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a0b423-a036-4774-90fb-9628c9d5c1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbfa869-4112-456a-906a-d5958ae96f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc31ae14-eb3d-447b-b61a-8af6ffb9cd21",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c66af2-be27-45cc-82dd-1d55f99a272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d079e0f4-2abc-49c9-8548-d43297d4c5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95916cb-ed0c-4228-afd4-fda69a922a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff66a01-fc09-455a-9e9f-798bba0e665f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78872e8a-ceeb-4673-b0d4-129ef63bc569",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7b0613-fade-4819-b315-3d2496b96e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6ba0a4-b7f4-43d1-b7b1-aab2a4db42f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb1deb4-cf51-44b2-a183-2b3faa211f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59463036-fc45-46ac-ad99-8da3c977e697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16299bc-9c2d-480c-b37e-89be9339dcd6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36558802-c40f-40cf-bdd1-56fce6488da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed105e1c-f8c4-46e1-98f3-84f43c1122aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b7a67-111d-4de2-a754-be0215c377f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d036126-a240-4676-b7e5-ba3de5885e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae078762-07c0-4548-9dd2-2e2fcc8ebae1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b83d10-b7c2-4ed6-81d2-58f4c974b9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dded406-d4f8-41ba-a488-7b88d0ae382d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c454b3-ca6e-4cd5-8fbe-5efcd91def21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed2d7ef-0b1e-4dcf-9813-332349091808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a0ca8-3087-452e-80a9-df1aff50fa76",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cffb47e-41d6-4ce2-94f4-be65f6d574f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58484ae-cd54-44a2-ad64-03b67a0859af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c97c370-d7bd-44c3-91fd-11365853b5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ece00ca9-3395-49f7-9ef2-ffabb759765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fffdf6-1cf8-4a22-ba92-9e83952875ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd1e824-13d1-47a6-8706-e85747a73226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8358f59-ad9a-4a60-b2e0-f4de743cb836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2907e45f-4dad-453f-a43e-60faa0b5829a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "687ba8d8-30d9-4c37-a073-3b355493b151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6467129-7d3e-4f2a-967f-ab439922b736",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf58873-5c09-4a4c-9265-017eb01d26f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba148be8-5a60-4cb9-81ae-9ce2a77166a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31bb648-6cf7-4eba-8534-ea282e2adbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32efdea-3118-4fbd-94d8-5084da71880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c7b658-7d8d-4f4a-be78-b0abdb5f7d42",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1627ea68-bdcf-4956-bc7b-490ff0b488d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ef1336-bd40-4f12-977e-cb4e77cb494a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c11e61-b1fa-4615-9900-e9d937b822f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8d1126-be67-49ab-8512-1a138a026a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9901ceda-440d-4dc5-911c-c6caaa28f7b1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7188d2a1-38d9-4e6c-b00b-941a3373196d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da12dd1-56e3-4db0-b5fb-9d7cb75c0619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d312fc58-1b56-4b9d-a71c-fdeefb52156c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b84ab4e-b4cc-47ac-aa94-0562af300385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b6867f-983b-4bae-88ce-be18ede3fb45",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507828ad-5a10-45ef-b927-47b117bc82b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d07bf2-40a6-4dfe-bdd1-d7ad68c71efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca64b923-6e78-4088-a472-2853141317a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5cc8c2-ba13-4c13-9eb6-37f5b0ca6354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0b55cf-3bda-4692-8363-9cfdd4b5ecc1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abeb91bc-cb39-43ff-8c00-7fbbf5d4883a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8f819b-1f3c-414d-b1f3-d762e3900247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fa224a-5878-4e70-8570-594e9394aeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34e45c2-50b5-4eaf-bd1e-cbd78e2168da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8041d08-d223-4b3b-83c6-9a1eb10a3719",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4399b6f1-06ec-42ed-a8ed-5df2deea1c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db098d23-9d00-402a-b92f-12b47b5c0519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53d226b-3f16-41dd-9e63-9a16ce587791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cf9ff7-0bf5-4065-a7be-d130c9425c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599f5363-ef89-4155-8ca5-43329232de0d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51b9e36-4a5b-475b-b967-816d4c3f024c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d186a329-6439-4c00-9b2a-3d3da5212a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fec6238-8e12-4f1c-b54a-6d03dc5a49f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76b7b8a-406e-4692-918e-77b2ebcf1d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76309585-0f52-4959-9b69-23de893da0cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f911040d-8644-4102-a781-c3985c45b315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a368765d-283d-4fd5-a71d-7d0069148f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e14fbf3-8a7b-476a-a65c-9173a3044c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b96e038-fdfb-4e17-add6-1708649efb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01b61fd-256f-4ca7-89e2-5c47f399bf4f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48400c49-99c7-46fd-b3e6-73514dc53254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a29eefb-9bd4-450c-a191-408c1a1870f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb5a571-c198-4bd3-9cdf-20978536935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de413f8-e2d5-4331-b332-af047534667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37efe86-5aeb-468e-8a81-55dbdb1535fc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd7665a-dc18-414f-8087-eed63c9cb783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9800f620-411b-4f6a-bba9-40fe05c2b051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d74fa3e-c518-4e58-95c8-1cc07596b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f810f400-192a-44ab-9426-400b2f6dd8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5d62d8-9ad5-48e5-bc7a-ac60940968bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f79e21-046d-41a4-bba3-336e9d003662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d1c40e-e493-4273-b1b6-1595ccad5eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983272a9-3550-440e-aca4-c959d7f0148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbe6b56-4622-4cf7-87ef-e0d051ddc48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d002706-50b7-47af-98da-d7132ef83c26",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb35e45c-2ef7-4c61-8a0c-6669703f246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6820f5c9-3a4f-4240-8b66-146f2d336331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea5aac3-0fdb-4a10-be24-53efdbd94d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d991804b-e92e-4f96-8b3c-811ec41b56af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f682bc-f51e-47e7-9c79-3f46d2cb5ec7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a8ef27-3e04-4f4c-b6bd-a9cfbcccf796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4053fcba-f86a-4ca6-9629-d7124f4394a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0dcbd7-155c-4eb2-b31a-c0e17c55d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02cc42a0-cff0-4c6b-80d6-39e6629ff734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf69f61-421d-4ab6-bf3a-625ea4031f5e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e5ea46-fe32-4506-89fd-f2303b13a6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81633f8e-6e16-4b30-a428-4c32352a3a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07180426-1cf3-4004-a544-2dd639e3eb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bcb464-049e-4a30-836d-31697abff50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4085915f-424b-4eb5-95a5-78996235e907",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25054a2-accc-4927-bd77-a8052b7102d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aafd8e7-a657-4342-8afb-10a1c0b193f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2297cdba-9833-4d53-8fc7-46213b9284ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a38335-93d6-47ea-b842-01d50dfe52c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d23138-b5da-4b61-a33b-49e78bbd56f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4418579e-b821-473a-8479-c77354f166b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285597a1-30dd-4b0d-a364-4a03bfa1fff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5d21eb-f9fd-4970-957b-be2f8ef036df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b797cf1-c334-4f1e-8d5b-694cc344b7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964ae1d3-6010-4a58-9215-f542272a9d52",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c6a800-e791-4645-90d0-c636595be7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4738feed-0dcc-4496-99fb-8b8c2f1a5362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ce220-506b-4010-810b-724abca85193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3541be2b-c763-4a22-bd01-40558f49719c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4ee712-9945-40b6-aa7d-1e33fe848460",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80b136b-b0ef-401d-b87f-c2fc4d24a68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec36435-9a05-4eb8-a84a-35dabf8e22a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c437191f-f65b-4598-9ff6-6c81ef6f05a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d05a2f-f537-454c-a1f9-37c959611c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c2c75f-2841-4b3c-b782-7d2d88f41f10",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9267f6e-a43e-434b-b0bc-cecb0be1d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a20dac4-d852-4f14-a769-9ac070fdeca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdfa32f-c455-4501-b32f-bbd31c3a1e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc36a156-3381-4711-81d3-01f213387700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4756de03-f255-41f2-abc8-522d3722d67e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64739a93-5f38-44be-93f5-445e51b3abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed7e7a2-c0f4-457f-a773-d8e1d86d860d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f2bbac-dbca-4881-ad62-05567e58fec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7e4980-a03d-4fba-958b-5277ddd188b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d4dc994-bb23-428e-b3e0-988408441a08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55b553e3-35e1-44bf-9aa4-59fcaf0afd8d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d67cb4-788c-4f36-90d7-a172ed232223",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cee1eee3-c8d5-432e-9c31-ab83f53311f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db258a59-473d-4c5d-8f0a-ab7fda1815df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2284f65c-0010-4944-8958-0f49b9835088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574cf6b5-9a1b-4fce-8dd5-afc27bcc1b03",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cc908f-6031-4b4b-8945-66762a5f2850",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e313596e-0ba2-4df4-875b-167495f42170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1151f722-f819-454c-b27c-449c478a5bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8c73d89-5df2-4e3b-bc02-5c8b7a43dfe1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3555c4b-0b5b-42e1-b6b7-156d3ad5bcc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4776bab8-7486-4948-b175-3817510daaf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83355b83-224b-4ce1-aaf8-b3a836c6b629",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdb1608a-74c6-41ae-8b1b-832990b3df21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1d5201a-f727-4941-9e68-1bd2e80fd3f7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab106b12-9e16-47da-895f-840e3f6617a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e95ff84a-e004-4a7d-a2e3-959591eb212f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e40b5312-4ade-435c-ac7d-82e3928d2c59"
            }
          }
        ]
      },
      {
        "id": "78f80542-41d2-4e8f-b200-f2dcd5fe5ad9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e554d342-ef0a-4678-b949-661349491324",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6e0de0b-55ac-4dd5-912a-74c559dabdf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1835ae4a-eb7c-40dc-a29c-91a03a38f202",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dcf0ce-f299-458e-8ad8-cb6527de5d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0bcd12-45fa-4698-807f-eb53186295be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d5546e-2eca-4b28-9c26-ffd5cbe100d1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6ee527-1c80-402c-916e-3077b50be540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138f66fa-ccb1-47a3-89e7-15baa569386c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711f8a71-3e10-421a-a988-959742c27d22",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aada03c-a709-4f97-9caf-8d83645e25b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cacbd312-7294-42a6-aa1d-0069424ca9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d5cd5e-bc4e-438f-a387-9467a801cfdc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3343ebb2-4632-4f71-bcba-d9b8abc60db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcd891f-da3b-4ec7-b814-4ca1d58b7877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dd4cbd-3325-4f5a-a85e-964065d494bc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e41faf5-0ca9-49b8-b87c-3f0ee8fe3d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b0a985-f758-403b-94ea-06fae68a44dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1d9c0f-ff58-45a5-8ada-e9bbeaf4d1e2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794b1551-d954-4575-9821-10ea07eec1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb0a93b-e579-4803-8efb-813bf2a3321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fc7aa8-06a7-4b31-9e8f-688bff248913",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7ca36d-57d9-4ab2-b005-406d41b53ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30819064-0a46-4e38-8192-2112d032c691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a847a1c7-ac8a-498c-88a6-4b4998db5360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb44fdc-a5c9-48ff-9ed6-eecff240e9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1fbd7c-a1b9-48cd-84f9-d2774fe1a68f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ee1d0b-ae86-4fad-8679-39f47c651523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4806b18-147b-477b-856d-e25b3033cfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b80cb-4343-40f6-8d59-44c68e98d431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa673b-8683-4e96-83d9-e0856a5b661a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b71401-c20d-4175-9ae8-9da2a9f3f0e2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1b39fb-7ece-4fcb-b2da-6e026586a0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71f69cc-a3ee-487f-a29e-a305193fb9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06db3e0c-4083-47d7-a3f9-2041d97c0033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e140d6a-11be-4404-86b1-57cea4696835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97891b40-9230-463e-828a-29b1786f0441",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55486bd7-5f2a-4e30-abb3-168dbf999f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8cd0a3-cf9f-4f5b-af09-a1f04eeaae2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dade624-4e36-4fe4-8506-a7c2a0c83376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cff97c1-d12b-46b6-b492-1c9eaec39b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798c5811-e321-4b31-8a23-e88299d46a89",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f4cc20-9b01-4e5e-a880-3262fbce5271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e1e657-6a21-486c-8202-e114b6f907e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1370c2-7158-4e54-9dcb-c13c979d1211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316864c5-d7f8-41a4-b917-4df810c729a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c34652-ff9c-4077-aa16-d404721878d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f910d90-8fb4-4b9d-8888-e054e2513aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841a713a-5b30-40a7-8f4d-73cebb8d633a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b557823-8b98-4dbb-b0d8-565a5a0af8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccde02a-e6e9-45dc-a202-365d8df90926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eed20fa-1a1a-43cf-baa7-ad68da25fd57",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610b3ec4-9df7-4dc9-9a8c-3d90f6296280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4bfc22-b1f3-459b-bf85-f4a4ad99fe99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceca4fe-78cf-4f13-a6a0-ebbff4aea643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c055bc51-341b-4731-b167-7ffb6980973b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4db090-f3d2-4412-9290-ff1fb623bf87",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995db49c-b2bf-4d5d-9af4-68f7068187de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a76b598-26d3-4bfd-8367-a1c6710bce95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ac7342-9ca5-4da4-bb59-1b42690be6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5081827a-93f0-4756-82da-b4325aac2cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaaeb27-2f43-4372-adb0-abe0726d6d62",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ea55bd-4916-48f1-b980-c8a38312078f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c82561d-75d3-4264-9849-302c8a59caae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038f0007-f59c-47e1-bb47-6e6b00c4a783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f42111-cd2e-4c19-80d0-156a0c194747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da263c2-6263-42b4-91cd-44b645880823",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c32c63d-79c4-4386-9b6c-27af819c0f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73260b2b-0784-4deb-bcee-9652d173e690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1156bc34-31fb-4160-b3c5-885e686e4c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e6cacb-9836-4c69-a0a0-3a2585b04b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa2f47b-270c-43c8-b1b7-d23d9a651382",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ea8197-cd67-42ed-8af9-77e1e3149eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6f5908-b8a5-4d77-989d-eae2811198f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cd4721-84c8-4c70-a9c1-06a899073b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ed2b2b-f750-42cc-9ad1-d21abc443554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d0a946-7e90-4bcd-b781-fde7020e465a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70c2c14-090b-4823-bbf1-8d3d626576a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4274b58b-6f14-4e19-b010-b1f700f59481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3835f999-fd5d-47f9-a883-2c7a5c8fbb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b55dfd-7887-43e5-b0fd-3f958322cbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b6e61c-c3be-4472-885c-507c6c8d5b67",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548c8655-4886-451f-9604-b0c3c91c6421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0482dd75-df5c-4008-87d0-ddd7f365fa88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5630aa2-960c-4ad3-a8e4-cb20d902619e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24851427-ba44-4d69-8333-2f3c5e5ed146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b30b982-2769-41af-b5e5-21197464c548",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fbb171-0af1-44fb-8a11-bff628e798d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd96e97-4d54-4e45-a0a7-f96ce460712c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067e07b0-2a7d-4816-a037-d91a0e186fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e58698-b7bb-4dc3-8b6b-40a4216241ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1863d35f-4a8a-4862-aa6d-715ff408f0ff",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6136d4-0580-4017-ba46-3c53d85e5283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253862a3-eea5-4e29-bdbf-714e27a7ff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0416a0b4-1bb4-48e8-a209-de480ad0d153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af61e26a-860f-4ad2-bb9b-45eece6ad5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75c9303-7438-4413-adae-2473daaa6fa5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fccdab-39cb-44c5-bea2-7298e6e74148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853bb95d-8f1b-44cb-b2ae-6e367936564b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42247c-3d90-4023-b6a1-e31a47d774be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2bb438-dbab-4d1a-85c0-3ba75f80dc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4da6ac6-a289-404c-9517-873a8e3ff01c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99b9242-3dcc-46aa-aa7a-bc83a5b2f4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba04a37-d81f-4573-9343-9d80fc52fd61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e12575-fd54-4fd6-904d-6548c5db0fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef916b88-52c5-42b7-a44c-cb6606be6423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef190f16-53a4-4b99-a352-3606aa96a5d1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c80ab5-916a-4f2d-8a04-2f2c8d8e9e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1541fb5-845f-4895-b87d-ff3a4e567825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a7fc4-c397-4afb-9370-0822c85a1632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdc298f-438d-4596-8629-8f01e3373fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34429e60-3560-4a9c-a944-f0cb3e237844",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a34bd6-9652-4de3-98b4-c3135f52897c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0d41e0-5ad9-499a-9705-7355aabe9e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbce517-9bc6-459d-9a0f-e9c4ae2c7561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc37f8b5-30df-4fa5-a6c0-79a6ff056c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466f5062-b7ec-4d30-88a8-1908bca4ca2c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e0c83-4249-43a8-ad04-de2a570c85bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12b45cc-fbaf-4746-9052-1722413b4575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6ac1e3-37d7-4571-a0e9-0fc40ef3c168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cc8bde-0799-4eea-a002-a28921f6e057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7505fb0-2b3a-4b85-8e92-eeb9d0e2786c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a584db18-8b6a-4be3-b9b2-0e383c384c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497d0ead-6f8f-441c-b6bc-55782660be12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf56c591-a604-4f0c-9b6c-5c3bfa219d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7640356b-e853-4e1c-a611-0ee0d3dd1007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962f1a0d-2db7-4104-afad-69650612ddd7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a24e01-b0c6-4a69-b719-2833694eecc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f1de7e-6aa1-4462-b40d-deb437f5b1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558f66a4-4adb-4e2f-8480-dc5c99b35f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6db3cc-753b-4d8c-afac-1082f9a08180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee338f58-c5c0-4409-a619-b1f338f98183",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14ba2cf-bfd3-4f97-bc16-4aa3d05d276f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a30878ca-044c-43ed-9031-ab22b2cd7cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b842a5-aaee-474a-ae89-d14301aaf477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f174093c-5246-4535-90e0-464ee2c6fa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b6a771-93fa-4c04-ab9d-da66e73096c5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e15fc24-7703-41e1-8494-b1bfa379518d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a49250e-c3f1-4eea-bc19-305a18df8802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d65206b-97cf-4d71-9a9d-8b2309812d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9089ec88-294c-4ce3-9f66-6a415b9a1333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24ace57-3def-467e-8c2b-4d5e14702a8b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08af83df-a774-4763-a2da-44f50da09acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9379e8-0ae6-4ea3-969d-296677ab9e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a47811-b4b0-4458-99a6-d5655dacdb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645023eb-6806-422e-8540-cbb7da4224d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94083e3a-2857-4671-bf3c-b8f1d5f6a5bf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f1710-ea98-4bc4-8b5f-b7345df6cb0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb399cd0-31e5-4077-806f-e015f144cceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b21268-23d4-4dc4-91c5-06ef01f13166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411de340-0943-4207-9105-7f6dbb9dc428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7d9efe-9e72-4af4-b26c-18da9fc907c0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6e6f0a-f7e7-41c3-8f7f-9d8629ebb73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48500c21-84ea-43d8-a244-caec13af877c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c69726-fff0-42ba-b27d-e003437bda67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ef0e18-d713-4185-96b3-cf62336f958d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a1f8c2-025a-4a96-a93e-3f11a0fe1d4d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfc7edd-9d3d-44d8-bdfe-96820c2e7a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbbc971-84d2-4355-94f0-84f83925d718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c64f0-9fe5-44b9-ad6d-72c99dd5d26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e9bef0-e0de-4913-b655-c3c203414a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dccd26-b177-4157-b210-2af29214b31b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f028fc9a-afb5-4fb8-8f34-9d0b8758bb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e7bb72-5915-4cf4-9aaa-00fe1ab2e18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc5291c-4b6b-45a2-ad4e-fe3aa0af5d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec1c2b8-9d28-4752-bc27-8cec392a7229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69643e22-0612-4e9f-a0cf-d5c3b1086acf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0a945b-575f-47d4-96fa-1a87af5655fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c1aeb5-3af0-422a-b7a7-d645a436a007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da00b68a-a51c-44d6-b0ce-c183ab5bdbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9711b27f-9ecf-49d3-852c-e4a9ad93972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85995566-2c65-43ae-99d7-4c59a92b677c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98a0d02-72be-4351-a9de-709b7732d466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53cbffc-870d-4f11-ae13-8150f985fe6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcfc1c7-a89c-4817-a9c0-9a5fb8acfb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ef3d8b-8f0a-48b6-9b66-e9185e7474d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c945f4cc-0f9a-4f1f-82ab-1680e8dedee4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a67ad8a-23d3-4d0f-bc03-796dba897667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f23ffc-1376-4772-87a2-25551fcf67e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510a8f64-64de-4026-adea-8fa1ee8049ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f640263d-d534-474f-b0e8-85ffb8adc40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366c452c-0d8e-47b9-a9be-cf7b6b3436cc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbb7147-eb45-4173-a2da-04c76f5a6fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c28982f-d1c3-402f-ac68-a8d0f427e038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415cc11b-1c88-4b3d-82ca-7580ab97fe1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b238e8c6-4b60-475a-bb12-5edbbc8b63f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38610898-b023-42e7-b350-0a5fe96ef76c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80686152-3767-4c30-8502-47fd46ffe602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738ae6ba-fbda-43b3-869c-f76419450fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7316c9-b246-480d-ae0d-f54dc0964bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906e99cf-5586-44fa-9b44-0e35b099d80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705a7ce5-8b8e-41ce-a78a-c6ca8552ff38",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be50ef5d-a810-4b37-8687-2edf7106126e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb1d94d-9001-4ebb-8c54-f56f39babdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920348ed-75ae-41d9-bd90-426a4ab96af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ed47b6-ca9c-4e6c-89bc-1904176da43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293282c8-8df1-485e-8ff5-6579149457f0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc85bb6-e147-4430-8587-63c8e2e2e55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b07e87-114c-4853-8fa1-dbe937ff78ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c384b75-2d32-4c3e-8230-b42c075e54d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e086bd-773a-42dd-b012-aebd077cc6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a680e27-2f0a-44c4-b3a5-446afa545a2d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be55d9a2-e399-4a5b-9ae8-9d9a80a542b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e269d09c-4a76-4549-b0b6-2216fbb7c7aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6097beb1-b2e3-4e40-9bbc-ec531411cad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1113e8-e0af-4a14-9224-38afa90e031f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab078e9-009d-4c17-983c-407203c93500",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b706d6-1433-45d6-853e-5b0d60ebf603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c7ded4-430d-4644-b857-62cd215f6790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b399f3-78a0-4db1-a4e3-6c9488f8af72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af262560-fee6-4b17-97a7-8aa13b309a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ffd0ae-2ecc-4af4-a850-903107efa396",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ba3bd4-0878-4a68-8db0-a9ea2ffb081a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5338617-8df8-4643-b325-3c2850777d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6d67c9-b1af-44d2-839a-5d274be7c1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88df2d7-fc71-47f3-a1ca-b04d911d6f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c999d449-b72e-4b28-a9c8-b89ff017d8c3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8328be79-1cfe-496d-906d-d2199b19d7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46eddc2d-0ef0-41f1-b793-17b19a5d6719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b9c33a-03ff-4eb4-8d9e-8c97e692370a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf2f3e6-a09a-4634-97a1-4bfc1613a2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30705b1-5f8e-4e84-b0f2-d2b898067557",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce86a18d-b67b-48ec-a935-827ccc3a0540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7d43c6-38a9-4773-af05-9cff228f5b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d455cc6d-9532-4920-9ed9-c4d84f2a9433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293b14b6-7843-4229-9bc8-3be5d942f332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75674d5d-a186-403d-8191-bfa2a2a287b7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93736796-7d68-4c2f-9665-cedef4f61bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df650a4f-8c57-4fb0-8174-44b277388fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a6d9ab-d4d8-44c5-b052-90b328afc2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9d1b31-3f72-4bc3-b20f-8083e675411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc735ed3-87dc-4b22-8f27-35c762145d65",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc03335-75d4-4afc-9462-3b2c5e5df83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b38b7d-9446-48a3-8fd6-0db4f73dc1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67bfc9d-a73f-47c3-9852-96c3b14a1ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cff31b1-542a-4baa-bf8b-cb9acb5a8ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e3280d-b2e8-46dc-9b0c-76b4ed7a2e5f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc6c28f-51a7-4058-9772-d00c5ebc654d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f4cd41-1b8d-4365-80cd-7e8bff478ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35da0d2-5d5f-4363-ba9b-67378698be61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b74713-c7ee-4aff-90b1-5941bad28376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46135314-7b77-4dcf-af25-21b01c42cccc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccfe0f7-dd26-4e25-bf72-6ce69a6eb5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dd6948-e8e6-4ad2-b841-b319a9becc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4d20e0-dbd9-448e-bf27-d0c3cb03ee05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122d535b-048c-43cf-920c-2494f277741e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff352ff-273f-48a4-acfd-405bcce962a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecf76b6-4754-49bc-b579-45e2bb22565a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a98b73a-e719-4371-9cc8-f08d36196c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb1099e-a0c7-45f9-86e9-a2f7080ce831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8f7ba8-f0e3-47d9-b649-f7d2ba87e2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe6f875-77e5-4edd-9b52-dff5d7c089fc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad20a33-bb79-46b5-92b4-ba8c1153b55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7b42a0-a7ec-4db4-83be-2540620c2f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b30e81-5e5f-4c10-a711-c32a042dfcd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9653b3a0-57ee-4e9e-ac51-cf2c96147e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2af806-7ba8-46c7-a026-25ae5078012f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62217fbf-6f4e-44a0-abee-e46a604f747a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade689c7-d50b-4c1e-bb72-880dce12f22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c511df-61f5-49a2-86a4-1fa4ea21cef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccb48b4-adc3-49d4-9dc1-917a13629a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f39955b-4c58-4397-a4ec-d683a6b44b36",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013a2b88-02f9-4cb6-872f-d748b74463e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3a84be-b8ea-4541-988f-3e7c006c0b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024f9d5d-5248-4c73-99cf-3e70c29cafbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4857508-93f4-4270-8743-bf0c842087b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12a67ae-4525-4ce0-b6dc-0eaca12e1ff0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9ae27b-b2af-4942-baea-ff8caa348f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffaab4b-7d6f-4f6c-9827-6f632b4c4ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3669dd18-ea70-4b14-96a9-66de5e105239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e01877-df68-4276-bd35-484b5604456e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6a54ca-2d4d-47c5-b44f-2b37d7fabf0a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5949c8-3335-49eb-8ef2-2cbfc31b5eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e662ca-2554-48ce-b255-ddd164afa504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d163efa0-a3ab-4b04-9b73-0810c0a87a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4efedd-28ee-471e-9f30-329aff4b6f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c27b3b-9aa6-4d9f-b9cb-bab5e59e2c20",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6603b8ca-18e2-4824-b6f8-87c2c72c9149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ac085a-f05f-4782-a810-0d9d00375d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb01ec2-207c-46ae-8c1c-d1d1e95ccb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74e7ba1-c37b-4586-8cfd-291149bedfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5ca4bd-2ce5-40af-b094-91a549783497",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8306566-77db-4ce8-9bd4-71cff5d04d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39c18e0-2bf8-4c86-865b-4041c1250b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ba9bfd-e4a8-4c97-978c-3b0c40a95fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "074a70fa-9d0a-41ef-b127-82f5706f830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bd2925-f0b2-4c65-a39b-e4e42e495ca6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4808bb95-aef1-4dac-a1eb-4f4d047f8876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00678a5a-6a88-4ed1-b286-ed9ae642e505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2702e80-ed63-4b77-8f27-504ebc66f299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f98180-7e32-4e15-9445-0ee49fc9057d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe64e659-fe24-4d01-83e1-478626668c12",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409cd573-d35d-4fcd-bc44-9d6adcef3a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23d2146-565f-4bae-8057-ffca2c84df5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da72940-0745-4266-af51-7edc7bb82651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a26c256-033d-4ce2-b4cb-1f67840dcd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16760aae-5dcd-40ca-81e0-4b3b7bd52190",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c1c232-b802-49f2-b67e-fd2a48b32252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4c0c95-b9ca-4fa7-8e65-00e6e2959368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d27c890-238d-4e3c-9d93-985831113a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6267b391-94fe-449f-b424-44a816144026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f09cca-fbfc-40cd-bfb8-37d0a8f11cae",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e764d7-94b3-4692-82ed-96956b025c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50910fb-292d-418d-8cd6-72a41b8fa939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b8294-96c9-4bef-8caf-960ba4eabd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3905a2a4-7dee-4259-b266-d6c729ae32f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6d428b-22c2-426e-972b-3fe2ed4cd9f0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab2d77c-f51d-471e-b1d3-1f2b26d705d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa4cc70-b6b7-4057-84c9-8b9d7d0a89f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a086d830-7440-4dc9-bd24-9e6497aae78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994abcc5-d629-4d7a-b787-ef1eba6bfdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080f3082-73f0-4aae-a648-f4398b7505d9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00451cfd-cee6-471b-a4f6-0a91f3137699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe57ac1a-80e4-4232-bd6c-3352799c9ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a07549-e6f3-4c97-8068-3aeb7021aebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001ee40c-794d-42cb-ac5a-ee54c1ab2a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02508a10-37f1-43a8-ad9e-fc185702ff53",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70b5c1b-70ec-4a00-bdfc-6924878b0034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7a99a3-897a-465e-8d6e-07efe3bfca19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ca6106-bdec-4b1a-b7a3-9b54cb4c7199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036dbfe2-c342-48e9-b877-88c41f556bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafa6d3c-5370-44bb-96e3-049dcaecdcfc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f32fdcd-966b-4923-a331-71350bfe8f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e514ce-43fa-4d7d-890f-353d85eec26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8624c67-a581-45df-bc3f-df7bc07bd6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2061aebd-706c-4d84-8dbd-b30bcd554f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ddf6c7-c5ad-4c4f-be63-55b337ea40b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30513585-436d-4101-acbb-bee5911cdea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0afb85-68b8-4030-9399-95a01f08785d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2081ddc7-1a59-4547-8282-730503384b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fb98fe-8e37-4a49-a055-61c9b962e8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e665ab-b49c-4fd2-ac9b-d2b52bc0dbde",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d5a106-cd69-4555-8607-fde051e2475f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ccda94-627b-4dbc-bc0a-de356b7b3642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e4750b-a53a-45f2-9afb-e4803e40c5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf48e12-2fbd-4a29-8503-f17bf36c7c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f14f1b2-a9d6-4854-8066-2cc3c99c734b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc34110-16a1-40df-8a0f-c2358d786bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64f0d280-2add-42a4-b6cf-97132ebbbc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4148705-6960-43e8-b192-a4920b050e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45873a3d-57b1-4fce-8abf-978bf5af2c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f16137-dfd5-480e-950f-49aa5ab0bbb6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b30e60-6766-40d8-8abd-9e8e502e0633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66ea0dd-27b7-4a69-8d4d-e643b24a3f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd7da50-40cf-41b9-9323-2bc0293a768b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5862e1f6-35f9-4098-bef8-2d7722fd15cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5430e2-eadd-4d71-8d1f-29424e029a5a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140276c4-f7db-435e-9990-888cc5b1e53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87034988-1007-42d0-834a-226a47033fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45516ca-22c6-498e-9fe3-e963aa8ce0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06638b23-7054-470b-a7a3-0d2761c0ad14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d13c69-3107-418e-b5e2-bf79fb13b6d8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a97f83-d73e-4af9-bb04-75c14210c310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48b9b76-e984-4513-96f2-489418c51ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3d7bdd-32dd-4f45-963f-817b83197076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6883f37b-7feb-4cc8-b51a-71c7a20406ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6dfce7-6a69-4118-af93-18fd20c9da9d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef31278-bdfe-4df5-ae4c-27712522ef4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039189ca-ace3-40b1-9a3a-e4bad5cdd33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0932a395-54d1-4e9c-ab56-a30d6547f047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bea505f-38f5-4c35-ad5f-1cdbc9859f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445c325-3d67-49a7-95b0-77641cc264c1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c99fc8a-f3b5-4bb5-8ef6-8852290bab3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b39249-4498-4aba-83f9-f4c9609d02f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c03e13-899b-4301-b4b0-c89890aecc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e9c8dc-b520-4ab2-bdd8-9ebc3f0ebd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c2ce69-ac06-48a7-8e87-069f107c1066",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f552eec8-3c46-45fa-80c0-ccde0d873708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102dce3a-42ca-4315-a98b-0aa18a967e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93da91d4-49ad-44ff-b7d3-280dcdd8fb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc564c52-6443-4f8e-b278-bd2be0d04050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e16788b-5db1-4c0a-961e-58956c822f06",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3a2ee2-261c-4b82-be32-1b81f8f46cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3290965f-846b-48eb-ae37-26901025bea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b94c8ae-00cd-414a-9785-bc8ef493129c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe636311-2be3-4e16-b45c-214dba40b270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa88cf5f-7b18-4d55-a381-ba15d04090b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b887cf-5ec7-4e39-8729-d2b179ef196c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7533afb4-6f31-4306-84e5-457d64b232fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c26f3d1-3dec-42db-99ff-6e22f7dfb2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7064b3f-8d43-45a9-8db1-a9534ecaa86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2c3d33-2861-4cb8-a7fe-a72c6a253b69",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3b4f9a-69f5-4ab4-b3fd-afcbab57fd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e652ffa-d438-4a49-b648-385cf55adf2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbbf9b6-cb0e-4a9a-b5e9-22cd49e23d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80db5bf5-808a-4e58-a0b1-515cef5ddb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895e343b-7250-43a0-8ec6-8ca83aa35cad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740e15bd-ee30-49d8-88ed-2e63a9d45209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69af54b1-b5be-4ca8-8e72-e9b2eaf08d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b7e0cf-8cd3-4ad2-8c48-1a97566d9cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2ea63b-dec7-4f80-a235-feb1c8c216a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5edc465-9e76-4c9d-a4f3-b2b1651c0bbd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832ebddf-ab56-4928-a3e1-0132b8a2c7ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c8287a-6c80-4b5f-b4c4-396df58d5afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a3c08c-e5fc-4919-b0c9-eea1efb33584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cecff65-7a9c-44d7-b980-58f933e9bd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb973884-edda-4035-8c59-6660816987da",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b022da5b-bfba-4e92-8c55-1e1bbfff2a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e1a3f0-57d9-4e2e-ba77-25920a5f93b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f08c1cb-185c-4b81-aa40-853871bad94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97efab29-6676-432e-b617-274d03c7bfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30276ae1-93a6-49ac-9da0-4567e02e5c9b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0e42e9-a797-438a-a04f-4b95e0d9f84d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508fd3eb-c32f-44b8-b150-5d6dbc351a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5023c426-20d3-4d53-9c41-295932d6222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0917834d-46d1-410a-8eed-c5648776c18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e48e11b-5c54-4ff1-b48b-400472e02d7c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f030016-64bc-4da4-aac0-559e36304870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459c9c97-2fc4-4ab8-b172-307d003a581b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9180dcfd-b925-4243-b5a8-e2791d1a1621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324ef58d-5ba2-4219-aa43-0a85ed6b8c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85a8ff6-357e-45fe-9af5-ac4d4691b621",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def19e58-c192-4dd0-8608-966b87864a5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2ad4d0-29b0-40e8-8c9f-942214d9ef8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddef6ad3-e26c-4016-a740-7b2bc48f6a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b281641-7b30-459d-8370-ef4a8b7b8b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fb360e-a9f8-45d2-99f9-b2a2c8243ea6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da4bca0-0907-4fdf-82b9-b46b95acd84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe53280a-5f3c-4414-bff5-7cc073945249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fbedd1-7bd9-4aaf-9d9b-81ef6ad1aa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a4ce7b-37aa-4daa-9074-135f39807237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220483aa-c980-42da-9c92-be094cf124a6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b7fd01-6f8c-4cd9-b8ea-228185422d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c8157d9-cb30-447b-a3ff-a7115953d64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4da4b99-c2db-45bb-8d84-376a9dd582fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad1ba0a-91e2-4d91-b41e-0597bc807732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b406a8a7-a3e0-46d6-b534-f3d60ec52256",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794dbbed-c80a-4ec6-8a18-9052d1ce4d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c5265a8-5c1a-44f2-82ca-729cbbf773fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba4660-c14d-446e-846d-f22de0aa59c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0f1c93-48e9-49f8-803d-d811579cae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabb0b50-b015-415b-ab91-944c0043b230",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dadb8f-51bb-4805-8040-406b8572bc62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4ee8eb-c6be-4f73-9053-e82f322f271c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23871ae1-55d3-4221-ab92-1721e04b3c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8e9642-1893-4167-8bc1-ab5722ec561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7729b2f-e781-4105-87b8-ee04d98354ca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86185cd8-0314-4c1a-8856-12edc3345b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55c4e3e5-621a-48f2-a5f2-3c8a9a5effc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344c28e0-6277-46a5-a466-24867f789ed6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f17ee8-912e-466a-9e44-0095460f500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5324ab-8566-4af1-b48b-9e5550643325",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c9bad-bb17-412f-8dfe-b825deab2ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32620218-c1da-44cc-b09c-f5b7416e5977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa4e6f3-3ebf-49b1-b8e3-b2c768c1a559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26819b3e-3af1-4d8c-80de-e5522260d06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14d8823-0e71-41da-93d1-3876824bd35b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3510219-0569-42a5-9ce2-58c4849ebaa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8a8484-7550-4ca1-9d44-b0c3f305b717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e1cae2-86e2-4f50-81b6-cf5842e77eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504da292-984e-421c-b99a-acafcd829b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344a5d68-19c3-407d-a318-8c7b813c25a6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0051d0ee-9234-4a20-a3e4-228c49ae3c4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106b0424-5bb3-4c7b-a1da-f7cdcef1820c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb4da89-8035-4a79-8b7a-720e83282c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31b138a-7dbc-4e62-9d13-3d6c063e2c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15860c4c-51fd-4a23-93f0-7ab16487f27d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9537a741-8dfd-4f88-a758-e6d1527a8527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0db401-f4d2-4f0a-bc3f-721254483572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6837b20-b59e-4488-b4b2-0eefa0e4109f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2557c854-ae65-42bf-8b90-3fdcd47bdd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35577f58-4b2f-4c4b-902d-c3b11b3a72cf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b179cf25-9e97-4552-8628-adf26631ff3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc37b2a-66a0-454f-9fac-ae4a528732e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c927a-e00f-4ec4-8de5-80893d6184b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72254558-4c5a-42c4-bc6f-7abbcadde0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a6672c-3b44-4acc-ac0b-887fd742599b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e97e3ee-b89b-44f9-b7b4-8d1766e7f560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60433ae3-e729-48c2-b043-3349f7e7615d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe641201-7291-4334-9187-783432217bf8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ed42a8-93f1-4086-a73c-81ad80d9cab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ff938c-0cc3-4999-9f68-f8ab67455224",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616443ee-30ef-443e-ba45-74b0493debc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb1445f-c76a-46a7-a70d-e5270e4092df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5247fb-adc7-4a06-95b0-7f6a6e9513a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924dae80-0643-4e19-bbbe-720e5c5a6a2c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f304a8f6-dde0-4a0e-aadb-9f058c98a8b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "607c8e92-74f3-4b87-aeb6-0fd1c8f5b683"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1907b49-e459-460b-aa6e-f999ade40ffd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b683f9bc-f660-4a08-a421-e9d137cbe9b7"
                    }
                  }
                ]
              },
              {
                "id": "472ae47f-74e8-4b70-9660-dcc0e46c7606",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d709f73-08e2-4e68-8d98-f360d6dd150b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61563a54-84b4-4fd0-9b84-c3187e685559",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6e78326f-35c0-430e-b889-ae141599c393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afca5d6-07a4-412a-8bd2-da1211552298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07d7f1c7-1a8f-4ff9-8382-937d41906263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e41951b-50a6-44d3-a6d8-581ae0b3e9f5",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a871c-8fc0-42e9-b39c-65ddee1aa8e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a347bbb-0b38-4715-aa72-3561e0be86e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71220800-9d8f-4553-bf49-7ed8cf564095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5082bd2-3905-4c96-b621-0c3f74b53bca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22394aa2-fd38-4702-aa95-7d4941a06f41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d137175-c57c-4378-97ee-6c83f62dfa22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa4e3c6f-04bd-4039-83e0-79496ac65447",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a8e98b-f9f2-49d4-9bc2-b9ba4c027258"
                    }
                  }
                ]
              },
              {
                "id": "0f316709-4478-4abd-a963-831ad9d2b9fa",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2c4ffe73-8f2a-497f-b998-9a932b9f32dd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eee6fc-ebea-49c2-bffc-6f1bd8d9bf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "edf8ddb0-6df0-44f4-a551-7f8a09d34e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c52a54-318a-4e4c-b7f6-a87109dbb6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b712fc2f-8ec7-4c13-a7cd-a9a63b693d12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb3cabeb-39ba-463f-a582-1cef2c8850a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d7e36fc-7c25-4cf6-ae2d-d6e3a9ab2dee",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02b37757-406b-4690-a794-035d6ab3a0b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f76aaf3-6a1f-461f-8b83-9336dfe7a6a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c726494-7f07-41cc-927e-f3eb2830d31e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "145f354a-9623-4f28-b886-46183b6d304c"
                    }
                  }
                ]
              },
              {
                "id": "e3a1c0cc-6b3e-4101-8b60-7bd2040422be",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3345952-0989-47a4-8cd0-27623bfdb628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "da960d39-fedc-4362-a8d2-52a15156ab72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a55625e8-e2cb-4491-b4c5-c29c2f209720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b136cfd1-afc0-4ea8-9566-19c2d87a5b4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e86a98c3-b78b-4085-b0cb-c38026e28032",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f2a50fbb-8df5-4da7-8884-78c17c5ff3b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77c239ef-5094-45a1-8b44-3ee42d8f364d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "632e637e-b2ff-4102-9d33-677684c1d008"
            }
          }
        ]
      },
      {
        "id": "a2acc1f6-7bd0-490c-b553-d3e4c2c0861d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2e9dab6a-d59a-4c58-b3cb-e52352b86868",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3042468-a570-4d37-86c0-dc780fdba247",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0909cf-fa04-44b7-bf5a-8ae18a70c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f0f33d8a-af4f-485f-9f56-76604f15e2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bc66d3-ab90-42b0-9317-f4c9fedad913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1acb441e-c83f-485b-bf2f-b4da0b9bdd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ea51c8-1b12-4153-ba17-7d1878ee7d7b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98903f9-19fa-410b-98ca-fb05e92005d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4ee754bb-030e-4aa1-8786-9a3aa9da2960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1930234f-2bde-42b4-b2e5-479cb79a8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34035e04-c411-4032-9b2b-b712aadd2f45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7c1b9f6-ed9b-49d7-a4a2-e2136fd53206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0953430-5580-45b9-a2ad-3caa0628e365"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e167f0e6-8804-437c-a708-41ad00ac176e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81dcc751-bf72-4b07-93bd-2bf929320124"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b604de1-596c-41d1-b13e-ad59084e2482",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e908d3a4-c44b-47aa-a79f-e3d56fd168cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8adaaee5-b424-4719-acfe-77f6c9b32beb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f01200e-fee8-40f1-9eb8-bf956fd8a056"
            }
          }
        ]
      },
      {
        "id": "e4b150c3-c316-48f0-b1bd-bb608a2bed4a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f7b9809f-c1b5-4654-8ad2-6c4a93744bd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "874bdd85-5f16-4a2e-9b25-6467e3fe5144",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fafc5906-ab0f-4ff9-b2fe-8cfb892d255d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1364a0-3a9f-441f-acae-d99c02813e6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e572540-401a-41bf-abd9-27c448a921e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb0cc21-d8db-4cb9-9430-3741915e6ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c6026e1-3608-4cb2-af7a-b5f354df7c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1eb703-feb8-40d1-8353-b210586f9bc0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b83a7-16fe-4f06-a5b9-e8b47069a677",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "992c2dab-cadd-497e-8952-23de51509494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aea6af4-ff58-4722-8679-6e66400d6afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9470a161-6cb3-42fa-8c22-4f3f94a00be5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "581ab2c7-a637-4a92-a015-6bb388d658d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8faa971-574e-4036-84b4-19dd95801a65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64940806-7214-4d4c-9913-404364bbf667",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2829d558-3a25-4ff1-a00b-c2d5ad3f2a42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d63f9a35-a74d-4e40-9e0c-9925e1e277f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "996e0592-78c7-42a3-a34c-da8c0923e639"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11de5932-2f7f-4a39-b33f-5d1b7036d815",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af590198-347f-497d-bb0e-55c432ae409f"
            }
          }
        ]
      },
      {
        "id": "c654cbb0-0beb-40d2-85cb-b6bbc4c235cf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "49670675-4d98-45c1-aff8-3e1d8d8e014b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7098e4cf-0a5d-47f8-8943-7e4566fbaf7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad46a4e1-9df5-4035-8392-9f3776c4513b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c42db4-2617-4075-9626-5597f7395f03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b34aee59-3d82-4d18-83fa-19145f5387b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdab368-c1f3-4ef0-8b39-390fffc32a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f53e82b-7b1d-4a91-955d-01363e96835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7a60bd-267b-4b90-91ed-7ac5dbca3fe4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330afdad-4224-4775-8725-84228cc9b860",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e1131a5e-848f-40b9-9c99-999fb8e2d6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc51fb1-ac2d-45bb-a8d9-c9c78f31d51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57813938-7698-41df-8fa8-c9beb423bacf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54ae1fd5-1a2a-403d-a279-b6cc5d739dea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac6b5959-963b-447d-9a2a-ac1ef8348d69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b181a0f9-d3b0-4d45-aba8-92a31225f9b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46aa1851-d7e7-4c0e-a3e5-ead2d81cc8eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfd4a19b-3e31-4808-aa3f-1f01d6a8ab9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ae07578-9f42-4807-808f-8e9113f454a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7308b3db-6592-4042-8949-be268369b4c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0300fbf-5c44-4c51-a64d-2730d2836dc9"
            }
          }
        ]
      },
      {
        "id": "8410c890-acdc-4658-8596-5e8b324376d8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48017e4e-ea87-4528-83e1-152ac6eff058",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd3e6b69-322f-4a9f-82ef-9f4d698e1302",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "51803e9d-98bc-4a86-af92-8b0dcede1d4f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90e19227-09bc-4b1f-9f2e-ef6e2321295b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcdd4774-71b1-4a59-9726-08e6793aae1d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 893.9346153846155,
      "responseMin": 10,
      "responseMax": 13244,
      "responseSd": 1318.950698746869,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683160594894,
      "completed": 1683160838267
    },
    "executions": [
      {
        "id": "79a42cc0-7b6d-4d95-a4d0-f741bf35561b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "221a824d-8eac-4a64-b1c3-e1478c6c8e77",
          "httpRequestId": "625ad09c-371c-44ec-a452-be350325bc98"
        },
        "item": {
          "id": "79a42cc0-7b6d-4d95-a4d0-f741bf35561b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f4f59822-a81a-4fc0-8f40-eeaee89aaeb6",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "69d4d822-972d-4cd3-8c5c-a0d5ea229c62",
        "cursor": {
          "ref": "b5f2159f-8902-453b-ac86-5077cd1758d0",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d76c543e-dd63-4e82-b99d-4d926c06a90d"
        },
        "item": {
          "id": "69d4d822-972d-4cd3-8c5c-a0d5ea229c62",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6dc34e55-34dc-4529-92fd-edf89c23d71e",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "d81f917d-b934-4887-b675-9b232520dcaf",
        "cursor": {
          "ref": "ac769fb8-b797-4af4-a25b-577d149e4e82",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ba99b5e-33b0-4ac1-9e05-a47fe05b9b6e"
        },
        "item": {
          "id": "d81f917d-b934-4887-b675-9b232520dcaf",
          "name": "did_json"
        },
        "response": {
          "id": "1b40a9b5-5f81-4087-8fd4-e64076b4bd0f",
          "status": "OK",
          "code": 200,
          "responseTime": 881,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a8c73-ee16-401f-a494-1de87a2f7bf7",
        "cursor": {
          "ref": "71bafb41-4d4a-4c93-bffd-a893800022f1",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dff1cd91-71d2-443e-97be-f1007d2d541e"
        },
        "item": {
          "id": "ea0a8c73-ee16-401f-a494-1de87a2f7bf7",
          "name": "did:invalid"
        },
        "response": {
          "id": "2503bd89-294e-47da-857e-3763f8ce0013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a8c73-ee16-401f-a494-1de87a2f7bf7",
        "cursor": {
          "ref": "71bafb41-4d4a-4c93-bffd-a893800022f1",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dff1cd91-71d2-443e-97be-f1007d2d541e"
        },
        "item": {
          "id": "ea0a8c73-ee16-401f-a494-1de87a2f7bf7",
          "name": "did:invalid"
        },
        "response": {
          "id": "2503bd89-294e-47da-857e-3763f8ce0013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408355e5-8a86-422a-899a-ce27e3124a9d",
        "cursor": {
          "ref": "34c689b2-65fa-4fc6-99aa-696ae027b855",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53fe701a-cea3-45aa-a926-d9c14e12fc90"
        },
        "item": {
          "id": "408355e5-8a86-422a-899a-ce27e3124a9d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d7b80d85-4ba8-46e4-b671-c3276d3b9d2f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 822,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1a0ce6-4fcb-47f3-93f4-672633279518",
        "cursor": {
          "ref": "ac888ee1-088d-42af-b90f-2de024b9dc15",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "75459ab6-622c-46d7-9061-710f9f01915c"
        },
        "item": {
          "id": "7b1a0ce6-4fcb-47f3-93f4-672633279518",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fd5f2f2c-9357-43bd-b5ea-bd01a7516971",
          "status": "Not Found",
          "code": 404,
          "responseTime": 665,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d66676-2613-4ac8-b1ff-56bf59ea4eec",
        "cursor": {
          "ref": "35a9d703-b9d7-4c8e-956b-cd1089bbeae7",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0c5658ec-dc12-4cc0-82be-21a7673ae884"
        },
        "item": {
          "id": "15d66676-2613-4ac8-b1ff-56bf59ea4eec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "864e7268-b05b-4c2b-9388-bf890f73ad4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5c05dd-bdbd-4b10-ab1b-f46c08532efe",
        "cursor": {
          "ref": "13d5c742-9975-4166-a09b-85475270d4bf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e8bf34c2-e35e-476d-becd-b6435fc5a37e"
        },
        "item": {
          "id": "3c5c05dd-bdbd-4b10-ab1b-f46c08532efe",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "53ab3187-d472-4c4c-9ad4-bda3ac5badd8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 664,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5c05dd-bdbd-4b10-ab1b-f46c08532efe",
        "cursor": {
          "ref": "13d5c742-9975-4166-a09b-85475270d4bf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e8bf34c2-e35e-476d-becd-b6435fc5a37e"
        },
        "item": {
          "id": "3c5c05dd-bdbd-4b10-ab1b-f46c08532efe",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "53ab3187-d472-4c4c-9ad4-bda3ac5badd8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 664,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d002c5-6c71-4651-9329-b1511c4d6819",
        "cursor": {
          "ref": "3785acaf-e385-461d-a180-27ada8f59a05",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9fb33cbd-6a36-4572-8c51-11ea82da7065"
        },
        "item": {
          "id": "28d002c5-6c71-4651-9329-b1511c4d6819",
          "name": "identifiers"
        },
        "response": {
          "id": "2ad0ceaa-e27d-4f47-a128-f35f299b7ce8",
          "status": "OK",
          "code": 200,
          "responseTime": 1211,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31af7986-507d-46b5-abd5-1c49ee675d6e",
        "cursor": {
          "ref": "b1e54d6b-472d-4a24-942e-d463a6cfc790",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63a87711-7e50-41f6-a627-04c3acda4926"
        },
        "item": {
          "id": "31af7986-507d-46b5-abd5-1c49ee675d6e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b9e130d-b993-4925-8935-7660dbdef20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31af7986-507d-46b5-abd5-1c49ee675d6e",
        "cursor": {
          "ref": "b1e54d6b-472d-4a24-942e-d463a6cfc790",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "63a87711-7e50-41f6-a627-04c3acda4926"
        },
        "item": {
          "id": "31af7986-507d-46b5-abd5-1c49ee675d6e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b9e130d-b993-4925-8935-7660dbdef20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cfebcd-f68a-4b05-8945-db5387883677",
        "cursor": {
          "ref": "938c4b9d-2c53-4973-a35d-ef898521ff19",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7888fc37-9729-478f-97a5-0c85d4e94451"
        },
        "item": {
          "id": "b2cfebcd-f68a-4b05-8945-db5387883677",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0eff68e0-060c-4238-92a4-a13c9f5cf5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1317fdb0-1210-4fb9-bcd6-78b40faa9113",
        "cursor": {
          "ref": "ffd6d308-814d-4a08-8121-3548c769ac7e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fb632139-cba0-43d9-95d7-4113781d57b5"
        },
        "item": {
          "id": "1317fdb0-1210-4fb9-bcd6-78b40faa9113",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c6f88b96-791f-466b-aa94-e07056206c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ef638e-cf6c-4d57-a970-0a0c645ab45b",
        "cursor": {
          "ref": "2998f47d-ceb7-4bfd-8454-cd49cad2b822",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "27eb641c-d299-4baa-a962-369d9eff7d42"
        },
        "item": {
          "id": "c0ef638e-cf6c-4d57-a970-0a0c645ab45b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "94004c51-42b2-4d18-a3ea-be8cb75310d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ecec4d-4bfc-4577-9f0a-8b38687d6b4e",
        "cursor": {
          "ref": "52f11453-24f6-4063-9888-7c513597481c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e3fe5b42-f9ee-4316-a421-0f81a4c9d671"
        },
        "item": {
          "id": "a4ecec4d-4bfc-4577-9f0a-8b38687d6b4e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8e7fbc92-d99b-4fa8-a1f8-26e4bda1754f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f28653-26d0-461e-a7fc-363493d09c03",
        "cursor": {
          "ref": "598166d8-5994-4035-956f-80eb0bb07da3",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eba8c3ee-2d33-4dc1-9480-0fcfa2099b31"
        },
        "item": {
          "id": "26f28653-26d0-461e-a7fc-363493d09c03",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "05c58bde-cb97-4587-b3cd-b975ccb7e44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5931bb8-6aad-4e2a-897c-36130305635e",
        "cursor": {
          "ref": "8e8a1383-2cc7-4e78-a1e3-287549f65203",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4578717b-099a-4667-8910-6c6bb7a7577d"
        },
        "item": {
          "id": "f5931bb8-6aad-4e2a-897c-36130305635e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38e52491-e810-41a4-bcf8-b3e633a9a39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c317b0c4-79c6-4e23-a9e5-cc052fdf3288",
        "cursor": {
          "ref": "8651ce96-ce6d-4ad3-a423-659d06026ffa",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "302b6817-fe56-428c-96dc-ce459a372de5"
        },
        "item": {
          "id": "c317b0c4-79c6-4e23-a9e5-cc052fdf3288",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "820097ec-6cff-4055-bce4-ddd851df310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266db1ca-5aa1-47e3-829f-8d1aaffab794",
        "cursor": {
          "ref": "b522c2b3-75ab-4880-92b0-e766015ed492",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "77ccd0af-b6a4-4e83-bd35-e3f45516ef6e"
        },
        "item": {
          "id": "266db1ca-5aa1-47e3-829f-8d1aaffab794",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "81d9841f-d568-461f-b423-81cb41b97c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d9ae28-c4ba-4dec-b022-c22581b755a1",
        "cursor": {
          "ref": "a7b06f06-1b00-47e2-8843-7108a2b63957",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "30d09f83-cee8-4c99-93f2-2ab05df31c9d"
        },
        "item": {
          "id": "01d9ae28-c4ba-4dec-b022-c22581b755a1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "114dfda6-8487-401d-afeb-efae4d1caa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11ebfd9-2356-4772-8de2-7bc13199366a",
        "cursor": {
          "ref": "d7cba143-863c-4eb2-b4a7-c3b18023c1ba",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b9cde573-fb52-4659-b8b7-10ec9a92d10e"
        },
        "item": {
          "id": "e11ebfd9-2356-4772-8de2-7bc13199366a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a4a6785f-4199-4a51-82d1-69da49829172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aeaa0f-0d97-4e25-b1a9-d2ed16a65a48",
        "cursor": {
          "ref": "c09bb50c-2a80-4062-8f0e-3ca8b8d5f7df",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8dd369eb-141f-47db-b47c-c33e51818d1b"
        },
        "item": {
          "id": "64aeaa0f-0d97-4e25-b1a9-d2ed16a65a48",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "91ab3864-fce3-42c8-a841-046229b445e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a0c068-6d25-4aa3-a602-9f5d2af15354",
        "cursor": {
          "ref": "abb5b29e-eb59-46cf-9a2e-e6b501282ef7",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d0995ff8-dfaf-4df9-afdf-088489786b7f"
        },
        "item": {
          "id": "e5a0c068-6d25-4aa3-a602-9f5d2af15354",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "28e9232e-5b9b-46de-8546-39684e9bda6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f0c875-67d3-4ccb-a604-1e86725a205f",
        "cursor": {
          "ref": "42e9f4d9-3ef6-4336-b647-f8ba23ae281a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "010ddb47-4f41-4c8e-8fac-5cd3b8251872"
        },
        "item": {
          "id": "46f0c875-67d3-4ccb-a604-1e86725a205f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0b3ecbe7-1c62-4e59-b420-3f789b8c26fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b669fb-4f4b-490f-b502-cd63134bffb8",
        "cursor": {
          "ref": "53ef58a4-d779-4b83-90c2-6edf932bacf9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fe179e9c-ac59-44c4-a468-6000fdf31a50"
        },
        "item": {
          "id": "03b669fb-4f4b-490f-b502-cd63134bffb8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "01166c01-13ab-4ce3-a833-43cbd8c72899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45db70bf-2f67-4d13-93c5-1481c642a060",
        "cursor": {
          "ref": "5dee9278-f791-4efe-8645-24447c99f164",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0d7bb82b-f39d-4ac0-83fe-604319928ef4"
        },
        "item": {
          "id": "45db70bf-2f67-4d13-93c5-1481c642a060",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7e2ede88-64df-4f76-a14b-410513b75c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50bcd04-6d56-441c-8b78-ad982f7a688d",
        "cursor": {
          "ref": "476e0320-f0f8-4528-88c0-886da9695f6a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6e0070de-4477-4132-a262-3afeef1ffdf2"
        },
        "item": {
          "id": "b50bcd04-6d56-441c-8b78-ad982f7a688d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b795a3ff-ba8a-4983-a082-62ff3145ec79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b116d60-663b-48bd-8257-1e6413a72e94",
        "cursor": {
          "ref": "3843d1fa-c1a2-4574-a334-a981cff43e16",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "92bfc228-4f4c-43e7-8c74-dd4ad3d782f0"
        },
        "item": {
          "id": "9b116d60-663b-48bd-8257-1e6413a72e94",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e48f8f80-5c2d-42b1-87e6-7bec16b48bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a119641-3011-44e6-af7e-914a90495d35",
        "cursor": {
          "ref": "5b291518-467d-4605-bc6f-3c7e646d1075",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6603f3d5-f05d-4488-a461-bfce7b49553a"
        },
        "item": {
          "id": "4a119641-3011-44e6-af7e-914a90495d35",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "feba4b49-c318-44c1-a455-d9fab592807a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ef140a-455f-4f57-8aca-adae3020c3ef",
        "cursor": {
          "ref": "54a13915-97db-419d-8891-a39301ba9067",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3dde19bd-12ee-4d23-befc-2d4fb231b592"
        },
        "item": {
          "id": "19ef140a-455f-4f57-8aca-adae3020c3ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "797c0af7-a441-450e-aa8b-166fb49fb75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f70337-8139-437a-9a87-b092711bd6a6",
        "cursor": {
          "ref": "0ae0d139-dc05-475d-86b0-23171d1fd766",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "65a07cd6-ae38-4653-b614-5689db98d076"
        },
        "item": {
          "id": "a6f70337-8139-437a-9a87-b092711bd6a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "232f7763-1e64-404e-ab84-1ae7b78fca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc944f6-37c0-4b24-902e-888ba68aa732",
        "cursor": {
          "ref": "28bb715c-8f05-448f-8091-43d71fa94988",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d8a07f15-09f8-45a6-999d-8653c4955fa3"
        },
        "item": {
          "id": "1bc944f6-37c0-4b24-902e-888ba68aa732",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "85e7cffe-a37e-4f33-bfe5-7988bc2b3caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877cee86-db60-4554-8f53-611b64e71aec",
        "cursor": {
          "ref": "28cbcafb-839e-4899-8239-2bb64834f63e",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "65f48273-df30-49cb-ab5b-be49cf117e45"
        },
        "item": {
          "id": "877cee86-db60-4554-8f53-611b64e71aec",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0e1c3c06-739c-4e38-8b5d-863c5163aad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e25c62-899b-4ea4-801d-45e4c7d409f9",
        "cursor": {
          "ref": "af989952-8a26-4619-b06e-783a9ddee218",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "42a7827b-46ce-45b7-975f-b11e82f46a5b"
        },
        "item": {
          "id": "31e25c62-899b-4ea4-801d-45e4c7d409f9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a9093986-e32f-4e31-bdea-b4d7fbec2d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1106,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf2fea1-0fdc-4c36-a17d-adeed2994dee",
        "cursor": {
          "ref": "c5747d94-8ed5-4baa-ac35-4608415b68ae",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d58429ec-39cd-4845-9bd5-f78bf9952585"
        },
        "item": {
          "id": "baf2fea1-0fdc-4c36-a17d-adeed2994dee",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4fee865a-de9b-4f02-91d8-bbda13e7254c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1225,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dee0031-56f3-4d41-b096-ba5e2cd85f62",
        "cursor": {
          "ref": "09378010-1660-4200-a61f-65495b9b8911",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f9c732e-77a9-47ef-9f60-b8f465d3c96a"
        },
        "item": {
          "id": "8dee0031-56f3-4d41-b096-ba5e2cd85f62",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5608a0c7-8376-408b-9f37-94cf0cee4b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2140,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e54a2-21b8-446e-b848-bf3b5089039c",
        "cursor": {
          "ref": "72599d77-0359-4db3-9241-7babfb1ab85f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c2ef4e1a-232a-4724-b9f3-935fe4b5131e"
        },
        "item": {
          "id": "418e54a2-21b8-446e-b848-bf3b5089039c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "86ce4e3b-666d-44e5-8df8-020ea3574d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2507,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2648955-21e3-4e61-b6be-3fcced981818",
        "cursor": {
          "ref": "6d9f83a3-644c-4157-9466-c65cffb992eb",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a9cb38c6-e934-4a2f-9e85-0ff96e37a41e"
        },
        "item": {
          "id": "e2648955-21e3-4e61-b6be-3fcced981818",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c5fc9e65-96ae-47ef-a263-4ee53965c087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1558,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003646ba-ea72-4eb6-b6a8-605a2ac0f47d",
        "cursor": {
          "ref": "e8071564-d588-4422-b8ca-7b2186fd4099",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b56c4630-3b39-4f47-b911-a37772a53179"
        },
        "item": {
          "id": "003646ba-ea72-4eb6-b6a8-605a2ac0f47d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2f7efea1-f06b-4c4b-b663-0da3624fc8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1579,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24570a2d-4d33-4f51-bb5d-02a0c475eee9",
        "cursor": {
          "ref": "02802eaf-d05f-43f9-a80a-8c3ccec9ee36",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8954c650-13f9-4e5c-8c6a-69e6fa12e76f"
        },
        "item": {
          "id": "24570a2d-4d33-4f51-bb5d-02a0c475eee9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5577de06-23c7-4451-a9a7-f979370171eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1555,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c0052d-d035-4e16-b6fb-aaae5e325b02",
        "cursor": {
          "ref": "bc9b568d-429a-47d5-a3cd-15cfdaed2364",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3b7829f7-db44-4609-a29b-335155c6ebf9"
        },
        "item": {
          "id": "e4c0052d-d035-4e16-b6fb-aaae5e325b02",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ee920c91-5050-4ffe-a997-afc050c0a35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102c4089-df34-4267-959e-341591c8ef9a",
        "cursor": {
          "ref": "ef87fd31-85fa-4709-8f0b-294950afd0b2",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fc0ff30b-fb66-4d3e-a97f-0658f646aa28"
        },
        "item": {
          "id": "102c4089-df34-4267-959e-341591c8ef9a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0a6e40ab-f268-4617-987f-acacc50c3e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a54ec7-5112-46f3-83ef-184f95a1e1c5",
        "cursor": {
          "ref": "978191ee-e799-49c7-af62-033394061e49",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a8c4b6e1-2e3e-44dd-bec7-6e593ccd5d56"
        },
        "item": {
          "id": "11a54ec7-5112-46f3-83ef-184f95a1e1c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d2c0406d-d5a2-4256-b3bc-a9465d4e180d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9c57e-8198-4b6f-81e4-959105fdc56d",
        "cursor": {
          "ref": "8e720be6-6e37-4e27-a2f0-f085f14dee77",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "67c0c72d-9e2e-4c98-b7b9-d1046f19e745"
        },
        "item": {
          "id": "f2d9c57e-8198-4b6f-81e4-959105fdc56d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "411705dc-152f-45fc-9c65-ff30278ee3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141bc144-ea2d-4fe5-a1af-5147ddcb9a4b",
        "cursor": {
          "ref": "5250e373-2310-48b8-978e-c919ca77a744",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8ea220a5-347f-4a69-8063-97bb9045a719"
        },
        "item": {
          "id": "141bc144-ea2d-4fe5-a1af-5147ddcb9a4b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a7f13efe-83e0-4a9d-933d-a1ac94e33d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2582c9cb-9275-4ec5-8d5f-b9e35b5066ba",
        "cursor": {
          "ref": "0ede8e7e-2f56-40df-9221-9cb3d021ef96",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "01671be1-fddb-483b-b4e7-8076f6db855b"
        },
        "item": {
          "id": "2582c9cb-9275-4ec5-8d5f-b9e35b5066ba",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cd98175b-4dce-4d10-b82f-24767e178799",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 791,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a45d8ef-8ffd-4a04-8285-24618c00b1f8",
        "cursor": {
          "ref": "b93ca745-7fae-47ab-a20f-77d99e9fbab7",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "655273be-c75f-4559-88b6-d878b3676e7f"
        },
        "item": {
          "id": "0a45d8ef-8ffd-4a04-8285-24618c00b1f8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f2e5d6f8-4a58-43dc-a9e8-04391a66aa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b192478-27f4-4384-bd99-f746c9ee87ca",
        "cursor": {
          "ref": "df994a32-99cd-4aa5-bf65-4f5089bbbf4e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "848cf3e1-f12d-4028-bff7-31ddff0f4c58"
        },
        "item": {
          "id": "2b192478-27f4-4384-bd99-f746c9ee87ca",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "560e171a-c45e-49e5-997e-24ba9d93a568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ea458b-c7f5-46a6-bae2-eb04bb6b0566",
        "cursor": {
          "ref": "166f1f40-3269-449e-b3a1-a4076c4feffa",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "147b81ee-fed0-4989-af91-ae6a75ea9628"
        },
        "item": {
          "id": "15ea458b-c7f5-46a6-bae2-eb04bb6b0566",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ca9295c1-0a4f-442c-80e9-a31dbae5af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edd081a-bb50-4a1e-9170-a8d1c294ee01",
        "cursor": {
          "ref": "53b68456-e744-470f-991a-1b43b84727f6",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4a459220-f4cf-4857-8c42-a1e62ff2e324"
        },
        "item": {
          "id": "4edd081a-bb50-4a1e-9170-a8d1c294ee01",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "40b4739c-4473-42b3-a4fc-76a51c4b1f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d332022-7da8-4081-96c1-9328871d1211",
        "cursor": {
          "ref": "66a7405b-a0da-4ff7-8d03-82b0d378ba3e",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "94b34322-c466-48cb-9224-a230c7c34839"
        },
        "item": {
          "id": "6d332022-7da8-4081-96c1-9328871d1211",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab86f5dc-cfbd-406b-9470-06a339101d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8916ec07-26f0-4412-9745-5fc249cfa278",
        "cursor": {
          "ref": "cd95c8d2-b2a0-485c-88b3-789d24b33e2d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56699dc1-2db8-4651-be1d-efc389c40bb7"
        },
        "item": {
          "id": "8916ec07-26f0-4412-9745-5fc249cfa278",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7145b947-7b67-42f5-92d7-c43da44fc964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdfd4ae-a4fe-43ab-af37-4f5d81634331",
        "cursor": {
          "ref": "01473b88-d561-4b84-a156-b95e1bcc2703",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "26a4dfdb-d23d-44ea-b0b2-45042c122db8"
        },
        "item": {
          "id": "dcdfd4ae-a4fe-43ab-af37-4f5d81634331",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "06bbef27-9e26-438b-b15e-e5a5d84c69bc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 824,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7f3719-6a9d-4446-9663-fd7413766367",
        "cursor": {
          "ref": "a19d3003-8863-4994-8e7a-6146ff3f79bf",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "600520e0-2150-4eee-a361-9c9e3d3558a9"
        },
        "item": {
          "id": "9d7f3719-6a9d-4446-9663-fd7413766367",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "138fffbc-a53b-452a-a5fa-9d30a54b3d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8552689c-206a-43bd-82b4-6e423536d9a3",
        "cursor": {
          "ref": "92f014e1-d754-4629-89c8-7fa522776d56",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2daad535-2e77-4f50-8c47-d9d7e2751919"
        },
        "item": {
          "id": "8552689c-206a-43bd-82b4-6e423536d9a3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7714859c-881e-461e-bb18-5d99125e6205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7ca737-64c2-42d6-9b5b-3e5d699d801c",
        "cursor": {
          "ref": "074fb886-9c60-415c-8727-90c903ae0c6e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "891aa90a-036f-4fa2-bf41-2e064089e7c2"
        },
        "item": {
          "id": "7a7ca737-64c2-42d6-9b5b-3e5d699d801c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e7e2b460-6a4d-4aee-bd96-2a07c1731be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53071550-bf1d-4d10-a024-787781be91af",
        "cursor": {
          "ref": "d598c5fb-72a1-4013-ba0b-6f573b2960a2",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b1469091-2eb7-4c76-8498-55d9110c91e1"
        },
        "item": {
          "id": "53071550-bf1d-4d10-a024-787781be91af",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "658e447e-ea87-41c4-b580-864281487bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26532b22-d771-435f-a0cc-0567cc9d566a",
        "cursor": {
          "ref": "8b965601-63f7-4e23-bbaa-0d43dd0300e6",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e8f73355-12a3-4104-8850-f30ccb756d8f"
        },
        "item": {
          "id": "26532b22-d771-435f-a0cc-0567cc9d566a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dbb0c84d-c3ed-4378-8882-c7b19cc9e8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d550ad05-12d2-4709-82fb-bb5396d1f80a",
        "cursor": {
          "ref": "6a21b908-9832-4c69-83d7-9643bda0dd2b",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ccc35a30-ebf8-49f3-b7b4-dff86e41724f"
        },
        "item": {
          "id": "d550ad05-12d2-4709-82fb-bb5396d1f80a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "89ee61d8-acc7-42df-9679-22ad034cef44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6084e4-b41d-4dbb-ada8-55ee550f79a7",
        "cursor": {
          "ref": "61c87112-9e03-44ef-a136-6cfe9549e195",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8b52b842-5b9d-40d0-9975-dd79bc71f4a0"
        },
        "item": {
          "id": "cf6084e4-b41d-4dbb-ada8-55ee550f79a7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "70f5ed7b-3dc5-4e6b-a351-c5d4a911a0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486dc549-4654-4e8d-9bfe-21e2c534db42",
        "cursor": {
          "ref": "d4e74d90-067d-4c05-90ca-0123699e4bf0",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "be7a9de4-24c7-4f30-97f1-2c2f73e68e9e"
        },
        "item": {
          "id": "486dc549-4654-4e8d-9bfe-21e2c534db42",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "443cb30a-5acc-4902-a70c-018f62a95d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2703296c-94e2-4340-aee1-582660dc1e26",
        "cursor": {
          "ref": "08f2c3b0-65c3-4ce7-ae49-6da79d12826b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "95c3eea6-99e4-43b3-8ded-85226bdf5045"
        },
        "item": {
          "id": "2703296c-94e2-4340-aee1-582660dc1e26",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9909db8a-f472-4f01-b861-0c56ca23ee2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2264023e-e7f4-41f9-b490-e38f78f1dde9",
        "cursor": {
          "ref": "5901a099-625d-4498-8623-a8a9da934094",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4c7df221-0439-4d51-9e12-ac3d78916ed6"
        },
        "item": {
          "id": "2264023e-e7f4-41f9-b490-e38f78f1dde9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b588940-229c-445b-b214-a87cb12b6aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedd6ca0-19e3-4724-b709-b386dc9b6094",
        "cursor": {
          "ref": "f0dc0663-4524-4001-8638-1d53a9163a9d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "542c2aae-cf03-4ed2-b020-daac41d00eeb"
        },
        "item": {
          "id": "aedd6ca0-19e3-4724-b709-b386dc9b6094",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66b2a800-91ec-4bb9-b7dd-1a47d92f47e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e023c14b-66a4-4e04-88d9-3058734b627c",
        "cursor": {
          "ref": "ad0334a1-bfc6-4f92-b9cb-a54022dbe5ad",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e28847b5-7b58-41c8-963a-98059e8e6661"
        },
        "item": {
          "id": "e023c14b-66a4-4e04-88d9-3058734b627c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d29b13d3-e3d2-45a6-b807-52946b8f512b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26d41b7-d8e6-40a4-8394-1d00c57da37e",
        "cursor": {
          "ref": "eae861b6-e8bf-4c09-907b-9f95fd3e1155",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "398f871e-37cc-44fb-bf83-b848967e96ee"
        },
        "item": {
          "id": "a26d41b7-d8e6-40a4-8394-1d00c57da37e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c3bd1cb0-c013-40c3-b546-2054cef3ac55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4558251-bd0b-4f75-99b6-149b775365a0",
        "cursor": {
          "ref": "a0c19caa-1bdf-4fc2-8dc7-6e22eee5ed76",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fcbfcb97-f2f9-494d-afb8-3a90e6e2bc94"
        },
        "item": {
          "id": "d4558251-bd0b-4f75-99b6-149b775365a0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4e8e9df0-d1e9-4b5d-ae5b-7caa6c0a7393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a6bd1e-1d75-41c0-8ed5-99bd1ed34356",
        "cursor": {
          "ref": "8fc88930-fc1d-413d-a5b1-bab833b937c2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e1af992-87d1-48f2-a764-27a38ef224cb"
        },
        "item": {
          "id": "a7a6bd1e-1d75-41c0-8ed5-99bd1ed34356",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8c013c51-e8ae-4b27-8bd3-dec860f23014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6b952e-f352-472f-8f88-4d42207d8672",
        "cursor": {
          "ref": "29a47538-bccf-41b6-bbdb-13a8400e6a83",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "48664455-25af-4a5f-aea1-ad04d44d6930"
        },
        "item": {
          "id": "bf6b952e-f352-472f-8f88-4d42207d8672",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3af630f8-5cb0-4736-9aff-1d623f237632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790619c4-ca18-4339-b82d-ee1ecbc4705b",
        "cursor": {
          "ref": "0964d7ee-b06c-4721-a6bb-b69351859fd9",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e10d8990-cb18-41ab-8bd2-479837c7cd0a"
        },
        "item": {
          "id": "790619c4-ca18-4339-b82d-ee1ecbc4705b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d47b15f3-9f57-487a-b141-88321c4027f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3a7e10-da34-4b2c-9733-460e1c7e53b2",
        "cursor": {
          "ref": "f3c3c7e9-4db9-4a64-976a-ba2d132d8c0d",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3aa8e3e9-3905-4325-bcc6-fabdec5b9255"
        },
        "item": {
          "id": "da3a7e10-da34-4b2c-9733-460e1c7e53b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "63de0999-3b2f-4c91-8f5d-3093feef70c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a423bab7-28e8-4b9d-b5b5-24dc6b570aab",
        "cursor": {
          "ref": "dd1311fa-28e3-4cb0-81c3-eccb89642bc3",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b2a2ef6b-07fb-4ec1-ad25-8ec2e2cf58cf"
        },
        "item": {
          "id": "a423bab7-28e8-4b9d-b5b5-24dc6b570aab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "907b247c-8159-43b8-8c8f-c2bcba112905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec9e098-989f-4ed5-b080-81c41d5866c2",
        "cursor": {
          "ref": "a547e221-6ef0-4971-bb2f-699c33e9798b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "90feca66-b1fd-460a-b03e-8e687ab94e29"
        },
        "item": {
          "id": "3ec9e098-989f-4ed5-b080-81c41d5866c2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dc790d84-4117-4ada-b412-61cabdd486ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a5300e-c1b2-48b2-b897-c83c0153dbd7",
        "cursor": {
          "ref": "24a4a834-f88e-4174-9466-7e489c2acf0a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9dc9c6b1-542a-4fac-8581-4b182f9b0c13"
        },
        "item": {
          "id": "65a5300e-c1b2-48b2-b897-c83c0153dbd7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e1fb1f97-6560-4f26-aec7-1abb6aa476e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b05303-e8af-42a4-835a-18f341580655",
        "cursor": {
          "ref": "17208ada-533b-457b-b6ea-99a359b04c66",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5f74410f-5a14-423c-b3b7-cdbf49eb1394"
        },
        "item": {
          "id": "d3b05303-e8af-42a4-835a-18f341580655",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "47c129c3-9dd5-426a-b870-9571e9be672f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1535ab5-d984-49eb-8b4c-c94062af3e0d",
        "cursor": {
          "ref": "6ee5c141-8f9c-4215-b560-46569aaf24f5",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b153741c-3e5b-4e95-9492-fefe326ef82e"
        },
        "item": {
          "id": "a1535ab5-d984-49eb-8b4c-c94062af3e0d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "884af11c-0b03-4ca4-9499-c4bd7ce9c742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1fe8a6-6229-4b1d-9298-339b5b5d3856",
        "cursor": {
          "ref": "b06b3909-1f6d-42e1-a30f-529fe16f4bfd",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "136b14c5-f8f1-44cc-9701-e5eb0bbe4b26"
        },
        "item": {
          "id": "7c1fe8a6-6229-4b1d-9298-339b5b5d3856",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ff8e520b-b72d-4009-bd7d-e348acbe48e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9bf9af-77c6-4a5a-b007-e7532196889e",
        "cursor": {
          "ref": "ff2998f9-8ef0-4bd8-91c1-aeb53dce775b",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aea8ca99-d915-4d91-98aa-9f607b0e18db"
        },
        "item": {
          "id": "cb9bf9af-77c6-4a5a-b007-e7532196889e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "83f5b07e-4277-4253-8afe-fb2bf784e760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd15be2-f342-476c-af66-784c713b3743",
        "cursor": {
          "ref": "f19cd2ae-3f4b-4989-980e-d72b650cea16",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3d07addf-4836-4a3b-ade2-c78679448af8"
        },
        "item": {
          "id": "5cd15be2-f342-476c-af66-784c713b3743",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "deaa28c3-2afe-4f0c-aae3-6f72f8f2e3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9128002f-ca9d-4186-a2c9-869585b3743d",
        "cursor": {
          "ref": "733cdc84-ea29-432a-9265-b64347d68ed3",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9f997350-d8d6-4127-91f5-356e1a70dee1"
        },
        "item": {
          "id": "9128002f-ca9d-4186-a2c9-869585b3743d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d67bb573-a25b-427d-aea8-301363fd655f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4154df-2660-4fdf-9b06-9327ee9b7714",
        "cursor": {
          "ref": "de49ac49-6d0c-439b-aa88-a5d59518a73b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3736c4a1-d7b6-4cf2-a054-9ada3de969fa"
        },
        "item": {
          "id": "0a4154df-2660-4fdf-9b06-9327ee9b7714",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "59fba7e9-faed-4f68-a558-7c164557a5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3ec3be-ba6a-4a93-a2bf-b6a348b5d4b4",
        "cursor": {
          "ref": "cbd2171a-dec1-4a0e-b803-42cea16c8e9a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1a38663d-a323-4577-b642-76cc731d1a40"
        },
        "item": {
          "id": "7c3ec3be-ba6a-4a93-a2bf-b6a348b5d4b4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee2c2258-f55d-45cb-92c9-ea13b6f19c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a04415d-3064-438e-ac8c-15d8cfbda6aa",
        "cursor": {
          "ref": "03bcf9fb-a419-49c6-b04d-b3a7d3c050b0",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bac7c89f-a6a8-4cdc-baa6-e8aabb25f9b3"
        },
        "item": {
          "id": "5a04415d-3064-438e-ac8c-15d8cfbda6aa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d664b516-0372-4f54-aa23-f9b1b95a18a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb11fe02-612e-4c7e-bcef-f981738a1dd8",
        "cursor": {
          "ref": "1828eefc-5970-4a11-aa6f-b8f96020e4b4",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b451a8e8-bfec-461f-b039-0dc17e652581"
        },
        "item": {
          "id": "cb11fe02-612e-4c7e-bcef-f981738a1dd8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "455d2301-c26f-4ecd-b1fb-eca2d1be31cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e271404-b761-4056-860f-5df97ad96d6a",
        "cursor": {
          "ref": "5743d14a-56af-40d8-8bb5-4d4bb42922f3",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6d08e794-a649-4be5-9991-1276e691623e"
        },
        "item": {
          "id": "3e271404-b761-4056-860f-5df97ad96d6a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1898bf81-023f-403e-a5d3-b5d265f9b17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ffe984-8df2-400d-afa8-d148d926a87b",
        "cursor": {
          "ref": "968db45f-b13d-41cc-9578-c4e04df431f6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "89527a69-99ec-4d61-b890-5fe8ad513c53"
        },
        "item": {
          "id": "e8ffe984-8df2-400d-afa8-d148d926a87b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1e2e8e74-49fd-4a3d-87ba-d640ce3cc050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a221fd73-71c1-4fcd-a491-8934e2fa8bfa",
        "cursor": {
          "ref": "c0b34600-de44-4b15-a9c1-e4d25e48b1f6",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "74adb85b-9025-4078-9dc4-109dba11e652"
        },
        "item": {
          "id": "a221fd73-71c1-4fcd-a491-8934e2fa8bfa",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0ec736ee-4bbb-45c3-8b3e-d55b51cc9e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6dafea-f048-4f86-a05e-342187c7add1",
        "cursor": {
          "ref": "daf5568f-06d1-40fc-9fee-ebd95f0212a8",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "efc2b2d8-0e56-4f0b-bb00-cd532f498611"
        },
        "item": {
          "id": "7f6dafea-f048-4f86-a05e-342187c7add1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1d4557c5-5bad-49e4-8be9-92b3eb130a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38d0ff1-966e-4dca-b763-aa8f98ef891b",
        "cursor": {
          "ref": "336518c0-2512-45bc-bca2-fc050cf4aa16",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fd824392-0876-4ee7-a4cf-eb440e4221a7"
        },
        "item": {
          "id": "f38d0ff1-966e-4dca-b763-aa8f98ef891b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5ffc80c5-f956-475e-9f60-826178045e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bd61d4-abcf-4f1b-9246-7862d0666049",
        "cursor": {
          "ref": "a45f89e0-c125-4fbc-9030-638bc87ade6c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7b4bdd48-8fe3-44f3-a095-d318f4d77ccf"
        },
        "item": {
          "id": "73bd61d4-abcf-4f1b-9246-7862d0666049",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "caa7c357-7c25-4727-81a3-f1e2f6b7fcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddc982b-455f-4893-a82b-9e046ffe2e1c",
        "cursor": {
          "ref": "60a7d87f-1c7a-4e54-a179-4a9fd60dd5c2",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "73054ad9-ca36-410e-8a95-906a5266349d"
        },
        "item": {
          "id": "dddc982b-455f-4893-a82b-9e046ffe2e1c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0deb15e-d726-4a38-8ac5-5adfe940db46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ead8cb-7bc4-4fa1-8c01-ed52982b0c84",
        "cursor": {
          "ref": "d59c4484-702d-448c-b2c2-5d6259f6bacc",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b32e755e-c898-4130-aacb-d8b497dc95b2"
        },
        "item": {
          "id": "e4ead8cb-7bc4-4fa1-8c01-ed52982b0c84",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a235376e-a9e6-4af3-837f-a7bde2043b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead53971-3670-4e86-a992-d4822b2268ce",
        "cursor": {
          "ref": "3494c183-a78b-4f10-9d0e-3c51505e02ef",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c6cf240b-4194-4847-bbbc-a80ab96d828b"
        },
        "item": {
          "id": "ead53971-3670-4e86-a992-d4822b2268ce",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "faff2cda-e0c0-47a7-9cca-ba872be2286f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf5863b-5d0c-4af8-8244-0ae8ef33735a",
        "cursor": {
          "ref": "9bc03ab3-a41b-4acb-bf0f-20c9343412b1",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04cc0d68-42dd-4964-9596-4f56efcf4e5c"
        },
        "item": {
          "id": "4cf5863b-5d0c-4af8-8244-0ae8ef33735a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f008a13b-ed92-490a-a61a-73969e5df722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fabdb3-8d80-4000-9598-fd68dd809b88",
        "cursor": {
          "ref": "7e6776ff-5531-4913-b701-ca3a8a4dffa9",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b108b80e-560f-43bb-b08c-6a6804fd2495"
        },
        "item": {
          "id": "45fabdb3-8d80-4000-9598-fd68dd809b88",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bdbfd652-5a10-4692-b6d1-d275d2ba30a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b76441-c8a5-4a6f-ba21-199b645aa366",
        "cursor": {
          "ref": "fa4eb17d-bb83-4603-98b6-63fc3239bf25",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c8ed9cb1-d7de-4ce1-8e62-36eed1f23242"
        },
        "item": {
          "id": "82b76441-c8a5-4a6f-ba21-199b645aa366",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4085ed6e-7c16-41cf-9878-19147f3797ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe19e40d-23fe-421a-8b95-06d805a20328",
        "cursor": {
          "ref": "59df7497-7bd8-42fc-a272-a1ab3f61fbe8",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c2a5826c-25e5-42e4-9a04-737b3838a43a"
        },
        "item": {
          "id": "fe19e40d-23fe-421a-8b95-06d805a20328",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b08bc4ec-d1d2-4238-9d22-f20c4d474d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5aaa4b3-0887-4c23-b4ec-23923b0b0a54",
        "cursor": {
          "ref": "3de4ecfe-4e11-42d9-a66d-eb7de3f9df41",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "00c422c4-bc51-46aa-900a-de103a0bc880"
        },
        "item": {
          "id": "b5aaa4b3-0887-4c23-b4ec-23923b0b0a54",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4a8adc4-4be5-4b50-988d-3e9fc824cb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1aac9b-17c8-4505-b241-998eedf9ed2b",
        "cursor": {
          "ref": "46551d10-ab70-413d-b8ce-72aaf83609bf",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ebda8881-a5ca-4d82-82d9-876f0755207c"
        },
        "item": {
          "id": "fe1aac9b-17c8-4505-b241-998eedf9ed2b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8e8e8c81-6f79-4393-b6c9-863b4bba7f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04802bc4-4fc8-4e42-ada5-200bbeb386d6",
        "cursor": {
          "ref": "354da88d-8970-4d1b-9b6d-8069f2048375",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6bdef622-9bc8-4d30-b9f5-561c2575aa41"
        },
        "item": {
          "id": "04802bc4-4fc8-4e42-ada5-200bbeb386d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "827a0079-922b-4397-9342-2e0833489b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefec942-30fd-4d6b-8dbc-c2bde6071d64",
        "cursor": {
          "ref": "20cfb39f-ac5f-4c87-aac1-8fbed9983ad9",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3adbb979-0705-46cb-aaa2-b314f583403f"
        },
        "item": {
          "id": "eefec942-30fd-4d6b-8dbc-c2bde6071d64",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "af3236e3-5cbe-4602-9d98-31184a29ff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e6dc4-497e-48e6-8714-774f1a05783c",
        "cursor": {
          "ref": "4e804233-d960-4648-8a79-06ab8cd912d0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b454f5e9-5721-4870-a053-c01cadf80480"
        },
        "item": {
          "id": "be1e6dc4-497e-48e6-8714-774f1a05783c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dfad7fb3-f1b2-4a04-a3c9-8d39ca96aae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c2ee2-f7a8-4f64-8be9-797958dd1a73",
        "cursor": {
          "ref": "ed987e2f-9206-4d18-84d6-3fae5273410b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bd25b539-1319-456f-8fab-b82b2de46445"
        },
        "item": {
          "id": "2e1c2ee2-f7a8-4f64-8be9-797958dd1a73",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bcace6e1-3593-4a8f-92bc-3210d5d60d07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cbfe87-26f5-4b45-9c98-686e2aded759",
        "cursor": {
          "ref": "31a95fc4-ad0b-4e9d-bb5b-1a14a24de235",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "381da4ac-ab7f-43d5-ad03-61a1f66dcad1"
        },
        "item": {
          "id": "42cbfe87-26f5-4b45-9c98-686e2aded759",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9a1ad2a5-5651-4fd4-ab6f-a2a62046e3b9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 682,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b2046-aa16-4381-b98b-99064267aae0",
        "cursor": {
          "ref": "1503db90-b7f4-4aba-988c-108a944f234c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9d79a53e-4743-4eec-8052-1e33f8ba3338"
        },
        "item": {
          "id": "418b2046-aa16-4381-b98b-99064267aae0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f5d3df52-d547-4714-96ec-5f0d72704450",
          "status": "Created",
          "code": 201,
          "responseTime": 8458,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b59a12-b842-4203-9b68-39fd54f8cc44",
        "cursor": {
          "ref": "b6ebc2da-27a9-4e25-8374-5fc1879f92d7",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c2d6f008-398b-4d71-8e0d-7731b1fdf74e"
        },
        "item": {
          "id": "36b59a12-b842-4203-9b68-39fd54f8cc44",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cc4847d3-4943-495a-8592-e35d3b69a1e2",
          "status": "Created",
          "code": 201,
          "responseTime": 13244,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c354c0-a3de-4e3d-9293-956f4a57b49e",
        "cursor": {
          "ref": "3827cb88-b9bd-4e8c-a012-cdf8a164839d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fd77e3e2-0b69-4d0c-b108-e7dc135f5101"
        },
        "item": {
          "id": "71c354c0-a3de-4e3d-9293-956f4a57b49e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "be16206f-405d-4ed4-b525-0839148b227e",
          "status": "Created",
          "code": 201,
          "responseTime": 10292,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e5bd4-5b74-496a-8f82-d3334eae0530",
        "cursor": {
          "ref": "4ed3473e-24dd-4f06-97e3-37ce407d58f3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "41611209-f5fc-4b52-adeb-6cd05830a645"
        },
        "item": {
          "id": "f15e5bd4-5b74-496a-8f82-d3334eae0530",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f1188350-8bce-401b-9b10-9b3da7210748",
          "status": "Created",
          "code": 201,
          "responseTime": 6345,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e450c-a538-45a8-8c61-0d7d2b808fea",
        "cursor": {
          "ref": "28a50679-02e1-4525-a298-e6f5e10c273b",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7382ce46-1499-4db4-bd36-f174cba7be3d"
        },
        "item": {
          "id": "b16e450c-a538-45a8-8c61-0d7d2b808fea",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "911657f4-a03a-4bf3-95e5-b1231389b9ef",
          "status": "Created",
          "code": 201,
          "responseTime": 6158,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aee52aa-ab63-41ed-96be-4bcd7ca943d7",
        "cursor": {
          "ref": "9ce757c6-29af-4b63-a941-a25299d6c90a",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cd1a862e-c887-4591-816a-23e044f8915b"
        },
        "item": {
          "id": "1aee52aa-ab63-41ed-96be-4bcd7ca943d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "87ad06a7-b4b3-424c-bc50-e126f0ff4315",
          "status": "Created",
          "code": 201,
          "responseTime": 7750,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89685020-6c55-4844-bd65-92f51a39cfcd",
        "cursor": {
          "ref": "7063e05f-e6a3-4140-a529-94d16b03ce90",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9b14ac2-c2d0-484b-9dc1-1eee8942fff7"
        },
        "item": {
          "id": "89685020-6c55-4844-bd65-92f51a39cfcd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "de5a3b8b-980d-4a12-a1b2-37f376d84a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89685020-6c55-4844-bd65-92f51a39cfcd",
        "cursor": {
          "ref": "7063e05f-e6a3-4140-a529-94d16b03ce90",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f9b14ac2-c2d0-484b-9dc1-1eee8942fff7"
        },
        "item": {
          "id": "89685020-6c55-4844-bd65-92f51a39cfcd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "de5a3b8b-980d-4a12-a1b2-37f376d84a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fa5082-9701-4464-a5f2-4069d9d069bd",
        "cursor": {
          "ref": "056bb111-b379-43d5-829b-0ed2296e61a4",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fb7227a2-a7d3-4f7f-aae9-cdbcb6b4415e"
        },
        "item": {
          "id": "c0fa5082-9701-4464-a5f2-4069d9d069bd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4d124474-2afe-40ab-ada0-1bf7b9aaf31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a84403a-9fd8-4b6c-a02c-8cab450d6f1d",
        "cursor": {
          "ref": "784759b8-dade-4ba4-8ba7-48d011afa371",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4d695b85-edfc-4c22-8af4-cfced80564cb"
        },
        "item": {
          "id": "4a84403a-9fd8-4b6c-a02c-8cab450d6f1d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ce952108-7904-4708-8e57-6a2236bad963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6b4f6e-4663-4ffb-8901-5a19a1602253",
        "cursor": {
          "ref": "b4bdcdca-7e81-41f2-befb-da61617c5f4f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9716014b-f360-4e90-88fa-3dd8a8f00664"
        },
        "item": {
          "id": "cb6b4f6e-4663-4ffb-8901-5a19a1602253",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3e7cece-6496-4d5e-9b6c-9c9feb044e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31832719-419d-405c-a345-f687fd004116",
        "cursor": {
          "ref": "c5d17672-7e1f-4d27-88f7-e4466aa39da7",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "76d39358-294b-4c17-9d32-516a3ee188e0"
        },
        "item": {
          "id": "31832719-419d-405c-a345-f687fd004116",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "46354351-c2da-4e12-8951-fe41e8b3d1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fa37be-5f5e-4d13-9072-717a0d261516",
        "cursor": {
          "ref": "25251cf3-1ead-4834-80c2-acc0bfeef9c1",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "92e36e7e-38fd-479b-aca9-986b584faa22"
        },
        "item": {
          "id": "48fa37be-5f5e-4d13-9072-717a0d261516",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3ac279ba-607d-4425-bef9-628ef3e1a69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc31ae14-eb3d-447b-b61a-8af6ffb9cd21",
        "cursor": {
          "ref": "6e568dae-5cf3-4dfa-8577-eff55fcbf76d",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5327b059-f665-4a92-80e6-a954b6bc0933"
        },
        "item": {
          "id": "dc31ae14-eb3d-447b-b61a-8af6ffb9cd21",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6f9d458e-00a4-49ed-b5fe-da0ce30cf1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78872e8a-ceeb-4673-b0d4-129ef63bc569",
        "cursor": {
          "ref": "06cbefcc-474d-4e5b-a99a-e7e4141183bd",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "03338fb4-33f6-436b-aaa8-ff6369533f8f"
        },
        "item": {
          "id": "78872e8a-ceeb-4673-b0d4-129ef63bc569",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "38db88e0-9b4f-45b4-9256-241e625c3c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16299bc-9c2d-480c-b37e-89be9339dcd6",
        "cursor": {
          "ref": "ac47c365-ba55-4659-bef5-5084b7743f05",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1a091343-b00c-4bd2-8cc6-4a4d3edc7506"
        },
        "item": {
          "id": "a16299bc-9c2d-480c-b37e-89be9339dcd6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a32e4f54-6ed5-44e1-b66e-755dbdd6760e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae078762-07c0-4548-9dd2-2e2fcc8ebae1",
        "cursor": {
          "ref": "e15e14ab-9e20-4df6-b586-7d1767ba371b",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d2da5500-a8eb-499b-9794-1d8149ca00f5"
        },
        "item": {
          "id": "ae078762-07c0-4548-9dd2-2e2fcc8ebae1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c4dc67b-0693-4dfe-9ee4-f57419989cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a0ca8-3087-452e-80a9-df1aff50fa76",
        "cursor": {
          "ref": "5d9605de-f898-43ca-a053-2dd6015002ec",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aaba7b0e-a948-4b4c-bb60-a13dbca0baf7"
        },
        "item": {
          "id": "456a0ca8-3087-452e-80a9-df1aff50fa76",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5f178607-e5bb-4dc6-8d1b-0e12e29e6757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fffdf6-1cf8-4a22-ba92-9e83952875ac",
        "cursor": {
          "ref": "c918a44a-4713-4429-8987-85b128dc31a9",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f691097b-573b-43db-8b47-2f342db0bc29"
        },
        "item": {
          "id": "34fffdf6-1cf8-4a22-ba92-9e83952875ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c91e863-934a-4a14-8608-cf245f50d09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6467129-7d3e-4f2a-967f-ab439922b736",
        "cursor": {
          "ref": "99db30bf-307a-4cc3-be9d-b828ad076be8",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b1e3ce9b-b3a9-4fa8-8462-b9fa658a0c3e"
        },
        "item": {
          "id": "e6467129-7d3e-4f2a-967f-ab439922b736",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ec3c68b9-fa69-427a-bc12-009185811593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c7b658-7d8d-4f4a-be78-b0abdb5f7d42",
        "cursor": {
          "ref": "c54a5bbd-2021-4722-a030-50da0ea753d9",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "772a4de8-2e74-4857-8f3d-93e079f6ae0b"
        },
        "item": {
          "id": "28c7b658-7d8d-4f4a-be78-b0abdb5f7d42",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9569caaf-a6e1-4f9d-95df-62c776e7378c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9901ceda-440d-4dc5-911c-c6caaa28f7b1",
        "cursor": {
          "ref": "a524de99-80b0-4348-bf9b-e4ea6eaab19d",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "423d66c2-4885-4048-b9f7-1af7e22c9f6d"
        },
        "item": {
          "id": "9901ceda-440d-4dc5-911c-c6caaa28f7b1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e9b60547-ae82-4e4a-bb89-f25d2c15fe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b6867f-983b-4bae-88ce-be18ede3fb45",
        "cursor": {
          "ref": "0ef85b5a-e878-415f-b474-2cd7fa2e4e9c",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0b7068e5-a828-4735-8b7c-90dc44caa397"
        },
        "item": {
          "id": "51b6867f-983b-4bae-88ce-be18ede3fb45",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eb3230ba-07a6-4ae9-a8ca-9523c65a1659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0b55cf-3bda-4692-8363-9cfdd4b5ecc1",
        "cursor": {
          "ref": "79495e7c-e6d7-438b-a2e4-f66a52e096b2",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8386eddb-c972-4691-99b4-4dd2cc56de42"
        },
        "item": {
          "id": "fc0b55cf-3bda-4692-8363-9cfdd4b5ecc1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a695dbac-ae50-4d5d-86b9-5443223624dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8041d08-d223-4b3b-83c6-9a1eb10a3719",
        "cursor": {
          "ref": "8d3a747d-9aa7-466d-bf5c-f8be18b31aa4",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0b7ba8d6-c7c5-40b7-a714-be96f977eb2a"
        },
        "item": {
          "id": "d8041d08-d223-4b3b-83c6-9a1eb10a3719",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5bac31ca-63d8-46df-9745-941d2fed84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599f5363-ef89-4155-8ca5-43329232de0d",
        "cursor": {
          "ref": "c7de4d44-7b37-4726-9a32-44abcab04f0a",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1e08fecb-9c46-4077-842b-e5626450064c"
        },
        "item": {
          "id": "599f5363-ef89-4155-8ca5-43329232de0d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6f2bf2b4-b0ff-420d-9a9a-a57cdde62d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76309585-0f52-4959-9b69-23de893da0cd",
        "cursor": {
          "ref": "273493b1-0fef-49e2-a108-c25896f04f25",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f3d95b2-0ee4-4872-b7a3-06ffdcf07273"
        },
        "item": {
          "id": "76309585-0f52-4959-9b69-23de893da0cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "454372a0-c43c-487e-a2bf-38c20afa34da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01b61fd-256f-4ca7-89e2-5c47f399bf4f",
        "cursor": {
          "ref": "014fb5dd-3a2b-45cf-b9d6-4b5892842dd9",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7b717fe5-2e94-4b61-b792-cc89982e3a78"
        },
        "item": {
          "id": "d01b61fd-256f-4ca7-89e2-5c47f399bf4f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "20978954-8ac1-4deb-94f9-0143510b8fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37efe86-5aeb-468e-8a81-55dbdb1535fc",
        "cursor": {
          "ref": "807a1fa6-ce54-4809-92dc-b0f89750d35d",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a9b3c3d6-5cca-40e0-a4ed-88bbe89e0a26"
        },
        "item": {
          "id": "b37efe86-5aeb-468e-8a81-55dbdb1535fc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8cc6d1af-de60-45aa-afbf-02cb46e3178a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5d62d8-9ad5-48e5-bc7a-ac60940968bb",
        "cursor": {
          "ref": "7130b39d-67ca-41be-bcd5-55999bec4ecf",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f19a4908-1093-46d5-b556-3c658b436dd5"
        },
        "item": {
          "id": "0f5d62d8-9ad5-48e5-bc7a-ac60940968bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c376692-4180-4b10-bf62-1f8aa200d5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d002706-50b7-47af-98da-d7132ef83c26",
        "cursor": {
          "ref": "18fb95d4-cc68-41d3-901a-383cbda98bdf",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3ffbcf95-4b7f-4f12-b02e-da581139377f"
        },
        "item": {
          "id": "5d002706-50b7-47af-98da-d7132ef83c26",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c3efb144-bae6-4531-9ebd-f8de4fd819f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f682bc-f51e-47e7-9c79-3f46d2cb5ec7",
        "cursor": {
          "ref": "443894cf-3163-4359-a66e-0b7271c37f0f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "347e26d0-f74b-4860-b19a-53626deb0860"
        },
        "item": {
          "id": "72f682bc-f51e-47e7-9c79-3f46d2cb5ec7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ff6d5e27-72e9-4003-92e7-eb575311ef24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf69f61-421d-4ab6-bf3a-625ea4031f5e",
        "cursor": {
          "ref": "d00b0aa1-6090-4a68-b0ec-78444dc0925f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b55d3b70-9b15-4f6d-88d5-13b0d38c0bb6"
        },
        "item": {
          "id": "eaf69f61-421d-4ab6-bf3a-625ea4031f5e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "46b879d3-7a41-4978-b826-c3eff7e9c19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4085915f-424b-4eb5-95a5-78996235e907",
        "cursor": {
          "ref": "76504454-758b-4949-8a8c-2605c5dca664",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8710b4c0-f107-4a7b-9dc5-cee923a48837"
        },
        "item": {
          "id": "4085915f-424b-4eb5-95a5-78996235e907",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da839023-e499-4361-8d2e-8f6e42c68288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d23138-b5da-4b61-a33b-49e78bbd56f2",
        "cursor": {
          "ref": "1ee2662b-f481-47da-ae06-384b068333e0",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fd051759-5da5-4672-947d-9d90ff633405"
        },
        "item": {
          "id": "c8d23138-b5da-4b61-a33b-49e78bbd56f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a1e3d36a-b6f1-446e-a44e-6d1e9cd92850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ae1d3-6010-4a58-9215-f542272a9d52",
        "cursor": {
          "ref": "dff5e2e6-1591-4eee-af4f-bdff9a82b3ec",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e75800f2-21d5-491e-88a4-6c21cfbceb15"
        },
        "item": {
          "id": "964ae1d3-6010-4a58-9215-f542272a9d52",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4b23e88-f425-4b74-9b4b-edb7e3d34e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4ee712-9945-40b6-aa7d-1e33fe848460",
        "cursor": {
          "ref": "f3314a96-e5b4-4eb6-815c-80f8efc86ae0",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "57043e5f-c061-4a9b-8a36-8deb670f7ad6"
        },
        "item": {
          "id": "3a4ee712-9945-40b6-aa7d-1e33fe848460",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b5abb436-8585-4bf9-839d-47082786c3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c2c75f-2841-4b3c-b782-7d2d88f41f10",
        "cursor": {
          "ref": "23fdb61b-7930-405d-8a43-cf011670d562",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "de8c7112-11c0-4189-85bf-018e475cbbc9"
        },
        "item": {
          "id": "89c2c75f-2841-4b3c-b782-7d2d88f41f10",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "09cb66de-e3d9-43ac-8811-017876d8575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4756de03-f255-41f2-abc8-522d3722d67e",
        "cursor": {
          "ref": "5ae912a3-9b3c-4011-9a32-ca85f7f56d5c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "afcc974e-02cd-46b1-b8ea-24bfc3a5e40e"
        },
        "item": {
          "id": "4756de03-f255-41f2-abc8-522d3722d67e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9e5d7be3-f1b8-49e1-b589-76e0f40f7e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b553e3-35e1-44bf-9aa4-59fcaf0afd8d",
        "cursor": {
          "ref": "4d938e28-445f-450d-84bb-9825ee4d850d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff75b2e9-5592-473e-9d06-9e0ed9a3647b"
        },
        "item": {
          "id": "55b553e3-35e1-44bf-9aa4-59fcaf0afd8d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96ef2258-673c-49a3-a99f-d069da385cb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574cf6b5-9a1b-4fce-8dd5-afc27bcc1b03",
        "cursor": {
          "ref": "190fc004-5927-4101-9b8b-dbf497a13a39",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "13172830-b13b-462c-a662-db1d6eec5473"
        },
        "item": {
          "id": "574cf6b5-9a1b-4fce-8dd5-afc27bcc1b03",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "7dbed742-7a13-40ca-af68-9cc17a52c149",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 689,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835ae4a-eb7c-40dc-a29c-91a03a38f202",
        "cursor": {
          "ref": "8919f84c-245b-4d90-a9e6-186a031d733c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73641d54-62e4-42d4-8067-03921133bb1a"
        },
        "item": {
          "id": "1835ae4a-eb7c-40dc-a29c-91a03a38f202",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "00f9f836-d055-4367-8ec8-92fc2576ee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835ae4a-eb7c-40dc-a29c-91a03a38f202",
        "cursor": {
          "ref": "8919f84c-245b-4d90-a9e6-186a031d733c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "73641d54-62e4-42d4-8067-03921133bb1a"
        },
        "item": {
          "id": "1835ae4a-eb7c-40dc-a29c-91a03a38f202",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "00f9f836-d055-4367-8ec8-92fc2576ee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d5546e-2eca-4b28-9c26-ffd5cbe100d1",
        "cursor": {
          "ref": "7492d7d1-046e-47ba-ac0d-37be3cc9a61d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b8ece23d-d9b4-4778-a24f-779cf7b8c788"
        },
        "item": {
          "id": "b0d5546e-2eca-4b28-9c26-ffd5cbe100d1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8accfc7a-b820-40ee-81c8-c97380fc1300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711f8a71-3e10-421a-a988-959742c27d22",
        "cursor": {
          "ref": "9fe0a9d2-ea01-446f-a81d-1e0e232bcc7a",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f8e202b6-91b2-48c3-9ce5-c7d43fb8ac9b"
        },
        "item": {
          "id": "711f8a71-3e10-421a-a988-959742c27d22",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9d893742-9104-4ed1-a185-4342b6a1b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d5cd5e-bc4e-438f-a387-9467a801cfdc",
        "cursor": {
          "ref": "3823cf38-7ebc-4b03-8cfd-0e568859871c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bbea649b-22fc-44ad-b085-3048abecfec8"
        },
        "item": {
          "id": "35d5cd5e-bc4e-438f-a387-9467a801cfdc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "14cf4707-68cc-4dbd-8eb2-a69c8fecbaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dd4cbd-3325-4f5a-a85e-964065d494bc",
        "cursor": {
          "ref": "56a59510-96a8-4b5c-9902-a5600822bf83",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "998fe982-b2a4-4e14-8efa-a7d513a6d5bf"
        },
        "item": {
          "id": "d0dd4cbd-3325-4f5a-a85e-964065d494bc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9db0374c-9627-4dfe-b8b6-92819e91f480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1d9c0f-ff58-45a5-8ada-e9bbeaf4d1e2",
        "cursor": {
          "ref": "4c6ef5a8-401f-4aa5-bf00-7d0e4f04d0fc",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "242216e5-9a9f-4551-b8cf-af2f8f88af6b"
        },
        "item": {
          "id": "9f1d9c0f-ff58-45a5-8ada-e9bbeaf4d1e2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dcfb3938-555d-4aa0-aee6-15ae3c1a6d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fc7aa8-06a7-4b31-9e8f-688bff248913",
        "cursor": {
          "ref": "b20684d0-c75f-47b4-ab79-f8ccc8aa9dd0",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "91aed9e5-1af9-4069-a17d-77c85244dfbe"
        },
        "item": {
          "id": "d5fc7aa8-06a7-4b31-9e8f-688bff248913",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2bcf24b8-d763-4d21-8447-4d80aa136b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1fbd7c-a1b9-48cd-84f9-d2774fe1a68f",
        "cursor": {
          "ref": "ea478d04-42c2-4085-8ff8-e7cc81ca99e9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "555ee34c-4af4-4ca0-b321-90a9711bfa8b"
        },
        "item": {
          "id": "5e1fbd7c-a1b9-48cd-84f9-d2774fe1a68f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "298abc8c-e0d4-4dee-ba97-8d53fe3f4922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b71401-c20d-4175-9ae8-9da2a9f3f0e2",
        "cursor": {
          "ref": "062983c1-35a0-498f-85d9-320e45f3a800",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e7d0cdd8-76f1-4211-a17a-f42cad1707c8"
        },
        "item": {
          "id": "86b71401-c20d-4175-9ae8-9da2a9f3f0e2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "115c515d-b28e-4d18-aa89-7b711840029d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97891b40-9230-463e-828a-29b1786f0441",
        "cursor": {
          "ref": "bf0ac80b-c297-4f5a-b073-d79229668343",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9dcad3b1-1a54-408d-9011-b6d7e8273333"
        },
        "item": {
          "id": "97891b40-9230-463e-828a-29b1786f0441",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1ef9c2a4-fb58-4fae-b1fa-fd5ef1322345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798c5811-e321-4b31-8a23-e88299d46a89",
        "cursor": {
          "ref": "ce8a3e12-3856-474e-b623-5ca5436ee224",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cb080bc7-4f4f-45a9-8827-3bfb37edd0d1"
        },
        "item": {
          "id": "798c5811-e321-4b31-8a23-e88299d46a89",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f0fbfb30-19c2-4e02-a764-6e69d6781580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c34652-ff9c-4077-aa16-d404721878d5",
        "cursor": {
          "ref": "f5b1bd2c-9a83-4cf8-93d2-f69b10e6d39a",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c8d57916-5ee5-422e-ac4f-7ab81b2744cd"
        },
        "item": {
          "id": "e8c34652-ff9c-4077-aa16-d404721878d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6bb6b47e-13fb-4ef2-ae88-a9eef5e05771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eed20fa-1a1a-43cf-baa7-ad68da25fd57",
        "cursor": {
          "ref": "94378fca-29b9-4d75-acc2-e1edc5682565",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94fb5c3e-0be6-4aa4-aa2a-5699a152b437"
        },
        "item": {
          "id": "9eed20fa-1a1a-43cf-baa7-ad68da25fd57",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53ec65e7-9875-40e8-a99a-f31cf953a16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4db090-f3d2-4412-9290-ff1fb623bf87",
        "cursor": {
          "ref": "9be522b9-2b6d-4ad4-be35-58a64c3eec3a",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4ebaacdf-a839-48fc-93d4-ff73ce314a40"
        },
        "item": {
          "id": "bb4db090-f3d2-4412-9290-ff1fb623bf87",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3789f9ad-0e8d-4116-8b43-cbc9a9e36171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaaeb27-2f43-4372-adb0-abe0726d6d62",
        "cursor": {
          "ref": "8d134fd8-6e70-4305-bdca-07ca35649823",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "00e6847a-9286-4ff4-b789-809520c3f20e"
        },
        "item": {
          "id": "feaaeb27-2f43-4372-adb0-abe0726d6d62",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "94efbf38-2bc0-4c10-89c0-163b6f804731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da263c2-6263-42b4-91cd-44b645880823",
        "cursor": {
          "ref": "6d918643-1a04-4434-b035-557a22cfa1fd",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "23b36416-6f75-4bc1-be25-6982eb1e4bda"
        },
        "item": {
          "id": "6da263c2-6263-42b4-91cd-44b645880823",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fce374a8-b737-4c71-96cb-7934441fe614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa2f47b-270c-43c8-b1b7-d23d9a651382",
        "cursor": {
          "ref": "d355b2c9-44e1-48af-a6da-2e80e22bae9e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6e36af5f-0b09-4558-888d-34b5b3bfd27e"
        },
        "item": {
          "id": "8fa2f47b-270c-43c8-b1b7-d23d9a651382",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ee6d1ad-65ef-4420-9b41-3f8a4d6a816a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1639,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d0a946-7e90-4bcd-b781-fde7020e465a",
        "cursor": {
          "ref": "17c98756-e36a-4b29-bdb0-7c328d812100",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "57accc70-184a-41c1-90b5-37235e0367aa"
        },
        "item": {
          "id": "00d0a946-7e90-4bcd-b781-fde7020e465a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7f0b066b-4255-4c19-9238-198681c72075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2551,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b6e61c-c3be-4472-885c-507c6c8d5b67",
        "cursor": {
          "ref": "3ec4ae48-19e3-42b7-af88-cbf35d403882",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e69897c3-e6b3-474b-a9d2-de59f8108815"
        },
        "item": {
          "id": "58b6e61c-c3be-4472-885c-507c6c8d5b67",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4007fd78-a158-4320-8b01-3423b39178d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2462,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b30b982-2769-41af-b5e5-21197464c548",
        "cursor": {
          "ref": "df5f4aac-da3f-4a53-a7cb-0eeaee5bb53d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d7967ea-b431-41d0-aca5-93613b596391"
        },
        "item": {
          "id": "9b30b982-2769-41af-b5e5-21197464c548",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4678b9d9-d7e8-4c61-89b4-6cb31b087cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3478,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1863d35f-4a8a-4862-aa6d-715ff408f0ff",
        "cursor": {
          "ref": "d0873c68-f13e-441c-b520-a397b6428162",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a348dbe7-3456-41a4-a41f-aca83cccfd24"
        },
        "item": {
          "id": "1863d35f-4a8a-4862-aa6d-715ff408f0ff",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "772af6c3-f589-46e5-9470-fe7001a4a0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2567,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75c9303-7438-4413-adae-2473daaa6fa5",
        "cursor": {
          "ref": "50ef18db-b854-4780-b781-6d2d9e159687",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dcff24be-d7a5-4954-a1d5-75a754bc24ee"
        },
        "item": {
          "id": "f75c9303-7438-4413-adae-2473daaa6fa5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3c8a04e8-e952-43d0-b8da-8f7bb19eeb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1758,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4da6ac6-a289-404c-9517-873a8e3ff01c",
        "cursor": {
          "ref": "a8cb8887-6fc9-4579-a2c5-2261231d9039",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4ab330b9-fa9e-4f42-92a9-18fea2377c01"
        },
        "item": {
          "id": "f4da6ac6-a289-404c-9517-873a8e3ff01c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "86e4d077-c77b-4fc1-b472-62d97ca60053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef190f16-53a4-4b99-a352-3606aa96a5d1",
        "cursor": {
          "ref": "c9c8802e-ade2-4fda-8c6c-780d0f69f174",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f889d104-7109-42d9-b60e-b27129b5e33c"
        },
        "item": {
          "id": "ef190f16-53a4-4b99-a352-3606aa96a5d1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f20f4df2-79f8-4341-a4b8-577fea49330f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34429e60-3560-4a9c-a944-f0cb3e237844",
        "cursor": {
          "ref": "46077fd1-5f78-406b-a631-da7be06688c9",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "605ba49c-0484-410b-a699-3fb2a9a7f3dd"
        },
        "item": {
          "id": "34429e60-3560-4a9c-a944-f0cb3e237844",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f695a9dd-09f1-468b-9451-fc398a5b7c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466f5062-b7ec-4d30-88a8-1908bca4ca2c",
        "cursor": {
          "ref": "4462e0ad-81c0-4ddb-92ba-bd04a79c99fa",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "31eea0aa-0367-455d-8e22-68fbb7900e98"
        },
        "item": {
          "id": "466f5062-b7ec-4d30-88a8-1908bca4ca2c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "112d4f01-6753-4b00-90d2-c6bf16d28e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7505fb0-2b3a-4b85-8e92-eeb9d0e2786c",
        "cursor": {
          "ref": "2bb0bf51-57ae-49c0-bb93-6115a7d2d525",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6cfacbf9-1785-4afb-bd8a-6d84fd3c35f8"
        },
        "item": {
          "id": "b7505fb0-2b3a-4b85-8e92-eeb9d0e2786c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "56df693e-a150-4c55-8b11-49a17923f72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962f1a0d-2db7-4104-afad-69650612ddd7",
        "cursor": {
          "ref": "186c3690-fc0e-4b34-93b4-5b042108ee42",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6b9b371f-355b-45bc-b402-2cd72f3311ef"
        },
        "item": {
          "id": "962f1a0d-2db7-4104-afad-69650612ddd7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f245681a-bbae-4849-9731-f52f6c11adb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee338f58-c5c0-4409-a619-b1f338f98183",
        "cursor": {
          "ref": "93851900-0d58-49ee-92fb-9d4ffd242595",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "608ea0c4-f6f2-49f2-9383-90ca9e152664"
        },
        "item": {
          "id": "ee338f58-c5c0-4409-a619-b1f338f98183",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ef5e0d24-edaf-4bec-8c9c-eb978ccf5357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b6a771-93fa-4c04-ab9d-da66e73096c5",
        "cursor": {
          "ref": "82c52968-45dc-4201-9d9f-9897870bdfc4",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d553ffbf-a098-49ef-823e-deaa25a975cb"
        },
        "item": {
          "id": "82b6a771-93fa-4c04-ab9d-da66e73096c5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9622c1ca-ec6d-4da7-be3b-87afdf2478f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24ace57-3def-467e-8c2b-4d5e14702a8b",
        "cursor": {
          "ref": "e2475562-ca7b-4ec8-a2f8-6864385b37d1",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "25b86630-7606-4531-8c56-a305b72d75fe"
        },
        "item": {
          "id": "f24ace57-3def-467e-8c2b-4d5e14702a8b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8481d8c9-e5cc-45df-8cac-f82198e9d4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94083e3a-2857-4671-bf3c-b8f1d5f6a5bf",
        "cursor": {
          "ref": "0274b98f-9b38-48fa-85d7-53215429c895",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2682ad17-9cbc-43dd-a403-270eee08f7fc"
        },
        "item": {
          "id": "94083e3a-2857-4671-bf3c-b8f1d5f6a5bf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f08f81bb-63d2-4c46-a6f4-df3252a4092c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7d9efe-9e72-4af4-b26c-18da9fc907c0",
        "cursor": {
          "ref": "815b62a9-07e4-40fd-bab6-cdd916a2c693",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "256f02e0-d954-4a8c-b79b-0aa70e1989b2"
        },
        "item": {
          "id": "7c7d9efe-9e72-4af4-b26c-18da9fc907c0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "58dc8498-60a1-451d-b237-b5718a84087d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a1f8c2-025a-4a96-a93e-3f11a0fe1d4d",
        "cursor": {
          "ref": "db6367c2-b26c-4bc5-ab6e-f0e03c2d0f3d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "79af253f-b25c-4b42-8362-08bbd2e32e5d"
        },
        "item": {
          "id": "96a1f8c2-025a-4a96-a93e-3f11a0fe1d4d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "242784e5-6d22-40e6-91e2-110b1729deaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dccd26-b177-4157-b210-2af29214b31b",
        "cursor": {
          "ref": "0f024132-671e-471d-a589-8e1755ec5a41",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0cd5dd82-faef-4b5c-8827-f1b33bce83ec"
        },
        "item": {
          "id": "d5dccd26-b177-4157-b210-2af29214b31b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "81a7c156-acb6-4eeb-b154-2a75e0ff63d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69643e22-0612-4e9f-a0cf-d5c3b1086acf",
        "cursor": {
          "ref": "7f7eae36-c3c7-4731-9fba-9815b43de77b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1eb4f42b-d9d8-470b-999f-6325082c9d45"
        },
        "item": {
          "id": "69643e22-0612-4e9f-a0cf-d5c3b1086acf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "79f32eaf-9d4e-490f-8172-6bf5ca185984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85995566-2c65-43ae-99d7-4c59a92b677c",
        "cursor": {
          "ref": "dcb9ba61-560c-4ca0-a36d-877cf29ae5a1",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b083a3fe-95f1-4188-b935-2e67186090e0"
        },
        "item": {
          "id": "85995566-2c65-43ae-99d7-4c59a92b677c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "522b65d8-3d5d-4bb2-91eb-5092196b5a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c945f4cc-0f9a-4f1f-82ab-1680e8dedee4",
        "cursor": {
          "ref": "afeffb6c-9b91-4f3f-9ee5-ceb4456fe6d1",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a7b8d6b1-58db-4577-9518-51dd842d1cdb"
        },
        "item": {
          "id": "c945f4cc-0f9a-4f1f-82ab-1680e8dedee4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "14ba00af-bf1c-4c3e-9a64-ff0822a8f41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366c452c-0d8e-47b9-a9be-cf7b6b3436cc",
        "cursor": {
          "ref": "9fe74955-7e39-4ca7-833f-2af3ac8293bf",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb6bf8e5-9558-4faf-a040-668227589b87"
        },
        "item": {
          "id": "366c452c-0d8e-47b9-a9be-cf7b6b3436cc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bf855259-cbd2-46c3-84d5-d5b39ad03374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38610898-b023-42e7-b350-0a5fe96ef76c",
        "cursor": {
          "ref": "50600e08-7af8-4cfa-8434-badcebbfb3b3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2d12b50b-715e-44e6-a68b-8dbf96f29664"
        },
        "item": {
          "id": "38610898-b023-42e7-b350-0a5fe96ef76c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "004bfee9-d83e-4102-a974-dbfe0f69aae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705a7ce5-8b8e-41ce-a78a-c6ca8552ff38",
        "cursor": {
          "ref": "1d45b766-630e-4b3c-a36b-30c888eda279",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0baa654a-15f7-4358-88b8-37e362899388"
        },
        "item": {
          "id": "705a7ce5-8b8e-41ce-a78a-c6ca8552ff38",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a9e1c660-bf04-4e9c-bf39-79487736c101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293282c8-8df1-485e-8ff5-6579149457f0",
        "cursor": {
          "ref": "c4668769-58d5-41a7-a3f0-8931e48ef55a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8198876-6034-416c-b9f0-ea4ca6982e17"
        },
        "item": {
          "id": "293282c8-8df1-485e-8ff5-6579149457f0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e17d96f-2d14-4178-8833-8677bdc78404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a680e27-2f0a-44c4-b3a5-446afa545a2d",
        "cursor": {
          "ref": "e5055ddb-3042-44e7-a32c-cf5040006b20",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "384072c0-57db-40ff-8552-1dc662849778"
        },
        "item": {
          "id": "3a680e27-2f0a-44c4-b3a5-446afa545a2d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ec5ba577-3145-4a5c-bd1b-da22bff0602c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab078e9-009d-4c17-983c-407203c93500",
        "cursor": {
          "ref": "6060b9a9-d36e-42b9-84e2-90d0e7c48e56",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e0a88ad7-0487-49ef-bf39-ee82c74f90bb"
        },
        "item": {
          "id": "1ab078e9-009d-4c17-983c-407203c93500",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4dd9b65f-28fe-4134-ba7d-6d0c58cad2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ffd0ae-2ecc-4af4-a850-903107efa396",
        "cursor": {
          "ref": "a4bb03fb-b239-438e-a442-6fd93d0bdd60",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "898dad7c-95b1-4ade-8806-08c068ed2ef1"
        },
        "item": {
          "id": "47ffd0ae-2ecc-4af4-a850-903107efa396",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "db1300be-ee52-490a-88a1-cbfcbe515b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c999d449-b72e-4b28-a9c8-b89ff017d8c3",
        "cursor": {
          "ref": "881e3a94-df52-4680-9368-23c1b712dafc",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a5750ceb-b886-44a5-95b3-e8e389b32413"
        },
        "item": {
          "id": "c999d449-b72e-4b28-a9c8-b89ff017d8c3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e29ae57-803c-4bd1-a2df-e339fa8d6f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30705b1-5f8e-4e84-b0f2-d2b898067557",
        "cursor": {
          "ref": "e72254e6-f71a-4345-89b2-f23a7ca04b03",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d9bb7187-512b-4383-bebf-9e49ecd0522d"
        },
        "item": {
          "id": "d30705b1-5f8e-4e84-b0f2-d2b898067557",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f1720126-3d7d-4944-8e29-b2e0d2d6b250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75674d5d-a186-403d-8191-bfa2a2a287b7",
        "cursor": {
          "ref": "2a2ebc51-ca84-4832-8f4d-4fc4c0a6377b",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3929e914-9cc6-43f1-a46f-a950814b2dbd"
        },
        "item": {
          "id": "75674d5d-a186-403d-8191-bfa2a2a287b7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4b776e48-4324-40f5-9ab4-26898f0b4f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc735ed3-87dc-4b22-8f27-35c762145d65",
        "cursor": {
          "ref": "b156fb2c-4b1d-4784-b558-82612258fde8",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "606f819a-f589-44d4-9ef3-846d5507e5e1"
        },
        "item": {
          "id": "cc735ed3-87dc-4b22-8f27-35c762145d65",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "553d870b-d8d7-4e29-8327-e144377d50fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e3280d-b2e8-46dc-9b0c-76b4ed7a2e5f",
        "cursor": {
          "ref": "eafb6929-4604-4e3c-8b6b-22a8afac1b94",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "836aef62-3210-449e-abd9-d62f10988afe"
        },
        "item": {
          "id": "60e3280d-b2e8-46dc-9b0c-76b4ed7a2e5f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aa0ee13c-dfd0-40cd-8cb0-e2ab21205129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46135314-7b77-4dcf-af25-21b01c42cccc",
        "cursor": {
          "ref": "844ef91f-7dd7-4dae-88f5-5a7a519b04f1",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "162c6bba-2547-4358-882c-fc9ab692a9e7"
        },
        "item": {
          "id": "46135314-7b77-4dcf-af25-21b01c42cccc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fd35cd63-e712-47c2-baab-05546dafd25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff352ff-273f-48a4-acfd-405bcce962a9",
        "cursor": {
          "ref": "49ed02f3-8809-49eb-b749-5acbf76ef8db",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b1b4ef8d-10f6-427b-b67d-a80c57e2373c"
        },
        "item": {
          "id": "8ff352ff-273f-48a4-acfd-405bcce962a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d5700b28-2ab4-4150-97cb-dec7fbb6a15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe6f875-77e5-4edd-9b52-dff5d7c089fc",
        "cursor": {
          "ref": "0050319c-4dba-4b56-b690-74e37c1c3e2e",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c0c3e8fe-3801-43dd-9347-0599b57aecfb"
        },
        "item": {
          "id": "6fe6f875-77e5-4edd-9b52-dff5d7c089fc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "77ab27d1-f764-4026-986d-e98b72d0fa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2af806-7ba8-46c7-a026-25ae5078012f",
        "cursor": {
          "ref": "16b7f975-c99f-4a11-b0fd-da8c5afea38e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4803bc0f-d780-4728-912d-cba8a86450ba"
        },
        "item": {
          "id": "9f2af806-7ba8-46c7-a026-25ae5078012f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "afcd4e76-7f4a-4a2a-9ab5-438ddde44ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f39955b-4c58-4397-a4ec-d683a6b44b36",
        "cursor": {
          "ref": "2166653f-21c0-4779-b119-9de6ddc392ac",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c02a295d-6771-4c92-ab80-61ad2c91b568"
        },
        "item": {
          "id": "0f39955b-4c58-4397-a4ec-d683a6b44b36",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d42b411a-5a61-4006-bb92-91a3f8bb4066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12a67ae-4525-4ce0-b6dc-0eaca12e1ff0",
        "cursor": {
          "ref": "01b399b8-621f-4b1c-85d4-29fe93ffc4aa",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a5e0840d-dc43-4252-964e-5fbc412b84aa"
        },
        "item": {
          "id": "f12a67ae-4525-4ce0-b6dc-0eaca12e1ff0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3794928b-faee-4b27-8b99-fb0f70910d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6a54ca-2d4d-47c5-b44f-2b37d7fabf0a",
        "cursor": {
          "ref": "77dd6ed6-1aac-4964-a48b-cb975311f3b4",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "43d36c0f-e5fe-4f4d-ab94-05b88865b371"
        },
        "item": {
          "id": "ab6a54ca-2d4d-47c5-b44f-2b37d7fabf0a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a3eb934d-9266-4211-acfc-9149c203a042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c27b3b-9aa6-4d9f-b9cb-bab5e59e2c20",
        "cursor": {
          "ref": "6627f055-3368-420f-b127-df24653cfffd",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "50958319-9b67-41e9-90e9-26eba316a8d5"
        },
        "item": {
          "id": "37c27b3b-9aa6-4d9f-b9cb-bab5e59e2c20",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b16f8b25-ebc3-48c4-908d-4fab111706fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5ca4bd-2ce5-40af-b094-91a549783497",
        "cursor": {
          "ref": "33f1fb07-92f4-4df2-9549-fc52bfbf8740",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "54833506-7c28-4988-825c-b4062bfbeb8f"
        },
        "item": {
          "id": "db5ca4bd-2ce5-40af-b094-91a549783497",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f0fd82f2-163a-4ac4-bc33-b9583c7d1e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd2925-f0b2-4c65-a39b-e4e42e495ca6",
        "cursor": {
          "ref": "4f86d965-1c23-4e66-915b-620b766cd1fe",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e1d5ae4e-a129-4f4f-b447-9ad77bac2223"
        },
        "item": {
          "id": "a1bd2925-f0b2-4c65-a39b-e4e42e495ca6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b8aef302-b6e1-4be6-b3d6-3bb31ebd68fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe64e659-fe24-4d01-83e1-478626668c12",
        "cursor": {
          "ref": "ea258720-864c-4470-af8e-656f3092ab8d",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fe47e4d9-a4cf-4e10-825f-610134b557e8"
        },
        "item": {
          "id": "fe64e659-fe24-4d01-83e1-478626668c12",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed4270a3-9476-4aab-b099-11d82c9d00cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16760aae-5dcd-40ca-81e0-4b3b7bd52190",
        "cursor": {
          "ref": "77beff7b-98a7-4c27-b2a1-ee731f11ba0b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f16b350a-a425-4026-87ab-d7214bfb658a"
        },
        "item": {
          "id": "16760aae-5dcd-40ca-81e0-4b3b7bd52190",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "29dd5eb1-e415-490c-aa8b-06d31440515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f09cca-fbfc-40cd-bfb8-37d0a8f11cae",
        "cursor": {
          "ref": "448eae48-d95f-4dbc-ab0d-0937205f4925",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7bd9c966-094a-4caa-83c4-e13761783ef6"
        },
        "item": {
          "id": "e2f09cca-fbfc-40cd-bfb8-37d0a8f11cae",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "099b27d2-4584-43c6-9e82-3001f9195b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6d428b-22c2-426e-972b-3fe2ed4cd9f0",
        "cursor": {
          "ref": "594fcffe-f7fc-4515-80e7-70c576f36e66",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0b4d5f43-cc0c-4969-a82e-2f6f9bebab3d"
        },
        "item": {
          "id": "8a6d428b-22c2-426e-972b-3fe2ed4cd9f0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9a666d18-368e-4ce7-9200-bee8e01238a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080f3082-73f0-4aae-a648-f4398b7505d9",
        "cursor": {
          "ref": "efe9ea86-8309-417c-b4ec-6481bc0855c6",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5a731460-a184-4baa-8e4b-42c18cd87ac1"
        },
        "item": {
          "id": "080f3082-73f0-4aae-a648-f4398b7505d9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d904e1be-7d1d-40c5-ae09-aa366406d14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02508a10-37f1-43a8-ad9e-fc185702ff53",
        "cursor": {
          "ref": "bfb1f2e0-650c-4786-8149-c4d67ebf201b",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "97000525-f8d8-451c-81eb-4c5555e9ae0e"
        },
        "item": {
          "id": "02508a10-37f1-43a8-ad9e-fc185702ff53",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "262a1b14-d5c4-41c4-b2f2-0bdd6e491635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafa6d3c-5370-44bb-96e3-049dcaecdcfc",
        "cursor": {
          "ref": "d996290b-3c00-4c6a-b88e-87518a02963e",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e3fff897-09bf-4122-b67d-6687055a6e23"
        },
        "item": {
          "id": "aafa6d3c-5370-44bb-96e3-049dcaecdcfc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5f18dfde-7f21-4965-ae46-c420b23f286e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ddf6c7-c5ad-4c4f-be63-55b337ea40b1",
        "cursor": {
          "ref": "94335b7f-7f75-4891-b5ff-0a8db5fc7f7a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b30ed96b-dbcd-49f2-8c11-b9bcf139ff2e"
        },
        "item": {
          "id": "73ddf6c7-c5ad-4c4f-be63-55b337ea40b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "94e0e7f5-d957-4108-a452-5941da410cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e665ab-b49c-4fd2-ac9b-d2b52bc0dbde",
        "cursor": {
          "ref": "62254888-02bb-406d-bb8e-98aaf5d80cbf",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7e817dfe-5901-48d2-b5d8-e01273204fea"
        },
        "item": {
          "id": "a7e665ab-b49c-4fd2-ac9b-d2b52bc0dbde",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b0486f97-ef69-4534-a8c3-90e5f7584b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f14f1b2-a9d6-4854-8066-2cc3c99c734b",
        "cursor": {
          "ref": "469e46fd-e156-4c1d-a05f-a417bf43265a",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f83930ce-dc8c-47b5-8b51-a65cc5c55068"
        },
        "item": {
          "id": "4f14f1b2-a9d6-4854-8066-2cc3c99c734b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "52351598-1279-46ca-a850-82e2e938f306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f16137-dfd5-480e-950f-49aa5ab0bbb6",
        "cursor": {
          "ref": "20342374-15a7-475c-a934-940a61e060aa",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "366fb6db-969d-492c-91b6-d2a656e8c499"
        },
        "item": {
          "id": "56f16137-dfd5-480e-950f-49aa5ab0bbb6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7943a437-74ca-4ea3-a32c-95ce5d713dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5430e2-eadd-4d71-8d1f-29424e029a5a",
        "cursor": {
          "ref": "5320e336-705a-4bd6-8141-ec754b52d2ec",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "55df6142-4da7-43e6-bf29-12d3a8ba998d"
        },
        "item": {
          "id": "df5430e2-eadd-4d71-8d1f-29424e029a5a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "402b6eb0-2a87-484f-ab5e-294561bb31a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d13c69-3107-418e-b5e2-bf79fb13b6d8",
        "cursor": {
          "ref": "8f3be15e-d227-4f08-af5c-478b376bf8f9",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f6e18830-2ad7-4b27-a120-7b381f29e034"
        },
        "item": {
          "id": "35d13c69-3107-418e-b5e2-bf79fb13b6d8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d977b8a5-2a24-4a57-8a36-6f8c0618a0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6dfce7-6a69-4118-af93-18fd20c9da9d",
        "cursor": {
          "ref": "97c3956e-5912-46b1-98fb-24e5c2313c0b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "84ae7c4b-bc3f-4ccd-adb2-ec012f9fde63"
        },
        "item": {
          "id": "ad6dfce7-6a69-4118-af93-18fd20c9da9d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7a9345de-f096-4d0e-afad-35b6df32c56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445c325-3d67-49a7-95b0-77641cc264c1",
        "cursor": {
          "ref": "4b89259e-b117-4739-99f9-99347343bbd9",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "442250e0-9cd2-4329-b16e-ea65528339b7"
        },
        "item": {
          "id": "4445c325-3d67-49a7-95b0-77641cc264c1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0be3f01d-f42b-4d5c-8d1c-f3741c1ab93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c2ce69-ac06-48a7-8e87-069f107c1066",
        "cursor": {
          "ref": "2e35924e-b982-4994-bfa9-70fa79a2f3e3",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5b78ae0b-7cc5-4dc5-86f7-e4a414a0414f"
        },
        "item": {
          "id": "71c2ce69-ac06-48a7-8e87-069f107c1066",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2f5022c0-2624-425b-b487-467c170542c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e16788b-5db1-4c0a-961e-58956c822f06",
        "cursor": {
          "ref": "c3ec21a1-0836-4cb1-85a4-806de6363fa5",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "49ac779b-b89d-409f-8492-a9e08d1f3a95"
        },
        "item": {
          "id": "6e16788b-5db1-4c0a-961e-58956c822f06",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d77ba000-f7da-4e04-97f2-7122aecf847d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa88cf5f-7b18-4d55-a381-ba15d04090b5",
        "cursor": {
          "ref": "749c1fb0-d0c7-49b6-bb5c-be1ee604c50b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b59cd836-f2fd-4ed7-bed4-ceb969ae37e0"
        },
        "item": {
          "id": "fa88cf5f-7b18-4d55-a381-ba15d04090b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "056ea240-8151-42d2-bff1-8421b4ba51b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2c3d33-2861-4cb8-a7fe-a72c6a253b69",
        "cursor": {
          "ref": "a24dd2d5-b324-4472-a14e-96e0daa45707",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de771be3-0fd4-40d4-a3e7-b9bb5a6567de"
        },
        "item": {
          "id": "6a2c3d33-2861-4cb8-a7fe-a72c6a253b69",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a576aa59-8840-433e-9e78-2679290be7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895e343b-7250-43a0-8ec6-8ca83aa35cad",
        "cursor": {
          "ref": "f65b071b-2619-49c9-a308-739a9e8484c4",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ee4652bf-18d3-44f4-a2c9-6caaba481ce2"
        },
        "item": {
          "id": "895e343b-7250-43a0-8ec6-8ca83aa35cad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "15d7ff75-5811-488d-a48d-4018aff9c694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5edc465-9e76-4c9d-a4f3-b2b1651c0bbd",
        "cursor": {
          "ref": "f87e9990-27e8-4201-bdde-fc12575473c6",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "071c9f3f-2730-4353-8a63-eb87bc8441a2"
        },
        "item": {
          "id": "b5edc465-9e76-4c9d-a4f3-b2b1651c0bbd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5048cf44-45ad-495d-ace1-afa6d43c78c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb973884-edda-4035-8c59-6660816987da",
        "cursor": {
          "ref": "1742d945-f3b9-4a08-8ea9-77cedf8a3e58",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "de30ce9e-1166-4442-a3b1-2d11e4db4357"
        },
        "item": {
          "id": "eb973884-edda-4035-8c59-6660816987da",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e987c44f-2869-49d9-88b4-ec0c1d85b4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30276ae1-93a6-49ac-9da0-4567e02e5c9b",
        "cursor": {
          "ref": "f518bf66-a821-4daa-80d4-24a30de027e5",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "912affd9-378b-4b4f-a624-361986b194d5"
        },
        "item": {
          "id": "30276ae1-93a6-49ac-9da0-4567e02e5c9b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb833e60-09da-4b44-bd3a-d7d9b2d934cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e48e11b-5c54-4ff1-b48b-400472e02d7c",
        "cursor": {
          "ref": "2dce1963-fc6e-4bcd-b118-e8f668920b94",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "055f677a-100c-4566-9f00-f576582fc9b3"
        },
        "item": {
          "id": "0e48e11b-5c54-4ff1-b48b-400472e02d7c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "caa3814d-2778-44f0-82ac-594487b23e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85a8ff6-357e-45fe-9af5-ac4d4691b621",
        "cursor": {
          "ref": "e7bde149-9c26-49ef-981f-3a1fde92273e",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c20cd635-975d-4488-beb1-fd2a25cf3804"
        },
        "item": {
          "id": "a85a8ff6-357e-45fe-9af5-ac4d4691b621",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3d8290d0-ed07-4d33-ab8d-11489577a4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fb360e-a9f8-45d2-99f9-b2a2c8243ea6",
        "cursor": {
          "ref": "eaf2d015-a896-4fa8-a167-15a6aa3ed55b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2ba73ce0-7fda-45f4-a9a8-8d889452efb6"
        },
        "item": {
          "id": "36fb360e-a9f8-45d2-99f9-b2a2c8243ea6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "94c3bfe8-5925-4711-a706-f84e9e8a01d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220483aa-c980-42da-9c92-be094cf124a6",
        "cursor": {
          "ref": "d61ebef0-87c8-4f05-bcbd-d73b6129e2e3",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "08934d88-cf83-414d-8dab-b598b0aeecf7"
        },
        "item": {
          "id": "220483aa-c980-42da-9c92-be094cf124a6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc0dd4ed-b16d-4a21-83a5-4eb00199acbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b406a8a7-a3e0-46d6-b534-f3d60ec52256",
        "cursor": {
          "ref": "0b35812c-aca3-4f1c-8da2-d7353ec076a5",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a9aed97-844f-46d6-bac2-9faec179171a"
        },
        "item": {
          "id": "b406a8a7-a3e0-46d6-b534-f3d60ec52256",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "30f1f1be-6e50-4a89-8e0f-96a5b6d87efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabb0b50-b015-415b-ab91-944c0043b230",
        "cursor": {
          "ref": "c6fd68ed-ccd9-4878-aa01-09943b6d3cda",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "710a152c-f3e7-4835-b84d-195f13dea970"
        },
        "item": {
          "id": "dabb0b50-b015-415b-ab91-944c0043b230",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5bc8cfb0-38a0-4e02-9557-f187a69293eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7729b2f-e781-4105-87b8-ee04d98354ca",
        "cursor": {
          "ref": "c6e80c9b-f2f3-4cfa-bb36-6feb1e4be31b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f252892-c2be-4e5c-9f84-cabb07ee7a83"
        },
        "item": {
          "id": "c7729b2f-e781-4105-87b8-ee04d98354ca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7a30ef49-c86e-4835-a426-5c921ae62568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5324ab-8566-4af1-b48b-9e5550643325",
        "cursor": {
          "ref": "8c0bc250-ea31-4c55-ab4b-8e5a8ff0bd3b",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "aaca7986-6918-4c5d-9fcb-4498a80fc084"
        },
        "item": {
          "id": "5d5324ab-8566-4af1-b48b-9e5550643325",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d1a72c22-ec33-44a2-bd16-59abd964a95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14d8823-0e71-41da-93d1-3876824bd35b",
        "cursor": {
          "ref": "48cae2cb-75ef-4aef-9ae6-cd867639fa54",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "52dfe422-0d0a-4d90-be08-4d086743ea61"
        },
        "item": {
          "id": "c14d8823-0e71-41da-93d1-3876824bd35b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4dbb8900-d3e4-4d13-b0c1-e76fe64712a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344a5d68-19c3-407d-a318-8c7b813c25a6",
        "cursor": {
          "ref": "a1a84b54-16f1-4132-bae2-0b6bca50578d",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "16eb2095-7072-4bc5-a717-c72e9713717f"
        },
        "item": {
          "id": "344a5d68-19c3-407d-a318-8c7b813c25a6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7eaa3d58-5131-467c-87b3-23423629b117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15860c4c-51fd-4a23-93f0-7ab16487f27d",
        "cursor": {
          "ref": "2bd560b4-a18e-4bb2-b834-8c199ae4ac57",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e6751c79-0085-4a07-9799-cbd149c2f1bb"
        },
        "item": {
          "id": "15860c4c-51fd-4a23-93f0-7ab16487f27d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c8dcf451-ea2b-41ae-80eb-ec61dc0e8053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35577f58-4b2f-4c4b-902d-c3b11b3a72cf",
        "cursor": {
          "ref": "a2ef9212-0834-4a52-9ad2-be9184cc6eb4",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ce667756-48e4-4636-b7ae-9686f02c24f8"
        },
        "item": {
          "id": "35577f58-4b2f-4c4b-902d-c3b11b3a72cf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cd09e904-fecd-49af-8f5c-09f4d0cd5558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a6672c-3b44-4acc-ac0b-887fd742599b",
        "cursor": {
          "ref": "9ad8e937-db5e-4efb-b6b5-be1e8c33d78d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4d971885-9338-455f-976e-a09e72f84d3e"
        },
        "item": {
          "id": "51a6672c-3b44-4acc-ac0b-887fd742599b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dddb2f78-fddf-48ee-9526-5ae78069aa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ff938c-0cc3-4999-9f68-f8ab67455224",
        "cursor": {
          "ref": "b01c1414-a175-4959-b57f-b1ddfba7b0bf",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "064a6d54-5374-4307-b4fd-ad0fbd18b78d"
        },
        "item": {
          "id": "43ff938c-0cc3-4999-9f68-f8ab67455224",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5e0da77d-4d9e-4fc5-b252-046e490c08ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d709f73-08e2-4e68-8d98-f360d6dd150b",
        "cursor": {
          "ref": "5295c239-b0f2-4b2d-bd7f-e069e17650f3",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "afff62a6-6a5a-4e37-bc0f-3ebd166a1e98"
        },
        "item": {
          "id": "6d709f73-08e2-4e68-8d98-f360d6dd150b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "672b69a0-057f-402e-9aef-01f6ffc672ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e41951b-50a6-44d3-a6d8-581ae0b3e9f5",
        "cursor": {
          "ref": "150510c4-42d0-44d7-a7fb-4c59809db004",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "29aa2935-3c31-49c3-b037-48e118fcabf2"
        },
        "item": {
          "id": "4e41951b-50a6-44d3-a6d8-581ae0b3e9f5",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "31870ac3-761a-4abb-adf1-ad64c454a24f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 490,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4ffe73-8f2a-497f-b998-9a932b9f32dd",
        "cursor": {
          "ref": "d82e1b7b-8e35-45e7-ba9d-46f87d2e43a3",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4c19b057-f39a-4af2-9fb8-f95ed52049b1"
        },
        "item": {
          "id": "2c4ffe73-8f2a-497f-b998-9a932b9f32dd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "60cce60a-2a92-49e0-b19c-5cbcecf7581d",
          "status": "OK",
          "code": 200,
          "responseTime": 531,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7e36fc-7c25-4cf6-ae2d-d6e3a9ab2dee",
        "cursor": {
          "ref": "b5619a04-103b-462a-bbfd-10f8c3447322",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8625e6ea-666d-43d6-84e1-67d8c8cc5e6b"
        },
        "item": {
          "id": "0d7e36fc-7c25-4cf6-ae2d-d6e3a9ab2dee",
          "name": "credentials_verify"
        },
        "response": {
          "id": "47dd8fc2-b0b3-4ef2-b8aa-534a3f51adaf",
          "status": "OK",
          "code": 200,
          "responseTime": 2382,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a1c0cc-6b3e-4101-8b60-7bd2040422be",
        "cursor": {
          "ref": "24a4228c-d89c-442d-a18d-a0cd26c7efff",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bb5eafad-d4b1-4e78-bad2-976b961aa321"
        },
        "item": {
          "id": "e3a1c0cc-6b3e-4101-8b60-7bd2040422be",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "54617008-4b74-447c-b6b7-e91f3d07bc03",
          "status": "OK",
          "code": 200,
          "responseTime": 1876,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
        "cursor": {
          "ref": "921c01a0-2841-4582-8ac5-8f2d044db8d6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b99748d6-b46f-45b6-8dec-207340cfdb36"
        },
        "item": {
          "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4cfa06e7-ec2b-45bb-98c6-d81324f48639",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
        "cursor": {
          "ref": "921c01a0-2841-4582-8ac5-8f2d044db8d6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b99748d6-b46f-45b6-8dec-207340cfdb36"
        },
        "item": {
          "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4cfa06e7-ec2b-45bb-98c6-d81324f48639",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
        "cursor": {
          "ref": "921c01a0-2841-4582-8ac5-8f2d044db8d6",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b99748d6-b46f-45b6-8dec-207340cfdb36"
        },
        "item": {
          "id": "cf480d83-4116-4b89-823c-638d7504ef9f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4cfa06e7-ec2b-45bb-98c6-d81324f48639",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ea51c8-1b12-4153-ba17-7d1878ee7d7b",
        "cursor": {
          "ref": "4de9d4f8-fd46-4988-af85-9097ee1bfa5e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1a225266-d446-40c9-ad2e-f7275ebfaa1c"
        },
        "item": {
          "id": "d7ea51c8-1b12-4153-ba17-7d1878ee7d7b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3b7087bc-3f09-4dc5-bc57-7445e3e1b0d5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 455,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc5906-ab0f-4ff9-b2fe-8cfb892d255d",
        "cursor": {
          "ref": "245bcf6d-702a-429a-8deb-64c9387d7ff7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3f42d772-0fcf-4852-b4d0-ded1d8c900c9"
        },
        "item": {
          "id": "fafc5906-ab0f-4ff9-b2fe-8cfb892d255d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3328a80c-68dc-4bc6-8a13-4d55b80887d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc5906-ab0f-4ff9-b2fe-8cfb892d255d",
        "cursor": {
          "ref": "245bcf6d-702a-429a-8deb-64c9387d7ff7",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3f42d772-0fcf-4852-b4d0-ded1d8c900c9"
        },
        "item": {
          "id": "fafc5906-ab0f-4ff9-b2fe-8cfb892d255d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3328a80c-68dc-4bc6-8a13-4d55b80887d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1eb703-feb8-40d1-8353-b210586f9bc0",
        "cursor": {
          "ref": "0c537e08-0676-4d14-b815-8e8720103edc",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e9600338-e762-4963-a942-366f9517c19b"
        },
        "item": {
          "id": "5d1eb703-feb8-40d1-8353-b210586f9bc0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "fb4a4ffa-3c99-416c-b159-354a1d0bf98b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 771,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46a4e1-9df5-4035-8392-9f3776c4513b",
        "cursor": {
          "ref": "f901a854-3c21-4877-a9b7-0467fcf91531",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8da6ce6f-79d9-4c31-8006-3f23f5641be9"
        },
        "item": {
          "id": "ad46a4e1-9df5-4035-8392-9f3776c4513b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "810af7b5-0a18-4d59-8f21-bff1e8986937",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46a4e1-9df5-4035-8392-9f3776c4513b",
        "cursor": {
          "ref": "f901a854-3c21-4877-a9b7-0467fcf91531",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8da6ce6f-79d9-4c31-8006-3f23f5641be9"
        },
        "item": {
          "id": "ad46a4e1-9df5-4035-8392-9f3776c4513b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "810af7b5-0a18-4d59-8f21-bff1e8986937",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a60bd-267b-4b90-91ed-7ac5dbca3fe4",
        "cursor": {
          "ref": "e07e53bf-d572-4723-a796-01d379058b0d",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "95994bcb-b396-4168-97fe-1ae7c22ae177"
        },
        "item": {
          "id": "0f7a60bd-267b-4b90-91ed-7ac5dbca3fe4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e37264e3-a185-485d-bb97-983a1a6ea819",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 727,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}