{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a8dfc7a7-739d-4030-9a93-17dda43c9e17",
        "name": "Clear Cache",
        "item": [
          {
            "id": "19869c5d-60e0-49df-ab73-f1a61e96a7a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e07e345-9f51-4932-a19a-3d2feb91109f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d75ca09c-8d6e-4065-88d5-1924b240f607"
                }
              }
            ]
          },
          {
            "id": "068cad9d-07bc-4147-af6c-f9608cebff22",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2e4eaae-a0c5-4ef7-90ad-a852c4d6f12e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "73ed5786-0304-430a-b260-13f0501d888f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b703093e-d3bc-4239-b048-590a9ce58b6f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fb6fb661-536c-4409-a8f0-e39b7de60ff7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0c212def-08f4-4677-885a-bd18997fdffb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0717fdd2-60d9-495e-a21e-4b017112eda9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4349e496-93e0-4e08-befb-a1634c2053d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe1d6060-3e0f-4457-89e0-ed7750090ba5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56211c11-88c2-4e74-8d9e-2a976de70a01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4f71f1c-2c1b-4e92-8ff5-b101e3b662c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4ee735e-c1da-4801-bae0-8cad3beb15c9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25915883-01e7-4e3e-81e4-ffbbdb4c06fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f3aaf47c-6741-4d7f-a88c-4751c97568f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97c45393-84c9-4b52-a9ea-197e3a6a37ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd6b7751-d8a6-46ad-b939-f0e90ac13b48"
            }
          }
        ]
      },
      {
        "id": "bce9c62d-ccb2-4379-94ea-b59d252c34ae",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a33d5da-7e18-412a-bc5c-090152a736a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa4836cd-32ee-4bb8-817b-0a9e1c3a40e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46f52528-2157-4cc4-bf16-3b30345ae66c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189d1206-704b-4a90-ab14-f85f9fa65acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83480b4f-9aaa-4d56-9f8e-c41f034e0813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b456a0a1-53a4-4dae-afe2-bd7ccbe3a0ce",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec974a2-2e8d-4ab8-89c8-88947c284ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "713d8050-2f9d-409f-83ba-d4f1e5a19440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e588b7-8a9e-450d-8547-2f6edfa5e8a0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13c2ccd-abc9-4e01-b122-d7409cbe266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36e492b9-e837-415f-b22c-e0e9e28cbea8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70c4c8e9-4a04-4d65-8e90-c9855d797da6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ead8d42e-31a9-4829-99ab-07851e58c514",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908a098f-a1cf-4e60-a5ef-66c0edd1f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32183ca2-7db7-47aa-9d09-23b58fbd1237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7e09af-4a18-4998-80e4-9624924aa168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c62722-17ab-44ef-8aa5-443c2f9015b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b20791-0a98-4091-84b9-2d3dc2f7a413",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9cb794-e909-4618-b52f-57e7106e8f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e4217b5-77f8-480c-91d0-ed1bf5ff0778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe67f955-2c82-4086-80e2-6f725054d8ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "49e3fd23-7928-4ce8-b51d-571072513a45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6e7d88f8-c97b-4c75-835f-f409f0f53558",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e165dbc-7910-4846-954c-4faf59861dec",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f63045f2-6b5d-44d2-b6b4-c30b87237353",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4bc0701d-0622-49db-b978-213b86a56421"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5170391e-f6a8-43df-b66d-ed19e075f215",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "19403d9a-04a3-465b-947a-72aaf7ce2cd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "173df143-0315-4ddd-84b0-45a3103974b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b0027f4-d97c-4baf-ba4c-0e91a574ab8c"
            }
          }
        ]
      },
      {
        "id": "42ed0999-2908-4b80-bb77-239707e3979e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8ce04233-5d9b-4fac-9a25-8293eeb801c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7766c2c-0b8a-43bd-bcc9-16702a61f690",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "518a17e4-9947-42af-82ea-0dd7985dcfdf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc6496a-5922-460e-945e-61274c01f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db8d75c-ed52-4ded-8c87-2b1da2d25f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b199ee1-e260-451b-aba4-2cefaebf12c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2afe5325-bdfb-46bb-9d2e-4667641f7631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6972cb01-b425-4e7e-ae8f-1c0198e32c09",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7ee12e-7c8a-4d32-a997-a8c7433a2872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9884655b-eed6-4706-ada3-b2721e729206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1813e89-2508-40ae-b133-98f0bf2e64c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68f6c4ee-306b-449a-8819-92a6fea0fe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3d5399-0430-4bc3-bd8c-2120968eb85a",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a55f9e5-6f38-495f-aedb-bab1a28e8c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4f0f1e-ae43-4ce5-88bb-32c6e130a619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ee43b8-595d-495c-b3b7-f57e0b6dc56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7653fc7c-1832-42b1-b634-3a7f53dea31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f54a39-0777-403e-8e8f-ab93c78afaed",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7d28f4-80db-43d5-856e-326cd02e606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e0ab12-b5b4-4907-89b2-3b9209065765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fca5aa-79ab-4ae9-9b07-bb15a5109eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca5cf8e-12c4-4330-938a-3fa270ccf0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f87eb21-d1cc-4333-9efa-9a184869d52f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61579a0-2553-4134-aebe-1d4a1b00f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95615bf-cbba-4cf3-b1de-6d7ef5d8929c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269277bb-c92c-4b39-9325-5152aa5a89f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c607b5-492c-4774-b2d0-7d8aadcdaf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f8a8f4-af45-4822-aa32-4b20fa4645be",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0723b4-9b85-469a-a223-e5b8d7f15d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fb7ebe-2d48-4396-94cb-37ba810acf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93167e47-2c26-40be-a3fe-bcdb4653d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "552d1e3a-1604-4eaa-81b4-13a3f6b9f715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e37b103-ebec-4e98-a1f5-f5487d2acdcb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e110c6-ed1e-4728-969f-dc7062796290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2c60bb-fa64-45a5-b896-602f5df39121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aacbacd-6ed8-4874-9dcf-7a62f6497d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5bcb220-4670-4e5f-98f6-2788e43f63ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b96ca6-25f0-4b12-9105-2fdaa33c4438",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c824607-641d-43b6-8e2f-e13e12eef4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4f1076-0c35-4648-8fb5-842ead238dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae6a17e-9fd2-4f4e-94cc-269c8f42db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c78d2e-a366-4371-b11d-03d16aae96e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40adaade-4363-4c28-a797-6705026e3b8c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab99f60-c352-48a7-a768-2df371640b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479f9a29-dbba-4d83-ae9b-d5e3fb3d49b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d9679-ff76-45be-9baf-4e9bcd301e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ed8e15b-53a4-4a6c-aea1-cdbbb0173dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e1311-7e10-49b8-a12a-37764ababf5b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70851921-cd99-4300-a59a-a3958c7b03c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0cabe5-380a-44a9-84f8-abb130969dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1751bd9-0124-4379-a83b-c05245276e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e9de793-69a9-4086-bd8f-ba5391ebeb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f05c7f-6280-443c-a4d7-a05640222d22",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0422e8e-bda1-402c-a9b8-57f4cb6ac655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12e18b9-2ec9-430c-aed3-30aa5a53c8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fd53f2-63f2-473a-b645-d90302381df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809c779f-9cae-4528-99ec-6a73a442d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fa6d99-326d-4344-a74f-be801a154d1b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a8d616-40d5-49d7-9e3a-f35dc103598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c33e444-1bf6-4081-bbb9-0d144cb40e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e698b28-95cc-4a42-aa89-9ebc32c46cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "762c1452-efc9-4dd9-b0cf-deb22620daf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a002147-fe76-42ee-aa3b-d21d63314eb7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5d292c-a8a5-4c71-96d4-ef7981ecbb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796b292e-0bed-480f-b560-42df125dd022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e23df9e-1893-4234-ba98-bddb4a3c1f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25c3be1c-b658-473a-a9c8-87ed4a5dd281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c467bd8-2310-4d44-ab05-05414686b842",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a280131-d8d3-473a-87b9-72ffd4dd7e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14eeceb-7195-4f83-b0c7-d5140f4dd961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537bbe1b-a25c-4fee-9bec-7c9f45d2ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad792571-3f9f-4056-a16a-3b6ac4ce6829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99ff3b8-9111-4fb5-8bb4-eacf4ed68535",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6655d90-9cd1-42cc-b78a-5843efc6f246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31b6963-ad41-4700-9aa8-6b9706f2b66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be2e9f2-6de3-45eb-9c30-b8edc1c3c67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bfcfd56-e65f-454d-b4cf-492323fadcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4abd815-7541-472a-9bf1-810512e34e0c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381209fc-9ad0-49c5-a095-a5f4acacee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f6f904-1327-4c97-ac84-73ad21511e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39e6ecc-04fa-437c-9236-9e7244ff9201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d54417b-8272-4eec-885a-b1da60834dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9edde-e224-4c1a-822d-15e9d8ea3a9d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab0024-0ca0-4753-889a-1ca52a6bb1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94cf1b5-e936-479e-8c5c-8a2a4350e2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b960cd9-f9a2-4785-9e64-ce52985ac1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f37fac3e-7cd4-4adb-963d-20cb9168f804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ddb5dc-285f-422d-b3e2-01831ff674cd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303e70a6-93c8-4ed2-a549-af5f26de7780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec56bc3-de86-443e-9783-f5d8e642b175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aaf60c-79f4-4039-b9c2-3507edf6893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71af4527-a91e-4328-a3ef-c9c8c2028435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a469ac-aaee-4dd8-b953-cc10f79dbd06",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86addd9-eb16-4194-b264-456800aeec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58320116-aa95-4ccc-850f-4ad40fc9ba49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1ca81a-7244-404c-b5ce-c3fae86e520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb7cebc-fbdd-424c-82ec-d3140ffcd238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47415082-80f6-40c3-8847-d253dc76983c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15c36e7-1acb-4617-b542-c9e6c94164b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0d7e61-7d50-4337-85a6-354895cf7293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6395828a-5f60-4b9a-8793-4877cf6d4ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31962fb-62bf-4fd1-b604-e9968978b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9ffb46-6c83-4c86-97bd-d0b748a9a7d9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070c8465-773f-4241-b9e1-0cd44fe2a896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0655118e-02ba-4656-b9a4-ca4a5890b803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9df630-540b-40bf-a9d6-63a158449245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "271dee98-985f-4e14-8452-89ee553fe223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417bab03-ccfd-4dc2-920b-98b8b99eeb2f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96898a5e-d0f3-4904-99ce-755510af1cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1349166f-8807-40ec-919a-9f40b53137bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e451ff-83ec-4976-bc74-34970563ec95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb0a2ba-54cd-4bc6-9e7b-1eac2ca58b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c2008c-ab28-43bb-a10d-8e5d111a49f1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585921b1-4e1a-41e6-b2f3-1063b049b520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f84dbb-af92-4858-aa6b-a100cd49670e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc6e13e-97f3-480a-9ebb-c7df7dd5137b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc80ed8-7d94-4859-bd03-eb9137e7927d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abdd4b5-ff29-4dc1-b97d-9ec6349ae7e3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d87419-b3bd-4b9d-8463-bb230b81dec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a1fe1d-901f-405d-8d93-88238516daed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e75b6fd-157f-45b1-88ce-4c192aff2d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "204810fe-0226-4a50-a1cb-3d3189ef16d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c398c5-0b39-4ea2-8338-1b07c9bbf3f1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a32119-85f8-4b0d-8c3f-cab109cb34b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f1d849-fa74-47ad-9172-4da918fb2107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9922bbd0-9d8e-4f26-aaa0-0f245ed4e558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25a348ce-219d-4556-aab2-b38d5def71b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364b24f0-85d7-4325-a1f1-6e95e7a5a48e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8d6326-2d57-4f25-a57b-86b9170acf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5a549d-64fd-458e-8540-97882161147e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ef6c1f-ed3e-4a36-a804-2be6d7d60de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "00269de5-243d-44ef-8854-e090feab53b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78fcece-730f-4817-827c-8b850862d49c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4635185d-01ab-4434-99a9-e934a5fc6305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e410fdf6-20ff-49f4-8ff2-d139546bd586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a630a856-0fcc-4442-ab5c-5d445892be15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcce9b6-313e-4a78-b770-8ab0428985a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5f601a-f625-4786-82fa-f2b329e52876",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4306e66-506a-4679-a556-4b27d4455e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1839cf-330a-4007-9fda-63133c55101e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56429be-208e-426d-8c73-18009e7f002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79aa224-49a0-4650-8805-029d6fb74071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5f6c19-7e81-447f-a069-baffa46bf1df",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c87076-6946-4ce9-90d9-69393f03b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85d0b0f-46ad-4863-a7a4-4b10c26c1615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d618f5-38c4-46d9-bad2-f1908e75e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e893a8df-712d-471c-af50-ea8b44167014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b14e59-78df-4a4c-a381-7ff53c0f8263",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148596b5-579c-43c2-8579-14070c9dce8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e0cb45-ddf9-438d-a7ea-ba67aee0c72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2491f395-7282-40a4-82f0-072406cf9010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93576923-0718-449b-a9f5-a6e9b39986aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2a4c74-1524-41dd-941b-9d91798bacdf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be07f688-7f69-4ca7-8025-653c37167114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a046770-c257-4793-b0ba-a97efa173970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fcc756-3095-4d79-a9c5-b97a0d476671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4017eac0-8daa-49a3-b444-b26d8ec396a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2826cd5-8d62-415b-97ff-99bf051be515",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ca4cc3-03e8-4f57-b855-b332c98f5faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453748a7-0c8e-432c-9676-cc4914ad5576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fe061a-f9f2-4a99-a227-4007fb2fd25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3521f989-017d-4c92-9e1b-88a758eb615a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5915f44a-6765-4d3f-845b-1a83bb8eef7f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16002681-fa30-4fe5-9c58-78a445a28847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e33d0c-b5bc-4585-938a-11079d41bed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2ff9ef-347a-468e-88b0-c414f507eaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c036d7-f4d9-4227-b8e7-26c0c4dae8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e051ae-7354-4ac8-a606-5981113df246",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a91a211-7200-4e53-a3ea-aeb876c4dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52311ad8-6c83-49ce-aef2-2de62dea913f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dda1de1-8ea4-4ea7-b598-35c69bd6a574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59da11ed-b92a-42ce-9939-cfee709a09aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b455fe-e114-49bf-9b53-2c69231fe4bd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a6e80d-8597-4e23-b64b-6c8ae4e58ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a84e3c-e30e-4731-8f65-aedb28585819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a0eb01-e97a-4772-a09d-49e9aa9f3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e737d3ce-2b79-4373-8337-c475b2771963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dfece9-bff2-448c-aec1-4ea978281485",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e7056b-b8de-43aa-bfc5-9df03ba777ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84210ad-84f8-40ac-9d9d-4881b602b967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44492d54-5be9-4f37-af33-a113ed2bb7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db3d9cd-fbb5-42cd-9e62-2d0c7d7d5ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dbe92b-a914-423a-8aaf-60baf6961f09",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52566ec-412e-4899-8b47-1e5b9765f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4235517b-d454-44c5-a1f9-99195d411b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ea7f1f-0496-436e-873c-c2f1c30a3051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e125d41a-4ca9-4a19-800d-e759b9a75d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3312712-f2d9-4fd4-aba3-a374a8f45638",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1482f978-b55c-40e6-8ff2-81080741895c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "841f6144-1ede-4453-9742-4eb058d8d778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac5ad3f-ba32-42dc-bc8e-414601ff2f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "130e0b30-c283-4607-b633-66aab6652724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b286df3-50cb-45ae-b641-a2dd8ec1372f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55784947-58e1-40e9-9ceb-1f4dbf5a45d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eca535e-86d9-425e-89eb-c3fb1d5fa2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0eb8f2-73c3-449a-8a5e-81d5c6455050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c2a2aa-e323-4c4d-97e3-4d59910c30fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a42b142-4b79-4ba4-8775-1ce865e0df20",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a62d507-269c-4576-8016-df841028c8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4009d2f-f40e-4f71-8854-4b3d4f82ffef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2698c8-5aa3-46c7-95ac-3123449c730c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e30fb703-10fb-49ad-bdc3-2c31712b1e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b28c26c-e9f0-4f39-bf35-f0fba2fd32a2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba06df5-61cd-4a8c-af47-2ea578b2ac16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443bdcff-0a7e-4bd7-95be-b5e29da674da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae322e4-7f2a-4056-8423-74ae11e7a72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba11a7d1-622d-4c7b-ba1a-a67f29f1202e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43ed619-5566-4b6e-a7fc-ffb723ddfda8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda1e88c-cd86-4049-9160-56ab49c26046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9ccca4-4709-4487-8c50-ac50932d50ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027e3a88-977f-4659-9ed2-797b038e76ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d39feb5e-3a49-44fe-b2d3-7f24d4c2ee88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0846ced9-6708-482a-9300-4277452308a1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e01c999-1225-49d0-a9ff-47bfbdb78fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c34b6e0-6bc3-4608-b206-1357da7f9e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c7c1de-ad7c-4c27-a473-42777343f44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d6bf70-4759-4d49-b805-b53f62dca2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19f678f-0f69-4691-b4cb-6fe2f528ea74",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d93599-ea95-47a6-806b-657514ca1049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac2820d-3aff-4a4c-b749-ac13c31dc47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f3c38-0017-4fc4-a7bc-1394e04752f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec76dcc-b34d-47ea-a664-2d5909a7f79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03205b26-1469-4244-8308-e1837a9e07b2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80327846-3e94-4ef5-b892-644bee463287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dea9fe-5dd8-443f-acbb-acb257612d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17243bc-a218-44f3-8899-355adfae5717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac36f0a5-6433-4a80-b7e4-a8bfcab5d15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce62114-7b74-4a2c-8195-3503f924b01a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80712d1-2418-45b7-b3fc-b5859d1b7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3543ee0f-3dcc-4023-a5ef-e7c4af526fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f584d-6d34-465d-b1af-7f0a9a9f0ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a971fc-3110-48be-97c4-04f7c6913bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a79e078-36d9-415b-ab40-4d090b9bf5e3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f15a115-ce20-4458-a1b3-59bbdc4e023f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32041ab7-cd66-412f-b5ac-043096568976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ade9b5d-72e5-4c8f-98a9-c42d99fea60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a62e261-3f89-4c2d-a7f4-36261995d1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988fe35d-6f1b-4f46-bfe0-c44d66200eab",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75708fdb-4fbf-4910-a055-b6809d981929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6177689e-b640-4565-a1d6-127074ccbdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bbb34d-183f-4667-8230-cc27bd24dc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83bef214-7e53-4e20-b34f-9f9430dd6038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace81bfe-8d44-40c6-b3f1-6288beda4bed",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ce9a5c-754a-4c0f-ac0f-fa8961d4eafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b91809d-eb13-489c-a23e-b38e545c2b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ea9115-36d4-47dd-bddc-16870bbe1854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "846da78c-6c47-4d3d-91a9-4133288e9072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aa7061-748e-4b70-9f6f-4b46bb4c1f41",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4429a1-4e69-4cbc-832b-c8c24fe1a8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b1b669-5f6b-4b37-bcbb-410184772a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac65e54-2806-4e2d-8692-efb7e93b82d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "909bca48-fdfb-489e-af67-77dcc97a9bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac6d65a-9859-4f78-ba61-fe653027de41",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2201b320-fc59-4df2-88f9-202ecaa11ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715d3d5a-da04-4362-bf9e-fb29a4510e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bece93f-693b-4b62-97e2-78dc2e44734c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa98f7c-2bfd-463f-a846-277263df366f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6712d8ea-99ea-4a6d-a174-bfb241d8504e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0835875c-08f2-438c-aaea-b364224f2f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41537c7f-b2a9-4f86-9efe-942d9912674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37080549-92b7-4af5-857f-fa2a2f2dc64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8cec04-9641-4bc8-874a-4e125475c2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d95baf-4b0b-46a6-a4fb-d5d286963f87",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8663f831-0881-40e1-aeb9-78cc8f710b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bd9c8f-7605-4c43-b429-d55c2db42962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afa17d4-f04b-4cbb-956d-7af4b7a95526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b89ced41-576e-4d0c-b8d8-493bcdb1f14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf89afa0-5f3b-46cb-950a-98408cbd7cfa",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9585a087-f9f8-4e09-8d1c-bcf15e1e166b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e59ac7a-43c1-469b-a945-fe78f8ee7923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae198a49-9840-4c08-af36-3e08f4e9a5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d2f44a-114a-4ba3-a79f-f5f2e5178f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3b0d64-33ca-4b37-9a7c-a5e02ead96f1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222e0944-6830-4a14-bc7b-1a8f977baab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5486dedc-a0ee-4ae2-b777-c6ce73038014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae47e9f0-1400-480b-9bec-c0c6f2fbd3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccba995-ba2c-4646-a2ca-794cb570a5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f47b5a-8a45-4113-800c-28aacbae4446",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6773273-4455-4a9d-be8a-e4102593cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3080ca68-971e-4040-970c-1a23d424de7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad909af-b3a6-4c65-939b-a02cd94ecfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26452d7b-f842-479f-8e71-7b459e70e7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afe8515-e2d4-4cc2-9aa2-a9879ad43cfc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4cadd0-da3c-4943-8772-28aa2b8bf152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f696c55-ec36-49fd-ba04-59c5d79da6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f2e60e-ad55-4108-a8ca-b9a1b26c3e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee7e5cf-b44e-43b9-b107-3e0bfab29eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365720b1-6d3f-4d93-b458-fbc3674e3f0a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dcaa2c-dfef-4794-a29e-b5813c097d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89a8df2-2931-4451-9323-18b97a84dba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214cac67-23d5-4fb2-a8d6-a0f72cb8051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "291ce6e5-9094-4334-8bfe-1e49085b2149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6407a8-0173-4077-8ac2-6edb075d0041",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685cb9e2-7f5e-4c2b-809a-16e1bd788006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1601b43b-ff02-43e4-8027-28b4d9abc4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c657bc2-bd2a-4288-981a-78582306a70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1de67e-ff22-47af-8f93-e22ed885bc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8903b2c2-8cdd-4fd5-b90f-efd613486235",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09dd4a-1574-4594-b1ff-62ec5c43e1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19700b19-9573-4829-b121-b718cb6b685e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e611c0-261a-4f62-b127-20ea1c1bbeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "618c68b2-de3e-4343-b8fd-0af328f3c1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d290ea-d66e-4793-ae62-581f6e3867cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0613896f-62ff-42ad-beb0-58d2e9f2f6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32350c8b-6ffe-4a16-81ca-8cf72fd385fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbb4c61-207d-40fe-b8ba-0b7cdfbbd046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e57d3cb-7a0b-488e-bcd4-c8b9a1bc0719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e2c238-0583-4b3e-b42d-76b42857dde1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f82d42-5d83-4f78-b160-b5481d4319a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5200abfe-7e35-40f5-aba2-ffaaeb7496bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741ed870-93a9-49d2-8516-3c3bb267de39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "50ec3812-54d1-427e-89db-750a25ca9b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa6150c-aea9-4811-a23b-0b528714dba9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24105cb7-a1ef-4552-ae50-659a48fea825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a6c63b-150e-4446-8f05-4ca7f13dae2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fa1c42-50b8-4e8e-87c3-6460ab9c0a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb78cfb-2ac3-4cd4-ae0c-5359166379ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70658220-5d73-403e-a5a0-7f239ba7b31c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83cbe0d-005b-431a-899b-4db62b5e6fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5171722-8bce-4e5f-bfe9-18f568775bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad0ae6b-ff0a-4624-af2b-a267f6983f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d63ba3b-cc46-48a8-a4be-86749e1c63da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf3b5b2-0a7d-4dc0-a311-438c33b1c946",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0f48fb-7763-4562-9f61-893176f6aa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc66cddb-c061-44c1-b5ac-066928c7a8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d2d987-f1bb-4296-a441-641bc041af5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "828977a4-5b11-4b8b-9652-6e6f7a166bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e7dbfc-e19f-4d95-89ef-28c89bfe42aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aefef93-7619-4bff-bf18-818236a62e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8ca383-612c-40ba-b2af-6a3ca57b2ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceed3505-1b69-464d-8e2e-df24b2d96994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "134226a8-ec65-40af-918b-4bd14691e015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42c4ef9-0bfd-4284-bac1-ad595d9e9504",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d8b4aa-a478-4338-b8e6-b67b46d1c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7598f6-cfbd-421f-876e-8aa123943e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017220ff-a41e-4896-b1ec-423a1ecab828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11677320-0523-4bf3-b5f6-7d25b4c98042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7d8592-6e67-4127-8c09-84a20f338ab1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0800b474-669d-499e-ae6a-0473c3d980e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95c852f-5c7e-4199-b4b6-854d8a942da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d124d629-9034-481d-b053-82396adff0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf87eb1-102f-411e-b5ef-c979ec7c3b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f44a4a-2afe-48b0-9761-74e3f3cb9082",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e46a258-7605-46e4-97ad-cb3ee41a028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce331b0-22e1-4d06-9f80-cd13c66358ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78a1f82-3d3b-4c89-bbd8-b8a9db7924d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7f7df7-a058-47f6-b7d3-3d99ea3243ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca11caf3-4358-4aa7-8a96-bf174aefad1f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e320bb-5693-4a25-9556-f284a839546c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d1f313-3d21-42f5-8593-49bd145b4188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2f7b64-9781-4539-956e-012a4e3ae526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee08683-4f1d-47fc-9dc1-3bd5ddc6987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dd888b-e0e5-4642-90fd-581ae36bfeae",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4848c8f1-03ef-4439-b611-efc31fe15d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ada471f-b831-468f-bc86-26b3383c83d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e32ff6a-f213-423f-8214-0724fa89df94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb64882-87a8-44cb-a795-ec0c628b1fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3aa112-dd63-4978-9632-28763fe7b033",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d739d5-053d-4939-b195-eb4d62285dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2796ef-b771-4a5c-ace0-3625a41db1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d949f009-0110-46ee-adb0-641eb166f1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e71d3ee-30d3-49da-9f96-e40cf64fc829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828138de-87e1-4b17-a6d3-0cda9d348306",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882c9fb5-bfb9-4e50-8403-b1b4ab8bf24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc273d5d-05f4-4f43-8cf8-1fc49086868d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cfbcfe-4a7b-4e5c-8ca7-257b83dddc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5759809-a925-433c-b58c-a50a922f1112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33696eb5-ce77-4318-973f-4d6c4e461a66",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c16371f-ecc0-41d0-a570-12de6a188dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77965025-6149-42ea-a08f-79026ed0bf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd04166-d68b-4e83-bb83-a058fbf91ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffec105e-8a80-478e-a25e-b75777b3a1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97826cc7-196e-446d-91fe-a944068500ec",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74f36ba-a895-4b92-b147-aa0ef16b32f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ec0e71-6c13-4298-a3ac-0e58cdd6ff6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0f2ea0-3698-4ac8-8fa2-6d439a9dcef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d269d18-eece-4633-821c-6c22d1ad2ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207c9cdf-3e14-4905-98f2-a39e4d41dcf9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e78c7-1e3a-438e-a086-c4905ab8ffdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a4e84e-cae2-4966-8ac2-8b628053ee2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41207dce-84c6-4df5-84fe-26b61d434c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92a61987-e057-4ba1-a396-e3329736d40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea9ebf8-6afd-4a37-aef8-3ed5170911d7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14e857b-7b62-4d5f-a0b2-25df65ffc93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8c55ad-b87f-4ce8-be28-6260a940ea10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb410c2-1101-4e7b-8392-1551baecbe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69a7d6d-76c3-436a-938a-1c14f3b3c111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51373779-0a1c-40af-881e-7c4020cfbd67",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d2f251-80e7-4294-9d1b-5f7baca18b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0556ccad-8582-44d2-a7d2-c0a1fb5ca6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e5c693-7659-44e4-af12-8f2f6113575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9df7ac5-e271-4830-ba41-a33fcd372255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31dc18e-1fa2-4182-b61a-295b7f1dd39f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b85636-6242-41ed-ad1f-aac2d23583e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a5e2b9-378a-45e7-a83a-5168c0e92d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309350a0-6d04-476c-b4e2-779734a4489e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e612bec5-ed68-4c5a-ace0-b0e2ed83a8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d959a7f-fdc4-41ce-92b6-b7e0b4cd1429",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920a00f-d2f7-40ca-8df2-abad19ce6797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c2d418-4942-4ba4-a10f-08c5b240709c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68abd5d-c69b-4545-8703-502e4f48fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6053cbb-a679-4354-aeb4-85275b87a81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3db8a5-d8fa-4462-89e3-ace832e3b4b9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f9a787-0dce-4175-8b91-c1cbd1588b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e277a5-27fe-4554-8582-7d18d4f5ea36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119f1039-0ff2-472b-80e9-32baa9a4de0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "747cfbff-002d-49eb-a83f-d946bdb7cb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96604bdf-0018-484a-bf03-4a872a7ad979",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176f67f8-aa24-40b3-848e-3de7a7be8afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef4a1de-b85c-4f3f-94f4-76907ef3c116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1777208a-bbaf-4db8-a74c-f34d101f1bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95c09f55-7127-4b1d-b18e-c6a0678da8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d7077-afd2-4748-bfe0-1494aeea7f26",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f491f583-4b84-4a8b-bd11-8b79fdc1f27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f74c6e-588c-4c4a-af3f-4f25803c81d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356fee02-39d9-4b22-9ab1-73d30819366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "550f94f8-c8b7-49fd-b01c-88666690bf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7408ee-b8dc-474e-90f0-52a55ef9a920",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20024505-703d-46d7-bce0-ecce82a33f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092464b9-807f-4198-bdd1-708677a4af0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4075ba43-ee35-40db-a6a9-76bbc1bedddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "193353df-842e-4677-90f5-18d60c5e5ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81265177-459e-4899-8eb2-d6e811c1ca28",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe56babe-6666-4b41-872f-4e251a2d0fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e08019-5f6f-4123-85c2-471c99d2806b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586b9533-a0db-4d9f-9301-5f457709dca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7f187a-51d7-4ec7-b5c8-3a956ad53781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6cac26-513a-4f69-a013-5c61b0bec7d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298edcef-59f5-4c7e-b2ec-511eb010070b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e183f7-9d76-4359-91cd-17dd5dabe5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ba1510-33dd-42e8-8e2a-6a7f742ed005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dad3f1-0bb1-4f79-8298-3f5964ed634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c73a9a0-8315-47c8-9628-ab22c2563cf7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8ffa3c-542a-4976-9875-cdbe6e303574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2eca24e-76c0-4784-ad84-50f661f0d3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb4caf0-5d0d-4b45-a6a4-e490a3f35c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea84aa6-52e8-4fbe-9f82-73db8fbdba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d25fbc5-f6a6-48a9-95f0-73a041f81548",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2028da2f-ff81-4def-9167-1baa96d58c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2d52d8-12c1-407c-9200-bebba362b2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8cedd0-214d-4e12-8b41-4cc052fae1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cae84916-cf02-4043-8aef-c736ec4d763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aff8659-e3bb-4c39-83d2-d718238a066b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99924a5-2a37-4e86-8987-322b8381cef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d53d98-b4b1-4458-a6bb-b3e287f403ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeab8ef-504d-4ef6-8c06-a9322b763b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b4b528-898f-4970-9e0d-5bbf4e48e71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370422a4-9df3-4da9-8083-bc9c14980d84",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f6c05f-5ce2-4a33-a42c-fcdead140669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124e411c-3990-4a83-a77c-291e9cb0671a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d38b92-c582-40ba-8c63-92c3be217b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e70c6461-d338-4ab3-acfb-ee63b41afacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef53a27-9bd7-43de-b76b-e31d4d6a87b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0802193a-b0d1-42cb-b799-462c1323f072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23703dc0-57ac-4f04-bf67-e7bc1a1fbfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289320fb-7934-4a21-9074-2989682bacc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "246d534e-c538-4e77-8b5b-0a1d7d864ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12081ff4-545c-4367-a5f7-df0bd1266375",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f76d1ec-13d3-48b9-98c2-8276f764c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2129be-4bd9-4f31-aee0-943c85294bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca115f74-3929-41b1-9831-b4f849096910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1b8ff9-4527-4361-93e2-7a24bd41e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b6b3f-5a4b-469d-bd58-d76abe60cedd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227363af-6bd3-4704-9c29-72eee7293006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bb9b10-b443-403c-9f61-21786fd70b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3cd85a-702b-4bd3-8395-e4c820e6682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "108f00d1-5c4c-4d77-865a-ee213e59a8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc5b06b-b919-4b5e-bdc2-2be46d8f8674",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45409b2a-056b-4c1d-9e71-494140126b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "58698496-188f-4e4a-9d69-6c64982f813e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1615cec9-7b9c-4fdb-8bf9-b8bc9637493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9684e3b5-116d-4ebc-9f55-c1cc4c4f29be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fd9bb5f-1c8a-41f6-89f1-098f418efe6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "305231ba-f13d-4b61-b396-5c0ddb7fdd8d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbad55d-2617-4640-8429-301342c05cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7efaa14d-f343-498b-bb71-b0a1e03a5fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7901c95c-ce50-4640-a324-aba073d6a464",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "10187ceb-da7a-4242-a6c4-00c8d3fac0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bbd064-8dd7-4b9f-ac0d-c4027f498a8b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dba0869-3a4a-4a7e-8bdc-f311e2f33045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7609b99-b17a-4bfd-8f33-8bf0cb7d5cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9dc887-46d7-4d6f-b4e9-2bc43ed2b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "665d3b9a-897f-4841-84a8-d0173a6d30ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff97d6cb-333d-412f-92a4-618b080e9f04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43793fe3-b43b-408d-8312-5bec8a9e3ecc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51aa5c5d-46db-45c2-a188-61d799dadf3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c99f17b1-7c48-4a6c-af4b-7dbb4259441a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f05a8b87-823f-4e65-8e1c-562a62d9aac6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "653277aa-2974-4211-bd2e-ec7a6b3acec5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8815fb9a-7dc1-4457-86be-c083d6086b02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd6f6e4b-763f-4c5d-893a-2aaa60fef8d9"
                }
              }
            ]
          },
          {
            "id": "58eca9dd-f718-4c67-aa44-152e2bffd487",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39e42e1b-349a-4b1a-8e61-155c29e0e0ae",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "570bdfe2-33e7-4447-9af7-463735b64bb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6f0ec4b-06bc-447b-a451-2d80a7d28ece"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f70ad259-996a-47f2-8d89-abefb54439d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "686dd9e8-fcd8-461f-96e9-33a701a9f590"
                    }
                  }
                ]
              },
              {
                "id": "844b5e40-663a-4534-83aa-cfd5fbead360",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "578d73dd-2e20-4f24-a450-65a46d576c9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ceb36d0-1b71-45b2-a7b4-65670260ab8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b2460c4-f758-484e-93b8-71fee1299d15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "69b789d3-37b6-4115-8f12-f3c04ffca624"
                    }
                  }
                ]
              },
              {
                "id": "d430732d-6062-49aa-9996-601c8fd14f48",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68b0dbfa-422f-4e60-b81d-655619b13f16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ecb3842-714f-48d9-a242-09e46dcb07f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "672fcb3b-732d-4ca1-a860-4bc1d5afc212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b8dcde1f-1152-4119-804d-0243c5b52ee8"
                    }
                  }
                ]
              },
              {
                "id": "0c7590b5-f5d2-49f3-931a-5fde09666d30",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41794794-b980-4a45-ad72-58067ea39dae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ee72d5d-3bb8-4dd2-bfd2-dae59df71831"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cc1c86b-0702-4351-a957-66bd29a0266e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4562ad1d-a3f0-4940-b80f-6a83e23ad861"
                    }
                  }
                ]
              },
              {
                "id": "0f82accc-4edc-49d3-b777-dae7d2819192",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9dfff0d-8fd8-41c1-b164-cc3bfa0b1f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "884b6d55-cd54-4bb5-b491-d353ccde9155"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f41d44e-92cb-4ddc-81eb-85872709c387",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e66e65b-1409-40ab-8403-5c78d9634046"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05b84c79-ee24-45bf-b408-06a6cc3f7bcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8489887d-7002-417f-8b95-354d8b99ed67"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1809c259-42af-4dcd-9f3f-423202ea3edf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f697820-dc55-4fc1-8d2b-91d1af1411ad"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "776c9eb1-67fb-4e2c-9b01-52fbbe15fb57",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9aa8a124-9728-47ef-8a82-0a59f7174354"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e3eb1d6-f8f4-4613-9041-8bed5718a821",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae5c19a8-2e73-4409-ba8a-a561d220c2b5"
            }
          }
        ]
      },
      {
        "id": "e51c53c2-a936-4b7a-8ce7-dc73caedd702",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fb3a2c6b-6d23-49ee-9e0c-203b5c352f6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "894e000d-ea1b-4f41-81ae-adb882c104ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9681a15-96b3-4208-9ae1-d606b31e52f4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e5966b-a6a5-4c5e-88ed-18fdf45f8d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b2403b-e68b-472a-8d15-32947e8b8f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4f10dc-0ce7-4a51-ae77-8a9bef20c389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "922358c4-552e-4aff-b3f4-5e1d1e6b00d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08e8f00-ca64-41b3-a9e1-07af4ef50f1c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce5a861-d60f-4c00-ab2d-812d3b768b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e26b84-5cef-4eda-92b7-bfb6077afadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41bd925-3912-4c4f-b49c-e40a0432c125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4272e2-3164-4322-b1c0-8be751a29592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2bae12-89ff-4338-988c-e4900c744730",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79b523e-fdab-49ff-8ec2-96b32b45f562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a083a13-3bd7-48f6-b769-8c5a1a8f76b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f9a991-7373-4ee3-ad48-985fb7623fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9ad221-3413-49b6-8e25-23ff073057aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69111fe3-d032-4783-8740-df78f2ce9642",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde6924b-14b5-4eaa-b998-78f6612c5f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4d6825-e94c-4b3d-90bc-a34b90f67e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fab9120-f13d-407b-b03a-38f8030c1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dede9d-8a5b-4ef2-8cfb-aaebff9ee17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b911c1-ed20-4b63-98f9-f54a3f07c621",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4aaf5-8056-4f04-a858-9be5e9bba874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a329e7a2-75fb-482f-8f77-d697f0917d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186ca88c-aa16-425b-bd77-49013396d5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7efdade-6e40-44ee-ad13-d674f5f9c7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c843498a-4f47-4938-ad39-40a01db2f346",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d0701a-c9e1-4710-bbfb-2143da523695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ec6cc9-0be5-436e-a217-913cd98c7709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9e0350-405f-40b7-b789-067750a9ef86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b287ba6e-e0f6-4618-9462-e7af06878944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9ae6e9-44a5-4338-abe5-e658336df84c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb824b9-b34f-484c-b788-bca6bee41b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9763ce9-2167-4f95-a6a0-162e9d611f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedecbda-57f4-4c0f-8ccb-b306df0bb346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9df43dc2-caae-4330-b81c-b50b4e0ab07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7089ad0-60f5-4124-99a0-dc5e3e8faa1d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35930702-4820-4682-a57c-948e09935d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc606f8-dd22-4ce6-a7d3-a7f71743214b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f199b1-c1d4-4f92-9173-65677960e217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "761e5337-e326-4efe-8cf0-01caa751fc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2b1da4-601e-4928-8b7a-ae2955ec5239",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0c6baa-a3ef-4fd4-b914-2cd841cffc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6f3838-d1b4-4d2a-919c-34d6bcd62b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d425e9-abf5-449a-b3b0-6ddaf8eb162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fcb5ce-41d8-42a9-8286-134c82820567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d629473f-9a29-4bd6-8085-a5357224a9a6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd4b0ad-000a-4907-a5cc-ad93a0fc96a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd427bf-357b-4458-ae53-1060838f57f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c35fb4-9f46-4b71-b09c-d7799b26371d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9d804f-59e6-4c9f-89d3-3550f22750da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b133465-8efc-4614-8ced-0b2f9788afdb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac98299d-bbe1-4a76-97c8-f03a306e720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b112a4-a558-489c-82e7-9dd531eb7b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f09737a-e106-4e48-8ffe-744dd793b79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c87d4e4f-a337-40f3-b100-6d08bd597f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5469ab1-cad0-4284-87c7-336d426d5899",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c79e40-b184-451b-842a-87d4dc4869f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d752b3d-5cc0-48ea-9d67-51d4b541e46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9b5a36-14ec-439d-b0c3-88cc78969c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0a7ce4-0712-423f-9209-0f4ff2498d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658baf5b-44b6-406a-b36e-e2a113bba527",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc8aca0-3ce3-416d-a428-c2fa4401c402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d054b8ce-a238-4176-8978-2679b6ccb99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb417c76-149d-43e9-a892-fb80c184f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac1eecd-2bf6-43eb-af2a-5735791fdaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b0c5d3-2c72-49df-8046-dde5435bbc79",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9edf53-b31f-4bb9-90e8-b87139af1c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4858fc42-f405-446c-808b-dd7c1d5279cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f75b05-624e-46f7-aa5e-ac8160d75d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "52145b25-88b6-40c2-a64c-e75e7147ffc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d7668c-0967-48f0-8275-9dbfdcdb373d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b96136-0021-4011-b67c-b5e654e82414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfc8d1d-f916-4723-82be-19f7bb5dceb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dc6331-0b10-4a0c-83b7-67bf63f35343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66822a4-4547-4447-a8c8-603a22326f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db4e0b0-f367-4765-8943-44d627942845",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06843f6c-6dfd-429f-8e3e-42ebc377670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d775cb-7107-4650-b083-33d938ef9eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89113b6a-2fa0-40f8-a80c-414f7eb10142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4944a5ed-d719-46a9-9ef2-0012645752ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621a0326-4e63-4285-81cf-ecc721244e80",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ef7b3b-58ed-4691-a5fb-d72cd3a99963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68168f05-1b6b-4641-b333-2b163d49877a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cc96dd-bca9-4139-aa2f-73cdee79e117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0faf87e8-f454-47fa-9f67-6a9ebc8a6008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df196e41-d0a5-45c8-a810-47508a1d842d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e479200e-7964-4adc-957e-0b18a4097084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402b7cef-b06b-4612-9ac0-239ec7e8ccad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b3a175-7dbe-4ed6-ae0c-a1bccfdd552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "396d1629-f2ee-4c7a-a13a-9d10ef5cd5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334b68c1-ad93-43d1-a9d7-86ef486c84ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776bb868-7ba0-426e-a76c-14cf6c80b799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ada2221-9728-4613-8e2b-d05ed3212298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26776133-1791-47ab-b0cb-8ea65fcde85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6abb26b-37da-49cf-a01f-cc73438fc86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce55bcdd-626f-49ec-8196-6bb4089b8228",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169b5958-f39c-4b61-9671-7f2a30529923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef63a94d-8d80-4fcd-b5ef-da8706cf8e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7dddce-46e4-4a88-8349-4cf4a37e8cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d11ea98-b010-4501-be3b-aefa1ae21949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6b9e8f-ab08-4341-9db3-ffc85290695d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ad6b49-5f27-4438-bc10-b35c96e45283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f10f57-69b3-49ba-886d-316b639106e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d8db5-da8c-4f29-8ff9-d395b76225d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6789b7-1e4b-4422-bae3-77c98755fd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a91c49-0730-4395-a8a4-d24cee6e17be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34c65c6-7e62-45f4-907f-e97de5949ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13f1dbc-b692-4394-9150-ba75d68d9836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a1536b-e58f-411b-b14e-8886521d7e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c56ae9-5e40-4da2-a4dc-7fdef4c6cc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1eab59-311a-4944-820a-488742e953c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3eb08d7-a5b4-4c48-b24e-c6a7ad304e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822d9f02-58ae-4e1e-8221-374f9c364036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad7843c-ac46-4dd3-9e0e-51185ee4734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea45530-0430-4a76-977a-da0b6782ad70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cb5fb9-a506-4c92-a5b1-13640003ab35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311efe2c-0d14-4221-9891-dcd818ddbcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971d567f-e15f-4a7f-b652-7b9943a90e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5ede42-f3ac-45fb-89a2-fa5954148acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4282a1-807e-4c78-8dd8-57192a7311df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702f4977-9aae-407f-82bf-39a28a583259",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbafd677-a0b7-4625-91bd-2df5b280398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9863c901-f88e-402d-a7f8-64778dcb2409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dd3bba-e178-482e-aab6-61b129e3ed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90bb5e2d-5ae6-4342-a5b8-e4c745a35c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9abbc37-71d1-4004-8891-02b7ae7dae54",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae3227-bf84-41b0-ba48-2a4cafe40b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df184c0f-46ed-4426-9ff2-6ece9f267101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cd3213-0877-4d3f-b3f1-0df32be4c196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9caa37-510d-435c-8737-4b8ea6516a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb029e9f-1489-4e62-8044-9f5d87989732",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11902915-b01c-4c47-a80e-16f0f2d46ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a9ea46-f43a-4ea7-8550-27abc2956444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f50dc-6fa4-4e00-ad3a-28fca386575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bc45eb-fe9e-4b00-a190-e3df082c49e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ac4eeb-8596-4f3b-905a-2194ca8c5ed5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d74e6e0-5886-4758-9f14-8c318efbe995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b7d27e-4ba7-4b2a-8954-23970557d7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15c897b-0185-4207-8ce5-32289b78f2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65da37d-56d2-4c42-9f1c-2ad13174bc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7713f356-5f30-4aac-ab4c-77b8d55c670f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9463d35-6e7c-4a0d-b553-73866a4a3c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e743d1-044a-47b7-83e6-cef5a3496fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f6b1e2-f13e-4e0a-9d6a-9bf329712c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a2e4c1-c859-49c4-89e3-72505d3709de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1b5b2e-b893-4dbb-9ad5-5ce40b4cfb1b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aa96b7-6886-4c1e-b065-760d2f200d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570a5380-e0ea-4415-b51c-b244348b1750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6933531-f14c-4df9-a6e5-36e19387a2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "472ba83c-4048-4018-8560-2a3936a4e9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5dc2ae-15f3-47fd-afbd-420b78dd765a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553f7d0b-e239-4b80-9386-18a95c51581b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e59935-abf4-4892-bc6e-faceab2c4a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea2e0bc-4bb3-41e5-9808-c93a449bfa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c67fe5f-6ef7-4bc4-b61b-cb0590f1ec75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1252ec6-c509-42ff-bc58-b59608f3e808",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f502f-05eb-4451-badf-11a5a973f090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a406de-6d5b-457d-89ee-3c99608c88c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5610babd-5876-4e62-af5e-388ea07db8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5959fbe4-a171-47a9-bb80-b1805ee70559"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3576dbe5-fe7f-4cfb-8aea-8616bfc7457d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5268ef6-a881-4f2f-a1b9-c243eeffca6f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adde9da-5b5a-4d1e-b766-b9625d858b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05bec4d-26c7-4346-8a8c-78f567eeebe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c8637b-8481-46e5-9004-dc65c6c221f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0560d970-d355-462c-a008-aa1d20fe67a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da79064e-dce6-4e9e-9e51-b47502eb8b82",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a5480c-a1ed-4951-aedd-053d8b6c6ad8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "5f490866-2916-49ac-af55-daa21215f7da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba8c67-d943-48cd-bbb5-c88c1307e10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a47c5cd-c7aa-4945-8f28-ef560a098942"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d1e703e-f59d-410f-9e7b-d480f8d87567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2049c7aa-53bc-4aff-b218-877652e26a91"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93391ad7-d000-49cc-9699-c9cb8f6c0fbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64712d67-eff8-44c2-b98b-5fe64e4cd45f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26247bde-4698-4240-a258-7a0d855be4fd",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57574efa-9358-477a-bfbc-f9e0b1e56427"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "421d2b80-2f24-42bd-9ef9-7d044eb08ff7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9dd1c531-c2c7-430b-a831-b6d5172485c2"
            }
          }
        ]
      },
      {
        "id": "5f3ab402-5758-4205-ba75-6ceefb6a9d2e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3df77c48-ecea-4cb2-ae08-720b0e004b09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b57be1a2-439d-43ec-b6ef-6b3a1c8e1fe9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "910191ce-8093-490f-96e6-2d9352844d33",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7b3eb2-011c-4138-a354-4c4746078852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4230eaa-b6fe-4b28-94c7-b13a10ba8cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea29c528-9c65-41bf-8909-c9160ce17abb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00595f4c-21cc-491f-b075-357923d52230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8885d4-7d40-4a43-a636-e56e0febf97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5f87e6-c8da-400a-985f-be6ca578c8d3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffff233-a61a-4e36-a9f4-368386b25073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebba8ba-6eb3-4ebb-abed-dd61aa8aba9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf12feab-99d0-4c46-9dc3-b66e9863770b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8db009-a277-47cb-8920-a221954502dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c4d91c-9048-424d-b653-c1fbccf79d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c12c2a-1c52-4a6d-bced-f03f3d31b37d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac65916-45ba-498f-a933-d067d65d1f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f61ef05-f6bb-4407-b19c-f9a9e824b5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e3e646-5cb2-4ee6-92a4-eff15edf0844",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae65a3e-b379-4c6d-8f7c-71b6a145641b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f730b062-1cbb-4167-a2ad-1cd4abcac2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5008579a-ad84-41f6-888b-844f0f0a37ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae1096b-9c75-44ad-9b23-49cbf903a15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd28db3-4b07-42ee-8e9f-fc2c4ad0da9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26903c71-e773-45d5-abba-7df96cfbb4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a711eb96-4d2a-4989-b893-9d92930896a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc5b9d8-7290-465b-9151-45c9d1c82888",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119dde9c-31b7-40e3-926b-c689b8f95ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae847ad0-6127-4c8b-bed8-91376a4ca236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374093f6-8021-4ce3-8c86-b3c763740216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9932aea6-e907-46c3-9f68-6b0c88decae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae684d21-a568-465e-a199-c69173af0934",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7cbb05-259b-48cd-ba96-2e8236a6fbe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ae77d6-3068-4ef6-8646-54eca12de31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d830ad-8174-4073-8cf2-1d7e0c53e098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024906f7-437d-4576-90e1-3c02a4dd2520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4553a3-aad4-4776-938b-20491beff47b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dd985c-005f-40aa-841f-3a466df66fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07a681e6-8eec-4999-a885-1a62bc107599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5291e9-0730-4da9-9511-9d41037d1b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e398f81-7849-4df0-a3a8-6e904a2c0dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee20eb7-9e4e-4577-9442-d0016cfc70d1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd650cb5-c448-4fde-9404-03e922cd9e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179e1912-153a-4c3e-a5ce-b9ea202f4d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4540fddf-caff-4914-a71e-f70c3527e056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e5c96b-9182-48b6-8b66-a9842bd272bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b8102f-5ad9-43ff-8806-eeb39ceb4729",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fdbd91-d5db-448c-ad67-170d56598cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec6dc9b-0bb0-4483-af05-619a577c3f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada852c0-7328-44a4-829c-99468fd95292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9264f1a2-730f-47ea-b267-5d19f90ab874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0a25ae-5012-433b-837f-017af5daad89",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b411254-4341-47a7-852a-a4bc0fb878fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7100981-fae1-4b6d-999f-be6c40776dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7704de-0232-436a-aa0b-8db1f336f2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0569df-c923-4ec5-a137-6bb82ef9dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72118751-49d0-44da-b243-79d867338d44",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44053db0-d6ac-4133-8536-f0812723416e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519a1d42-4627-4933-ba50-d8086b8a6283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f6768-43d7-4a1c-b44c-a50c5153a471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a68528-225a-4f18-b7c3-6198cec4a95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37de373-f9d4-45c3-b74b-a2d026554c50",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0209e0-0498-4d19-a181-57d6bd3f25f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f1d0a4-b4b9-4961-a01e-77af58021f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb8ddf2-17ae-442a-8c3b-0a4f7c7912c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f097f98d-6152-4cf4-848f-bdc6a05db3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251e5d51-344a-4486-a9cd-eb6a03a5baa2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ed1246-616b-4836-827e-32f1322c2bdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867f1023-a556-4572-b619-45278bdca12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7780a5-5f7b-454a-bdba-78e140fe67bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4255490c-3d68-487c-9d45-bc56fddca0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c7df85-2c29-407c-a901-fc0054194fb8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb497517-3c06-4201-8646-7d73768b45af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc2eb3e-71e5-48f6-adb9-ff0fd20d2676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc2022-9e5d-413d-922e-c8d7d2a9da9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757acc67-cac6-4652-82b8-e06e1f94bbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7063a0-848f-4332-a9e8-8ef35d6e09c3",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7040371-fee1-45e1-bda9-bc36c491b34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256351e9-dacf-4353-8b41-46a8f323fc34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0399c081-37c8-4c4c-98a8-f43bed17a0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f7eb02-d7ac-4f4f-8131-300e91454e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f420050-f9e2-4d3e-9c65-0a1f06c98070",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15db21b2-fda2-4743-9877-a3e62d05c0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e426aa-1ea2-40ac-b20f-5f64bce9de31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec16089f-a662-42d9-918a-539d91f40e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b05d77-c306-4e12-bd9c-685e863a61a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cf9eb2-0f7b-4a2b-8b6c-d51353dc792b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6419afb-226c-4ef4-aaac-51edfbd213f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ae477c-6ccf-4394-a7bc-a8cb212f4487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8130f7-44fb-4aa3-9da1-76fb9419bfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c789ef-fe0f-4afc-84ac-5cfe23bb8d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b74c426-02e4-46ff-8549-ff56efdf6374",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9153bb5b-81d2-48ec-8c42-641aab046a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfa49dd-6fbe-45de-8dd0-cbb101363a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed902166-7cf3-4d5b-8e47-2389ff87260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccf8d0b-fc60-4710-975e-1de635229792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1322f7-d836-42fe-9e18-a31d498a08d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d772c64f-55c5-441e-a004-589ecb28fbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde0f2a6-12d2-4f64-adfc-75c8eecd4283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db63bd70-61c0-4aa1-bbc6-1dea27d47abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4faed0-37de-4336-acec-66d217707d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a0de0e-e49b-4ea1-9c83-3e2629ca511f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4af7d4f-097c-4d42-b98d-3d77478c4764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bc6b66-4de9-4edf-9af5-703129ecef34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a7aee7-7cd7-41fd-bb5f-51fff2ee97bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9df66a9-b466-49c9-9a83-0fd92ecb5f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e63cd4-d2a9-457c-9679-196f4b5ad550",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab44b298-503a-46a3-80e4-6e367d1f729a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b88c664-6be7-4a40-8136-f9dd858d85c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb07c884-5637-49f5-be15-ac5431564424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2c42c1-5810-46fc-a915-a58efa960733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf23a21-f773-457b-a273-3592e65c7e03",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd30ce67-0dca-44b8-a16e-0bce74df5293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add8620a-21ad-4eb5-b5fc-66a9e45df379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c0ee33-653a-4f2f-a87a-20fd3955c910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1900fbf4-facc-4c07-8162-46438260d410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f913a1-b348-4b32-9d9c-1267e6c289fd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbb2185-9603-4e6d-986d-a45f0fea9e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c2f6b9-1136-42d3-b6aa-39837afcec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7210da-2aaf-4283-a740-3a81492cff0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f352c2b-327d-4b6b-acf5-1d6ff8bbd0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969b9c0f-6d24-42a8-bc7d-70096c5dfd79",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdc34cf-4357-48c5-9704-f1abe67791ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366813cd-9230-43fb-9eae-85fb157060e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1da215-cccf-4b43-8846-34b6576db9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9230c60a-1877-473b-b971-77970375ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9dbc40-5331-47ba-ac6e-9bf2ca6e012b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dde199-5bf2-426d-974f-db5119fc801c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d311b60-4dc2-43ea-9f20-90402a5f82fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1450ec-ffd2-4d57-905f-4031f5b6c17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd84ba5f-fe43-40a8-8cd3-c258efe656ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8d5cb9-7486-4423-9454-afb578d2b276",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3356f1-c88f-4e5b-9b0b-eb498a379064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7203579-aefb-4fb1-a780-dab0a468983b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd362a7d-a356-4b0a-b2ab-bdfe11711e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f45275-bd73-4c62-827c-7533f289d6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8069782f-065f-4e44-9aa2-cd77a22b6fab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1ec272-4af5-41bf-8102-b8fe49708bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6da701-afc4-475d-9b60-b0cf29c0d224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12579fff-5813-426a-b8bd-a61c3e76406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095e3d64-5776-4a53-8f81-13ef02f550d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e49fb5-e49e-4b9e-a390-376d2757c62f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9deb8476-1ad2-45c4-8fe6-d8f8683c4f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b3f767-3bc7-445b-b352-a301d55bb245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168f3b7-04ac-4a34-b694-29c13978e4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330d8009-ca61-4250-ab1b-649d7d4e2ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c6323a-ce09-4c13-bb69-c97226a1c482",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09027dbd-b4ff-4348-af1f-c1368bb2087d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3be108-31fc-4dfa-95d3-9a33dedbab1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bbed2c-f753-44c7-84e4-bdf4dd6ae3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40195ffe-3869-4869-90db-c4c855a79792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01769b5f-13f2-4a4f-87d7-4b709408e150",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3c83f9-3776-43c4-a0e3-add8a394b474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e082edc-469e-45fa-87ad-2e67d78b3e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b090c992-23dc-49b7-99a3-fa3cca145ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07d6a22-f22e-4931-b45a-eed3093f3b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee3ab68-ab62-4883-acf4-d5753fcc5392",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aa4fcd-3258-4e1d-858e-e9922bb045e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904249e9-00c0-4a94-8d56-c382dcb03be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd8b5f5-0efe-403e-8c05-9596849a4f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a4b45a-003f-48f2-9636-bcfb5381e9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2d15d7-1638-4d9d-9d93-3ab5fd528491",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ebd841-a3a1-4a1d-bd3d-a2db6df26cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65e7daf-cae6-40ae-871a-d2f0480eb79e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10078025-75a4-4830-b40f-d5f1a5a8d69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3af9932-93c9-42a7-bb18-3090b70748f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aefbe97-7188-4a98-a5db-c325cfcb83a9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4170b20-05a8-4c8f-adf3-426db4ae7569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2493e873-ad67-4e04-8aea-4d884bf44f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2144b0-4b2c-4366-9224-91da1edf93c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89aba770-dbf3-46cf-b92a-ea546df754ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b12526-4e42-447e-8865-802fb868a4fe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b21412-4a78-4c00-8fc1-51254635feb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cebac69-9360-44fb-b685-b75a3944e043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c2d6b1-5342-48cf-8793-a7b16155b2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a2be06-4128-46c6-8ef5-256a79201a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dbc2f2-f2d9-42c3-ab69-1c8f7eea992e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ddd14f-6ec4-4d26-a28f-7092c2e4b9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cf724a-54cd-4268-a18a-92aee260888a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cbc937-1106-43e5-991e-515d0bbbcae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e937c2d8-118d-4250-b9fc-bd0db13db0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d823462-55ec-461d-8725-cdfd6875a8c1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325f8e61-867e-41fd-9771-ad4ccd31e7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4975ca-7843-44de-8cad-8bb43824da8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d29b25-59b5-4e91-948a-db8f6c61369b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251a3a84-7f79-4764-b9a9-27f7d281c5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bd5d91-d2c9-433e-a5cd-2efb89d8fbec",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aee678e-06c9-4774-a3bd-7b4bf052516c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d620c07-5e35-4a6c-a529-b89768e6c98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78049575-c3ec-4305-b618-7b0e81a1207c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994f2a28-a129-44a3-8570-d6680627af70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3170039-ae38-4896-8fb4-8d4bc149064c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4693be0a-4c76-4029-b10a-5ef845fbf241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12ac2aa-822a-4edd-82a0-c604a3ac6bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aec03f2-1b6b-494d-9216-baadad9df79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad59d52-9284-48a2-a37e-febefa6e9fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c7c895-1547-4271-8ade-58c31c9d612f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dec0477-11e5-4306-af22-fd1cf2576361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb564b9-be4c-456a-914f-b64eaddb7964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66715f0d-fa47-4543-bfe3-8bbfa7c54053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e026845-8562-4786-815c-9756c4b044ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3739278-3dfa-476b-b5ce-097164a6f49b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e7a74b-5cfc-4eee-ab21-8b9f53f2d7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d5024b-4c75-427e-bbfb-f89314d69cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b444d73-704c-4ff0-b063-f7ac55242999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259f99fb-aa92-4b1f-9d3b-9fc53c3f2a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50aa059-37d8-44e8-864d-0fcf063d9221",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c9b356-f7eb-43c4-ae07-dbadd4a7a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d5b11d-4a88-4b59-8e96-e74e0d739cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785652df-af38-4eb5-a086-fc3433e219ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfa4404-68ae-46fe-9127-3f14cf278288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801f5f80-d7eb-4946-9dd9-0cea11d87ded",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b5fc6a-f975-40e6-b713-7c8508537fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e0215c-fd72-46bb-8b5a-57050c2b049d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f910d8fe-56fa-44fe-b34c-67fc6ed9f945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334a683d-ee40-48ca-9a48-ff8ea58bed4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d1eb8f-4503-4c54-a4c7-880fe367f1e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd03173-9c7b-4ceb-a720-e562f0a627a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f0f501-ac7e-47a1-b605-48d6d62d9ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8419c3e9-ef38-4828-88ad-e87b3829aec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077024ad-4f5e-49c7-89f7-475fcd249f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07a0e8-9d2e-42e8-89e8-522fc5f1a7a3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dd0a34-6e77-4913-9d83-ca85f8d4ab2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e42fa6-806c-4298-8599-0381faaa2933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a4c326-dc31-4959-afa0-fb3a0601d203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c559fa8d-64c9-47ef-98ff-8acc0a2c9728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa1de7b-7aa3-4572-b32c-5f3e99a18e9d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685082a4-323d-4f5c-abcd-77402c9e95f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8cdacbf-fc1d-4873-a3e1-db4a87c0747b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0026ccc6-303a-4bf4-b576-b25c2c5cb133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be55c479-cb11-44af-9e05-e4171521c79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0e3d39-6b21-4e09-8ec8-a74faee1d2f8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2578cc91-0480-44a3-87ca-9b50da4b3891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2261950b-445d-4e52-bc80-891705fb70ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92c1a90-87e2-405c-9cef-6b0f6d7259ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bf8031-abdb-4cf5-be6d-5003051436f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8bf7e1-8d5b-45b9-a3ff-b692927489b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187b2c5c-fd19-4c44-a8b1-67caf2ce5e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc2d7b5-2073-40ea-b891-44d794fe59b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c8b00d-3e4a-4c03-be5c-2742172b9ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e41ca31-1bb7-449f-95e7-37bef744b8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afd7fd0-2e2c-4a83-a252-63a8e1fbb0cd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2429d96-339a-48b0-85bb-4e29b556678c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c096c81-7207-4b23-b585-c18973e00bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d7af26-128a-4046-b569-60c5455553c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1513c8-62ca-4484-a26a-23b03d3a9243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88846fc-2fef-4967-b056-ab44f4ee5171",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effe9d21-a7f7-4a41-a5a2-ee2493f73b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb12d5b-7602-4809-9c12-8384ceebce28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5565294-adaa-4bd0-b292-4640dad10b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b1789e-907f-4abc-87ee-c5bf7869f32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7065ba4f-8613-43c0-8b01-eb19abed20fd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6074aba-ca10-4116-9810-9b08c45c0e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b063587f-1534-485f-b9bb-b694a8ce4012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe6e0d8-bbc2-4a0a-b6c2-c8476b7aaf9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e67566-5ecc-44c7-b64b-ed831f7b7eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b35ab56-4ff7-4bb0-85fe-3a9ca6e15a41",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d981a2-51be-41eb-8669-748f3c1f8154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d118fb8-b689-4555-b532-0e8bd0f63a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f07e44-3308-4a24-8f31-cd302685d889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509ad19f-26e8-4f51-be3a-93d67ecdc1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f3070d-5acb-48f8-bcf9-6d80028b1ea5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a92f8f5-19bd-4788-82ed-55b6f82d61d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6080bf72-d282-4dcb-b7a9-ab7803b072b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be4ef48-d8a2-45aa-bc53-37d8a78413c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df205707-0d34-45ec-82b2-b8418b0ea78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0152f559-2348-4509-bf73-ecf912220c66",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b689f019-743f-4ac6-a2a4-1e78532d3b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5210cd34-9fe1-4d02-8926-b2e03cabb48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435f2b84-7af4-4620-9ca4-042098b6e6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d90490e-1f6a-41ba-b6eb-e9e0aa543a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200bdec3-0ebb-4b71-a004-59bc0cb800f4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d45a57d-9bbc-4c41-ab2a-9ff5a16a6043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe74d8e9-ddf2-4106-8cc4-40b1e60eda7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64202808-84a7-40d2-8365-8dbd3acbc7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661e2883-fc63-4bf0-830c-eb10df436320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c224395b-5e24-4ad3-8c49-4bdddbc4778e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f7cc7-83bb-43ea-b561-1743993fa237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffe6dd3-b267-450b-b9fe-f57991719ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3b5fe5-b3be-4a05-b1b3-43028068ca51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dbaf2d-0b82-4746-a395-c2d1de08f2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c44a10-b5c6-4001-b75e-285ff9f55771",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5493578-86a9-4b3c-bd32-f49ecd676422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec0a12-c3d7-4fcd-8377-ee7bcacf0068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ab5f84-661a-431e-b703-6ee8bfa807e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb5a939-5c4f-4de7-bb6d-fcb601ffb06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cfda45-6aaa-403d-ae88-768770c271df",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c31a4a-6efb-41e0-aaeb-a5f8e41395fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802eb551-7eeb-461c-ba15-c3cf427d5e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e9ff01-2316-46cc-8a2c-f9f341f091b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c75ed0-7c20-42be-a94d-cfc98ee6e191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5de7803-664b-4a73-8ab6-c491d288bbf9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd6cab3-7ac1-447c-b555-0903041889dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4a0883-c002-4a14-94d7-146bfa6846b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a83906e-8c4f-4b1b-8f85-e4471b2708c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d17ade-0714-4bec-b050-a495a43f7337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0a8ccf-76b7-402e-ac32-f688e18ae5d5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949115ae-b18b-404a-8f76-e9e908b0b19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b29a20-f2af-4a2b-8c7c-d87abb9aa44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5240b36-b69b-47a9-9837-a97a69d31f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a958dc3-dec4-492b-8b71-9e263aad0bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b09fe8-76c4-4995-b699-ecca5efa8991",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd83b19-159f-4491-918f-323fcaa48212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e255334a-1967-4501-b880-2f117e679f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7772cf-7447-45bb-a6ee-d17ed8e0899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aaf1d29-71b0-4936-aaac-9a87acb3a29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9e51fe-5ead-4bc9-aafd-fc5599c3e07d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8154d90-8e73-455e-8802-fa5dd49447d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5c05c6-95d6-4780-8673-dc81a2e586f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f8cc8d-0cd4-47ab-9f80-ecdeb35a7ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e0f43c-ae79-4748-9e2d-596f0bb4529f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4050463e-17dc-485c-b16f-f9729b2d4df3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c676dd7a-f825-459d-9c60-b94bc03dc6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f40754-6857-4894-bd96-9415b32aa7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a779ec-abd4-4357-b4b0-19b44dbc570b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ae4025-077c-444b-85d1-2f871ac3831d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a711b6a9-2fc0-45ff-a57d-07eedf3e1d73",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb8d24a-3497-43b5-aa5e-15730e8ea087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3248b98b-aa49-48cb-9fc0-212f37a67987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d87b061-fcf8-444f-b46b-3c184fb21016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2181c1-e13e-4570-8a0d-14d43e21f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26787d75-1630-4a8e-ad5d-5cdc413c9257",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da989e7-40c2-4100-bcb5-425812d19f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c30d67-7dfa-40c2-ab1a-dafceb024b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fd04d1-4d7a-46af-9e87-5f5669710a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264e6376-4294-4a13-97a1-366dbf4acbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6670db86-df7e-4c7c-bd43-90db4937f0c3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012d79ed-8ce9-44ef-9007-ec86fc2e60f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1179f5ed-8a93-46bd-af3e-13a39e4233a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ba7072-203c-45b3-a634-72b1cb23906c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f1f52f-a7bc-4daa-b901-105844d523a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e960ae82-6cb6-4555-8e83-f4492133c30c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8f15cd-e557-4434-97df-36eb3b288f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34f4aa56-b899-464e-a04c-cb544d91d950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62906d13-67a5-4bf5-a771-551cc8a4625f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53c0f13-dcd8-4261-8094-989d817478af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff30f658-3a6c-4bcb-b265-817d8ad3e620",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7a9406-1607-4d18-979a-010f7c02e134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034ed8ca-a4fc-4d5c-b105-bf51bce79639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c21c49c-60a8-45bd-ae16-876d17d01f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84bf2e6-2670-49d3-98b6-0ed433f1de76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306c8784-f5ad-42af-a639-e418c86aba9d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d12bdb-e59a-4286-8d84-426c60098ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5b7255-bfef-4801-95a3-7064a195cb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e82048-5d15-47a4-95bb-081afea24171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ee4ac6-ce92-4ea6-9eb8-45a575b4c00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d92c70-d13b-42ba-8874-aa20faa0ef1a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f48307-5607-4629-9e89-e76f0d14257f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5401b96a-5960-424b-805d-c492942487e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a010521d-e11b-490e-9917-58531cbd9df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6da272-efa5-498e-ad45-1da9bd32f2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13de3e4-e457-415d-9bea-dd658a38ec11",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c37e3c-681d-4b34-b7cf-3f76f8cd5821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1f3898-1184-4546-a827-dcdc7e28d863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb65cc3b-d99c-4662-a585-b7ed9dae8764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d036e72-5a17-4122-90d9-1bebb1bf6402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31948e27-c045-47f0-aa42-ecfa99dc7ba6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790595f2-780b-4025-96a1-1ae60a4cf987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d501e9-8f07-4f7f-843c-03d81c3fedd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab64beb0-46f0-40a0-8ab9-3136fe723207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc64eed-fe9e-4c87-bf70-eab0651ddb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dff4b72-7179-4d6b-a1c5-1fad7821a9c7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f223f55c-76b4-4a77-af9f-35cb316e2bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6046332e-e45b-4a15-9075-581e80c862b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218db32b-7fc2-441a-8353-222ac230171f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430c4110-2087-4171-a955-edf65047549f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17bce71-234d-4640-ad8d-005e3950b5dc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05214d09-a159-4a33-82e4-f5f4b7149889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03038f4f-d10e-4f8c-bebb-2a433486cb1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cf0502-4c19-45e1-9011-08f350614d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddaa2c1b-3382-4bb4-bd6c-52f922d4bc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76486e2e-58f7-4c1a-a396-d068f97864b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c84e03-c112-4d6c-8688-e26023182665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ae0cea9-87b7-49ee-946f-4163584c4cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24bec3c-a8ae-4b2d-8b9b-41d4dac43586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efe3bd7-7da2-4662-baf5-f23324584b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec97ced-2f0f-414a-b701-c06226a885eb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f061aba9-7df4-42da-a26f-b76e7dffa403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a393b9-2c4a-41ce-a2a7-02e74bf9f582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0472efe-c4dd-487b-b308-11eea25b9c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907eb253-56d3-4ccd-bc78-e1f0776ee4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2eccb6-735f-4f22-90a1-777343883af8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f42176-6914-47b1-a316-a8cccdcce5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e60922d-1345-4f1d-ade6-73860e05c7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170ac7d5-b5a1-4720-be6a-4c64b88b23a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e6975d-a7e9-49c0-91a8-51454a72c088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1093d4a-6283-4baa-957f-7aecd774a78b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85cc4f2-f9c8-4c63-8d5c-7434ba78b609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24cbbede-0a65-4a6b-9cd6-8428428908db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6897ecc6-7127-4453-ac0b-1528835328f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3b83a8-494e-40bd-b433-9e9ae2962d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c43fd9-2b9a-4110-b322-84b47b14c912",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b0f3d6-c177-4f1e-93b3-22215ca8983f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1dd538-6e99-4fd3-9c3d-9ed102e901f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e100dcad-5c3a-4b04-b352-05e31896b53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a3fe12-c2ff-4c74-92b0-5e0aa6787eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5999522a-e34f-4480-8ce9-dc4026c8dd77",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33453a3-d4c0-40c3-9d42-b72758c1f0b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7de5a2b-27be-4e61-bc00-123a61303536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d010044-6fb1-4204-9eb5-5a44337b14ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a0211c-1326-40bf-b905-c1e592b75e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1209df91-518d-44cc-9811-faf799588bb2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532bd3ca-7ca9-47a8-a9ec-76407acc9f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb781421-c38f-4efa-b5f6-5b93d4f8ac23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49243a20-5269-4cb2-a9d7-3ceea7780fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446398ed-e253-444d-b5dc-44b5e4e790d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fec0767-9e8d-4928-b40f-14298dd2bf6b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc923db6-5edc-41a7-ac2d-5f138371f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02e2d83-e4f7-4999-a467-cc2f25cafbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce5e1f8-c102-4071-99cd-aa8529bc65e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec57a474-6616-46c7-bb40-110378dbab1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4afce4c-45ce-45c3-a060-2c8a3dab16b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b117d61-d89d-4d8e-bff9-10fd21aa5c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0819afa-dc4e-4abb-9466-cd27ec1c9772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b7f637-999e-45e0-b4e8-210d1084db2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3324335-6c42-4ca5-be20-66a78ecbceaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f06035-f5e8-4930-9760-6639dacdc27e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f94ce5-7446-4d3d-80e8-2d12b7b49235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19c720b0-d12d-436e-8f3b-2fe8914742ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a5c376-5622-44f2-b5a7-82405a6537dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413cb0fc-ed97-4097-b975-9a87df444cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e7d66c-b9cf-4e29-afe2-384e3bc4721a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c4b0f0-15db-468c-bb47-b926a4618265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b646c2-e9a9-4720-9281-1f4ab40e2261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708e641e-a88c-4dd7-a805-99c409d298fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "698f7e6d-ead2-483a-9300-1a9703aa0dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c449c30f-eeaa-41de-8757-f1150ebdfef8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f169b949-f842-4369-8a65-2b5cac374cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbe4d33-eb04-4cb2-908f-4871ee9e46e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ae302d-ef47-420b-9f98-8c3880486f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dceff931-083b-4dee-812e-3bc0f2c4136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3ccf7b-09e3-49c5-9897-ea851324d20b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6f168b-718d-4658-9d3b-2dc20d7bbbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae271ca4-cf5b-4116-972d-09fd19a7ea52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97595b6-f890-4060-9beb-a216b1b2fc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b38c92-1edd-4e8a-a2af-c58a63ac73f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a4047a-b7ee-41bf-9879-ddd3446ca58e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3921310a-64f8-453c-bac4-d891bddd574f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02529b68-50cb-451e-97e3-d2d79668e7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077f587-590f-4f77-be7c-4d02f015a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8482af4c-ed4d-4769-9a63-fa2c676a09d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc2794f-2a41-41bb-af81-72b316c45da7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fa54ee-0c9c-4143-8a48-1f0373e61a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019ff135-3484-449a-bfce-43ca1c3ad04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec93a18-73f3-46a1-90df-ff68befa2b27",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20080489-eb65-402b-b995-62937df057cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f6fda5-471e-4e87-9536-11eed4c98f1c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6fec14-bfc9-4054-be1d-0b4a67df52ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6f4479-7b69-4115-a92d-0f8b22e7bab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53007811-687d-4d6b-b98b-e6747b51e4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37eda716-23e1-4652-8ea2-5bcdbd3a067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6863d81a-7fe8-4032-825e-02d77c32eb38",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b67ec90-5f08-40bb-84cc-909c32fc4b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d20b0c98-1bcf-4f88-b540-341750197d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3ad608-d91e-4e36-a2db-8998e40e873a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cf5a30-a19f-49db-9042-e8ed7d549842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a099e1-c175-46a2-8ee7-ee05b3f1b8ff",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a07fc-64c9-426a-91d1-4c231df4f806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71d87a8d-6e46-4048-81d7-afc0884007dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32017948-576d-47f2-9bec-3849656379d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e27de52-35ac-4091-a7b9-33bd52ea8146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af90a8-e6f4-497f-a036-485b15de5d80",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c696d800-d4c9-4d4d-a31b-d546eec5bef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b9bfcd-05a1-4ba4-bd67-c03539cc04a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f23b0ee-eb08-4d8d-b2e8-f5e6aa3bccbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478be915-d93b-4b72-9913-0d2e9ab086cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6c9520-a197-47c4-9f12-e22ff62784d7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7ef19a-11aa-462d-ae22-f7ba9252171c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b54c2f9-8c00-44e4-aa19-b3f1f2f84343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaee76b7-82b7-42c5-9c08-18cab0042fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5671aab2-1780-427e-9659-5021591eb9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ac3ab6-ebfe-40d8-ba70-3e9b2d4a3725",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa567e06-2a7c-4d7e-bae0-81807a10131b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba71438-2c49-4663-bdda-7552abdf1c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105f3798-5d47-425b-979c-733c44d18f96",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8a774d-8601-4f08-b3af-7f73e5328daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9326d751-f76a-4a28-a17c-239344160ae0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292c48b4-11bd-4e36-a083-f331bf644b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9744fa-3056-413e-baea-707b89c11e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebe9e7c-8e0a-4d0c-9143-14a375ad8a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fe527d-a504-4506-bbe6-53948c305f6a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8ca2288-6124-493e-86f8-cbf12f41161c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07e6658f-b0d3-4dcf-80aa-afb47bbacf3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b65b320-3bba-45ba-89a4-3ea80f1ba671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7feca3ad-1eac-422f-81b8-6ce00d5bf299"
                    }
                  }
                ]
              },
              {
                "id": "1b880a1d-5892-40b9-a9ef-4947aba7bbc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "827cdad4-dde8-42f2-b0eb-98d0c606a2d1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bfeb03-1cd7-4976-825a-ade5fefbe29b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "169f17b2-45f1-4ea8-91a5-008c896b3c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa2f21-cb5a-40d5-b2be-3cbd6f0fb384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "018a6cb6-f48c-4b30-9304-b7c670143b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f2d769-2f52-4c77-8eaf-d7982926f12e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce936e2-50af-4358-a918-bbc3b1073759",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "566f09c1-92a4-435d-8ae3-050391b099a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3ad147-0806-4de5-871f-c36b9c2d1fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a887bc40-2668-43b7-ab86-89d9cd2f4b4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "625c4a6b-01df-465f-8e24-fa55b6eeffec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c897c39c-c9ce-4b16-b789-52e6b5c07191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ba2ab36-0796-483f-81c2-dd6aac65de1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aac3dd28-43ab-47c9-96cb-2e13abb07fb9"
                    }
                  }
                ]
              },
              {
                "id": "3975855d-f415-442a-8462-7b2b2ded3ade",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "497a7187-20e2-4a1c-b28d-0ee752dac57d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787eaa6d-4c0d-49a1-ac79-ae20ed9e9caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8ecc646a-8701-4991-aff0-103a706c3264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6f3830-42af-4253-84fd-e87783b9004a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b595673-9f3a-441e-8515-af6830b3587d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c1bd06b-896d-4987-b285-107efb4e5015",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a76dc124-f351-4516-8c88-ebe286ab807f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aaf2df2-f100-4f18-9bcc-f880ebc7d771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47bcf6a5-4c45-489f-a0d7-d2811d4bbc52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b33188cf-3772-4b8d-831b-237b6f1f97a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99192eb7-f657-433e-bc9a-e6a494bd3c0a"
                    }
                  }
                ]
              },
              {
                "id": "43dc58ae-99a3-4934-a213-3c2cfbb79db4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e801e29-4aad-41b8-af10-6d28728221f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d28ab232-ec05-4e14-bf2d-f913baa47336"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be78f3e7-3868-4bb2-a075-731666447749",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd4bbffc-d30c-4f9a-9d7c-9e7b53c21c0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64a51f13-8799-4163-85b4-f3ce8d6d3060",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f59d60d9-3890-4e07-a8e9-af44730c583c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3296d11-62b9-4dbc-b4b5-f917d3529b81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e5ed7f54-7d01-416a-9464-db8f9c23ac60"
            }
          }
        ]
      },
      {
        "id": "e98cbd02-849e-4b54-bdce-a6e1cc5dc847",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d81b2289-f917-448c-acee-4c5ca82db7ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a498fdf4-e4d3-44c4-a3a7-a5d40c4dda15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678b006d-dcee-45a9-9909-05ed8710eb66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "53b93225-076e-4dc8-a5dc-9ed324380947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cfa21f-2e5a-46d7-8193-a752759cce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b9af329-1632-4db7-90a2-3846b12edeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7354ad-96ee-4a0f-978c-ecad72ceeeb0",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157eb8ad-b438-444b-bf71-4fde55d1fee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "78fa4fa3-2794-46ae-b1c3-10707d71967f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f608edab-13ad-4f7b-a99a-229481cab8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f0778b0-27c3-423e-bd06-8e321af595bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "661b22d9-8d73-4648-a340-f983e18f792a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a69765c7-74a6-41d9-9691-6ea4afc91286"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cac1b94-b666-4d3f-a08b-64cf507f8cf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "573346a6-281b-4994-a6d8-244dd00d0441"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2daa2c73-306b-42b6-987e-5b0a15683bca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3400bf6b-b692-4ee9-8bd8-39e874b1fe3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f5f9473-e7b6-45a3-a094-859dc3f499ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1104b58e-3ece-4c93-b75d-07944f7b596b"
            }
          }
        ]
      },
      {
        "id": "b659b2f9-54a7-4fdc-9fe5-d93512b62024",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1bb12bd2-3847-44b7-89fe-c92aa5825ac5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2439005-9c3e-43db-bc83-a536f513c57c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f816f8d7-e97b-45d6-8816-4ce5662b4094",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c429c679-4010-4f73-9a77-05ca4a805b50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b20132a-baac-4c77-bc60-0cb6a6e52764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa03e00-3271-4c9c-941c-17832cd0162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a958a50e-cc8b-4381-a7a5-c125a3fc0864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4350d723-a85e-4723-9ea5-4f884ce92d24",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db692cce-bcab-42af-91e0-d5d576f488ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "83f69f9f-a97d-477f-8913-466173cab5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bdb362-827b-4766-82e2-b385ad31a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3555d3c-93f3-4d96-9617-c98ee84dde19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "503b5e4e-8afb-489a-aaff-bdcc80c30c73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc775d7a-fab3-4c47-9d59-70d58d95e39d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a38d293c-40f0-46e9-996d-e93b17dbb5ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0559e059-bd18-495d-ad09-3f266ef26a6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d0c24a5-5e66-4be0-875a-7424b5e1a6dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "16ddc59d-d0bd-4659-92dc-057727554b1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e07d16ae-5852-496c-9f10-744cbf449b55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f367ecf-ba37-48dc-a8f8-6e780861f6d9"
            }
          }
        ]
      },
      {
        "id": "88307b7c-0fec-41f2-9aa9-1e0a6c2079f5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1514b8ca-6cc3-44d6-81e5-170a3e797123",
            "name": "Negative Testing",
            "item": [
              {
                "id": "756249dd-c50e-472e-b6dd-03b940affe75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e8272a5-853d-4ca0-a464-56735946025d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b521fe-718b-4ba6-b9c2-2adb03c9ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ef016a44-dfd3-47bc-ba96-1234edbcea3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea2b94e-0db4-4a01-b6bc-b289b9c87df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e31c46bd-0a9f-4249-9120-fe54671ab55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778885ee-0f44-41e0-8abd-5e581e64e799",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fa1724-cc6d-4621-bc33-9333d9524b75",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e92ba40-8ad8-409a-ba29-8e0c636ae604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3567cbec-a869-4b1e-8670-1f6aabdbac50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bb6e8c1-9cc9-43a3-9dd7-813d44e36ffa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa043b5c-afef-4e27-8b00-2218d70cc507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15bd3267-addd-48f1-b826-88b475425d15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9032765-e8a0-49b6-ac78-ee4a426d4d49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f6192da-27ae-4ea3-931f-28168947c398"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5165d9b-90b9-4e36-81b6-3ca1e259b0c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1de290dd-fd07-459e-a62e-23d7801b33d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b584c4aa-966c-4dd2-b671-cdcaf49aa4f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ab099bd-3ad4-4d8b-b32c-10ba4df23f7e"
            }
          }
        ]
      },
      {
        "id": "eaa48650-d683-4663-9d30-5e5bfd8328e5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4913a170-602a-4cc5-90cc-e1acbc88cacd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86029e71-208a-4861-b6b2-154c53573129",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ebc59cc-16d4-4e15-9426-306620134cb3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f21668ea-52b1-4671-b888-3f38401ca54c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f09b2aeb-3993-43b6-bb1e-165d1509f31a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 774.526717557252,
      "responseMin": 9,
      "responseMax": 10026,
      "responseSd": 875.3619607129797,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675989791201,
      "completed": 1675990008929
    },
    "executions": [
      {
        "id": "19869c5d-60e0-49df-ab73-f1a61e96a7a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "12214d1d-930b-42a7-bc84-667e9d738b36",
          "httpRequestId": "07e54d39-8090-4759-b3b6-899002308f11"
        },
        "item": {
          "id": "19869c5d-60e0-49df-ab73-f1a61e96a7a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7f90e2df-9681-4eaa-a173-c51d726c09b5",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "068cad9d-07bc-4147-af6c-f9608cebff22",
        "cursor": {
          "ref": "cd1871cc-0594-4087-bb77-98c85da8f093",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a7c4f9a8-f3c6-4486-ac54-523272ddb090"
        },
        "item": {
          "id": "068cad9d-07bc-4147-af6c-f9608cebff22",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "64074348-529b-4d73-9050-fda25aeb3278",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "0c212def-08f4-4677-885a-bd18997fdffb",
        "cursor": {
          "ref": "ccaddc60-76fc-4b22-b315-138e8050606f",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7cf07e6a-937d-4bf6-ab5c-d7c15f359045"
        },
        "item": {
          "id": "0c212def-08f4-4677-885a-bd18997fdffb",
          "name": "did_json"
        },
        "response": {
          "id": "7bfd3c12-5f77-45eb-973c-afdc906a7da9",
          "status": "OK",
          "code": 200,
          "responseTime": 1181,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f52528-2157-4cc4-bf16-3b30345ae66c",
        "cursor": {
          "ref": "32190c06-bbf0-4967-883f-8d788172fe5e",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4cb05340-aec5-4d34-b747-48484e5810df"
        },
        "item": {
          "id": "46f52528-2157-4cc4-bf16-3b30345ae66c",
          "name": "did:invalid"
        },
        "response": {
          "id": "218aca08-8c5c-47ff-9618-e4950f3eb711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1312,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f52528-2157-4cc4-bf16-3b30345ae66c",
        "cursor": {
          "ref": "32190c06-bbf0-4967-883f-8d788172fe5e",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4cb05340-aec5-4d34-b747-48484e5810df"
        },
        "item": {
          "id": "46f52528-2157-4cc4-bf16-3b30345ae66c",
          "name": "did:invalid"
        },
        "response": {
          "id": "218aca08-8c5c-47ff-9618-e4950f3eb711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1312,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b456a0a1-53a4-4dae-afe2-bd7ccbe3a0ce",
        "cursor": {
          "ref": "e087fa2e-5e62-4c13-9049-5bd7f722d3be",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b114feb0-2321-448f-b7b3-45ef1d7f202f"
        },
        "item": {
          "id": "b456a0a1-53a4-4dae-afe2-bd7ccbe3a0ce",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e92dd321-9da7-4d72-8a59-947468bed3e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1362,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e588b7-8a9e-450d-8547-2f6edfa5e8a0",
        "cursor": {
          "ref": "ea624b13-ef8e-481f-a87f-e6a5e4facd10",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "277651c4-26c5-490d-9fb0-27830757c721"
        },
        "item": {
          "id": "56e588b7-8a9e-450d-8547-2f6edfa5e8a0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1af28f7b-9404-45a4-a738-31f65477bc6e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 647,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead8d42e-31a9-4829-99ab-07851e58c514",
        "cursor": {
          "ref": "92d6b648-9569-4ce8-b409-c2341831ae33",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fdbc0680-7b6b-4528-a339-dbd51ef32405"
        },
        "item": {
          "id": "ead8d42e-31a9-4829-99ab-07851e58c514",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "37599169-e1b7-4d64-a93e-298a4c44c5db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b20791-0a98-4091-84b9-2d3dc2f7a413",
        "cursor": {
          "ref": "179a3383-6fdf-4b64-a08a-421a8e9bb01e",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bed8e953-3dfe-42ad-bc4b-c78584d3a293"
        },
        "item": {
          "id": "69b20791-0a98-4091-84b9-2d3dc2f7a413",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0fe0ab48-2644-4f36-8619-4485765190af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 618,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b20791-0a98-4091-84b9-2d3dc2f7a413",
        "cursor": {
          "ref": "179a3383-6fdf-4b64-a08a-421a8e9bb01e",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bed8e953-3dfe-42ad-bc4b-c78584d3a293"
        },
        "item": {
          "id": "69b20791-0a98-4091-84b9-2d3dc2f7a413",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "0fe0ab48-2644-4f36-8619-4485765190af",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 618,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e165dbc-7910-4846-954c-4faf59861dec",
        "cursor": {
          "ref": "fe284c2c-250f-44c0-875d-d5fefbd356bd",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ba6988a7-35f0-4f13-bda0-c4c145d9b31d"
        },
        "item": {
          "id": "7e165dbc-7910-4846-954c-4faf59861dec",
          "name": "identifiers"
        },
        "response": {
          "id": "c12d7623-244b-4cc0-b934-75900c7b426c",
          "status": "OK",
          "code": 200,
          "responseTime": 1047,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a17e4-9947-42af-82ea-0dd7985dcfdf",
        "cursor": {
          "ref": "7c135a93-0ded-488b-9745-49e2e886eaf5",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "af428878-0d93-4917-aad3-f8e1f9535ba3"
        },
        "item": {
          "id": "518a17e4-9947-42af-82ea-0dd7985dcfdf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50467c79-8b52-432d-85b4-d1108ed04ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a17e4-9947-42af-82ea-0dd7985dcfdf",
        "cursor": {
          "ref": "7c135a93-0ded-488b-9745-49e2e886eaf5",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "af428878-0d93-4917-aad3-f8e1f9535ba3"
        },
        "item": {
          "id": "518a17e4-9947-42af-82ea-0dd7985dcfdf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50467c79-8b52-432d-85b4-d1108ed04ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6972cb01-b425-4e7e-ae8f-1c0198e32c09",
        "cursor": {
          "ref": "a3c98099-58e1-4632-b9a1-1e5865f1f5eb",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f4725eae-3c75-4d2f-a36d-d2d3e065e1c4"
        },
        "item": {
          "id": "6972cb01-b425-4e7e-ae8f-1c0198e32c09",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f500b571-ec7c-4eb4-a0b3-913f77079ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3d5399-0430-4bc3-bd8c-2120968eb85a",
        "cursor": {
          "ref": "e3f379b2-8cbb-45d1-9a58-8b879b19fd94",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1abf224c-7763-4b17-a88c-3c6fbe7996f0"
        },
        "item": {
          "id": "0b3d5399-0430-4bc3-bd8c-2120968eb85a",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "ca95a549-55fa-46f5-83a9-6cf80026e259",
          "status": "Created",
          "code": 201,
          "responseTime": 3016,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "99f54a39-0777-403e-8e8f-ab93c78afaed",
        "cursor": {
          "ref": "3b91696e-0db5-4f17-bfac-b405cf58f322",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d8c2c9ef-6dd4-4e42-a30a-585546869dd2"
        },
        "item": {
          "id": "99f54a39-0777-403e-8e8f-ab93c78afaed",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "28bb3a13-a428-4ee9-8f8d-5b29033e086f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f87eb21-d1cc-4333-9efa-9a184869d52f",
        "cursor": {
          "ref": "e1ed8a59-b78a-4f7c-adfb-017016911f29",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1dd935bf-51bd-45da-84f2-f315f83e8dc4"
        },
        "item": {
          "id": "3f87eb21-d1cc-4333-9efa-9a184869d52f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7d0e4248-ec85-4f8b-9731-78403451529f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f8a8f4-af45-4822-aa32-4b20fa4645be",
        "cursor": {
          "ref": "4634a08b-9eb4-4704-9c92-f5aad37ee9cb",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9c60baea-e100-42c3-9df7-3793592a6a65"
        },
        "item": {
          "id": "68f8a8f4-af45-4822-aa32-4b20fa4645be",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "aeb98222-7c22-40fa-b2c6-ae69e83996fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e37b103-ebec-4e98-a1f5-f5487d2acdcb",
        "cursor": {
          "ref": "24d818f1-5c19-4781-b32a-a87dfcfb7833",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6bd4243c-1e8f-48f5-a3f4-f9595dd06351"
        },
        "item": {
          "id": "3e37b103-ebec-4e98-a1f5-f5487d2acdcb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "39f2e421-c599-4608-bfe2-e3c83bece29c",
          "status": "Created",
          "code": 201,
          "responseTime": 2595,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "a2b96ca6-25f0-4b12-9105-2fdaa33c4438",
        "cursor": {
          "ref": "bb592a5f-81d5-4e90-a078-57a6df30e239",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "03235220-40d8-4e3d-abbd-d14e20a344ff"
        },
        "item": {
          "id": "a2b96ca6-25f0-4b12-9105-2fdaa33c4438",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d3e81710-a5c9-4940-a07a-7e3d95e98812",
          "status": "Created",
          "code": 201,
          "responseTime": 2581,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "40adaade-4363-4c28-a797-6705026e3b8c",
        "cursor": {
          "ref": "ee953e17-d4fa-4578-9918-c6ed0d838dae",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "657b2fda-8279-4f8a-aeaa-af759dba2aac"
        },
        "item": {
          "id": "40adaade-4363-4c28-a797-6705026e3b8c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "784fd840-70d6-483d-b20b-906e2265df9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e1311-7e10-49b8-a12a-37764ababf5b",
        "cursor": {
          "ref": "625ffd4d-1405-4654-aec4-96c9a908457e",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fb16ca69-a29b-47bf-9af8-0e7577824067"
        },
        "item": {
          "id": "797e1311-7e10-49b8-a12a-37764ababf5b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d1d9ad97-01a7-45cd-86b6-9b2aee7152a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f05c7f-6280-443c-a4d7-a05640222d22",
        "cursor": {
          "ref": "31d3257c-6914-4efd-985b-9219d70b5ce0",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dbdc6639-8044-404c-b653-e88e01e057f3"
        },
        "item": {
          "id": "f6f05c7f-6280-443c-a4d7-a05640222d22",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8e4e8234-91f4-4b30-8151-20daee00a35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fa6d99-326d-4344-a74f-be801a154d1b",
        "cursor": {
          "ref": "3194f8d0-2009-435c-9f9e-6daa13c6a423",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3f85b3a8-1bbe-438a-9d17-d6683c990684"
        },
        "item": {
          "id": "97fa6d99-326d-4344-a74f-be801a154d1b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "861f0728-ce74-4202-b7a0-806c176f6422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a002147-fe76-42ee-aa3b-d21d63314eb7",
        "cursor": {
          "ref": "c0faec19-2c33-4517-8f45-dfb2187d0a45",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b3ba1a8-b020-4ce0-8657-f6e64d65f2cd"
        },
        "item": {
          "id": "0a002147-fe76-42ee-aa3b-d21d63314eb7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6df97634-4805-496e-9b0d-f0fda1f71f42",
          "status": "Created",
          "code": 201,
          "responseTime": 2981,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "2c467bd8-2310-4d44-ab05-05414686b842",
        "cursor": {
          "ref": "f7aac954-4bfc-460a-84df-6f392c5a68ca",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "29ea808c-89d0-432a-a032-c8636f5c0290"
        },
        "item": {
          "id": "2c467bd8-2310-4d44-ab05-05414686b842",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "ae8716b1-cbe8-447c-b8af-3b09e00b6e86",
          "status": "Created",
          "code": 201,
          "responseTime": 4439,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "c99ff3b8-9111-4fb5-8bb4-eacf4ed68535",
        "cursor": {
          "ref": "bab3436c-4b17-4dc8-bd84-768bc3d32daa",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a7a071f-992e-40fb-8df5-76c379be2ee9"
        },
        "item": {
          "id": "c99ff3b8-9111-4fb5-8bb4-eacf4ed68535",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4c6d050b-b2f9-492a-886e-d7ace9c0ddf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4abd815-7541-472a-9bf1-810512e34e0c",
        "cursor": {
          "ref": "fab9ec72-bef1-4107-a696-3b9cf636807f",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ef6591da-609b-47e5-a5ca-55ae62ca6be9"
        },
        "item": {
          "id": "f4abd815-7541-472a-9bf1-810512e34e0c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2c2f65c6-bbe4-4128-a887-8251f38c16b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9edde-e224-4c1a-822d-15e9d8ea3a9d",
        "cursor": {
          "ref": "8d7ed2f0-78be-4db3-bdd5-048c1b22cb3f",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cb9477e9-e3d8-4178-9dde-1c88d3976a4b"
        },
        "item": {
          "id": "eab9edde-e224-4c1a-822d-15e9d8ea3a9d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "752f409e-d597-48da-a6d6-0c274b0971c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ddb5dc-285f-422d-b3e2-01831ff674cd",
        "cursor": {
          "ref": "ade1510e-3443-46b9-bab4-367bb9121d9c",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bb8611ad-b097-4143-91ae-736d05d54a92"
        },
        "item": {
          "id": "c7ddb5dc-285f-422d-b3e2-01831ff674cd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f7357f0-6bc0-4efc-a6c0-3dafde73645d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a469ac-aaee-4dd8-b953-cc10f79dbd06",
        "cursor": {
          "ref": "a824c69e-15fa-4bc3-b253-db466a6c94ed",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f575b7da-8980-4e9b-9698-4b23aae9667f"
        },
        "item": {
          "id": "10a469ac-aaee-4dd8-b953-cc10f79dbd06",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2d7caac9-89bf-4022-b716-290c5cfbd46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47415082-80f6-40c3-8847-d253dc76983c",
        "cursor": {
          "ref": "14dd9695-9ebc-4ed6-8a05-3e4d6b68c115",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d95e5bed-b6be-41e3-b673-b02e7a2c5280"
        },
        "item": {
          "id": "47415082-80f6-40c3-8847-d253dc76983c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0e146602-14eb-4056-8d91-f0b3d1d32440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9ffb46-6c83-4c86-97bd-d0b748a9a7d9",
        "cursor": {
          "ref": "778291cd-804c-41dd-b4e7-568e0afa9662",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d6542836-fc1d-4375-9412-0ced22b9fd1d"
        },
        "item": {
          "id": "2a9ffb46-6c83-4c86-97bd-d0b748a9a7d9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bf1206ba-bd35-4f5c-a331-8b4247d6edd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417bab03-ccfd-4dc2-920b-98b8b99eeb2f",
        "cursor": {
          "ref": "5f6e616b-db21-4575-b6c2-149c3b7192bd",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e1b2116f-d43e-45da-8ba2-7bf62f3b92fa"
        },
        "item": {
          "id": "417bab03-ccfd-4dc2-920b-98b8b99eeb2f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "811030ad-81cb-4e95-bbc8-38c4fa2fa2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c2008c-ab28-43bb-a10d-8e5d111a49f1",
        "cursor": {
          "ref": "f58650d4-ef76-4717-9d8a-426983427fa4",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "afc4aa88-538b-4d1b-8359-bd8e98bcfc5d"
        },
        "item": {
          "id": "c5c2008c-ab28-43bb-a10d-8e5d111a49f1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2da45cc4-db45-4840-be65-bf2914a7de7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abdd4b5-ff29-4dc1-b97d-9ec6349ae7e3",
        "cursor": {
          "ref": "01d70cde-d1c2-453b-a198-c60da652151c",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c60620d7-adba-443f-8fc2-1c8fb0856edf"
        },
        "item": {
          "id": "5abdd4b5-ff29-4dc1-b97d-9ec6349ae7e3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2cad6516-cc44-4f46-8b47-bb87fafd05d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c398c5-0b39-4ea2-8338-1b07c9bbf3f1",
        "cursor": {
          "ref": "1ed9f48e-141e-4c02-97ab-1e096d97dfc3",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c1f7f286-4ce2-4aa5-8fea-e24fd46ca92c"
        },
        "item": {
          "id": "c9c398c5-0b39-4ea2-8338-1b07c9bbf3f1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e8a54bf-1497-4bea-b74c-177e79e2760e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364b24f0-85d7-4325-a1f1-6e95e7a5a48e",
        "cursor": {
          "ref": "3ee3cc43-e60b-430f-be0d-99a215a7e355",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f11d825-9a05-4b85-8897-b87eab3f010e"
        },
        "item": {
          "id": "364b24f0-85d7-4325-a1f1-6e95e7a5a48e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9f7e44d2-7a69-40b3-aaf1-d44e1aea8a64",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3054,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "a78fcece-730f-4817-827c-8b850862d49c",
        "cursor": {
          "ref": "9fcfda78-6cf3-46b4-9374-9a018c031f8a",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "482b757b-9cd0-4448-86e7-d996cbb4db66"
        },
        "item": {
          "id": "a78fcece-730f-4817-827c-8b850862d49c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ba27afd5-535f-41f5-96e4-147ac4624186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5f601a-f625-4786-82fa-f2b329e52876",
        "cursor": {
          "ref": "1395d544-c08e-41e2-b10e-fc3d415413ca",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7374902f-3808-4f96-a7e7-7311ded102cd"
        },
        "item": {
          "id": "6b5f601a-f625-4786-82fa-f2b329e52876",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e0b3f9f2-77ad-4482-bc4a-0bc537dff97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1540,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5f6c19-7e81-447f-a069-baffa46bf1df",
        "cursor": {
          "ref": "a6bfe036-7dcf-43b5-bcca-f0a6ddb290d9",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bc210865-b10b-43ae-914c-17dc40839202"
        },
        "item": {
          "id": "8c5f6c19-7e81-447f-a069-baffa46bf1df",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7272bfc4-c585-4c0f-8b42-c8c423166288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1340,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b14e59-78df-4a4c-a381-7ff53c0f8263",
        "cursor": {
          "ref": "e3602fe4-d291-4bf5-8457-fd3ba316e32b",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "96843bf0-a6ad-444c-a993-82685aa60fdc"
        },
        "item": {
          "id": "33b14e59-78df-4a4c-a381-7ff53c0f8263",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad130ce9-41b0-4a43-89a9-cab3e7bc5bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2a4c74-1524-41dd-941b-9d91798bacdf",
        "cursor": {
          "ref": "071d3834-a6f0-48f4-b8df-e207c35eab10",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ed4ee159-c182-4737-a01d-382a66ad8873"
        },
        "item": {
          "id": "ac2a4c74-1524-41dd-941b-9d91798bacdf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bf52fff3-527a-4fc0-8a79-3a9df3c32a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2826cd5-8d62-415b-97ff-99bf051be515",
        "cursor": {
          "ref": "0a0a8b8d-9ea0-4fbe-a47a-787cff527f3a",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2c3f3bcc-c078-4a55-b7be-929fd0e1e614"
        },
        "item": {
          "id": "d2826cd5-8d62-415b-97ff-99bf051be515",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "001e5555-9fb4-4e95-8a67-3f55d5cd7c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5915f44a-6765-4d3f-845b-1a83bb8eef7f",
        "cursor": {
          "ref": "15c0bfc5-ab47-4ffe-abe7-1710c06d0e36",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "27c51587-a4da-4274-9c87-36f663ce8548"
        },
        "item": {
          "id": "5915f44a-6765-4d3f-845b-1a83bb8eef7f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dcf8abb3-b61e-4aa8-8cc4-fc2d079c3e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e051ae-7354-4ac8-a606-5981113df246",
        "cursor": {
          "ref": "be2b3b7c-42e3-45ea-9b01-c7531388be2b",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "311caa04-9871-49a7-a282-8f414fd3cf0a"
        },
        "item": {
          "id": "e9e051ae-7354-4ac8-a606-5981113df246",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ebcf2ae9-7f27-4946-8ffc-d8a98b746345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b455fe-e114-49bf-9b53-2c69231fe4bd",
        "cursor": {
          "ref": "493242d0-12d1-41c3-b4b4-0b9df6b1c57c",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f163ee46-954b-4ffb-842c-363c6b0293fa"
        },
        "item": {
          "id": "41b455fe-e114-49bf-9b53-2c69231fe4bd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f3543b1f-bd03-464e-9279-de43bb3c533a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dfece9-bff2-448c-aec1-4ea978281485",
        "cursor": {
          "ref": "431a68d5-1773-4793-bbbe-cbd1a6fbf94b",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "96f8c499-7aa2-4c7e-80b2-743deaac8f5e"
        },
        "item": {
          "id": "41dfece9-bff2-448c-aec1-4ea978281485",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fd856d96-2aaf-4757-b65d-dd8f2905e465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dbe92b-a914-423a-8aaf-60baf6961f09",
        "cursor": {
          "ref": "fff1958d-13a5-4db8-ad24-a7518457ee91",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33d1922d-b1ff-4e75-8b58-b70a1cc1037f"
        },
        "item": {
          "id": "e4dbe92b-a914-423a-8aaf-60baf6961f09",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c1a4c0c2-5678-4543-9bb9-c145db99f2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3312712-f2d9-4fd4-aba3-a374a8f45638",
        "cursor": {
          "ref": "765b7d35-cdf9-4f66-9bbf-c0160a7e5a7b",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aa573ddb-6261-4e00-bff2-16ce51723095"
        },
        "item": {
          "id": "a3312712-f2d9-4fd4-aba3-a374a8f45638",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d5a9a308-94fc-4392-ada6-3dd7572953c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1145,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b286df3-50cb-45ae-b641-a2dd8ec1372f",
        "cursor": {
          "ref": "bc89e66f-1282-473c-9e29-be32b09df8d8",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fb73139a-be3e-44f0-a894-17ce148ff2f2"
        },
        "item": {
          "id": "4b286df3-50cb-45ae-b641-a2dd8ec1372f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d6c730b1-93b3-4fc5-b69e-4da427a82278",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1298,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "6a42b142-4b79-4ba4-8775-1ce865e0df20",
        "cursor": {
          "ref": "825d3672-484e-40b0-8b4c-5a3b3799912e",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bb0d6618-da43-4b4b-8691-304ac94626ea"
        },
        "item": {
          "id": "6a42b142-4b79-4ba4-8775-1ce865e0df20",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3e0d64d7-da26-48ff-96b8-912130200c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1619,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b28c26c-e9f0-4f39-bf35-f0fba2fd32a2",
        "cursor": {
          "ref": "9bba399e-501b-4d63-a926-fd126a8d0b51",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "acd559a6-fb6c-451f-b73b-0f063c4d93c5"
        },
        "item": {
          "id": "9b28c26c-e9f0-4f39-bf35-f0fba2fd32a2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "eb1136e2-69e5-4715-b8b4-e436e4274af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1452,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43ed619-5566-4b6e-a7fc-ffb723ddfda8",
        "cursor": {
          "ref": "e65e92a9-a493-4d00-9d61-c51956132a3a",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "71bd8313-6704-4fcf-82c9-5024d05087ca"
        },
        "item": {
          "id": "d43ed619-5566-4b6e-a7fc-ffb723ddfda8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c5499039-a255-4694-a8e4-9c2173e0db38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0846ced9-6708-482a-9300-4277452308a1",
        "cursor": {
          "ref": "28ac22ae-439c-422c-8032-69ed7bb4b5d1",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8a4345ac-6868-4400-8874-37e701915773"
        },
        "item": {
          "id": "0846ced9-6708-482a-9300-4277452308a1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "96ad0f71-0ecb-40f5-9238-cdcb4471f7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19f678f-0f69-4691-b4cb-6fe2f528ea74",
        "cursor": {
          "ref": "d3093f1d-2028-4118-aab1-3438a24a14c2",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e4ffc0f0-e9a1-49dd-a1dd-ad9ec6aec13e"
        },
        "item": {
          "id": "c19f678f-0f69-4691-b4cb-6fe2f528ea74",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "70392884-e26a-4610-acd3-dcff57a7ae2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03205b26-1469-4244-8308-e1837a9e07b2",
        "cursor": {
          "ref": "08016899-179b-43e0-a411-09c8392331de",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a4bddbab-61b0-4243-bb04-8f9b48b6ddaa"
        },
        "item": {
          "id": "03205b26-1469-4244-8308-e1837a9e07b2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ff4e6789-f9a3-4606-b265-96db08bfba4b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1104,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce62114-7b74-4a2c-8195-3503f924b01a",
        "cursor": {
          "ref": "c9ec9b69-262f-4630-89c0-36237c04e4e4",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4cc1e84c-2453-4beb-ab82-edae51dd517f"
        },
        "item": {
          "id": "5ce62114-7b74-4a2c-8195-3503f924b01a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ae3f2efd-9ecd-4453-8d88-9cb909f77540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a79e078-36d9-415b-ab40-4d090b9bf5e3",
        "cursor": {
          "ref": "539accc7-7f72-48dd-967b-d6f5c4e88ebf",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7ec2c228-0125-42b0-b074-98888db317bb"
        },
        "item": {
          "id": "5a79e078-36d9-415b-ab40-4d090b9bf5e3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "980b2ae9-7c53-4a57-a273-66313328a6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988fe35d-6f1b-4f46-bfe0-c44d66200eab",
        "cursor": {
          "ref": "c63e5d44-c545-49e7-87c0-e2b0ed602aa2",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b5f9511d-039e-4b49-a1e1-b30d2dbbe790"
        },
        "item": {
          "id": "988fe35d-6f1b-4f46-bfe0-c44d66200eab",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ac512fe-3cb1-4235-8aa4-3062dcc0d002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace81bfe-8d44-40c6-b3f1-6288beda4bed",
        "cursor": {
          "ref": "91265d85-b8bc-4f6c-bdfb-727bfabe3f91",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "55372599-bcb3-4abe-83ec-24fd540facab"
        },
        "item": {
          "id": "ace81bfe-8d44-40c6-b3f1-6288beda4bed",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5c327fa1-9ec9-4f10-bb34-4ece9ddd6366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aa7061-748e-4b70-9f6f-4b46bb4c1f41",
        "cursor": {
          "ref": "282f051f-0790-4e54-9a87-928e49609cd1",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "00599abc-ec2b-4650-8b8a-8eae292de5af"
        },
        "item": {
          "id": "03aa7061-748e-4b70-9f6f-4b46bb4c1f41",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bc2b890c-b698-4ec6-bc98-6bebe1090a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac6d65a-9859-4f78-ba61-fe653027de41",
        "cursor": {
          "ref": "40bb86d6-9a46-4e34-a7c5-afefb5ddf0f1",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9e7056e5-132d-4327-a0d4-8a8e5687a1a9"
        },
        "item": {
          "id": "8ac6d65a-9859-4f78-ba61-fe653027de41",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7d2fd636-c11f-4ac4-9e23-a5a5bd5b5d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6712d8ea-99ea-4a6d-a174-bfb241d8504e",
        "cursor": {
          "ref": "04761b34-39f7-453f-8050-15f9a391d964",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4777589b-8dbc-48b7-8cb2-5af8367b560c"
        },
        "item": {
          "id": "6712d8ea-99ea-4a6d-a174-bfb241d8504e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1fa18424-72ef-4f66-9708-6fd8a4f1f5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d95baf-4b0b-46a6-a4fb-d5d286963f87",
        "cursor": {
          "ref": "b1c7ffd6-7523-406f-9cbe-c898d5e15f1f",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "75da90ae-b932-4650-9d9a-61fa25941fc6"
        },
        "item": {
          "id": "f4d95baf-4b0b-46a6-a4fb-d5d286963f87",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8d2dd439-ac84-4c77-a308-d3b603b40fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 889,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf89afa0-5f3b-46cb-950a-98408cbd7cfa",
        "cursor": {
          "ref": "42ba20b7-8823-44a3-b010-a868f8fbe2d5",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5c9915ad-d962-4a1e-a71f-2716d9a2b493"
        },
        "item": {
          "id": "cf89afa0-5f3b-46cb-950a-98408cbd7cfa",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9c2d596d-b7b7-4500-a878-4082eddf9484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3b0d64-33ca-4b37-9a7c-a5e02ead96f1",
        "cursor": {
          "ref": "866e569d-dbca-4581-8bd8-de7844b0a168",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a2df0981-c480-4611-91d9-c278a1759157"
        },
        "item": {
          "id": "8b3b0d64-33ca-4b37-9a7c-a5e02ead96f1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "46a7c32e-7146-4403-87d4-0342e7e2026a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f47b5a-8a45-4113-800c-28aacbae4446",
        "cursor": {
          "ref": "c122f15c-fd32-41f2-a0a4-d23b5c4b837a",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "46ad0954-8a1f-40fb-bdeb-81856bcdeb0f"
        },
        "item": {
          "id": "89f47b5a-8a45-4113-800c-28aacbae4446",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d84bb1b-50ee-4996-8f68-5e99d307e47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afe8515-e2d4-4cc2-9aa2-a9879ad43cfc",
        "cursor": {
          "ref": "e4694f7e-4360-4790-b49f-be981447bdaa",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f61e1ab4-bd74-481d-b3ab-1ba3506cfaa3"
        },
        "item": {
          "id": "7afe8515-e2d4-4cc2-9aa2-a9879ad43cfc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0bda3a5a-11b4-40ce-b287-b95f9c80913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365720b1-6d3f-4d93-b458-fbc3674e3f0a",
        "cursor": {
          "ref": "39c2b69d-22a8-49fd-97cb-b798e75dc457",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3d1fd538-a35f-4569-9687-36f6cd393846"
        },
        "item": {
          "id": "365720b1-6d3f-4d93-b458-fbc3674e3f0a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5e53d10b-f91c-4da4-bb72-4230c4178324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6407a8-0173-4077-8ac2-6edb075d0041",
        "cursor": {
          "ref": "11291426-4718-4695-aa3a-dc93bcc32527",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "55028ba9-f30d-49f1-94fa-3cd385e317ad"
        },
        "item": {
          "id": "fe6407a8-0173-4077-8ac2-6edb075d0041",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2cba8840-bd1d-479d-8ad4-df86781c962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8903b2c2-8cdd-4fd5-b90f-efd613486235",
        "cursor": {
          "ref": "f425f55e-c5d6-4e47-8149-40c8ddf38388",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "76382e80-1b08-4f62-bc68-4ab838d7cf4f"
        },
        "item": {
          "id": "8903b2c2-8cdd-4fd5-b90f-efd613486235",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9a94c345-8eb5-4571-becf-04c0ae2e6587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d290ea-d66e-4793-ae62-581f6e3867cf",
        "cursor": {
          "ref": "6d90d2a6-df9b-4e0c-8f5f-cbbe52dd0ee9",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d36ff27-1ee1-46ab-ab86-88f5fe015a02"
        },
        "item": {
          "id": "42d290ea-d66e-4793-ae62-581f6e3867cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "34d090f0-97d9-4532-bf68-15c8c0c0ed0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e2c238-0583-4b3e-b42d-76b42857dde1",
        "cursor": {
          "ref": "aee917dc-3582-4f5a-942e-8152c920ee7d",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f0ae5c47-dc11-41e1-90f8-37fdcf97c4ea"
        },
        "item": {
          "id": "69e2c238-0583-4b3e-b42d-76b42857dde1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "574a883c-e28f-43e9-8629-ff8c795ffcd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa6150c-aea9-4811-a23b-0b528714dba9",
        "cursor": {
          "ref": "aa1fd507-a05c-4393-a35c-a6601b5b2e2b",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a1abbadc-93ad-47a3-aa43-540cc76f916c"
        },
        "item": {
          "id": "3fa6150c-aea9-4811-a23b-0b528714dba9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "61d15046-302d-4adb-83c2-5190e549011b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70658220-5d73-403e-a5a0-7f239ba7b31c",
        "cursor": {
          "ref": "777b1caa-2189-4ec3-86ad-af0fe67274a5",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b6d002d5-60ef-4c8d-9ec5-2ba4d991ecf9"
        },
        "item": {
          "id": "70658220-5d73-403e-a5a0-7f239ba7b31c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "96f4f1e8-b08c-42e1-b4c0-56c14b2e973b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf3b5b2-0a7d-4dc0-a311-438c33b1c946",
        "cursor": {
          "ref": "7700cf36-09dd-4bba-87b2-1d7d0c1a6036",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6e5b6c5f-30e2-465b-b7ce-2c776d197b9b"
        },
        "item": {
          "id": "1cf3b5b2-0a7d-4dc0-a311-438c33b1c946",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bf2179b3-713a-422e-a425-7b803e793142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e7dbfc-e19f-4d95-89ef-28c89bfe42aa",
        "cursor": {
          "ref": "d7c1f2ab-ada7-4e43-99f6-43da8812b5cf",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c7f742c1-aef9-4f34-b5f9-7ae2bd60c10c"
        },
        "item": {
          "id": "d6e7dbfc-e19f-4d95-89ef-28c89bfe42aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cebafec7-e9d8-4d90-bfeb-da4385eb2928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42c4ef9-0bfd-4284-bac1-ad595d9e9504",
        "cursor": {
          "ref": "5ef9bcce-d4b6-4abd-89a4-35bd389eaa87",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ce5de4c0-ca65-4fd6-a899-3e0e783b8e4a"
        },
        "item": {
          "id": "c42c4ef9-0bfd-4284-bac1-ad595d9e9504",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b7de12bc-d5c5-4e64-8ede-7222f5837bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7d8592-6e67-4127-8c09-84a20f338ab1",
        "cursor": {
          "ref": "f8da9df6-0835-41c9-a645-b24989c5cbb5",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fc1c887e-adac-46d0-b56a-3cb1b1801a3d"
        },
        "item": {
          "id": "9a7d8592-6e67-4127-8c09-84a20f338ab1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c9369f86-6bc9-4fdb-9599-4c39af2f70e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f44a4a-2afe-48b0-9761-74e3f3cb9082",
        "cursor": {
          "ref": "387e3ed0-055b-4b49-9ec8-a8ae6dc1f45a",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5241dd44-3f8e-4164-9315-57317a075d61"
        },
        "item": {
          "id": "95f44a4a-2afe-48b0-9761-74e3f3cb9082",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "704957ab-38fb-4be6-8fcd-f533f8810013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca11caf3-4358-4aa7-8a96-bf174aefad1f",
        "cursor": {
          "ref": "7197bcb7-bafa-40b0-957d-5fc514682fc2",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a0d19d7-f1c8-4bd8-a98e-ece4a0c71bf1"
        },
        "item": {
          "id": "ca11caf3-4358-4aa7-8a96-bf174aefad1f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c0448c2b-fb10-488b-8c80-83f7b4630816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dd888b-e0e5-4642-90fd-581ae36bfeae",
        "cursor": {
          "ref": "46be9ac0-e4f9-4158-87d8-6d45b1c6991b",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4057e5ae-1336-44d2-bae7-e599f28c527b"
        },
        "item": {
          "id": "56dd888b-e0e5-4642-90fd-581ae36bfeae",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f3bf776a-1b84-4c74-8b86-4ca7ac7d9f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3aa112-dd63-4978-9632-28763fe7b033",
        "cursor": {
          "ref": "5f89b194-b5c3-4ccf-bc41-34684fdb2741",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8acca87d-1182-4073-9f9f-ab8e45ecb57a"
        },
        "item": {
          "id": "7f3aa112-dd63-4978-9632-28763fe7b033",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "40989616-eef3-4003-a14d-92fdcccc8654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828138de-87e1-4b17-a6d3-0cda9d348306",
        "cursor": {
          "ref": "eef351e7-20ff-4912-bac0-0f5ee8313fc0",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ccded13b-c5ba-43e6-b3ac-4ac0e23aa62b"
        },
        "item": {
          "id": "828138de-87e1-4b17-a6d3-0cda9d348306",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8c51baaa-2fbe-4a99-ac8d-b3f9292c404d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33696eb5-ce77-4318-973f-4d6c4e461a66",
        "cursor": {
          "ref": "e5e3d649-ce0c-45f4-8740-6844a6b95479",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d904b971-553c-449b-ab14-6aef2e7cf084"
        },
        "item": {
          "id": "33696eb5-ce77-4318-973f-4d6c4e461a66",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "46f0c16c-78c9-4ee1-9958-7ac9d4cfa70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97826cc7-196e-446d-91fe-a944068500ec",
        "cursor": {
          "ref": "f27bb423-4c52-45db-b686-ce58f70b39fc",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1fef422d-d23d-4f76-a4c0-fa7e24100491"
        },
        "item": {
          "id": "97826cc7-196e-446d-91fe-a944068500ec",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2b0c0935-ee97-49dd-a9d7-9212ab05e9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207c9cdf-3e14-4905-98f2-a39e4d41dcf9",
        "cursor": {
          "ref": "d425caac-6ee3-4fdf-a38e-647f05829c94",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ba055230-faa6-4c8c-930f-056bc7c21c25"
        },
        "item": {
          "id": "207c9cdf-3e14-4905-98f2-a39e4d41dcf9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "428f8084-0664-4e27-b080-8227ccfe088a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea9ebf8-6afd-4a37-aef8-3ed5170911d7",
        "cursor": {
          "ref": "fdf51ce3-fc7d-4f28-8d07-e2e954b15121",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5b3da9e1-1ac1-4165-9033-3789698f214d"
        },
        "item": {
          "id": "6ea9ebf8-6afd-4a37-aef8-3ed5170911d7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "10f9976e-0559-4602-99df-471c416f23aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51373779-0a1c-40af-881e-7c4020cfbd67",
        "cursor": {
          "ref": "2ab7136d-2432-4c98-b0a3-026c7810bc7c",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "69b6a482-244e-4cad-a4ef-bfbebf455b8e"
        },
        "item": {
          "id": "51373779-0a1c-40af-881e-7c4020cfbd67",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4d791d55-75b7-42c3-9473-37b354d95fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31dc18e-1fa2-4182-b61a-295b7f1dd39f",
        "cursor": {
          "ref": "ecb2fc8e-a6d2-4708-8ef9-bf079fdf107b",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e111020d-1085-4c45-b624-8e4f2ebabbbe"
        },
        "item": {
          "id": "e31dc18e-1fa2-4182-b61a-295b7f1dd39f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2ca6de8d-9f9c-41d9-ab19-e514b43aa80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d959a7f-fdc4-41ce-92b6-b7e0b4cd1429",
        "cursor": {
          "ref": "37eff54d-6174-4498-92e2-d65a6ca08fe7",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a8da8de9-c757-4a52-b7aa-016f613d3842"
        },
        "item": {
          "id": "6d959a7f-fdc4-41ce-92b6-b7e0b4cd1429",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "38a152a9-5ed6-46d5-b888-50315e5a22df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3db8a5-d8fa-4462-89e3-ace832e3b4b9",
        "cursor": {
          "ref": "cd8a5d23-5ba3-4f56-92c8-b59bf20dea58",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "95bad2b1-5661-45b5-99ea-dfb4f3842554"
        },
        "item": {
          "id": "fb3db8a5-d8fa-4462-89e3-ace832e3b4b9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3266a5ee-6cee-4d65-9225-ced47665c4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96604bdf-0018-484a-bf03-4a872a7ad979",
        "cursor": {
          "ref": "6dc8bc57-ef96-469e-96dc-dada85e02750",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8a343cfb-a5f3-43b0-a7c1-78ab7bf7b796"
        },
        "item": {
          "id": "96604bdf-0018-484a-bf03-4a872a7ad979",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "05dbb7ec-7877-453b-bc7c-ddc4acb5b8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d7077-afd2-4748-bfe0-1494aeea7f26",
        "cursor": {
          "ref": "bcc42857-7280-40bc-b93c-a40d3d66dd85",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bfdcf2e8-926c-4056-8405-42af31ecf4f4"
        },
        "item": {
          "id": "182d7077-afd2-4748-bfe0-1494aeea7f26",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7940b848-49f8-4a5f-b904-18cffccbec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7408ee-b8dc-474e-90f0-52a55ef9a920",
        "cursor": {
          "ref": "2d8e6fd6-af42-46b6-9e46-8ecd2da0c242",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "58b4025b-061d-4b31-9c08-e3b01c237ef7"
        },
        "item": {
          "id": "bc7408ee-b8dc-474e-90f0-52a55ef9a920",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b86b4cb3-8b16-4731-8d64-5bb76ca3bb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81265177-459e-4899-8eb2-d6e811c1ca28",
        "cursor": {
          "ref": "07cbfafc-b483-4cef-931f-cc263acb7eb9",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bbb650f8-95ac-45fe-ae04-404349242fda"
        },
        "item": {
          "id": "81265177-459e-4899-8eb2-d6e811c1ca28",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "07ba4ed3-ae57-43e1-81ce-a1ae4232e787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6cac26-513a-4f69-a013-5c61b0bec7d6",
        "cursor": {
          "ref": "09fa60ae-8c2b-4d0b-803b-ea440635dcc2",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "21c5e078-45a7-4934-81ac-737b7085a9c3"
        },
        "item": {
          "id": "af6cac26-513a-4f69-a013-5c61b0bec7d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "969dd154-981b-4dd9-9fc1-e1edbaafaaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c73a9a0-8315-47c8-9628-ab22c2563cf7",
        "cursor": {
          "ref": "347f131f-2ea9-4949-aa67-9e63be1633f0",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1d283fe3-e2e9-4f4c-b72c-1cab9aaa5ffe"
        },
        "item": {
          "id": "5c73a9a0-8315-47c8-9628-ab22c2563cf7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5c0f0271-dff4-40fd-a592-4857a3ff47d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d25fbc5-f6a6-48a9-95f0-73a041f81548",
        "cursor": {
          "ref": "ee4bdb01-e0c3-442e-88fb-c30785ddbb2a",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4df74633-526c-41db-a4ee-05af7dd883ba"
        },
        "item": {
          "id": "8d25fbc5-f6a6-48a9-95f0-73a041f81548",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "41f4ee09-4172-42ed-bda9-5d21f1145154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aff8659-e3bb-4c39-83d2-d718238a066b",
        "cursor": {
          "ref": "e0ca48be-db61-4637-b529-29145fd6415e",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7441eaa6-dad1-4578-a6a2-c6dc335db508"
        },
        "item": {
          "id": "5aff8659-e3bb-4c39-83d2-d718238a066b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "efa0e515-a385-4059-a46e-b51d06c46faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370422a4-9df3-4da9-8083-bc9c14980d84",
        "cursor": {
          "ref": "5727ec55-fed4-4924-a806-be8942592a91",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e6985d78-2a3c-4ac9-8421-c79933cecd0b"
        },
        "item": {
          "id": "370422a4-9df3-4da9-8083-bc9c14980d84",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "39bac5c9-fec9-4ead-8273-ed95f61ec4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef53a27-9bd7-43de-b76b-e31d4d6a87b5",
        "cursor": {
          "ref": "ca44a461-e7a0-4ab4-934e-92febf3bba82",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2e291534-5ce1-4ae7-ab49-706b9fad5d1a"
        },
        "item": {
          "id": "8ef53a27-9bd7-43de-b76b-e31d4d6a87b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a59f5954-a4f8-4880-ba5f-2c3e2ff6237d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12081ff4-545c-4367-a5f7-df0bd1266375",
        "cursor": {
          "ref": "34cd70d7-847d-4def-b671-6b47e96a5752",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "65902cb0-1e37-49ee-9c77-e583f1614b57"
        },
        "item": {
          "id": "12081ff4-545c-4367-a5f7-df0bd1266375",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "30808cf7-fb1a-4089-b759-bab044b9e529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b6b3f-5a4b-469d-bd58-d76abe60cedd",
        "cursor": {
          "ref": "774d4538-35db-4388-8d46-e49958d2f84b",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c0ad1791-b7e5-4c6d-809f-213e234f878e"
        },
        "item": {
          "id": "119b6b3f-5a4b-469d-bd58-d76abe60cedd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "50a2d389-fd0c-441f-ba9c-c997311dfc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc5b06b-b919-4b5e-bdc2-2be46d8f8674",
        "cursor": {
          "ref": "088f7f3c-79ae-47cc-bb3b-43966a880221",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d9a83d6d-2baf-4e01-8d1f-9b771686dc65"
        },
        "item": {
          "id": "ebc5b06b-b919-4b5e-bdc2-2be46d8f8674",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "29e86302-fd0b-4424-af13-6f719e1ce96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305231ba-f13d-4b61-b396-5c0ddb7fdd8d",
        "cursor": {
          "ref": "955d6bd6-7f55-4ead-a143-9d3b716588fa",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "81c514b3-3301-4df6-97aa-8752d81bd461"
        },
        "item": {
          "id": "305231ba-f13d-4b61-b396-5c0ddb7fdd8d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b40bc034-a605-44be-808d-246a65f591cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bbd064-8dd7-4b9f-ac0d-c4027f498a8b",
        "cursor": {
          "ref": "a71a4ca1-9d44-4c87-946e-c076e322e26f",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "adf1209e-eb4f-4d7a-8483-112740fcc2f3"
        },
        "item": {
          "id": "47bbd064-8dd7-4b9f-ac0d-c4027f498a8b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e2319455-197f-4fe1-ae58-9869ef29c34f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e42e1b-349a-4b1a-8e61-155c29e0e0ae",
        "cursor": {
          "ref": "ce97012b-feed-4867-830d-ce5081c4819d",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9cca64e9-8d61-4a77-bbb4-1cb419493e78"
        },
        "item": {
          "id": "39e42e1b-349a-4b1a-8e61-155c29e0e0ae",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6e19bfca-9709-485d-b594-27e6eaa5d649",
          "status": "Created",
          "code": 201,
          "responseTime": 4497,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b5e40-663a-4534-83aa-cfd5fbead360",
        "cursor": {
          "ref": "8df11b0b-a4d5-4442-b04c-bd1aaa8e95f3",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c5a4b876-1272-4014-8ce5-e6505e73f433"
        },
        "item": {
          "id": "844b5e40-663a-4534-83aa-cfd5fbead360",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea85e927-baee-445f-bb30-fa026e361e3a",
          "status": "Created",
          "code": 201,
          "responseTime": 3950,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d430732d-6062-49aa-9996-601c8fd14f48",
        "cursor": {
          "ref": "40788df9-ad4d-44a7-b1c9-2fafbc839943",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5da995b1-e42c-45be-96a2-f6f17002193d"
        },
        "item": {
          "id": "d430732d-6062-49aa-9996-601c8fd14f48",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "23956f49-efa3-4091-b6ad-dcdae35a6141",
          "status": "Created",
          "code": 201,
          "responseTime": 4202,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7590b5-f5d2-49f3-931a-5fde09666d30",
        "cursor": {
          "ref": "2b607820-f41c-4476-b30e-851cf8405726",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e6c1b02c-e20c-40e0-ad48-dfb5a969d218"
        },
        "item": {
          "id": "0c7590b5-f5d2-49f3-931a-5fde09666d30",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "49a662f1-4da0-4506-8182-c683ac6e6918",
          "status": "Created",
          "code": 201,
          "responseTime": 5109,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f82accc-4edc-49d3-b777-dae7d2819192",
        "cursor": {
          "ref": "c5f7c393-4700-4ae3-9efe-c0c60a57ea11",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ea77f63c-e942-4ac6-8b03-a82bb4f7840d"
        },
        "item": {
          "id": "0f82accc-4edc-49d3-b777-dae7d2819192",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "09d0e696-4507-4c7a-8a51-c800fa3179de",
          "status": "Created",
          "code": 201,
          "responseTime": 10026,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9681a15-96b3-4208-9ae1-d606b31e52f4",
        "cursor": {
          "ref": "764dd2ec-6907-4741-a0b5-471b109e576c",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e7f6c423-1184-434d-921c-6e7c9474d15a"
        },
        "item": {
          "id": "e9681a15-96b3-4208-9ae1-d606b31e52f4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bcaf2c85-763e-4e52-be03-0c05ff736d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9681a15-96b3-4208-9ae1-d606b31e52f4",
        "cursor": {
          "ref": "764dd2ec-6907-4741-a0b5-471b109e576c",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e7f6c423-1184-434d-921c-6e7c9474d15a"
        },
        "item": {
          "id": "e9681a15-96b3-4208-9ae1-d606b31e52f4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bcaf2c85-763e-4e52-be03-0c05ff736d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08e8f00-ca64-41b3-a9e1-07af4ef50f1c",
        "cursor": {
          "ref": "f70ccf0e-2d5e-4c98-b7f4-697faf03359f",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "85683fc2-1441-41dd-bd22-68fb484dbee4"
        },
        "item": {
          "id": "b08e8f00-ca64-41b3-a9e1-07af4ef50f1c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0da8410-b84c-4a16-82bc-53ce832f995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2bae12-89ff-4338-988c-e4900c744730",
        "cursor": {
          "ref": "2adc35c3-14f0-4093-8b2b-9c917faf369b",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5919acbf-3a99-4e71-999f-84acd0a2f260"
        },
        "item": {
          "id": "ac2bae12-89ff-4338-988c-e4900c744730",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d2e03187-b186-4d43-a032-bf603678ae50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69111fe3-d032-4783-8740-df78f2ce9642",
        "cursor": {
          "ref": "e74c386f-202d-40a6-a2f6-85f1f16c286a",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ce41d925-e364-4a78-9789-a4eca06ce12e"
        },
        "item": {
          "id": "69111fe3-d032-4783-8740-df78f2ce9642",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d08837a0-0e9d-46d7-b60e-80d4357475e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b911c1-ed20-4b63-98f9-f54a3f07c621",
        "cursor": {
          "ref": "e73762af-eb88-4640-9b4f-faba89e020f7",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8a4a3898-41fe-45f1-a395-5e4718bf31f5"
        },
        "item": {
          "id": "89b911c1-ed20-4b63-98f9-f54a3f07c621",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5985f4c2-a50f-431a-a4e1-1513d85291ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c843498a-4f47-4938-ad39-40a01db2f346",
        "cursor": {
          "ref": "4b3a0763-7945-46cc-a42c-e4f7df56b965",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "af6b88ee-1c83-4203-aa4d-2d1dc7b106e0"
        },
        "item": {
          "id": "c843498a-4f47-4938-ad39-40a01db2f346",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bbdf5920-2e0d-4bb1-ab5e-1ccd88386e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9ae6e9-44a5-4338-abe5-e658336df84c",
        "cursor": {
          "ref": "3a4df9ad-7b40-465a-a140-b7e318355c59",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2fee47b7-6435-4223-9494-407d61fbb0f4"
        },
        "item": {
          "id": "3a9ae6e9-44a5-4338-abe5-e658336df84c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5e62a00-0b92-4f94-900d-b406e2737896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7089ad0-60f5-4124-99a0-dc5e3e8faa1d",
        "cursor": {
          "ref": "64fafc88-58ae-4a30-bd7a-6861d3f52f64",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f5ad0f9e-3145-4d8d-83d2-86bb0511a89e"
        },
        "item": {
          "id": "b7089ad0-60f5-4124-99a0-dc5e3e8faa1d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d86845db-6e2a-455d-9483-924b24a4b99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2b1da4-601e-4928-8b7a-ae2955ec5239",
        "cursor": {
          "ref": "5563e85a-28a9-4c0b-821e-ba471341ac67",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "093b1d7c-dd43-4f26-89d6-b1f4c722c51f"
        },
        "item": {
          "id": "bb2b1da4-601e-4928-8b7a-ae2955ec5239",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b4da1799-35d8-4f05-9c0c-73514abba480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d629473f-9a29-4bd6-8085-a5357224a9a6",
        "cursor": {
          "ref": "d75531ec-7532-456f-aba7-5051851fe46a",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7267561b-e3e5-47b9-aa51-fa5574b2c230"
        },
        "item": {
          "id": "d629473f-9a29-4bd6-8085-a5357224a9a6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e92640e9-5611-499b-abc8-df823a3a2558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b133465-8efc-4614-8ced-0b2f9788afdb",
        "cursor": {
          "ref": "650cefda-8cc7-425d-ad58-cea0ea600265",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0ae1eac8-4b47-4373-8879-fb99af0c88df"
        },
        "item": {
          "id": "1b133465-8efc-4614-8ced-0b2f9788afdb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e340210c-9c0e-4085-84b9-efbba910f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5469ab1-cad0-4284-87c7-336d426d5899",
        "cursor": {
          "ref": "3b49ac77-b463-4774-8339-40f8a2d169b6",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4de3a3e4-c3b5-459a-91fa-c06e99b7f636"
        },
        "item": {
          "id": "b5469ab1-cad0-4284-87c7-336d426d5899",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b0984e29-6b00-4a7e-ac44-5f9dc23aef9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658baf5b-44b6-406a-b36e-e2a113bba527",
        "cursor": {
          "ref": "52b4328e-fc4f-4682-aab9-a8437d4f2949",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "426d4fc7-fb24-41df-a548-fbc5b32c4bc2"
        },
        "item": {
          "id": "658baf5b-44b6-406a-b36e-e2a113bba527",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6c9a63e3-317d-44aa-bc81-cc5f45b989a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b0c5d3-2c72-49df-8046-dde5435bbc79",
        "cursor": {
          "ref": "2fd4d850-e02b-41ec-a5cd-67b359ea3644",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ffb8786f-5961-4c1f-b050-a2ac1b1fc70f"
        },
        "item": {
          "id": "c4b0c5d3-2c72-49df-8046-dde5435bbc79",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9b3d9cbd-6601-486f-a383-db4fcc9ee551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d7668c-0967-48f0-8275-9dbfdcdb373d",
        "cursor": {
          "ref": "ebd82369-ca46-49e8-8ccd-2a32e2a913d9",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bc4c8faf-3c00-4e4d-b918-e502f6d0cc68"
        },
        "item": {
          "id": "58d7668c-0967-48f0-8275-9dbfdcdb373d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4200fcf9-d3b4-4c01-8f57-0f29f9d27a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db4e0b0-f367-4765-8943-44d627942845",
        "cursor": {
          "ref": "b586498c-8ad9-41e2-9a5a-470fa0cff0ef",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5e18c6c5-bc7a-4f63-bace-072d5a5bf014"
        },
        "item": {
          "id": "5db4e0b0-f367-4765-8943-44d627942845",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d3084d3-cb41-459d-9ea8-b65d0364fcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621a0326-4e63-4285-81cf-ecc721244e80",
        "cursor": {
          "ref": "7ffb91f2-dc62-416a-bf98-a9e2b721fbca",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "217d25ab-ac2c-4f9c-9596-3b73daf27b92"
        },
        "item": {
          "id": "621a0326-4e63-4285-81cf-ecc721244e80",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1618e48c-1337-42da-962e-5d51b4e79406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df196e41-d0a5-45c8-a810-47508a1d842d",
        "cursor": {
          "ref": "3054f21b-f2c5-4deb-bed0-300561f2d87f",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b37f9ea3-4835-48b4-becb-45b458ef2a8a"
        },
        "item": {
          "id": "df196e41-d0a5-45c8-a810-47508a1d842d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "59ca3f68-0d08-4b6b-991e-456cf33fc541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334b68c1-ad93-43d1-a9d7-86ef486c84ef",
        "cursor": {
          "ref": "670a2c81-1982-4ac3-8fad-05f90264c82a",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4ad418c9-4298-4584-b71f-7010d8a0e515"
        },
        "item": {
          "id": "334b68c1-ad93-43d1-a9d7-86ef486c84ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "19112f64-a688-494f-af86-dfc9fabe4044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce55bcdd-626f-49ec-8196-6bb4089b8228",
        "cursor": {
          "ref": "999a70d0-93f3-49d9-a909-2176171a1cb8",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2aff6510-9ecd-4e7d-a8cd-f5ea127ec559"
        },
        "item": {
          "id": "ce55bcdd-626f-49ec-8196-6bb4089b8228",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24828721-5d1f-472b-b88b-4a83634594d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6b9e8f-ab08-4341-9db3-ffc85290695d",
        "cursor": {
          "ref": "5a3d0995-e623-4f5d-9dd8-3e1cc077e72e",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "be31c9af-fac8-4e27-8176-e31c7cd52410"
        },
        "item": {
          "id": "9d6b9e8f-ab08-4341-9db3-ffc85290695d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f82e0340-2a7b-4709-8e35-460dd58d419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a91c49-0730-4395-a8a4-d24cee6e17be",
        "cursor": {
          "ref": "cca96b06-96fc-443f-8695-f5e2d5963a9a",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d4792570-7300-495a-bf20-ff75eff4dbc6"
        },
        "item": {
          "id": "f4a91c49-0730-4395-a8a4-d24cee6e17be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "974719f6-a1cc-4bba-a4a7-8df6e255ad4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1eab59-311a-4944-820a-488742e953c5",
        "cursor": {
          "ref": "ee48e6c3-a0ba-4a73-bceb-43ef91024084",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "07817c30-b1b1-442d-ba12-f8a3dfbbd1e0"
        },
        "item": {
          "id": "0a1eab59-311a-4944-820a-488742e953c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4db99a7f-b5b7-4baa-a9f8-d01196f7c65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cb5fb9-a506-4c92-a5b1-13640003ab35",
        "cursor": {
          "ref": "5cb2c465-21b0-423f-8975-f058136894f5",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b690105a-b139-4d47-b7df-d97a9f506368"
        },
        "item": {
          "id": "18cb5fb9-a506-4c92-a5b1-13640003ab35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17cc2253-a184-441e-9b98-eb542976bf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702f4977-9aae-407f-82bf-39a28a583259",
        "cursor": {
          "ref": "a2721c9c-a655-4af6-a9cd-02cba90219a9",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "35c81479-315c-41b7-8668-aa4ac2e94b34"
        },
        "item": {
          "id": "702f4977-9aae-407f-82bf-39a28a583259",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3d444c53-7ee7-48bd-b04b-867b927efcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9abbc37-71d1-4004-8891-02b7ae7dae54",
        "cursor": {
          "ref": "3d1d7666-3ce7-4a07-9975-cb69ee8677fe",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "323ed1a0-203f-4d48-8141-99183e93f400"
        },
        "item": {
          "id": "d9abbc37-71d1-4004-8891-02b7ae7dae54",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "852f45f2-3c70-4268-8062-4c7aa0a2b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb029e9f-1489-4e62-8044-9f5d87989732",
        "cursor": {
          "ref": "1a600c88-364b-4171-bf0b-3b956b18bc2b",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ae9d14fa-e1dc-4ed4-a039-68525f9ca3ba"
        },
        "item": {
          "id": "bb029e9f-1489-4e62-8044-9f5d87989732",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef9301d3-c15e-45e9-b2ba-dde407c81501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ac4eeb-8596-4f3b-905a-2194ca8c5ed5",
        "cursor": {
          "ref": "ee6860bf-4807-4f29-99a8-45b573f9ef60",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30893365-03d5-41ac-b4ef-237cdea4faac"
        },
        "item": {
          "id": "13ac4eeb-8596-4f3b-905a-2194ca8c5ed5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "10b3c848-93fc-42a1-9d5f-00c45cf09025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7713f356-5f30-4aac-ab4c-77b8d55c670f",
        "cursor": {
          "ref": "879be654-9134-4830-8f6c-13ade525a99e",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a63d7bda-3326-4fbf-a920-5a301e453f6b"
        },
        "item": {
          "id": "7713f356-5f30-4aac-ab4c-77b8d55c670f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "af5d3828-27a1-4716-9448-07a80ad2006e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1b5b2e-b893-4dbb-9ad5-5ce40b4cfb1b",
        "cursor": {
          "ref": "0c445e55-610f-4c97-b2c9-33c69719e463",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5fab0e6d-cb71-4ef2-be53-dfad6605f287"
        },
        "item": {
          "id": "4b1b5b2e-b893-4dbb-9ad5-5ce40b4cfb1b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c2fdec9e-5bf6-4ccd-add7-9c231eea08ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5dc2ae-15f3-47fd-afbd-420b78dd765a",
        "cursor": {
          "ref": "29c03861-ac7f-4757-a39a-a4bc5a25084d",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "702dfb8c-3e38-483e-a17b-2a003dddff15"
        },
        "item": {
          "id": "0d5dc2ae-15f3-47fd-afbd-420b78dd765a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bbfe594f-9b90-4af7-ab05-8b0bf8b4459c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1252ec6-c509-42ff-bc58-b59608f3e808",
        "cursor": {
          "ref": "cc0e871f-59b6-4718-9bbb-284776295c64",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d43876f7-d7ed-46af-935b-2cd2b27f1e76"
        },
        "item": {
          "id": "e1252ec6-c509-42ff-bc58-b59608f3e808",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6603378d-14e5-4ccd-8aad-96767edae603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5268ef6-a881-4f2f-a1b9-c243eeffca6f",
        "cursor": {
          "ref": "4b1eed70-b404-4b7f-a211-3b8cad3c52d6",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c391dda-a62f-4932-80fe-0e755d411c9b"
        },
        "item": {
          "id": "c5268ef6-a881-4f2f-a1b9-c243eeffca6f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bfa7ccf1-1f9b-4fc7-ab01-4e978159002d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da79064e-dce6-4e9e-9e51-b47502eb8b82",
        "cursor": {
          "ref": "a564e45e-97d6-4291-810c-97a3621012e2",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f6c277e3-c6dc-4535-9ffe-d64f77a6035a"
        },
        "item": {
          "id": "da79064e-dce6-4e9e-9e51-b47502eb8b82",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "4b0a6126-d842-44b6-8c45-f931af350661",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910191ce-8093-490f-96e6-2d9352844d33",
        "cursor": {
          "ref": "61ca86bb-45f1-44a7-95ef-763d863ba6ae",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "57fcaee1-4557-4b2b-bff2-210cf2eb9f67"
        },
        "item": {
          "id": "910191ce-8093-490f-96e6-2d9352844d33",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "59be3ecd-d05f-4dbc-81ed-f4c5b76ec0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910191ce-8093-490f-96e6-2d9352844d33",
        "cursor": {
          "ref": "61ca86bb-45f1-44a7-95ef-763d863ba6ae",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "57fcaee1-4557-4b2b-bff2-210cf2eb9f67"
        },
        "item": {
          "id": "910191ce-8093-490f-96e6-2d9352844d33",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "59be3ecd-d05f-4dbc-81ed-f4c5b76ec0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea29c528-9c65-41bf-8909-c9160ce17abb",
        "cursor": {
          "ref": "18c97d25-5d1b-4b15-ae9e-8d39a4f47197",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bc330be0-701b-49e6-882d-f203230d7970"
        },
        "item": {
          "id": "ea29c528-9c65-41bf-8909-c9160ce17abb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bfd22684-5641-4b2b-bfed-28acf89762be",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "4a5f87e6-c8da-400a-985f-be6ca578c8d3",
        "cursor": {
          "ref": "8879e0cb-f98e-4be4-9863-647fb3e1dce4",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3d73538a-d273-4bff-966c-b5dcb18de2be"
        },
        "item": {
          "id": "4a5f87e6-c8da-400a-985f-be6ca578c8d3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9099c041-4428-47e5-93ad-9e6b7f6e3476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf12feab-99d0-4c46-9dc3-b66e9863770b",
        "cursor": {
          "ref": "3a5f9f7d-0a63-42f5-ac5c-9b24c861154b",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0f510558-c6a8-4aac-b16f-fac1bc475bdc"
        },
        "item": {
          "id": "bf12feab-99d0-4c46-9dc3-b66e9863770b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cba6aefa-fb72-406a-944e-de8b20e5beba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c12c2a-1c52-4a6d-bced-f03f3d31b37d",
        "cursor": {
          "ref": "e83685ae-eb93-4970-aaac-b8a5a180eefc",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b5f0ce37-7e47-4c02-8a5e-4103ec7da9cd"
        },
        "item": {
          "id": "85c12c2a-1c52-4a6d-bced-f03f3d31b37d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5c90dd07-6461-4f3d-8a47-98a6d921b42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e3e646-5cb2-4ee6-92a4-eff15edf0844",
        "cursor": {
          "ref": "d995d434-b6e7-4bf6-9ff5-7ef71a8b86cc",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b10f4bf1-2e26-483a-823c-dfbc4354360f"
        },
        "item": {
          "id": "e7e3e646-5cb2-4ee6-92a4-eff15edf0844",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8f263496-bed9-4bf1-ba23-09138e5117bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5008579a-ad84-41f6-888b-844f0f0a37ab",
        "cursor": {
          "ref": "e9d2b0d7-5871-4b64-96a2-d180e0564d1c",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5dad7910-fe24-4187-9b81-044db5c2e344"
        },
        "item": {
          "id": "5008579a-ad84-41f6-888b-844f0f0a37ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bd8f5cc1-4987-4a79-a24b-c844345a3fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc5b9d8-7290-465b-9151-45c9d1c82888",
        "cursor": {
          "ref": "1418a72f-a596-4cdf-8ef7-df2cca47b1ba",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "91b8852b-bd20-4bb6-b9c0-4bb5589f2807"
        },
        "item": {
          "id": "5cc5b9d8-7290-465b-9151-45c9d1c82888",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d527e921-1f5e-480a-b76c-6b88b273bb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae684d21-a568-465e-a199-c69173af0934",
        "cursor": {
          "ref": "1f5946ad-ea0b-41d0-9438-6e317c29bc99",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fb6cc086-e1c4-46cd-a490-05fbf49f6f05"
        },
        "item": {
          "id": "ae684d21-a568-465e-a199-c69173af0934",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa70de9b-466b-46b3-8742-01ec6ca5ba17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4553a3-aad4-4776-938b-20491beff47b",
        "cursor": {
          "ref": "28d75c6d-1853-4d24-8665-147ff00550a7",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "18b779f1-41b1-447e-8944-a8f51aadd94a"
        },
        "item": {
          "id": "2e4553a3-aad4-4776-938b-20491beff47b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "42c0148d-a75b-4b14-b469-ec609d83a9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee20eb7-9e4e-4577-9442-d0016cfc70d1",
        "cursor": {
          "ref": "14260789-4c7c-4ff8-95e3-058a96c3574a",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c88dd293-7dd7-45f2-a700-9b1f4f4f0ca8"
        },
        "item": {
          "id": "5ee20eb7-9e4e-4577-9442-d0016cfc70d1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3f4eba1d-2ab7-4e1c-ae32-babdc7c77964",
          "status": "OK",
          "code": 200,
          "responseTime": 459,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "44b8102f-5ad9-43ff-8806-eeb39ceb4729",
        "cursor": {
          "ref": "2744fe02-e504-417a-b0f4-1a0f962a6f2f",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28996d25-7c06-4f03-9240-a847934fdddd"
        },
        "item": {
          "id": "44b8102f-5ad9-43ff-8806-eeb39ceb4729",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4d7bf2a9-fed1-4f8f-984b-773a4b183992",
          "status": "OK",
          "code": 200,
          "responseTime": 490,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "9d0a25ae-5012-433b-837f-017af5daad89",
        "cursor": {
          "ref": "47b65de3-afc5-4ba4-a203-124c67a4006e",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c3c7d454-5010-40de-a2de-6fbb75cdf01f"
        },
        "item": {
          "id": "9d0a25ae-5012-433b-837f-017af5daad89",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7e0c89cf-2e7c-41ac-bb9c-8c52d0b3e7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72118751-49d0-44da-b243-79d867338d44",
        "cursor": {
          "ref": "b73e7df6-b739-4c18-8739-52bf85c8c17c",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d4c743ba-d0f6-4295-8359-b10ffee2307c"
        },
        "item": {
          "id": "72118751-49d0-44da-b243-79d867338d44",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4684d278-5b15-45d8-b034-2003132367b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37de373-f9d4-45c3-b74b-a2d026554c50",
        "cursor": {
          "ref": "f59e1798-e993-4062-a2d6-9c5846cda8d5",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a3ff4593-e790-4d61-a8ce-42d7013bc161"
        },
        "item": {
          "id": "f37de373-f9d4-45c3-b74b-a2d026554c50",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1de65a14-b3ea-461b-a383-ee4f873ba5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e5d51-344a-4486-a9cd-eb6a03a5baa2",
        "cursor": {
          "ref": "c9afeaf1-7d78-4d5e-9858-7839b59ade92",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "16261a1c-dae2-4533-ac54-ddbff9e4eed4"
        },
        "item": {
          "id": "251e5d51-344a-4486-a9cd-eb6a03a5baa2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d308b16b-9847-47e8-836c-cd1af04cf20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c7df85-2c29-407c-a901-fc0054194fb8",
        "cursor": {
          "ref": "4ee65437-a2d6-40d6-b87b-6766af880fd8",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3e86e9cf-48e3-488c-ab6e-ff0b6210859a"
        },
        "item": {
          "id": "f9c7df85-2c29-407c-a901-fc0054194fb8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5bb734e6-2d7e-4be6-9947-847493c37b70",
          "status": "OK",
          "code": 200,
          "responseTime": 458,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "4e7063a0-848f-4332-a9e8-8ef35d6e09c3",
        "cursor": {
          "ref": "3703edc8-a927-49f9-8859-24c5f476f066",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "69c9e8b2-32ba-4d73-b501-039b718ec3c5"
        },
        "item": {
          "id": "4e7063a0-848f-4332-a9e8-8ef35d6e09c3",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "56b0dbf1-28f0-45a1-9c8c-4b9e1b0a70a1",
          "status": "OK",
          "code": 200,
          "responseTime": 1931,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "9f420050-f9e2-4d3e-9c65-0a1f06c98070",
        "cursor": {
          "ref": "76c9d661-86a6-4b54-8b15-ed22a15eb80f",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3ebb1902-0590-48f7-a0f4-29cb854b7b79"
        },
        "item": {
          "id": "9f420050-f9e2-4d3e-9c65-0a1f06c98070",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "02fcdbc7-6691-48e0-b668-9b6d25c880d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cf9eb2-0f7b-4a2b-8b6c-d51353dc792b",
        "cursor": {
          "ref": "c5bbe61e-5530-44b8-948b-87064421183b",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c6791cdb-0daa-4b54-9284-b1f95f7c4896"
        },
        "item": {
          "id": "14cf9eb2-0f7b-4a2b-8b6c-d51353dc792b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ce3f87cf-66fa-4f3d-be06-814395b4d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74c426-02e4-46ff-8549-ff56efdf6374",
        "cursor": {
          "ref": "027c185c-252a-4179-8e6a-b1d02974c99e",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8f97a3f5-2d34-42b1-a0ad-4483bd77f6ca"
        },
        "item": {
          "id": "6b74c426-02e4-46ff-8549-ff56efdf6374",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7fbb28e9-47e7-4b9f-9db9-0be552b786e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1322f7-d836-42fe-9e18-a31d498a08d2",
        "cursor": {
          "ref": "8507c1e0-1cf9-48e9-86f9-c4c016254713",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "47e661bc-34c3-46d4-8ac3-938161440539"
        },
        "item": {
          "id": "3d1322f7-d836-42fe-9e18-a31d498a08d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a79b078e-e7df-4783-923e-45da1ec0cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a0de0e-e49b-4ea1-9c83-3e2629ca511f",
        "cursor": {
          "ref": "dff1c4b2-50f0-4e67-9ee8-7c39086ccf36",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bdce6365-6b59-4125-95b0-d973cded41c6"
        },
        "item": {
          "id": "b0a0de0e-e49b-4ea1-9c83-3e2629ca511f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4a26b9f6-2cb7-477a-916e-d1a63a0aecf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e63cd4-d2a9-457c-9679-196f4b5ad550",
        "cursor": {
          "ref": "bb99b4b2-bdf8-4cb8-ab2c-ea09c05ea59b",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ef64bde6-12a5-44b4-b7d2-6de197bc1590"
        },
        "item": {
          "id": "e3e63cd4-d2a9-457c-9679-196f4b5ad550",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a665f457-851e-4f59-bb46-0072c2660088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf23a21-f773-457b-a273-3592e65c7e03",
        "cursor": {
          "ref": "9f7d0eeb-c6df-4165-b343-ebb38e6ff634",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "80164bdf-a773-423f-b549-0433b84912dc"
        },
        "item": {
          "id": "6cf23a21-f773-457b-a273-3592e65c7e03",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "fe2952bc-2fb9-4532-aad2-fafd7a2c4f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f913a1-b348-4b32-9d9c-1267e6c289fd",
        "cursor": {
          "ref": "4246d857-0466-49d6-88ad-d8f53acb1743",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "81c5998e-cdab-4d27-bb47-2cf84cee26f2"
        },
        "item": {
          "id": "32f913a1-b348-4b32-9d9c-1267e6c289fd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "01446d08-b733-44c5-b42d-912676d28b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969b9c0f-6d24-42a8-bc7d-70096c5dfd79",
        "cursor": {
          "ref": "4a44be68-29c2-4ea2-a39e-571a65dc77b3",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "547c9910-15f2-463a-82fb-f0c4a34e1a4c"
        },
        "item": {
          "id": "969b9c0f-6d24-42a8-bc7d-70096c5dfd79",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6711af3f-a066-4eb5-8c5d-9e53779e72f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9dbc40-5331-47ba-ac6e-9bf2ca6e012b",
        "cursor": {
          "ref": "41f6c76f-b377-43a7-b128-9044bcbd88a3",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a7f42832-39ee-4cf7-921b-c5cd743cdd6e"
        },
        "item": {
          "id": "fb9dbc40-5331-47ba-ac6e-9bf2ca6e012b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "629ba408-3ad2-4c66-af2d-8568f1d585f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8d5cb9-7486-4423-9454-afb578d2b276",
        "cursor": {
          "ref": "8bf2b02a-aad6-488a-9efd-36a1bf056567",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "052afec9-5fbc-44ed-866e-a848d0379cbb"
        },
        "item": {
          "id": "de8d5cb9-7486-4423-9454-afb578d2b276",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17d6d84f-f83b-43c1-a45b-d448d7c60600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8069782f-065f-4e44-9aa2-cd77a22b6fab",
        "cursor": {
          "ref": "e3cb3200-b497-4fbe-b46f-00551b254b07",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6c5719a3-54b5-4bea-bf42-42fe9cfdb71a"
        },
        "item": {
          "id": "8069782f-065f-4e44-9aa2-cd77a22b6fab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b1cd93b2-d240-464e-9e26-7c0e42899615",
          "status": "OK",
          "code": 200,
          "responseTime": 631,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "56e49fb5-e49e-4b9e-a390-376d2757c62f",
        "cursor": {
          "ref": "634f646a-eb64-4b08-94e0-9b0ecf310ae8",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6acf0c60-631e-4a35-a090-6f4ba80446eb"
        },
        "item": {
          "id": "56e49fb5-e49e-4b9e-a390-376d2757c62f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a5449bb3-f1e8-4383-9f22-bb759e3a9fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c6323a-ce09-4c13-bb69-c97226a1c482",
        "cursor": {
          "ref": "15b2d04e-24ca-4d83-8431-683b10e6bee5",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f7762a6-198e-48c6-85ce-9d979a43fadb"
        },
        "item": {
          "id": "25c6323a-ce09-4c13-bb69-c97226a1c482",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a0445bde-004d-49e5-9fad-b3e5a9580b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01769b5f-13f2-4a4f-87d7-4b709408e150",
        "cursor": {
          "ref": "c005a140-8e59-4611-9173-35a637fa35ea",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "daf370ac-574e-4750-ade3-e953c312588f"
        },
        "item": {
          "id": "01769b5f-13f2-4a4f-87d7-4b709408e150",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "189be7f1-9621-410e-a58a-b221f1d1e0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee3ab68-ab62-4883-acf4-d5753fcc5392",
        "cursor": {
          "ref": "5bd254c8-620f-4e13-9aaa-689c236f6d54",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d00bbd36-48f5-4166-95ad-9dcf9f9a0273"
        },
        "item": {
          "id": "7ee3ab68-ab62-4883-acf4-d5753fcc5392",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "435041b9-1dbc-44be-9be1-bed3d64b676c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2d15d7-1638-4d9d-9d93-3ab5fd528491",
        "cursor": {
          "ref": "d7f298af-5fd1-4032-8484-05a9dbba821d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "532420c4-a5d2-4bfe-9c8e-9fa2ab9989a1"
        },
        "item": {
          "id": "cb2d15d7-1638-4d9d-9d93-3ab5fd528491",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1cd72f61-582b-4f95-bba6-e8a2161a81ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aefbe97-7188-4a98-a5db-c325cfcb83a9",
        "cursor": {
          "ref": "6a60ab22-2613-4ec9-aa52-566076078b8e",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b5932865-9037-49a9-8eb1-b48de7509c42"
        },
        "item": {
          "id": "8aefbe97-7188-4a98-a5db-c325cfcb83a9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e28f7d4a-62d2-4016-9168-c88834e31083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b12526-4e42-447e-8865-802fb868a4fe",
        "cursor": {
          "ref": "2738943e-99e2-45d6-b131-5f47b9109ec2",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a56f5c22-560d-4e2d-abbd-59ab1b36c86d"
        },
        "item": {
          "id": "e4b12526-4e42-447e-8865-802fb868a4fe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1dc54850-ecdf-47b2-bdcb-0027710a6352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 866,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dbc2f2-f2d9-42c3-ab69-1c8f7eea992e",
        "cursor": {
          "ref": "f1867fc2-aebd-4202-b59b-85a2597ab34a",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ce162032-a229-42b2-8fab-da8eb3d5750e"
        },
        "item": {
          "id": "d2dbc2f2-f2d9-42c3-ab69-1c8f7eea992e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "098074b2-b41c-4b43-9994-7c4558f8d16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d823462-55ec-461d-8725-cdfd6875a8c1",
        "cursor": {
          "ref": "8e2cd936-8c7e-427f-b974-83d3cb849591",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "013cf832-a957-4bd2-a674-228ed9037f3c"
        },
        "item": {
          "id": "5d823462-55ec-461d-8725-cdfd6875a8c1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c734a115-fa2f-48b4-be7d-825207a56938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1136,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bd5d91-d2c9-433e-a5cd-2efb89d8fbec",
        "cursor": {
          "ref": "3111a68c-67c4-4299-b198-0171936e9e42",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bd602bf5-4e40-4e2c-83bd-f29b7feb6649"
        },
        "item": {
          "id": "b2bd5d91-d2c9-433e-a5cd-2efb89d8fbec",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "10ce5037-8a73-4b52-b368-864966c2e15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3170039-ae38-4896-8fb4-8d4bc149064c",
        "cursor": {
          "ref": "80ceea61-9f6a-4702-8e52-dd39a43240f2",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ab79f01a-e7b0-459e-b569-e03d2668436f"
        },
        "item": {
          "id": "f3170039-ae38-4896-8fb4-8d4bc149064c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "57372cbb-0477-4f69-afed-1ff68abfc7a5",
          "status": "OK",
          "code": 200,
          "responseTime": 845,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "52c7c895-1547-4271-8ade-58c31c9d612f",
        "cursor": {
          "ref": "b89fb767-ed2d-4e0f-a090-129b2e0c7e76",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a072c289-c19b-4550-84cf-38c3c2932da0"
        },
        "item": {
          "id": "52c7c895-1547-4271-8ade-58c31c9d612f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9d4b26f6-494f-423d-a4ee-c1926d429c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3739278-3dfa-476b-b5ce-097164a6f49b",
        "cursor": {
          "ref": "5bbd9fdf-27ff-4402-9348-f07bc00db126",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c92750a-5004-4151-9606-ef74be9255c0"
        },
        "item": {
          "id": "c3739278-3dfa-476b-b5ce-097164a6f49b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "412712bc-41b9-49ad-b2dc-ef6dba47893d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50aa059-37d8-44e8-864d-0fcf063d9221",
        "cursor": {
          "ref": "64d00614-ce68-420a-93b6-478c45228c4e",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "142e3225-23ed-46b2-854a-757ed0fb893c"
        },
        "item": {
          "id": "d50aa059-37d8-44e8-864d-0fcf063d9221",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ede29fca-c299-4925-8ab4-f6cc095f8bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801f5f80-d7eb-4946-9dd9-0cea11d87ded",
        "cursor": {
          "ref": "49c2653c-41fd-40e7-9c26-4667d050dae2",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "23068e60-c8fb-4403-b284-fda56e4342c7"
        },
        "item": {
          "id": "801f5f80-d7eb-4946-9dd9-0cea11d87ded",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db20e3c8-7f2c-43a2-bde5-fd3d23ef694c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d1eb8f-4503-4c54-a4c7-880fe367f1e8",
        "cursor": {
          "ref": "41bbfba1-9ab5-49c9-a359-d0e5131ecbc0",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9a07d912-2fe6-41b9-8fe1-7aef17c9f50a"
        },
        "item": {
          "id": "08d1eb8f-4503-4c54-a4c7-880fe367f1e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8746095e-6b01-45dc-9a44-70e34232fe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07a0e8-9d2e-42e8-89e8-522fc5f1a7a3",
        "cursor": {
          "ref": "a324cead-ee05-4d64-bfb7-f88867f58d5c",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8ee61364-fe75-463e-80a9-e6be63a4bccc"
        },
        "item": {
          "id": "1b07a0e8-9d2e-42e8-89e8-522fc5f1a7a3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "892fd9ce-aa31-426d-8c4f-e7fbdf94c356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa1de7b-7aa3-4572-b32c-5f3e99a18e9d",
        "cursor": {
          "ref": "ff340b2d-ae49-460d-9141-34c98d8a0d22",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "428b0f43-0a9d-46a8-b94b-3fdfe18b5679"
        },
        "item": {
          "id": "afa1de7b-7aa3-4572-b32c-5f3e99a18e9d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e036fa45-8121-44c9-8e45-196802ce8cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0e3d39-6b21-4e09-8ec8-a74faee1d2f8",
        "cursor": {
          "ref": "4ac6359e-ab49-4426-8e2a-5c8bbec653d1",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e6126880-dce4-44d0-8374-219276e66931"
        },
        "item": {
          "id": "4b0e3d39-6b21-4e09-8ec8-a74faee1d2f8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2e75672b-da4c-49ba-939e-74e6d11042aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8bf7e1-8d5b-45b9-a3ff-b692927489b7",
        "cursor": {
          "ref": "7c3dcd52-7c34-41a8-8592-f6712890283b",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17230496-d124-448e-a5f5-55ce1eb9515f"
        },
        "item": {
          "id": "5f8bf7e1-8d5b-45b9-a3ff-b692927489b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0332de96-b03a-4987-a0d2-2faf8f81a352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afd7fd0-2e2c-4a83-a252-63a8e1fbb0cd",
        "cursor": {
          "ref": "62d5a1d0-7f07-43b3-acf3-53cfa57eee5c",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4c732c48-926f-4306-933d-171294046fe1"
        },
        "item": {
          "id": "2afd7fd0-2e2c-4a83-a252-63a8e1fbb0cd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b3f99094-37e4-4c24-af48-0514962d9691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88846fc-2fef-4967-b056-ab44f4ee5171",
        "cursor": {
          "ref": "4f5aac9a-9d03-4282-ba69-fd11c3e02598",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7a583dbd-3575-4064-bb25-1336eaec5f35"
        },
        "item": {
          "id": "d88846fc-2fef-4967-b056-ab44f4ee5171",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d1f4d586-bcb6-4d46-9a62-3e1400c62750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7065ba4f-8613-43c0-8b01-eb19abed20fd",
        "cursor": {
          "ref": "c93f7f58-8c22-43e4-a7be-3642cca61388",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "56d52632-bf78-40ce-bf01-a42c4532f9ab"
        },
        "item": {
          "id": "7065ba4f-8613-43c0-8b01-eb19abed20fd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "81e70930-b8d8-4ecf-83e5-20b1405c99c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b35ab56-4ff7-4bb0-85fe-3a9ca6e15a41",
        "cursor": {
          "ref": "d5b23c05-4555-4633-96f6-f4ccdedf98d3",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a76d2294-b4f4-44c4-9a04-d276af5366ab"
        },
        "item": {
          "id": "3b35ab56-4ff7-4bb0-85fe-3a9ca6e15a41",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9975e13a-34c0-4b19-8f02-d8983615d764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f3070d-5acb-48f8-bcf9-6d80028b1ea5",
        "cursor": {
          "ref": "5bce128a-6aa5-4092-8dbb-a417c756b44c",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "390a0b2b-7dc2-471a-be9c-db0f73ad1656"
        },
        "item": {
          "id": "a7f3070d-5acb-48f8-bcf9-6d80028b1ea5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c0550562-9182-4235-899f-6db2e83acf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1005,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0152f559-2348-4509-bf73-ecf912220c66",
        "cursor": {
          "ref": "4fb28b91-3ba2-423a-b440-d87b0510e3cb",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "649810b6-e252-42c8-a860-ab845db921df"
        },
        "item": {
          "id": "0152f559-2348-4509-bf73-ecf912220c66",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "90165730-32ad-4298-b990-1a25b45a590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200bdec3-0ebb-4b71-a004-59bc0cb800f4",
        "cursor": {
          "ref": "64a97cdd-b569-4031-83a1-f89cd5a9dc8c",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7c704f59-8d26-4407-8fe1-82e5dcd701c8"
        },
        "item": {
          "id": "200bdec3-0ebb-4b71-a004-59bc0cb800f4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "75585669-cc4a-4bc9-a916-ba94a27c5647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 901,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c224395b-5e24-4ad3-8c49-4bdddbc4778e",
        "cursor": {
          "ref": "9082fae5-e44a-4ac2-86b4-2fe7ea6c59f2",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3fc7ff2f-3562-49a3-8b07-60ce92651b80"
        },
        "item": {
          "id": "c224395b-5e24-4ad3-8c49-4bdddbc4778e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d5f6ee23-31aa-4a66-8fdc-bafef1655663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c44a10-b5c6-4001-b75e-285ff9f55771",
        "cursor": {
          "ref": "bddb7be1-bd1c-42c9-a5ef-ba0fc8fa58ac",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d621816f-d514-4798-b7ca-bd71f310779b"
        },
        "item": {
          "id": "a3c44a10-b5c6-4001-b75e-285ff9f55771",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "367677a3-d092-4401-ab31-e18fdaea1a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cfda45-6aaa-403d-ae88-768770c271df",
        "cursor": {
          "ref": "876493af-ba15-49f4-b787-0c265ee4d7a2",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "26b8121a-1c27-4704-8c61-363f54e0370d"
        },
        "item": {
          "id": "63cfda45-6aaa-403d-ae88-768770c271df",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "35b93299-ce60-40e3-ac32-fb8a621bc457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5de7803-664b-4a73-8ab6-c491d288bbf9",
        "cursor": {
          "ref": "de439ff8-b9e3-4809-84d1-3652e186cb09",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b0170f0b-4242-4a54-abfe-f6a8606e6a12"
        },
        "item": {
          "id": "e5de7803-664b-4a73-8ab6-c491d288bbf9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8c4b1562-8999-46b0-a3f9-88fd9f5b1b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0a8ccf-76b7-402e-ac32-f688e18ae5d5",
        "cursor": {
          "ref": "8b3dafe7-a704-4910-99f7-ec791d7f7516",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2c267b9f-95e9-4964-ab17-247da688dc64"
        },
        "item": {
          "id": "ee0a8ccf-76b7-402e-ac32-f688e18ae5d5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e371e6a6-d2d2-4680-aac4-4eca4874c327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b09fe8-76c4-4995-b699-ecca5efa8991",
        "cursor": {
          "ref": "f5813612-36c3-46df-9339-4c8ae53c839c",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8944cd31-95dd-4de5-9a9d-d8dccdfa37c5"
        },
        "item": {
          "id": "65b09fe8-76c4-4995-b699-ecca5efa8991",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4f0f1d55-e649-4781-af86-43962aa050b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9e51fe-5ead-4bc9-aafd-fc5599c3e07d",
        "cursor": {
          "ref": "0f553966-51d9-4269-b2c7-88f29632f82d",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fdb66e03-3d9d-45a2-b1a3-b6ced371bced"
        },
        "item": {
          "id": "0b9e51fe-5ead-4bc9-aafd-fc5599c3e07d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f7a996b5-ae37-444f-8978-ab6203dc19b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4050463e-17dc-485c-b16f-f9729b2d4df3",
        "cursor": {
          "ref": "c95df1d5-ed7a-4ff0-a720-575b4a368afd",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eab86cf8-c3b8-4cbb-9be7-0efeb92753bb"
        },
        "item": {
          "id": "4050463e-17dc-485c-b16f-f9729b2d4df3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aa5fad7e-4160-430c-95a1-f303aa37832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a711b6a9-2fc0-45ff-a57d-07eedf3e1d73",
        "cursor": {
          "ref": "e7924b13-dbf4-40fe-a78d-a1b553f5dc80",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0a5acb04-3de0-4e23-9580-7cf96112d00c"
        },
        "item": {
          "id": "a711b6a9-2fc0-45ff-a57d-07eedf3e1d73",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50abc0e9-f465-4694-9375-2fe0e5756896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26787d75-1630-4a8e-ad5d-5cdc413c9257",
        "cursor": {
          "ref": "44bcf147-c4fa-4579-8ed9-27b18a4d72d5",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ed97cad6-6eb1-4153-a25e-c6d660592dc7"
        },
        "item": {
          "id": "26787d75-1630-4a8e-ad5d-5cdc413c9257",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "adf4f158-e13b-45f9-b56e-a644995ed306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6670db86-df7e-4c7c-bd43-90db4937f0c3",
        "cursor": {
          "ref": "0576d376-7ff2-4ef4-8178-3ec67beadbfa",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fd0395a1-58b5-42d0-a7a9-81fde874b823"
        },
        "item": {
          "id": "6670db86-df7e-4c7c-bd43-90db4937f0c3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "88ca39e8-d759-433f-9292-a2f76267717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e960ae82-6cb6-4555-8e83-f4492133c30c",
        "cursor": {
          "ref": "88664924-d517-43ff-b9f6-5c28018895d5",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "21af736a-67b1-4be3-a95b-1a7f077bf5c9"
        },
        "item": {
          "id": "e960ae82-6cb6-4555-8e83-f4492133c30c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e247dfef-f0be-4520-b3eb-eef379ff0012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff30f658-3a6c-4bcb-b265-817d8ad3e620",
        "cursor": {
          "ref": "cbcd8890-84fa-46d3-b8c2-ef22da1db707",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c3f026c0-ae95-4c99-8c7c-b836e459c22e"
        },
        "item": {
          "id": "ff30f658-3a6c-4bcb-b265-817d8ad3e620",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1eb2d1da-4e7a-4553-ad18-9124988f111f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306c8784-f5ad-42af-a639-e418c86aba9d",
        "cursor": {
          "ref": "0766bf65-11a2-4588-bc7a-0293d9e6d0dc",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "35eea526-1516-4f3c-a954-2bfd394b73bd"
        },
        "item": {
          "id": "306c8784-f5ad-42af-a639-e418c86aba9d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ad3dbed3-92ff-45f8-a4ca-866136cf6995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d92c70-d13b-42ba-8874-aa20faa0ef1a",
        "cursor": {
          "ref": "091e352f-b698-4337-9686-27ad909c6346",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e8c2b666-cedc-4681-89b9-805d8c074c79"
        },
        "item": {
          "id": "62d92c70-d13b-42ba-8874-aa20faa0ef1a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2ffd2e41-0586-4ff7-8dfb-f82bc6fcb88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13de3e4-e457-415d-9bea-dd658a38ec11",
        "cursor": {
          "ref": "ef9eda94-0087-451c-b897-e37b133f508a",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3322c4c5-95db-404e-b971-10429960263e"
        },
        "item": {
          "id": "c13de3e4-e457-415d-9bea-dd658a38ec11",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "90dd0a07-ee7b-47d2-b9a8-09ffea516886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31948e27-c045-47f0-aa42-ecfa99dc7ba6",
        "cursor": {
          "ref": "9cec2964-2000-40c3-9d76-aea2a13da079",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bf6a735d-79c4-49f4-ae66-82afd98b1401"
        },
        "item": {
          "id": "31948e27-c045-47f0-aa42-ecfa99dc7ba6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c322a0a3-ce04-4db8-8174-7f7d96bcfef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dff4b72-7179-4d6b-a1c5-1fad7821a9c7",
        "cursor": {
          "ref": "8d544810-9e15-455e-be6e-6b540e227762",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "972d08f5-db59-47f0-85e0-13f220f3ae23"
        },
        "item": {
          "id": "6dff4b72-7179-4d6b-a1c5-1fad7821a9c7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f705ebb9-96c2-4047-b884-a5b2e5f67e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17bce71-234d-4640-ad8d-005e3950b5dc",
        "cursor": {
          "ref": "0c606906-4e87-45e4-946c-b24b19921295",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3d76b8fb-a453-4fb4-bfa9-13983c9c3187"
        },
        "item": {
          "id": "e17bce71-234d-4640-ad8d-005e3950b5dc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6335c08a-360d-4269-a9a4-d2a2fb9f0d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76486e2e-58f7-4c1a-a396-d068f97864b8",
        "cursor": {
          "ref": "a69dbc62-af6e-420a-89bc-a30e07326cdc",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3a98c844-fc57-4c88-b730-0d66fe79386a"
        },
        "item": {
          "id": "76486e2e-58f7-4c1a-a396-d068f97864b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b4a455e4-a3b3-480e-a553-3a8e319a5212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec97ced-2f0f-414a-b701-c06226a885eb",
        "cursor": {
          "ref": "457cf84e-12ee-42ff-839b-c728e89cc0e9",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e841aca5-ed13-4023-9fd0-86ccee7d0bbd"
        },
        "item": {
          "id": "bec97ced-2f0f-414a-b701-c06226a885eb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1bdc6861-bc1d-4d0e-beb7-597f4f864605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2eccb6-735f-4f22-90a1-777343883af8",
        "cursor": {
          "ref": "0c725ffb-f020-4800-86c6-7841aa69c7e0",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "53dd8f05-e7a9-46d6-bc56-0ae9f538366d"
        },
        "item": {
          "id": "7d2eccb6-735f-4f22-90a1-777343883af8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0ae97f41-8b1b-4d7f-aa44-cd92fe8837d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1093d4a-6283-4baa-957f-7aecd774a78b",
        "cursor": {
          "ref": "bccdb63a-a8a0-4969-a994-d1981eb7d2e1",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "32db9c18-34db-4ed2-a71d-7808453717c4"
        },
        "item": {
          "id": "e1093d4a-6283-4baa-957f-7aecd774a78b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ffef9a4b-f109-4666-8301-f5b5811ddf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c43fd9-2b9a-4110-b322-84b47b14c912",
        "cursor": {
          "ref": "22ca2531-1f45-41f1-b0c5-03dbfcedf781",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "01f85bff-47c0-4685-bc40-38174a52aa75"
        },
        "item": {
          "id": "e5c43fd9-2b9a-4110-b322-84b47b14c912",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5248d58c-41d5-49ad-aa59-dc8d3a4782dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5999522a-e34f-4480-8ce9-dc4026c8dd77",
        "cursor": {
          "ref": "b8c07e61-4a3f-47e3-95ea-79a8394bba83",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f0c92cc4-400e-4e43-9d9c-9da8cbc05492"
        },
        "item": {
          "id": "5999522a-e34f-4480-8ce9-dc4026c8dd77",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "71f196a8-bbef-498d-a3cf-110fc6985c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1209df91-518d-44cc-9811-faf799588bb2",
        "cursor": {
          "ref": "80311c79-14a0-4bcf-a2db-9d1d0b3275af",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4c3fe4be-913b-4f33-8803-35716398cf58"
        },
        "item": {
          "id": "1209df91-518d-44cc-9811-faf799588bb2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0e8c5680-4714-4948-a586-69571656f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fec0767-9e8d-4928-b40f-14298dd2bf6b",
        "cursor": {
          "ref": "39ac3078-548d-43c0-8713-8a5027f0d75b",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "14519994-33c2-4ef3-b435-df78fce8f739"
        },
        "item": {
          "id": "7fec0767-9e8d-4928-b40f-14298dd2bf6b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5c05de67-6612-4c47-8171-e9c790bcb2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4afce4c-45ce-45c3-a060-2c8a3dab16b7",
        "cursor": {
          "ref": "bf942ebe-92c6-47d6-8da3-7150d23e3536",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c7551d7-6180-4fe0-99ac-528ad438cd6a"
        },
        "item": {
          "id": "a4afce4c-45ce-45c3-a060-2c8a3dab16b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "909a7754-c5f7-404f-97ba-877fa9ff6e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f06035-f5e8-4930-9760-6639dacdc27e",
        "cursor": {
          "ref": "036516ec-1ee8-4518-8b72-5fd4be01a601",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dc907910-3959-4271-9e63-e6fef1d5b4a6"
        },
        "item": {
          "id": "d2f06035-f5e8-4930-9760-6639dacdc27e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2e1339b1-b17d-4037-a04f-0de64aa3c393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e7d66c-b9cf-4e29-afe2-384e3bc4721a",
        "cursor": {
          "ref": "caf689a0-83b0-4f32-a782-ca47d06ea010",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4c6f0c01-c15c-4c0f-b6d9-b245eca52a2d"
        },
        "item": {
          "id": "d0e7d66c-b9cf-4e29-afe2-384e3bc4721a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "35ab34ea-4f72-48e8-b38b-17c7463707fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c449c30f-eeaa-41de-8757-f1150ebdfef8",
        "cursor": {
          "ref": "877fff2e-1f19-46db-8bf3-26e47185e84b",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bb7584ac-b2db-4f58-9a82-531811a3e5fb"
        },
        "item": {
          "id": "c449c30f-eeaa-41de-8757-f1150ebdfef8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "70fe9cd6-325d-46c1-85ca-90e942ecb27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3ccf7b-09e3-49c5-9897-ea851324d20b",
        "cursor": {
          "ref": "a5b88a49-784e-43f8-8253-88ca55b0e842",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "313fe69f-6273-4489-b16b-c0e1a6eceeb5"
        },
        "item": {
          "id": "1b3ccf7b-09e3-49c5-9897-ea851324d20b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eb31d162-c723-4534-85a6-6a71695ec400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a4047a-b7ee-41bf-9879-ddd3446ca58e",
        "cursor": {
          "ref": "f3785783-7072-4113-bbce-096197760aa8",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "092d45ec-7638-4aab-b4b7-e9c58f5cb561"
        },
        "item": {
          "id": "62a4047a-b7ee-41bf-9879-ddd3446ca58e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "836594e9-72b3-4701-8c0a-a640e98038cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc2794f-2a41-41bb-af81-72b316c45da7",
        "cursor": {
          "ref": "51b70740-be1f-49f6-bc39-aea510c194f0",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bd4c3510-534e-405e-9dd7-7be421cd9c86"
        },
        "item": {
          "id": "bdc2794f-2a41-41bb-af81-72b316c45da7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ace4bdad-ddb2-4511-94cd-96f380750a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f6fda5-471e-4e87-9536-11eed4c98f1c",
        "cursor": {
          "ref": "90b3cf37-81d1-4450-b23a-90e3358423be",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a9ad027d-8f25-41a8-a5d4-ee09fd035e3c"
        },
        "item": {
          "id": "38f6fda5-471e-4e87-9536-11eed4c98f1c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "60c8df30-bfc1-438f-bee6-10a5857ed042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6863d81a-7fe8-4032-825e-02d77c32eb38",
        "cursor": {
          "ref": "dca58dbb-6a25-43f5-b072-63e0fedcd6ae",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b6d2badf-2817-4504-a84d-4e990463ef22"
        },
        "item": {
          "id": "6863d81a-7fe8-4032-825e-02d77c32eb38",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7dcf772f-f783-4de5-9d2f-d55b11b047ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a099e1-c175-46a2-8ee7-ee05b3f1b8ff",
        "cursor": {
          "ref": "b533b950-532c-4069-b54f-907b57449115",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "811aa989-ca3c-4bf8-b427-c4ceea2bc7b6"
        },
        "item": {
          "id": "c3a099e1-c175-46a2-8ee7-ee05b3f1b8ff",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "09986a93-9064-4886-86a0-1fad4ecaa5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af90a8-e6f4-497f-a036-485b15de5d80",
        "cursor": {
          "ref": "2dd31ea2-7b1b-4138-9181-ff47802d1480",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5502a623-1451-438b-a70c-02d316422ab3"
        },
        "item": {
          "id": "21af90a8-e6f4-497f-a036-485b15de5d80",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "32f939e5-05d3-422c-8590-ce7e7a52c834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6c9520-a197-47c4-9f12-e22ff62784d7",
        "cursor": {
          "ref": "88b7861b-4491-4826-bde5-9db5b7453090",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "40ca69a6-ab24-42cb-b477-9b5710175234"
        },
        "item": {
          "id": "7e6c9520-a197-47c4-9f12-e22ff62784d7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "35455f93-2afd-4f2f-a6c4-e70a88b845ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ac3ab6-ebfe-40d8-ba70-3e9b2d4a3725",
        "cursor": {
          "ref": "def30626-4810-4bd9-8646-3fc111b212e4",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "73bfcd8a-b3b6-427f-b094-fc730f8b54aa"
        },
        "item": {
          "id": "12ac3ab6-ebfe-40d8-ba70-3e9b2d4a3725",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ae11d741-0761-4fad-ac88-ead3273330b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9326d751-f76a-4a28-a17c-239344160ae0",
        "cursor": {
          "ref": "6525eb77-7a24-4842-a3af-06ba5147c42f",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "10f877ba-aee0-4b2f-9b24-fe98aed1e872"
        },
        "item": {
          "id": "9326d751-f76a-4a28-a17c-239344160ae0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d22f93c2-640a-4e1a-bd6f-f26d8b00a22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827cdad4-dde8-42f2-b0eb-98d0c606a2d1",
        "cursor": {
          "ref": "ea1d1199-a804-49d5-9f59-5776d7621bee",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "65cf46c9-bf10-41b2-af15-86646127e3ca"
        },
        "item": {
          "id": "827cdad4-dde8-42f2-b0eb-98d0c606a2d1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7983f217-07a1-457d-bb2f-cd85d219bd82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f2d769-2f52-4c77-8eaf-d7982926f12e",
        "cursor": {
          "ref": "f9e0e145-29fe-4af8-a420-0589b56ddaeb",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "10e49f92-696f-4f85-93f0-2a333fa26d1c"
        },
        "item": {
          "id": "79f2d769-2f52-4c77-8eaf-d7982926f12e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "14cae878-ec6e-4ae2-87f7-30d59d4cfc84",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 405,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497a7187-20e2-4a1c-b28d-0ee752dac57d",
        "cursor": {
          "ref": "d4a0eef8-3cbc-4038-9154-bd5828f05bb8",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a631576b-edce-42f4-ae95-64ed75e46a13"
        },
        "item": {
          "id": "497a7187-20e2-4a1c-b28d-0ee752dac57d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b066caae-88ff-4e09-9a89-d6e4f07165f9",
          "status": "OK",
          "code": 200,
          "responseTime": 488,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76dc124-f351-4516-8c88-ebe286ab807f",
        "cursor": {
          "ref": "e122dcf3-6b7d-4fe1-9b03-b8bdc9721dac",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ad4ec82f-c002-45e8-9c65-0dc046b5ec45"
        },
        "item": {
          "id": "a76dc124-f351-4516-8c88-ebe286ab807f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0b14d4ea-ce8c-446d-a02f-ec5b570cc3bb",
          "status": "OK",
          "code": 200,
          "responseTime": 2194,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc58ae-99a3-4934-a213-3c2cfbb79db4",
        "cursor": {
          "ref": "28e36715-f840-48b4-bc11-6d518b4d0813",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "348d53fc-ab64-45f3-90b1-cdaa195b442e"
        },
        "item": {
          "id": "43dc58ae-99a3-4934-a213-3c2cfbb79db4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b073673d-e1bf-4ebc-88eb-77693ecb5fe0",
          "status": "OK",
          "code": 200,
          "responseTime": 1619,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
        "cursor": {
          "ref": "0ae04981-755b-4a25-8ecb-35b8f28df1d4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24c8da52-d9bf-4bcb-b084-26bd27cee4ef"
        },
        "item": {
          "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "542cfa9a-89df-4b73-805d-91d517cded26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
        "cursor": {
          "ref": "0ae04981-755b-4a25-8ecb-35b8f28df1d4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24c8da52-d9bf-4bcb-b084-26bd27cee4ef"
        },
        "item": {
          "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "542cfa9a-89df-4b73-805d-91d517cded26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
        "cursor": {
          "ref": "0ae04981-755b-4a25-8ecb-35b8f28df1d4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24c8da52-d9bf-4bcb-b084-26bd27cee4ef"
        },
        "item": {
          "id": "e236b5f8-1c32-4f24-b6ac-579234a8de8d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "542cfa9a-89df-4b73-805d-91d517cded26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7354ad-96ee-4a0f-978c-ecad72ceeeb0",
        "cursor": {
          "ref": "f36c5968-3064-4751-ae97-5ed6edd6aa3f",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "577b4474-d74b-4a69-b396-04f6fec8b728"
        },
        "item": {
          "id": "7f7354ad-96ee-4a0f-978c-ecad72ceeeb0",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c0d0a6f5-b4d5-4d88-8ecf-e794f22447a9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 390,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f816f8d7-e97b-45d6-8816-4ce5662b4094",
        "cursor": {
          "ref": "3e3655b1-d711-4dba-8f31-398b54d9db11",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8610c0f8-5681-4b4d-be55-005f9c57d918"
        },
        "item": {
          "id": "f816f8d7-e97b-45d6-8816-4ce5662b4094",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78a157c0-2320-4792-b417-bb5b8a2bfc19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 110,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f816f8d7-e97b-45d6-8816-4ce5662b4094",
        "cursor": {
          "ref": "3e3655b1-d711-4dba-8f31-398b54d9db11",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8610c0f8-5681-4b4d-be55-005f9c57d918"
        },
        "item": {
          "id": "f816f8d7-e97b-45d6-8816-4ce5662b4094",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "78a157c0-2320-4792-b417-bb5b8a2bfc19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 110,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4350d723-a85e-4723-9ea5-4f884ce92d24",
        "cursor": {
          "ref": "5171679e-d3f7-4cb1-bb15-07201c5ed7fa",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7c5c5b5e-994e-4689-9eac-ca3a37327acb"
        },
        "item": {
          "id": "4350d723-a85e-4723-9ea5-4f884ce92d24",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5cdf0802-68e6-4ff6-ac1a-8320b6625279",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 614,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8272a5-853d-4ca0-a464-56735946025d",
        "cursor": {
          "ref": "ee7e80cc-0074-45f5-a1ce-97714124f33a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9a55fe61-618d-43a8-8a30-d3ba55668002"
        },
        "item": {
          "id": "0e8272a5-853d-4ca0-a464-56735946025d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5b699db5-01fd-4a83-af4e-46267e726830",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8272a5-853d-4ca0-a464-56735946025d",
        "cursor": {
          "ref": "ee7e80cc-0074-45f5-a1ce-97714124f33a",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9a55fe61-618d-43a8-8a30-d3ba55668002"
        },
        "item": {
          "id": "0e8272a5-853d-4ca0-a464-56735946025d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5b699db5-01fd-4a83-af4e-46267e726830",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778885ee-0f44-41e0-8abd-5e581e64e799",
        "cursor": {
          "ref": "f9ee133f-9ecd-492a-95af-6d977469a95f",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0918f855-4e41-4fc5-84a0-3fad58395fe2"
        },
        "item": {
          "id": "778885ee-0f44-41e0-8abd-5e581e64e799",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "64d5a543-0c9c-449e-9c02-b38f80b95322",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}