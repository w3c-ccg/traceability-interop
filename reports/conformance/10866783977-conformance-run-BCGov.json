{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3b35a253-6a67-4ab6-8554-28fe67680d28",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8acdeefc-112d-4e6a-94d9-9e4201c3a53d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f02d4c7-7882-4b85-b8d3-e2ff55f6df2a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30a49bc0-f13b-4fd8-8f5e-5945177a840a"
                }
              }
            ]
          },
          {
            "id": "735fa653-a20f-45a0-b096-7420ad47e8cc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d0c8e08-6745-4e55-9a48-2ac421d270a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "312fb734-0f2d-4421-9917-afce863f6fb9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5ce96f32-d7b8-408e-86dd-59361aebaffa",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2881d19d-cc6f-4f8c-ba6c-e9052e424eeb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b25aba2f-629d-489f-bade-52b13c3d4884",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11cf7884-b323-494d-a481-e243fb2269d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d971afe3-ddda-48b1-b444-671b8b5bf3d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d6454fb-4679-4188-bcc6-26fdee27ef16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82b36945-c085-4315-8165-93e2f6ebded8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38657da7-8e71-4a0f-8e1d-310d7a4ae9b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d96a8ec6-97cc-4744-8d33-e9d07f44bda6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c678308-20bd-4067-89c0-4e1443f19152",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ae5b02e-360c-4bbf-8e9b-fe6f4a829911"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d1b19c9-8bab-432c-96e6-c181e2f94623",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c93a543-8ebc-4b1d-9310-c1211a0f327a"
            }
          }
        ]
      },
      {
        "id": "86da3fe2-f906-4e4f-8462-1cc148700b3d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "45484a22-d525-4e1e-b132-a81736c71889",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a290d1e-2710-4b34-b8ab-f61e65248522",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fdfecda2-f0bf-4173-a1cd-8f27f8bf0e68",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78d1821-0d93-43e4-916e-56188c14878a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e924b6b-a466-49f2-a139-229a7b6161d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d481af1-82db-4837-baf2-987ad35963bb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059a58e9-e7ba-494c-b612-acb4ad162728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "111ec24b-bf1e-47c6-b882-99ad22ebd687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4091659-6e6b-4b46-a1bc-185aa31304c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b77c69-2cd4-425d-b127-01494b33e6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7e4925d-00c0-42cd-8da3-19e3846a3969"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a411d89a-a443-4394-8985-5a54f1f158d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39455816-c43e-4c64-8599-f06fcd84e80b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04a0af7-ebcd-456c-988c-635637248e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f019a4a4-d512-49e4-b3e7-746921edaec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcac834-fc90-4a9d-b056-24a7e2503a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78959e3e-4160-449f-87c7-1993b6ad465b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6952a6ba-3c48-4002-8ec4-9e9993a4ab32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a41e2f67-5a41-4666-8e92-dc4de2ede3ff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8b96a2c-9981-44eb-b0d2-00733c1905cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d9d2e4e-46ce-4912-b495-2fabee78406d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58f1f973-1257-4b17-a8d3-8042cb288636",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6291cd4b-5b06-49f5-be8b-fb328e2454ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c84a16a-4fd7-40e5-9a06-fe9599424d0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f24a42d-9883-4ca4-9fe5-cb3b33179d9a"
            }
          }
        ]
      },
      {
        "id": "1d82150c-1690-41f5-99b2-b46b901be787",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "096217b2-6c8b-4bb0-989f-bf5fb40b7d34",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1a25e10-3c34-4ee5-88b8-0bf40045bb68",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25cb3a77-b135-4a91-b77b-0028e5e1289a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecfa61b-57d5-4ef8-99c8-24f2aedafcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef97351e-b0eb-47a5-b236-6078778cae9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da2ba2d-9d13-4390-b513-c715012c065a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd9392f-79eb-4221-a378-db576c85fab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd4613f-7fd9-47b8-be56-d8b533480c36",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59634a4e-2c05-4dad-9ef3-776d6569767a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba8d62b-f108-4cc1-8104-ca7c7ed974b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3793283f-cbc4-488d-ab36-0f235b8eb8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f68896d-ea33-4f19-a464-07b3aa20fd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff77d36-f266-4789-9713-3db7930bef9b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb204d7b-c599-452d-9b92-5e28f8d3195b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7ad4e7-09ea-4f17-93bd-12e9a166ccf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953fa159-fe92-4fd3-88fe-e82fbdf4804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f60a65f-2ffd-45a3-a6a3-0d47ba49142e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c7073d-7572-4ecf-81d4-92654c058de2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d87362-6b61-4b67-ab0e-43c37bf3a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c131cc-8a38-4a8a-95ad-05eaee0f15b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f852d35-04f3-4d63-9b38-7a5d1f50859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f73900ba-656c-451a-91a1-fc49200d71b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b285ac1d-3500-48e5-821a-28cc910ef21a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d0cc4-dd02-49c9-b9b7-77161c2bcbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc222cc4-acdf-49c1-a068-f6cb828b29f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d8e2bc-d8e3-4f5d-92a2-43892ffc1e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4731b1d9-1c5b-4962-baf9-aa07b3acaac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4227c098-8538-4c37-8865-13a670b92ba5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f43849-04fb-4f74-8c73-12e5cecdea88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d773bfaf-c1b8-48c8-9063-c3c58941b359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54970a5c-117d-4e74-a5fb-6554f681181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c8e4543-49dc-4f29-ae22-d377220c37cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37776e8e-fd87-4978-b19b-d3cfc6b9f304",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5442173f-bd9c-4b0c-8bfd-bb466dba694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4ab860-2dc5-4863-aa4b-f1b8f9e4edc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9c70b8-cd6b-49c0-91a0-f1372f7e808b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63e95d91-3ab2-41a0-b0cc-e2ece85dd1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2284b7-6983-47ee-ab1f-29a497e53222",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b35f552-016e-4d8a-b248-338ff8165143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8f9547-ec26-4673-a793-3ef1d1c80c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151b570-e4de-41b6-9a25-2805ecee9b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a102c30b-6fa5-462d-8b4f-04d6566fe38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe081bc2-c32c-4f29-8dab-4532c84ed185",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990d1f56-ca2b-47fb-ad87-e13367824eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b52aa3c-a805-456d-8c0e-218e5b0edc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a00922-7133-48cf-8e90-79b22c658d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fa9d0e2-b52e-4fe6-9815-967291233f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b20b8c-8e33-4f12-9c46-77cfd75ffc21",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14221c7-6609-4889-ac6b-3a0aed904745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d29d4a6-4126-4fa5-929a-ad2fe7514a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeb5f07-143c-4460-8137-227277a565d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7be88d6f-d309-4c57-ba2b-7aef4497df42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd33ff3f-5fee-4ede-9ed7-1517a434443e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc2eedb-df54-4f80-bae9-250e8830e01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b58289-0412-49a5-8c3b-14df6529facf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85622771-2ced-42b4-89f0-84def0a8993a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "888845d0-81c2-44e4-b765-da8692b5d460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8090ca-0285-471d-9dd1-5fca1513087d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5677760b-8065-4a82-b9dc-752a39c06e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e642ca72-1487-40fb-a9aa-a63504c1798f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eb013d-6cb4-4f11-8003-875051240ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbcd45b8-7c78-4c04-9d00-2029810b07df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f2c2c0-6c6b-4f61-be6c-1def1ee2b37d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac1777-6233-472c-b4a4-5d458c09d8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d597d33-12a8-4e69-b444-d33503f931f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32837c25-78c7-485c-a3f9-5e4c66816744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69341df9-43ab-4445-93d8-20b2dc221bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c00e98c-49ba-4a72-a74c-1c04a005b44a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8920e26-4292-4b30-beef-b30d6e2f9beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c322fb-666c-4ce9-badc-27a043171bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c8b43c-4e19-48c8-8764-ea75bc10e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9d106e1-126a-4e53-87b5-3d60be8c5c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3bd0b-63ff-465f-8a3a-b6785a3540d9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318bbb1f-7ff4-4906-ab36-f12afc6a3d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a4c5fe-c960-402f-a635-33cfdef156e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b406f5-1c97-42c3-90c3-4bb98233d32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "600ae195-a56a-497e-802a-378a085c18b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8538c9c0-0779-4f42-add2-da8a63bdce3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ab8eb7-9771-440a-9aff-d914754947a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efa76b2-ec91-48bb-a7aa-dd74a8974a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9a6294-0c27-4f23-96ef-a3c6ddcc011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09c7e3cb-27a9-4243-b48b-e937bab91a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58b98f3-f9cb-465a-afc4-0cf86cbcc4d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d17560-3e25-42cb-80ba-8e833739f520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cd0a0d-ec97-41ea-83fb-ceca2ecafff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b8c58e-019d-41f5-85a3-a17381887167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7e5d418-ab65-408b-8ee9-fe4a6261fda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c61e9f-dc38-4eab-87a3-081878618c60",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6920f184-183d-4779-9d37-62aa02be9008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb305a78-c7ed-4648-843f-a86436f4102d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28947aec-d62b-420b-9323-1a59743c5dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd16cede-82ca-477f-86fa-4278b32b7e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61ad208-88d9-4053-96a9-be19f0c86f98",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c53144c-6e1a-4454-a899-157692512dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7747706-19e4-410c-bd64-532798a6f5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75d4b29-90dd-4037-be59-ccc75f9acded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35050f66-3c86-4dae-8a5e-10b3b8338b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7751d8ed-cf5c-4733-898e-5b53ea1f6632",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869c2207-911b-49e1-8cd8-e61e8c743629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa9f3d8-50f9-4f2e-9c66-1a22525960fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0779311c-6e27-42de-a89e-f28622dbe636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1384dbf9-59fb-4177-bc5c-787d540ca80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581f9264-cebe-46e5-a850-03b78d8513a3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f481e4-bddc-4f4c-bd14-301d69187c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2e9e60-d5e8-4147-a45d-2052eceab475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca75ab76-af86-464d-8ba8-3da57c51b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149608cd-1628-4c6f-82bb-9ed21b3370ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf74cf93-bdbd-46d5-ace5-13ff07d1e67d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ac288c-77c5-454e-93f7-4f42eb2dbe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8073f5-6797-4262-8a72-0c54c42c5630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39de767c-41b8-43a9-9c65-a056fba43553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5e6a46-b986-4c0e-b365-ce319e87c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9b7205-059b-4e8d-b0b3-4d406f76b931",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa62641-6718-40d4-bc08-77680ab24c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72926a3e-25a2-430d-a641-f1d4aa2d6d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d858b2b-8382-4d1b-a81b-8d209c5f9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "701d14b1-71a9-4f88-bccd-e15e4ce394e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23da2884-fa38-42da-b071-9a48b989be74",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec87479-87b0-4b91-b734-2bf04d056509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5779d2d-2ee9-4be2-b069-88c005f6382c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf89e084-a621-4a62-aefb-c3f541685952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc57f23-9c95-45bc-b188-af868619b0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f20964-fef1-41df-909e-8758cd5b6e7d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57afa42-ec96-4b08-a5e6-af8304b5a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d75bc5-2130-49b9-b13e-4e9c3b899ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668b4cb-2bae-4e7a-bbe0-93ac074e40f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "204eaefc-83dc-48fd-a686-febfbc04a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8746f4-4c13-4ac5-8274-482b412bc63a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0722f0-dc73-4d85-8d0e-4b70fbd26f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fa2c22-36d8-439b-bf3d-45011f35f17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7285d465-25ba-47de-a4aa-dc7f63185e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31ff48d8-6394-45b6-a596-9cd1a52aa1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af884aa6-ae48-40c3-bad8-688c85bcc635",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368ef21d-2638-4e4c-8637-be8aa1379606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859d3d47-5f39-46ed-959d-d4626482627d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c1821c-447a-48a4-8a2e-d282d3915cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f1ee87-8d19-4d4a-8b46-e6bea8257130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf0986f-f986-4862-a7e8-7ea6a72bf66a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d966a7e-12cf-4d42-9e54-80694e76e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76343006-a1b9-42b7-a489-3c1c4be393a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e154ee-3354-47e8-ac68-27636cc55b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55af0d79-e576-4a3a-a8e0-5988dbce4859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8474b2d4-d31b-47f3-ac57-ee20e6dee913",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0531563-bd83-4a43-88d5-26b6380415a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb3f402-57e8-4885-9816-aa981fa40ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba5d6ae-81e8-4827-8310-e34260bfe930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd0dfeb-aacc-4500-9b9a-07d5dbf8e067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1827443-21e9-4495-b514-9649f22eb6bf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac787db0-99a8-403c-94bf-d0bf21f9c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e91aedf-d00c-40ae-96e9-227e24272a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c58ebff-2ee8-40f0-8a3f-5f8a977fe81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3635ad-516e-4538-a839-6bf07bfd9bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375f206c-964b-4d93-9645-bdb2598f2a8d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62304bd4-ada7-491b-b141-cba121896e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93818d68-1405-46f3-aeb0-db021731ed9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531ce4e3-4c63-4ecc-9801-275a879c3b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cef7a35-e104-4880-b216-4663d465e8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0daf40-f55f-48b3-9ec3-f256b09ea59f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1b0460-61e0-48d7-bd08-442f2041d3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bffd8b-e65c-45e2-b5f5-9f2a921cfd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c00629b-1d12-48e7-a351-f598b13e6129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fe1e2c-71b3-4066-b241-d434ca963434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3072f0b9-7e2a-4e29-a3da-33a1c13c0839",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739416c6-c83d-42ca-82a6-30d164aff706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1a41ae-2b55-4176-b992-7761d7ab6dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffd03b1-96d0-4d90-8a70-3a0fd465fa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8462cfb4-8ae1-4794-aba2-00a2ea1aca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcde41f-5926-421f-8f75-56e831d4afaa",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f3acb6-ffb8-4ae2-84f3-b3695b1adc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00c21a4-412b-4974-b474-d3c38b835c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fbdec2-dd84-40f5-933d-171db1035c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76feadf4-faec-4d09-8c96-60eaf2d22411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec9c1de-e647-4767-86a4-7645608c1b5a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12c2794-7579-4021-83e5-d612a38bc43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bf1e95-bb6a-4951-b6bb-48e62fb9df9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec82e403-edc9-491c-8edc-d42cfda4198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "35d6ef0b-a5c3-4bce-b081-bd5b14b68000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821491d1-e1db-4025-8f20-e82a6b2d3f7a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6be273f-cfa8-46b6-bf74-6a69a962e397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee23a5e9-2b71-41da-b864-532415ac9db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f583b3b-f7fe-4d06-8f19-b82cea84d43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6fd48d-09ec-489d-871d-a99ff246e294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d7c2ed-64c7-48cc-8146-8f36bd56cfbd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932af950-c139-4f25-81dc-5526ea74f0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab33550-196b-45ad-864d-92ff911a6b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52d3db8-de77-457c-a88f-516470bd6609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6df47cbe-8fb6-454e-837f-70fa6136f040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66e16dc-a231-41fb-b482-72f23055b227",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c030ab1-0bf3-4c39-a05c-86c01a44eed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7b91bb-ab9a-4fe2-8e2c-b9115d76d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9719c431-91c2-4459-9799-417ecbccc0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a9b63d-4269-4ae8-8c3e-d862d4e14f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374139e8-572d-44b7-8397-7c5869c2f4b2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ea0d65-24d5-4b6b-9310-fc433fe7a419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b8b336-ee59-4791-b6cb-bf12aebf8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac5eafa-1ba0-4428-8f99-ca5ac74a7dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "602eecf6-acbd-42a7-9972-4e28402385f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f07873-6e6d-4715-bfe2-63043f16b641",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab166258-a2d5-445f-8d41-f76a39d9bcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3878d49b-9971-4349-8d47-e1ba24c06fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eaace4-3b91-4b45-8fce-084a4f1232bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "709a988d-c020-4462-9b07-df4f4b85222e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af37c21d-e9f5-40e6-a11e-beaa5300a1aa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d79d1-7dd8-451c-86e8-7b856223795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35fa885-6e0a-47fc-8895-add00f199a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c85291-4d83-41b4-8fcf-738f7ffc8bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c14d1a-a3b0-4988-bac0-7f53f79b240f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f92e72f-c39f-4913-8aac-01539e8a39aa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d26fab-a77b-420d-94cf-474908b7dadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768e1993-c5b0-4d56-89bc-5f3185ba0628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d18bf-88ed-4769-8a04-750402f52066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0fbea7-ee9a-40f5-b656-e57d20effd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d5e98c-b5c6-4692-9878-c62fa7747c30",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4df7f0c-4cc6-45f3-a74d-a7da73465500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1316342f-2e44-403e-bcce-1cf16cfb372d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15afe871-b498-4c7a-9644-ac430d639908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fff687-edf9-47d1-aa50-94fc6ebcc403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee926b86-497f-4b28-9cd1-b5b6fbd4fe69",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0195d19c-6a54-4d9a-9eb7-949ac8a44466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41114281-cf50-44e4-9624-51785bd13c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45dc420-f758-4275-8d60-6fcbb85683e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "845553ef-8157-4611-bb00-c150d8cf5204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e399b3-6e57-4a26-b24b-69b48ea05b95",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffbc256-a889-4ad6-88cb-0712abe479af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21fb0c9-a566-40f5-a036-402e950fbb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7810c750-fc1e-4e2e-a80e-1057ba0b9b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca2fcb6-f653-4fe5-8a4f-e3a85e548f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5dd265-565c-44eb-bb0d-63d803ffd43c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8538cea7-041d-4671-b418-4e51d65ccc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d58738-ec10-43cf-af1a-66b1f8687b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71265ebe-5d90-482f-9eae-f2daf361e649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6146a868-75a9-422a-b7ad-a6d2432f623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e31e804-4163-48ef-8d36-d22cb80b911a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac58e4cc-2926-4bac-818b-4a9b81930755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f93797-5588-4813-9dc1-93207200c7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b92680-e5b7-4e72-a7c9-708224bee24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8dc09b-149a-4048-b465-ec4454750d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2117326f-324e-47e1-8023-bee530d29883",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db3e34b-6ac0-4c04-8155-b0f9fec13382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195b6126-fd60-45d8-aeae-7bd96e079470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4e13fa-7b74-4b86-b5cd-d16148088a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88217bf8-744a-40df-84bd-03f7a434d666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e01692-74a0-4528-bf04-2ff4810984b2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378be2f-2b9e-471d-81cc-3b5f90b7f434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc1dc17-8f28-4c6a-b0e7-1279d6b32ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896ebd1f-a8d8-46d7-a105-99a15d816003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f38bdd79-9ea4-4fe2-ab95-31ad876b4558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fabf10-ca68-4f25-9654-7e02f5706616",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181dfb02-d398-4ff4-92e7-a3f0a87f8b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60af67a-2c86-45cf-b904-da3ce56111a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51bcc3c-7f9a-4101-ac38-7e6ea21f9b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd901299-56fb-4595-b54d-10b861cd3527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5fa0e1-44c0-401e-adc3-887193d0fc6b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5a809b-7c1b-4534-9f63-3e8ef3d03b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fdf4f9-8f41-499f-9500-816660143ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d6f5e9-dff6-4773-a9e1-d1252737460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3af808d-e5af-4cf7-99a6-13d0fb707e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984c95ef-3480-4749-b272-ceabe01cc3e3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f56083c-0b01-4ccd-8561-723711756376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6ef300-0127-45df-b68f-fc48de5a04db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b0708-74bb-4e91-b97e-ad41d51968b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20cad04e-7c95-4d9d-be21-36123f24ff6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78640bd-22b6-471a-9db2-9026b53db31d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4949224-aafa-40ca-8298-b04748436f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb28255-7953-4414-9f25-16f2b2aa03a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c5e68-9051-40ca-969f-7d1bf971387b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a4e649-79f7-4e14-8e4e-be8d5c3a8f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83e9b90-0803-4d1c-b993-f9a6bab1feed",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53406777-5682-4023-b948-15e0c790bf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acd4092-314a-4918-b3ef-7f623a5f7cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86eaba72-6d11-4bb8-823a-0bd85a9da29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "422e9491-6a85-481b-874c-80ae93f935aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173b4015-4cdc-40e1-a456-85e2287a0ad2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c47d48b-c6b3-472b-92f1-d0dcc6984bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e993fa-3b7c-41f0-9d92-88b826fd2945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a946c29-d22e-4d1f-8a7a-20420d66a92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e191d9-e58f-4ed4-9bfa-d30d25e65b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d719178-c236-44b7-ab47-0742f775f1ee",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073afc5-58ad-437d-bdab-7d0e99d39c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb769f06-3d08-4ff4-a56b-bf7cd9357ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4149263-db2b-4151-bf66-55b4ff45e396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "09537705-6b9a-4805-bb49-70a535448470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b527e8-bbce-4a5b-8006-f0d4a79ef472",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443cf262-7828-4806-8a6b-604ab8b43855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4b35e7-6681-4854-bfb6-7fbfc446aee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09672d5d-d888-4924-a798-dd94685d1c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77c5ba90-ce38-4600-bcaa-3ae88b9e7167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55865c4b-0cfb-4e9c-8e6d-c2943b1dadfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9deba8-4c77-4071-a90e-9f3e9b6d9c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8d77d4-8860-4d7e-a6e9-b02b07eb61bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349bf2f6-4f31-4d84-93d9-90b97e8ac81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad424388-3f34-4c5b-beb6-00853c568d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfe7487-eafa-45d8-80f8-af1d705fcd9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b97cbd-a755-4ab0-84f7-fc647b39e447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b57086b-a35f-46a1-a588-8d1fedadaa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ce5129-acc3-4597-a91c-1f3b874e862c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1c3bac-f972-497d-8884-8d823542b37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9c3690-8fa3-4e09-b40c-507d04cdeb21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3cda45-d404-4b82-8b67-82e5041897ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e9d58b-3bd9-45ae-a463-34281ed5af2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decd4e2b-3975-4726-aff1-c2aba5d5c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de17fe75-7f6e-4553-92f1-c70fc026bd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26177185-bf48-4cfb-ab43-0986a5845a4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c704ffb4-20a2-4420-992b-64e6ab6e0acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aea7be-53e3-4e02-8939-6409a089b39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50c6839-5720-49a6-87f6-b6efbd0e355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d5fd7-1d3f-4ed5-a2d0-984b561444c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2286b773-1c2f-44ee-a953-e4cc8e59a3cb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37562bc5-1437-4bfe-ac99-66373ada3329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2f307f-ae82-4385-aa43-2ae7995b038a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ba6c83-28cf-4db9-b702-ab0cd1067829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c71a84f-89ea-4653-936d-a8bc769757a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ed702f-8c3b-40b0-9a4b-b77620950db1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a25c62-d7ce-42b5-bb25-fcacd023cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31af5df-0ec1-4c96-ab30-90d56e0c18ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d7b6f5-d5fc-4923-8ce2-c2f3eb60ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "26cc2b3c-f0dd-43ae-8f1d-1982dc86b968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea99f767-92a0-4441-9aff-372603793a6f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bb7718-ba2f-413a-adc8-4149608962ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83adc913-f356-4869-8666-486c0cadf510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d36c0f-b222-4b0e-a1ce-d21ca9de373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "413c51ed-9d7a-48e5-af98-084287b38c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba865fd-dfff-4063-ac9b-29eb18e42161",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193719fa-cd68-405a-9d17-f52c2884e66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31225cd3-9f37-4a21-8dd1-b189bc7316ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35900976-1555-467f-90da-3624d3ffe2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a97b8c-bdca-49ff-bb58-20ad3707a821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae77474c-fe81-4de5-a3a6-46955c21a13f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c198bba3-4a8a-4225-8b7e-f612941ed78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e32c40-9036-4a64-9a06-8f0c449692a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4337cf78-8fcf-429c-8812-3ece13d25bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "747a34ea-7acf-4403-9f74-161a4d01d9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fd6e12-f3c1-4a83-8fa9-db84260a26a8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1efe2e-f89d-4c20-bea2-2920b083c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bdde11-0fb3-4953-a6f3-c3e42132075f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a403938-cfce-47d0-baf9-b6f3bfc89e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a74ff118-aed8-44ae-ac74-6bde2468d0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9b9cc3-c665-4b4c-88ad-6684801aba19",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f995938-cb45-491b-9a3e-05756231408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e4036a-e76d-4ff7-b75b-211891bc68e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2ac0ca-e871-4969-8752-b9a894ede8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "36b59276-e984-4e30-a3f7-c8fd21be9672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95aa0e3-fd3b-4cba-a739-554fe5e68990",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28366715-4d6c-4452-8e65-b02d342c3c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a05925-1507-4b3c-ae8f-2d0451443058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425c26d6-729a-4e45-9436-2141144116c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53b669c-c135-489b-989b-f6cbf8834bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f25cfa-c171-45bd-b83e-930e4a373810",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c28a2e-4782-46dc-b546-11e093db7e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d68e93a-c970-4c7d-9bb2-a11be78b2beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1292038a-ab17-4c05-ac11-e385c373cade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc8937d-7be3-4720-a407-de07ef62fc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4c046b-0566-46b3-bf63-6eea23838ded",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30869c44-8c9a-4c3d-87e2-2c086ee3545a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5184de56-44c9-4d06-8010-09e83d6875c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c331f73-1726-4bec-a66a-821eed9ffe7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "589d22f2-3b84-48e0-adc6-b83885c98810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241d5b6d-fed6-4510-a31f-2e4030584314",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0128e965-14cb-43b7-8344-0ac82467ce4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cce8f4-787e-43c3-b2ca-d89292a382b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dafbb7e-a768-4aa6-ac56-0eabab563750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c34d2c-2925-4851-952c-e85a23f6d7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28251b06-7a5c-4b2f-baeb-408ee540e8bb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3681f2-63e8-4922-b911-8feaebf57ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3f7817-4c9e-493e-a4ce-524c3a99f3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75201b98-88ab-459e-9725-60916c70b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f5a5a9-ce29-4c4d-8873-35e4c1719e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02b85a7-fbc2-43d7-9f38-99801053bec6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d99a310-7071-46d5-b448-47daf98bd37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2671e35-056e-4424-a568-c570ce82dd44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0739e4a-a510-48df-ad4a-ab4ac1703ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccc13f4-eee6-4ec2-9026-429319f0fcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c37cd-ed2b-40af-8ab6-cef9ce1f1462",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7041230d-9f9a-4220-8d49-02fe7d5343c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bff9d0-dccc-447a-9aea-d65fd4146487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe6d472-ff50-48c0-8bbb-4ec3ed33b0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd18e8ab-3ca5-4a7b-be92-016b9ac6172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cfe6fc-8117-45d2-920f-5582b6a26bdc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753ba1c8-f0a5-45af-8d6f-0ceb2e223ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a56dfc-ffad-481d-986c-a54a7345c762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc38fec-e535-4144-9708-48d469b8e621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30398ba6-8805-4f3d-90dd-51286f9ed643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65450ff-0b6d-4b2c-9713-5dcd66f3bb30",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b642391-2b79-4129-8697-658048e2a34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea07b0e-de7d-42b9-b2fb-ec399a62cb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea02b8f3-487f-4828-9732-de2d9e7de758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65e676c-83a1-436a-a0be-d5511c689423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30633d2d-0b95-43fc-96ea-3c05a32f8dee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736af705-e615-4916-b3d3-8e62aa1c9c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a541bc7d-bf79-49b1-af68-d48fc4fbe8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cd90b0-733d-4191-b896-ea79dabdcb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd77bc24-0099-4614-9a51-84cbec927e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6c819f-db95-4d18-92a0-c97a0fb29ebe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1d46c4-249c-42f3-a932-2cead30f76e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9420673-1861-4f5f-9c71-d766761e7b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241067f0-c155-485a-8d57-d911bfeb59b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa469ec0-3bd4-4b7a-8b55-f48ad64509e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d2b2ed-9376-42c5-8b38-9d723f8931df",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b42eed-11ef-42fd-9d1c-25ddf5678076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f67675-f283-4b1c-8c99-2d61a2785406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103b6a4f-7263-4b95-927e-3f023fc7fc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5e2580-2049-456d-8929-1975e36d4763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de7b8f8-1663-4ad2-83f7-fa0c08d0c82a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0274ebfe-98f7-4e88-8bdc-16d066e82e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcf87db-538e-41e2-b4c0-24d48b3f20df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd399e4d-0ead-4cd5-90df-7137c3b277f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e57dd6b1-4eb3-4f44-a51e-9d23cc9d30b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77616fa8-c985-4ba3-bec9-1fbb9a300d02",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4327dd8-8a58-4d45-a7c4-ed2cb11df877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a7fe6a-1f58-4261-a5aa-cf02003ab3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb440bab-477c-4bd9-b814-4e72499c81fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "917d692b-19c5-4372-a5c1-368d870e453e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8480c9-f5d1-41b6-89aa-eacda071377f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b6531b-f1e8-4a41-a4b8-05c57019f701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4885e3-3b5c-413b-b7d8-40086a3a41d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7585e4d3-eb4d-4387-b3e8-af5dfcfbe1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abb3e1e2-fa58-4c2a-ae1c-51bab59538ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0660d332-7b60-463c-a08d-a04e26934c1c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fa4a53-9f0a-4ff5-9380-3cdee56790de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92bb028f-3f93-4cd3-9a51-6b8956f89daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01935c37-8da3-48c7-b823-b2c54e4686be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "680f87fb-6ac0-4dfc-9cf8-8947bd1376e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f0aa41-ab01-489c-b31a-f355d06bf92f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3b178c-7156-421e-8a17-447dc434f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db471c0-1ec7-4890-9bc5-81c95dfd2222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70715cbf-18f8-4f72-a70f-8c674fd618f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd19e9a6-dc2d-4ff4-9026-0e30d5889ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b80495-bd93-434e-97e1-ea81bc29eb17",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2337a8-0d9a-4c0c-82a2-1c42ae254d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29385dcc-f733-4d22-9f42-e79c1eaaa800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6742417-aff3-4f2e-a914-49a0bcbd1de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33ec9a6a-896d-44f8-addb-289c3b97646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c2f8d5-613d-4b5a-8e13-7d1a23a684a8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786ddfad-cc70-4736-b23c-2cccd79ccd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033fbdad-7e72-4964-ac1d-b85fc3173409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f4f27d-b47c-4442-b49f-6bd2374fba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff796ceb-014a-4872-83f9-e9f05c05d0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8297c689-adb4-4bb4-b318-9e522a72401d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78bfa89-b975-43e7-bcd5-654e3ee29eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e90c45-6122-40be-8bfe-0751d75d90f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e08dd6-b03b-43d2-80c5-9cd14263c61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "17fd55f6-6fec-4f49-b493-b7d1d6ecf8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42da0e77-f84a-42b0-aed6-e3f3410cf0da",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d1b6fb-5956-4914-bc50-e6d2b8f63f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993b1511-bb3c-4e39-93dc-b7ff613a6009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa576189-d415-4832-84ea-7eef454e692c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46f2ded-6ef3-4e63-a845-dd191d63592d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd0222b-eb0c-4e90-984a-8335b3f967d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a65082c-e476-41c1-aac6-de319f7739c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50eb69a4-d4e0-449d-8aa8-23dec135999c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1b3349-7756-4d11-a59d-69673127a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5c1ee0-9bc2-48a9-b19d-c942743f65ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1501aeaf-513d-43cc-91e8-7b43cf359a11",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a869595-70d4-4076-a56d-da26e746447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c201f790-0653-4fbf-b619-21d9877867a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1c7a4-0b54-40f3-bd8f-79b2689b9f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "98603fcd-4052-4e21-a6cb-4483c9b8e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f2283a-5369-4d57-993e-4d5e876c14ac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8ee359-9adb-4407-a164-e2cde158bab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "51c7806b-52d3-446e-8042-a18fa8fbacec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a677cdd3-6952-4541-8402-46cee36a5eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a32902cb-b7c6-4b5f-b1e8-f3f30703a492"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dd81479-9ac0-43c1-8226-83fccd1ada10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b80afad5-aa0d-41af-bbac-f9df3fea935d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63ddeb2-8726-4add-8172-3fe7d16ced34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f2fb42-8ebb-413f-b13e-865024582268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25c6c1-ceaf-43b2-957b-a3d597f90629",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "224741fa-f587-4468-bfeb-a3eaf75ee109"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81654247-7de1-461d-ba8d-6c7e109d053c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c1c97cc-11a9-4490-a140-b81c099cd057"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab1047d3-27f9-4f7e-b8da-5e28a91452f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e48b1a40-6c9c-47ea-bb9b-89f4cdfcf8c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "390bbfcf-80c9-4828-b60c-e8b9e99aeb73",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4159c4eb-3c9d-4541-8183-51cd2598f21f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4e90a577-c2c2-4b47-b9d6-a515f5b97f10",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1bd1487-43ed-4cc6-8ba5-b2bf1a4a7d99"
                }
              }
            ]
          },
          {
            "id": "e8bb9954-a966-44fb-9e01-3a054e2b6494",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e5e4273-50cc-4d83-b8d4-e53a9e5caff4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7a9fa197-d0f8-4eaf-a873-ef4e4ff7feaa",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7771d0-f166-4c35-93dd-04abab252795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d96d011-e540-4a74-83ea-09de1a2592dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf4e983-302f-4df2-97cf-b7b7202d68c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb853c09-d4d2-427b-b228-f673330f364d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09ab3d3c-537d-493b-a744-cf0604804c74",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0de418f1-4ffc-4a38-895a-cc2b955172c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c972f38-3f5f-4b6f-8a1c-c04022b4ded2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76cb5c78-abbc-4502-935c-518ddb3bba49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "17fb5f79-9d94-4df2-8474-24cf9832f027"
                    }
                  }
                ]
              },
              {
                "id": "2774cd6d-4c4d-4bb4-b119-4df39e27ba13",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "673f76d9-8b0c-46f9-88b6-83a9e1093e93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91bab7ee-35b1-4746-bc39-6867ef1de057"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d0fa55d-18e7-4b25-a23c-007be6477c50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0561975e-fdc3-4038-9f84-890269aa9fb0"
                    }
                  }
                ]
              },
              {
                "id": "670080b4-f001-4b52-849b-a77e5f32d0d6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "679048f0-d011-4196-bddc-b1460b59d2de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a9e4fb6-8fea-4372-b64c-11326733a825"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78ca6d3a-d43e-4468-b06b-c6e3dd7f8200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8d20b60-46ee-4357-96f7-111bc5f72e09"
                    }
                  }
                ]
              },
              {
                "id": "f2cfba9e-0e69-47b2-abc4-3fcd6cc040c1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5774acfc-0988-4d2e-aade-b851638d455f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "739d2493-ac9d-40e9-a2c8-03d851e660fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81009ca9-08b8-4fc2-9e88-15298417ce56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "19162809-83e7-409b-bc2b-a449201318b5"
                    }
                  }
                ]
              },
              {
                "id": "71f2264d-59a7-470b-8627-32d91ff0a0e9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0166d578-671f-4fbb-9e3e-8b1e56064828",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a13dd5a-5cea-466f-aaac-e48d2693d5e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1a3227-6d5a-43ad-91e6-6f3e401dbfb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "17b2f1cc-e34f-4091-9f3e-35133a19f4e2"
                    }
                  }
                ]
              },
              {
                "id": "84631156-9a53-4325-a61e-735456a60bab",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7b581c0-87e8-4185-9230-1147b1ef4b15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3c0fdfe-1d9a-4d87-915f-1edd34d0b4f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fa7f128-b65c-41c1-96e1-953ceef600c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5afb615b-5a2f-4fb4-a5d6-c99b9ad9fd0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a83d094-6465-42d5-8cc4-757618360a51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33135d49-878d-451e-802f-dcb043c450cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d1ffb8b2-9399-42bf-a9b9-ae3d9c26c27b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7fefd00-0f8f-4683-9846-5e9499fbebf5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa7aaa60-dc6d-4014-be9a-85c7085e408f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "116d1a21-28b0-4fcf-addb-6aaf6163a6f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b2919a0-4ae2-4425-a290-098932454ba5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b0811aa-f887-4077-80c8-a0bb34c92b11"
            }
          }
        ]
      },
      {
        "id": "4dd76dcc-019f-42c6-afab-b66676a00e6d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7f2a77eb-61e2-4722-a29b-19dee4b38d93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3618d329-dee8-477a-99e7-e908067621ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e0e00dd-3858-4e26-affb-da0c37f66ff0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3bf521-4313-4a7d-b4c8-b83e8826abfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e23b48-5207-4f02-9549-88bac3b0de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa984090-b624-4b92-a78f-451fbfebadf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c10e19fc-eef3-424c-b0c6-60d4f78cdbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b56c0-4919-4675-9e88-827dede93272",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3409bc96-2dc7-4257-98ac-71118848b629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f02425-4ba4-4abd-a83d-127cbf0aa672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b319f66-193f-4213-b5c6-709ba6488681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40284094-4fa9-49e1-8e57-20cb2d237e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c294b83-7758-498a-95c7-abd3a2120f71",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1afdf1-4576-48a5-8de9-ca00a0f32048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6469dbf1-a360-4910-a8ba-874104c115de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407195cd-028e-4a22-8768-29e04f29620f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19b595c-5797-4d44-99a8-2ab455c004ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca29747-ad10-4499-834b-3a3a41e0a850",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83824eaa-4c15-4ebe-8d00-ac4bb2257ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b62a096-6c65-471d-bca3-f80a9404d6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a79ca4-9823-4af8-a55c-0d5ebe8022b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59e22016-e3d3-47af-b440-dbc8d716f5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e7d698-1a34-42cc-8242-23190505a724",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700c16ff-da05-458b-ba6f-5a6476fe5876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e483ecce-b486-427d-9d8b-ce2e0f13ae8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d3e055-3598-49e4-9479-b96946748f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d1d3b4-d1b9-43b7-94d1-2e1ea7680c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66417c41-cb46-4ab3-afd0-85e400469c07",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5c0dfc-31d7-47d8-8aa5-3bfca5f49266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bc0fb9-f091-49ef-a2cb-106219f9acc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca8661b-5e90-4393-aa35-fdc3dbdf2815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a86ba4c3-9297-44b8-a343-179704b9f99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dc9449-fbdd-4aba-9117-33c6e6f1fe08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec9e5dc-cb8c-49cb-9643-4cee572dc346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af727f1f-4b3b-4dc5-88b6-9cbf37994715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3f7d4c-0751-43a5-85e3-f10fd37f4b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3151545f-e776-407a-813a-4d16dc648f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0c9f3e-c127-4698-9f4d-9c711d0df98a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef4f03a-90e6-4886-91cd-e4cfebe97d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf95f17-ec09-4d24-957c-f0768e2b090a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e06f73-4737-4692-9899-3b036358d760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8183321-b44f-42f4-9ed3-40c5aad1b668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92257c76-8d62-45e1-8bd8-e72f608acb56",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1070e5-bad1-4e64-8328-f759e6584d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2c429b-a238-4aac-86fb-6c51eff314d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30752ac9-2613-4974-9ee3-ac5ab63dd1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f168d2b-1996-49e8-b0a7-aaff31f909ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad15bf6-fb4b-4eac-9bf2-7c861df3d87b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14a0ee-8e47-4072-af26-cbd962409da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a7ed4e-2c56-4d35-9b36-08ad647ba661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2fc8eb-eba2-4e75-89a9-4866b86f1142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e9718f-3001-462b-9356-71a894ea3481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91e249d-7473-403f-ba6a-7ce93b4c2301",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff510027-d4d0-4ed1-a239-f58165cd4598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6fc935-c913-4121-9b19-da6bc3413758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a21bb4-5442-4cbf-97ce-a12015a35f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "956d4503-c4bd-42b3-bd6c-2728595bd49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1854d59a-d0d0-4b40-867c-019e7aa1f1b1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42e76ef-fe21-4c4e-85d5-608f0e640b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f072f38-502b-41cf-96a6-ec2bcc7d1a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486f2c10-6420-433a-9e7d-2f6e08af6a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2cb9bcd-0f60-43d1-98ee-36520c65605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4d8da5-6fdd-42b8-8b09-e1991de867fb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f78df9-1a2a-4ca2-90ec-17f75e997ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66be886-9e10-448f-a396-08708e84be7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc532e80-ee54-4018-97a7-76552c69b248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a83c9a7-bc25-474a-8f66-f215d3c4cf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a09843-8081-402f-8b7d-075ed8c4f3c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15352150-79bb-4720-b046-e5badf012021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db37ffc-e4ed-4734-91d0-542b3324a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959d9452-c550-4efe-9dea-887f6b961bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5309589-47a2-4cc6-822e-d858dab4b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572bca86-b52a-4aed-90f5-121a92ad37da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c925f82-9532-46fc-80f7-229fba8d716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3162b0f-33f9-4879-9c50-2399226ff688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58680d05-7e60-4e6a-93d7-d8cbef53f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20f17de-15f1-44a1-b78d-931842a71caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f8e653-358e-4258-9e88-63f2eb00a4cd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1399ef-32c9-48e4-86b8-bfd9e1d8c9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54ff845-1b39-4ee0-8e37-5618c04f17a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad7b896-f424-4cf0-ae54-9d7792419cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1036966-aae0-49ab-bdce-b1e9bf87acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64c3ac5-2651-4d1c-b369-e3b47103b1f0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ddff2e-7907-4bf9-8e26-4d00ac1b4dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bc1b5a-b138-4120-9302-8a530bdee469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93274c42-9cc4-4684-8a4e-49f2798c9736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "64263439-c716-4d9a-ba79-7cc6b1462088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1e16c7-35bb-4702-8ae9-11234d4375e2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cbb092-2d6e-4eed-8672-077ad7475190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642f7f69-1ffa-4f55-a6c8-8bff1bab1435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7a87f0-25bb-4ad9-bf58-e0296001e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a076188c-0833-45cb-8f99-a06ca1029b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0811a9-fc73-4e29-b32b-ea53d2b54acb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c516f8-4226-4101-bce3-cdb29a64f904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76109da-668b-4210-a4b6-2b8ff6e4c535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f598654a-bfee-44bd-b211-fbfcd6e029c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c1006d-8eae-43ed-a1ba-0c258b6220af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b01540-cfe9-4f48-ab09-7b789638cc5d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e6aae7-a893-4f47-9d7c-8f7dd2380585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040bce1c-bdf8-4819-b3a0-8d56871c22e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266c6822-be4b-4b53-a661-87292f465a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac550200-ee26-459b-9dfd-f00fbbc4b930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0566cc9a-d52d-47ff-8dfe-9eac38205f26",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2e8412-fc62-4e09-8386-0af797c7c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50d6437-9158-49f2-9c82-06d0c722c5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5493042-4ab4-4051-8875-63c5fbdf24b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6707295-b022-4ba4-9e1a-442eb73e0073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942ba07d-cd44-49d1-9ca4-f55502c7146d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c47612-b724-4460-b357-82ec2e0b0203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64551de-fd0f-4148-91a2-70d94b0140e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9e6c1d-b797-4216-81c4-82bc80b47fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "313793da-06f0-4bf9-9220-67ba1876776f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b647e0-ff6f-441e-9bec-9d2ec8b157a4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88880c8b-aca6-4ddb-9aa4-321ac6c8ef76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba621a8-3e08-4c0b-b7a4-74be3ac47700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef91296-ff5f-46d6-8910-454bdb9a254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3364d48a-b032-4693-8104-ad44da6e4fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81af3577-e1ca-4c10-ab90-c647bcdff739",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22529ba-14b6-4dae-8f41-5259419700ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f324a898-d064-4405-a98a-f055978dfd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ebdeeb-c21a-4682-90ce-1c30846deb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6d4cfa-2525-4e5c-b27d-fedcd47c674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626b9c3-6cee-4063-b01f-602e0b0adc3a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0387beae-70d8-4cd0-980b-2e7c8a0cf89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4120ffe-ee03-4efb-84c0-0d0e18c3f3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83570075-03b8-4a9d-9e8e-5b36ae643f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f121e1df-1f79-4aa9-8255-036c3d168a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e03ea4-38a6-4259-a9e9-7b3a33648d6c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6273c1b-7aba-4a60-8914-a0f9c922c77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82611e89-b4c3-43dd-8a41-9fe43d2f2fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266599f5-2d2a-408c-91c6-e376cb0ff814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11412b4d-987d-41c4-b226-3f73d3d01759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdd77d9-1d02-4d71-ae68-ccf06325e272",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7474ff-7c3c-4d19-9738-27bea9977344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9cb1be-dfa0-4382-8b24-354fbeed1c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfd598a-1b8c-4be7-bf06-cb44b6c40ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d0660a-e0e1-4f16-91d4-62dac74e014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1f0c1b-0a5f-4966-827f-d61ba19dd799",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d662c9f-5c00-4d51-ae87-92095014b74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e51056-6f03-4c67-93a8-d72001b692b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a44b271-43f8-458f-ab40-f4574e92fcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35db147a-0abd-4d14-8cdb-ba15b374b093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2866763c-8c4d-4b8b-b4d0-c871257ab9f7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bbf065-4f4e-48db-9b39-de4acd386bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a346097a-c5b5-4ef4-bb87-3b36f8341fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc5eab7-44b8-412d-8f52-63f0b345b4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe17a54-be97-465e-87a5-23684532f01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc8e0a8-3d40-43a4-866d-83e7e24c8983",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794e3881-93c5-49f1-bd4d-1873a5eccc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1deecd-dee1-431e-9ce4-9dcc841f8302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3505dd-3c8d-445e-b278-0aec5dd1a1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f25e8c-42a0-419c-b50b-e4b0df521dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7a4d59-78a2-4ce5-9b64-eb0a724ea7c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59ce3c8-c688-4d87-8856-7a507564f100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaab5bd-bb60-4164-9881-c2dab894268e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba74456-80b3-46f8-a2b4-4165127a453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e9109a-073b-436e-a822-e25daf47fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5b954d-d3d3-40ec-8dd4-a17735801039",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd164689-2571-435d-ac29-435897fbb6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fab327-8366-4657-aa9c-ce2a46a600b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fabc806-399c-477a-8e40-a9316070913c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed61baad-695c-4926-be3d-6b2dad2defa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d03ef94-f358-45bd-8945-88bd2f8dd939",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40a906-871e-4029-8f20-2c1d365f61c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dc3743-10aa-43ca-a504-7ac2f1e80369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cfef60-07c3-4ddf-94e7-be09842f4357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "837267b3-6145-44c0-9c09-20b4ac1714a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc72a2c4-b976-442c-8718-887a0389f24c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73ce300-4467-437d-9372-253c294aa307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa03edf-a4cb-4058-9113-f8ab85dbf99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92fbd2d-4e6e-4c2f-b9f7-1fcabbffc917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b4d89b-1a1b-4caa-b504-4b883bbcc8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74df989b-61e3-4b1a-8e61-c8fc86d45956",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726f654a-3781-4822-b1c5-6bab9089ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd7da15-f190-48e5-b18f-2c9fd301730a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a55392-9833-4ba5-a3ab-6c83c7a1d2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf127272-4e1c-4ebd-8e6c-f4844b449479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26bb1c4-fa38-4231-809a-5185a7d5aaf8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fb5933-8c7b-41f2-aa19-6f38c761783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e569dac2-c84e-4f4b-b735-e8bf76f3a977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8f5eab-81db-408a-bf0a-38f249b8c566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20adf385-ee1b-4613-9b43-994dcbc4fdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e105216-31a1-430c-b73a-e804f53addf3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9258a3dd-99d0-435d-abcf-e15c348dbb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d64596-7d38-4cd2-819d-d300abc337a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd64a3f6-bfcb-49c2-8d0b-1fb493c84d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8cfe86-49a6-4cd7-93d3-f2bb385f63f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebb23370-fe6f-4824-b5d1-c9e373f34e06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f83994ae-37b0-44a1-8cf4-557d009cbe34",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad97e58c-0909-4b94-8f35-a2ed88f4623d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2e40d7-fbf5-4b96-a7f8-9b02e37c7371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea00d43-55ce-43fd-9605-e84e7e74892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fd4d606-afca-47e8-bd58-02e4f4d291ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35323680-c092-4fbe-831c-421dffe4af25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18cac1db-0c6e-4b75-b71e-f62765c531a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbe350d7-83b7-4491-9ec8-51815ba057d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77f60885-8ab8-4fda-85fc-5cc73182028e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e55b7843-46de-49a6-aadb-8b026f915804",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3f7586a-7d5f-4e8d-85c9-79271e535ec5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff46b2f7-6700-42e5-bc28-d27f2e0e3fc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4cdb39a-45f7-407c-ab3a-70e4f05c8e59"
            }
          }
        ]
      },
      {
        "id": "8bec0aa0-33b2-48c6-a5dc-5bbc1b7b8d4f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be76288e-a010-41bb-9554-9c1fda61669b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a693470-4b70-4e12-ba97-0c3252263b15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "343b032e-748c-4e15-870b-957365551a55",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd57159-4bf4-4633-b3b5-2fac631e3055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f5572e-3786-4af5-a826-b9205ddc1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493944fd-a37e-4da5-adf9-51880806e45f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4e41af-f8f2-4ae8-b000-c0b82ee2c439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcf93f7-ac6f-49ec-a9c8-cc0a7baa7fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12047a6-25e8-4779-a658-b47eb1a13928",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1e85cc-8eab-4d3a-9f4e-4fd4295e2329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de5e835-ceeb-4ede-b0f5-8291c865785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d06bea-85b1-45fa-8d52-24b6a892c40a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fff5e3-5960-49d0-9553-a1282bedd587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c39af84-0986-436e-aa60-7b2d712ecb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22687088-46ab-4887-b718-39f03a4de22e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70230bae-0f1c-4178-9895-9d7c9b033791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa6b953-2257-47f8-a3f4-c71734aefecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d77952-9479-4656-a19f-b79532dc01b8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fa1a2e-5a9d-4f9f-9c5e-e24f4d3db2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f5de1a-1711-4575-975b-713670a1c50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03ea77f-b8f2-49ac-b558-9e76e5627342",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53857a8-3cde-424e-8a9f-19b8d6a1579b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ac13d3-6a08-48b4-9dae-36ab83025ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4340acb-1f56-49dd-ae60-4403f9363be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60849aa9-ee79-4f3d-8c40-cf3e19165c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10af3db-b60f-4d35-8999-4544c7171207",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2810a3-4836-4418-889c-9c57661d238f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40f5568-d2fd-4918-9498-72232089c254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caa59c8-e77b-4729-96ed-d77922103d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99d0296-4a01-4f8c-a7f2-0e9e102ffaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17b60fc-4cf9-46fc-9039-06c7ef7fca50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f0e382-ac7a-48ba-a08b-b354d0b10244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ced2f9-342c-46eb-b441-a500c38b0b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe1014a-7494-48a0-9ca4-e4826d273fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba443cd-66bb-46b0-8f3a-e0b3eae186f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e8813-f76c-41d6-a056-afd71759eeac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66128286-9291-4135-b271-f408277af94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988d2e77-7050-4139-ad7d-00f90b7c783e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13177a6a-f505-4b14-ab45-e553ea4b52c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87505370-c430-4c27-bf74-3232f999cb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a66b3f-8e9a-4d2d-8e3d-c6a7e31a4810",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592f777e-2323-4e0b-8793-9f9cd925762a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdd4da9-33d8-42fb-b1ff-ba50b0486918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cd38b1-9b2a-4e1d-af9d-c65942c55c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e0ec36-8f43-4641-b984-49ee676c32b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99316910-5145-41b8-b1e0-11426410013f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da2e41a-057b-47ab-9fc3-22275565472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569dbf16-408c-4d04-9625-5de97d0e30bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11550099-3652-4dda-af62-bd114d6bd4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02d0646-ccb3-4deb-bc58-0eecda9bf160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476e540c-ebe4-41de-a425-6b732f1207ec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ea3fc2-1055-4c8b-aac1-984b3b985d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a04750b-4588-47c5-bf17-5a36c0a51a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617bce0-c731-4a91-9d04-b2593027e40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f1ba42-a755-4336-830d-3089daeaab12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb5b035-2923-414d-8a74-429a05178059",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22109b54-b526-4ca6-9c1e-3e3ec27d03a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a177af-b209-4e49-ae98-7bd5ae8823d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "069eede5-879a-42cc-b65f-dc0622975df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8112f2c0-34de-4ef4-8f2a-8a2abb862701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7224767a-3bfc-4279-bfc9-d14d7ada14b1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f667889-31df-4c3e-89e1-7c8bdbb8663c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b421d655-cd50-4956-91a3-64df8a8c5af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e28043-b38d-483b-b223-cd2008e3c2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd23a6be-765f-49f8-9b53-6a681602a8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fdbfd8-8c92-4806-91e8-1fabb33a8897",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd54e3b-e8d5-434d-a919-03c9bfa76aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33ed6bc-d104-4386-a2be-eb8b4242d41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dd4e08-69f9-49f4-aded-e36a6304ca86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f368d3c-a845-4d8b-b6cf-082dbe775994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bbc343-6670-465a-b00c-968f7b43ea4c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1d08a7-b0dc-439b-a01b-bc9c188723e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70baf62-3648-4362-81c2-7c9d67b37e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528e4eaf-f22b-4380-b5a7-42a259b97a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7402d984-2193-49da-8587-44c3d29749cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fba384-ab18-4445-ae4a-3f8daf4a31d2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137e3d63-0f75-46c8-ab4f-244766e32daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6cd75f-eb8d-437a-945a-2930ec9f5422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5785ae-4c80-4ca9-8cd7-178aa2842df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b77c395-548c-43ec-851d-b007e49fcff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0137db-670a-46f6-83c5-0cfa6a5616cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6332ff03-a18a-4663-9d51-eae7c0d7b4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d4535c-adbc-4bfd-b68c-9102c5b8586c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0a2ddc-df95-4de9-81ae-c5d3ade013c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d9a7bd-e404-4673-a775-120c5b834b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9971638d-4c51-404b-bfd3-78886b58be3c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1f9309-6ccf-423c-858f-a0cd98f55b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f4a2d6-8961-432b-b00a-b9f9a835a1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde08ce-279c-476d-ab9f-4525c361c10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6768751a-4a13-4fdb-a593-5751c0171246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd277e3e-3dab-4c1a-be6c-8270120db988",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d77ac6-9c1e-424f-a6a9-b1d40310562b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4835a40b-10b2-4b46-87a4-d65a115ccd5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eeb83f-2cff-4d45-a423-2183b7aa8fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07accc5-bfd9-4a8a-8865-3684c21181fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4a142f-8181-4f44-97a2-b17684d77196",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a35f3a-500a-477e-a377-fee65c423c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d67dedf-1827-447c-9365-bbccd2689b7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3429311c-9a27-44d8-8ba3-852ffa9b669b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffabbfe-d887-4370-a2ab-94946dcd30aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e015e851-8fc8-4b44-8abb-81646c5ce598",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a7447f-6707-4211-b36a-f0faeb48525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee1913e-b991-4189-9610-b08734c3ab82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21169062-66fc-483f-b529-9a8691734c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe60c0c-a99f-4900-8327-505098244a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e1c455-06cf-4eb1-a4e3-29e62c35b687",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dc490b-148a-454e-bec8-8776e0b7d3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804807c2-523d-4b19-941a-95865af064b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8ee0dd-c31e-4f3a-a7b9-86a5704abab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29984f0-c01e-4780-8225-f009d4ebcf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b8ffe7-0cb9-456b-8d46-c11a25c8f4d3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3065cfb0-e68e-40c7-b127-e610a1e9cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8a0395-29ff-478f-b8e7-74e2078804b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8bcdd6-aa07-47b0-81a2-5fa3759ad86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0a880e-1d36-43a9-a923-dadaa16d2049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5847c322-e078-44c0-b2b5-e053e3fa4688",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a937aa-6e38-44b7-b460-a117ab01d8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99fa1549-a0c3-453e-ba93-bbfe8e1b0966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34de2c6-3f16-4526-8807-f8077476d024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930c52d7-808f-4415-be39-bf7a0377e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7baefc3-701c-4391-88ab-1625752a551c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbe1170-3f19-419b-995d-95ce6a517a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a06b323-83e6-4309-8ba1-93a14c07ec3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f890e7a7-6c99-440d-b958-c7b7a885903b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcb5abd-c399-4daf-be61-4b7524b29080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d4884a-bca6-4b11-9fcc-934ac98b6ad2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66240cec-419b-4ba8-86b3-56c3495cb3e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a88468-bf29-495f-9810-d4dfa4c8565f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33053665-4a2f-46d5-9a62-37840eb7d50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a3651f-8967-4141-84a3-b2be973c4460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03b6c9d-4bd8-4f72-a11a-13d85337e312",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eafe7c-0028-4aef-9cc0-ab9b44472328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea1854a-5ee5-472e-97d6-0425e613d297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d6a095-8a48-40c3-819e-bf97f9200b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb898745-0481-4d00-8149-9bffe9b8b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294f9bd1-2c4d-44c5-9f5d-6d4790c0fe8b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ef9d90-1908-4ce9-a30b-d27d70b112d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a62a5d-174a-41ae-9499-a973b319088b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b1b9f-408b-43eb-8b11-88cf83cd56f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28935c2-b0d2-4dfa-bee1-02c3098394cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c03a40-f7d1-4890-8881-8bc152003418",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff16c63-833d-413e-91da-b3879cd8fa24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59acb37c-03fa-4818-aa4f-302802cb840a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42b1ebe-6dff-48d1-add8-2ff64e2b547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa51237-3011-449e-90c9-59755e6b6bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6bd758-d5ea-49ff-b7b1-5bb3b5249057",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4c3c6d-59b0-4333-8e51-065f417c61aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95983290-261b-4b8d-8b7d-dec287aed568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0f1b00-ff45-4615-8c21-46ba55498209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8901bb-25b7-4e84-ad26-104b05fb529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ebc97a7-ca9f-4aef-8c72-e17ae1113433",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4968b611-999d-4463-9f1a-4c7343ca2b24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9299af39-5a89-4135-9903-1cca50ceeb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969abfa1-6e44-4ad2-acb8-80284031e9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c878f1d-d6f1-4229-83e5-9c78f9b2e39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ec0701-f7b8-4493-baef-a375166302f2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b74443b-d054-43de-9530-96f4d0e1eba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a54898-91c7-468b-b44a-df78b48c424a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d980f1-cff6-4e5a-9538-8c93502e5dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b63b969-e4a7-4e52-bbf8-0cbf0bb9e429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24d965a-9ddb-427b-ac76-bd2808ca57ec",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085eb04d-30d3-48b3-bf3a-1c393d95e7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d531ae-8f73-4e4f-8612-d333d2128b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7533614-3ab1-4bd3-90df-e51270bde4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc3445c-e8c6-4037-8b3d-cc6c38b0e394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b495206e-4af6-43e2-b37c-89062b3851a5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7356770-c440-4a20-9853-f7bf6f89e785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ebd565-1fdd-4de7-afcb-2d869cdc7100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6030f52c-dad1-441f-aba1-ed3d9614493e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7bb179e-ed26-4e55-b732-b0b3b9b4035c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d5ccf9-0ab1-4ea6-8073-fca157a81ade",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869c30a5-ae2e-4166-a82c-6e518ebc7c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dcdeeb-e5f3-496c-9796-fb0f0232135f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba791b7c-795e-4c9c-95bb-6e104c6d770d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39659be2-7230-420b-9d33-73cdecbe16c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feed82b8-c41b-421e-b501-cd0c619c421a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d1bf9-5bed-4d8f-a2b4-b249a489cf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75543eca-5082-41af-84ef-599409914e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d157a86b-b0cb-4e40-9e53-3ef06b0d32b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a900b99c-629a-4769-81a6-6b1dea7c0390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cc1fab-0696-42bb-bd4c-3dcdc35262e4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae08ab1-306b-497c-b93f-3551dc06ee79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4407b60-3979-4e9f-ac36-61f396019ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185a50c7-617d-4d82-9630-84a3e5c6939e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f36b14e-6e2d-466a-a5fc-40999fe0604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8a6d34-bd22-4335-8b51-6410f24783f4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb24fde-1254-4ad6-ba96-744ed6d7994c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a09e6e7-9f83-4f89-97f0-c3354c9a3ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc2cb32-237f-489a-9a01-9b445b41fdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1feccf6-bf86-4153-b7de-fc2c56c039b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c655c634-bce9-4984-a7de-581a6f350b30",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a44e3-e206-4f63-b1ab-24eb5c22926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c437459-f22b-41f9-808a-8ffdc75a2362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80849538-6d22-41d0-b10a-01fb3c7f1e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d723eae-fcc8-44b8-ab00-8f0512b113f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24433ed3-0bd2-447e-8b77-78b0eb7f5871",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ac91df-023b-4072-8b02-8c1e63358b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83022c9c-9370-4a19-b023-82f3ad62c44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb5f9de-d877-4261-a2d2-cd2b533f3904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61adbc2e-a1a1-4822-9804-78d9b99d20f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf74dd-9b7b-422c-98da-59c7a715f6f4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32978b3-2a92-4870-ada6-0c25d9484a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f13201-4c82-4a44-86f5-c128f23a3a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf80b69-0dbc-4993-aef4-1f0aa3579593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b993c65-dd83-47b0-b12f-a501728b52d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9462421-71b0-489b-988a-b11692b1412e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f366f2bb-81b3-47f0-b2f5-4be6ef4c92c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49aa18a-d040-4ba2-85ac-8f10a6326a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096ec23-79d7-4473-97ac-2379a163dda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382afe3d-eb23-4797-b10d-67e79aa048bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219ab4b9-19e3-4a50-840d-624b47b4136a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63824cd-e416-4346-82fa-1aef61d5c548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b84b976-15ba-4f29-9a20-a7ef8a7c5115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0d58bc-52b9-4e47-a2de-b562332ab8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e42b829-ab74-4e9b-a44c-53c3cb5c5173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20d32ec-0e00-47d2-9bf1-1d65b6200053",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b6be8-a71a-485d-b42d-0474a76b2ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3281c674-e0aa-408e-8988-ece1561328a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c771f6-af53-4f1d-8706-c470b47600f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c08f57-f671-479e-9d32-463b1b2fad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc63ec5-1cdb-4770-8765-752540922a96",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26358eea-5f7e-497b-8a2f-1eb69deedb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310755e3-2d86-4dcd-80cb-74ff34b6552e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799a98ab-1b9c-4a43-9f53-3f9e6de18a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039afdeb-4de9-4c46-bbdc-39e8a8dff384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cabe9c-2c12-4c39-81e2-6b0c39e4125d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4208a093-4c59-4f07-bc2e-984608d1d624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb62e12-ca26-4704-9852-a6d599a5f059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19e2d67-0a92-4579-87e3-7a41067b02d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9a8169-ec4a-4915-8570-59972f5d6640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694271a4-30e2-40f1-98ff-16ed6a480e47",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f0c18b-ed97-4917-b469-a4b636ff69ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af911498-85b6-48a5-973e-04ffc12907ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63686ce4-e154-4d8b-9126-698e959422cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2923d242-e159-4013-a88a-6298b525a5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35a9510-8eba-4ea2-a985-a08a8c2d033e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14146f0-b678-42c4-9bd9-e4f77fbb01fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d130398b-5be1-4a4b-863c-941a49d787e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65115724-3f4c-4dfe-bdbc-86b5d7b332a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b62212-1cb6-4d0e-abca-e1145252d8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab70b95d-913a-4c5a-b981-c7d37939d3fd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61738d39-54ba-4e88-b77a-5c82e6698674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a173d8-c278-411b-ba01-e89c12f42d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca7d6d1-ff8e-45dc-9a58-35b376087ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf81b2a1-5c11-4cfa-ba64-279234b49ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2de871-63f4-4aba-844f-4ab1336630c6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6b2d5b-2515-4187-b03d-031d0351b665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6ef2c2-7a11-4b8d-a1c7-258ce7f6bcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f165e8e-9285-4a04-8498-31e7c3414d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fdab8c-ad18-4904-85f9-bd498b762d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f722d96-fd44-49a7-8670-f33427f64aef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8671ab03-31fb-426e-87d6-35bfc731635c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2292730-5832-4321-bcec-7307c4e8cc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954ba64e-1e32-4058-989f-1aa034c5ec6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d455bd-928f-447c-8cf9-45869ed092ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b846e629-17b9-4ee9-8f5f-4a0a89c897f6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10db4110-bd70-4cc3-8acd-d102462df20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329ace28-eabc-4c51-913b-3fdafb949b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a70572c-9fdd-44ef-a410-f5b3fb47effe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c03fc2-c187-4d45-bde2-7331ca22501f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708330f9-01b7-4fa3-a420-433c15b98d58",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ed5634-cb24-4576-b05a-7fa2e1c0d7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53791c34-d0a8-4518-b96d-73c04c99b0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c081a0-7320-4485-a429-41411a07827d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def9be6b-5ca5-490b-82e2-d5a88ac33e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b52f7a-ef8e-49df-80ad-f0b734d0cdd9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bc7641-213d-428e-8e56-c829fef2ee20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478b7bdf-d588-49fb-b731-4eaf4933904c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9222bca5-62ed-426c-8d24-a996383c240b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046df11b-a5d7-4b98-b2b4-4a58670e8e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c40b16-4da8-468a-ad11-310e4821e30f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5b1cbd-a090-4319-92d4-b0b54364c0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecb5bcf-bb02-4b9b-bb21-1ea8df75e964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ff50fc-8f23-45eb-a478-d262bc7e5c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ac2f5e-f1bc-4e88-a426-6d8ff8af5946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9389ab-3d3e-46b0-abef-48849dace444",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f116215-f1ef-43ad-9303-f4112d9aa209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce171f4-cdef-4365-b0a5-6ff4616916d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5344441-e569-4b60-aa97-24521a30a3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2e7e59-31f3-4965-aeff-0142d4d84d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c328921-5f5d-41a5-a6b1-4c074588459c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d673b9-6292-4853-a91e-ef73731179ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099f505f-7918-4a86-a9c2-26f68c646bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32017d2d-42ed-4168-95b0-4111d636dbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b463821-1ed4-42c6-90aa-f8f8312841c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d5b123-3443-4714-a89c-fd28baffcf60",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7aa6de-857b-4d15-b816-67dfef0978bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daa0c19-950d-4eaf-b1fc-f34111223858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04ea3dc-a8a1-4d29-a014-fab243822be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2862d0e-9420-4b7f-acdf-5ccfe33a9da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a07cb5-57ba-409f-b80b-bf3ede99fac3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bb92db-a21e-4409-8a6f-ba9801d25eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8394060b-07f3-4233-95a5-0e967624ad74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3197140b-af93-4e39-8d6e-29606ae0835e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051160eb-4ce2-4661-b05d-bd2281608967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e39fa46-5014-4f31-9142-019d53531434",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24864e7-29bc-494c-a0f3-09c1733bf35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2875d25a-3275-4477-8791-2d3b9da3fba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32bf481-acff-4932-bfc6-d1edcc892c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefb21c6-0620-4fb3-829a-71fe94d7b8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473b2fd6-840c-421a-a55b-83a61baa1fa0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d691224-039a-44e3-85e3-dcd56e1d7e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e537e5-78ab-4a12-b370-bb2129e1d890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec11c7a-8ea2-4190-a88a-32b0c5efc402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92f5d68-35bd-4857-b1be-78f44bdff4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513754bb-8151-4bcb-8503-1921cbb3c736",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd9c6d-82cc-43aa-9dfc-9e2a5a5ecb8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb77caf4-6084-489d-a3ad-330bd88cdb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da584237-bf94-4f65-bb22-a1f4e1bfb59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018c517b-2aa5-4b7e-8ef7-0c93808c6f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c7eae0-76d5-4d10-be45-56ad162f88c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f7a42d-08ff-494e-bc6a-8e7d22eb8fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae006551-f969-475f-92d4-5a13570eaaf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab5a904-d075-4a24-aae6-9630b9efce37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533f4a91-281b-409b-9527-211e8a9bec98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98478803-f187-4a96-a884-36a3489e36b3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d425de-597d-4e11-ba25-1ba2f7a2b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ad0111-6497-48c9-b577-7ad48eb64254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0d7f23-6078-40ea-b0e0-add33c4aa174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a2382d-ad6f-4dda-8b7e-006a39b30467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b8f590-2e16-473e-bee1-b8b1d22e69be",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eb1cb7-dcf1-4acb-ae6e-0a07f4d7971e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecaff1d5-9013-4a7e-af9a-e8958964e697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b1a22f-c6e5-4ba0-8d25-4aafbc687b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e5720e-0fab-401f-a3ff-6bac9f600de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e528f9-5885-4fa4-8b3e-66bcb70a3ab8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46528cf6-323b-45ce-b6ca-33723ccbaea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473e022b-b534-47d4-be5e-a2f6b3ddd474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7240b739-d4ab-4e6f-b1c1-28eb85ef393c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed511b7-bc1d-4f69-b6ea-b78d96017af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb76b3b7-47d4-4656-b39c-7f398ddb71b3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e750d9c4-5ebc-4488-b86e-ad0438de4edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d41959e-b922-4c0c-92ba-47b874ee46bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94518b7b-5878-420c-9fe4-3cddc81ed40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87a363a-7c7c-4337-bfed-ee0c9575120c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fa8d72-3eee-4447-b515-5a99b2eec8f7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051fc8b4-9600-4ea7-a239-47942b1b1daf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a39b49-19e3-4e17-b6c0-ce22aa7f5ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e2c729-4da2-4b03-b971-432f3c1ee414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5c6c41-33d4-4d59-b4eb-44507fe04e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528a6664-c3b8-4730-a7ae-cd64adf037fe",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34c6381-1a72-4299-b8c8-21b3316faa6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5347cd6b-eb3d-4a53-9488-48034c695cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82ed348-1738-4263-9335-c532d8720ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d195e5f-3729-4fdb-8438-a1d307030a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0022a801-5037-4ae2-a79a-ca65a8ec2b97",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9d29e0-a621-4ad3-abed-379fb4322c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f9d7c5-af09-4984-9e25-bd8a39eb691e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339f312a-e158-481c-8600-d9ce6258cb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fdea0b-48ba-437c-a97c-c91eb1428407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457f831e-e662-4dc4-8d6e-4e6a48e31c00",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59cd453-052e-4133-b615-d967ad6d25b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b775316b-7f4b-41b2-8194-c2a1fda43608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5015aa46-fd76-4bfd-a99e-5f18b771df42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4d22e5-4735-436f-a6c6-f02d2d3cfc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead41703-5362-41d6-a92c-6a8e1b3f1dcf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3bb1ab-1a9f-45a9-b262-38e7064db6b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ff70cb-fe11-465e-9500-0970573fcc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff432de-a8af-4adf-8d23-150cfa5621c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4b4b11-c910-46f3-b854-a468ab53620e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d7eacd-e38d-4e76-b2f4-7ff25ab0bf48",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c522f7f2-33ca-41be-9979-acb26ddda2a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f10452-5695-4fd5-b41b-d782b1e21eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ccdc1d-4a55-43de-8852-b6da71d8d22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdab94f-8486-4a6b-8f43-d90206d37faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce60c81c-3b1e-4597-8523-ae3719aceed0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677a92c4-b5b6-4eed-9a94-f5449d0413e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68a33ceb-6a97-4a41-abc7-6224f8718b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1691ede0-cc9d-475c-92f4-4ae3f1d46bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ae5508-75bf-4c73-aead-744ddf294502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096df5ae-2261-41d8-aa86-5c2af5a142f6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c64f8a-61b2-4504-827b-eba2189a9ae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e228534-c75f-4973-b72f-85de01d37f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d91e1-618d-4fed-a379-0c64c92ef734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143d6155-c1ff-4092-8ec4-eae6515fe81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb55ff-736d-48c2-859e-1b223e225ff0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b345d13c-9e95-4af3-a902-b335a63dfd13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "648cce64-33d1-4a87-ad64-abc840b5d888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d6d5a8-9942-40b3-92a5-f089ba4792b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1b4250-32e7-4b90-9446-13b0522efb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af05995-a7b6-4463-bb5c-4f0500e3ba59",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a26c203-db14-411a-aa04-1bdcf15e0a81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9078ff0d-367f-454f-9cfd-a7500e8bf480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907b342b-2863-4e8a-a6c1-fe3fbf37266e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0509f6d3-b105-4edb-970a-01b9a7d1c926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf55d67-a2fc-4939-bebf-cb48808dda49",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032eb386-3f7e-4ab4-ad4b-22101e1f7523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcf0dbe6-ba5c-4e56-a408-3b09b40eeb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a23c5a-c82d-442a-972f-8619f0fb67a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122b22a6-1edf-40aa-8a32-8bcd29efa368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d455510-a4a0-44e8-9990-008ca6968be6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5757dd-c959-4efa-8c34-13f0ff3d4a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973a6784-1180-4705-b41e-60015e9e6937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0715e2b-4ec5-4532-a9bb-b6fe0ece1b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b471f143-07e0-4e2d-a515-67f0e1e50c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a739ce84-887a-45e9-8042-1854237e6771",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d4629f-9fae-450d-b571-7bf96e2bcc25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d01ab3-4d2e-4e4b-9035-328d13ee2885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cc7a04-bb42-4cdb-bc53-9153346b6a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c10f94-4f2e-4189-a3a0-50ed9d5b5c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e6ed29-752a-43bd-87e9-b1f8fc388996",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aed528-2f68-4424-83e2-b8d648607472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756a6b1d-89c7-4a0c-b1e2-29b5952ca0bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cda7588-9615-45d6-86f1-343170e45e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7256fd-297b-49f9-b878-2349b42e642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d354702b-4e6d-4a9c-9cb5-a95a0f25d213",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f6b8f7-f02a-4d91-85b9-998e1f8116ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0988afb1-16de-4d6d-9f27-c588786739e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3a5088-5a0c-4cdd-ba7c-0cff3fa4c750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1743722a-fd46-4618-9eb9-6cad0c6e5f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372b323f-0173-4589-93e5-93f7f091a6e9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e245183f-63ac-48e8-a55f-c38c986cacf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57882ecc-c1b1-4d3e-9039-7968ed4c8de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fd1687-86ff-455d-a1ef-355b63bcf1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d07eaf-ab47-411f-b70f-838e38788e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d4d8b2-b09c-4b3f-82c5-5259958e8214",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cca5bf-6295-456b-8952-2f90b5ad54c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4411c93-9649-4f25-84f6-380185378f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1b15ad-68d0-41f6-92a4-5a8f022084a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4b5542-01ac-45b9-978f-5b8b882e1fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b573472-0deb-47dd-8d54-2649b558dad0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac22364-d596-4654-b909-55ca693c47d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7651fc19-19a2-4ea9-ace3-877f33655770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe8e9a-0ef8-459f-a2e9-da5e51987ec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fba482e-b316-440f-b146-e7d738352912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d008f3d8-e8a1-4675-abf9-b0d2a7af1cb9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe55960-f074-4616-abe0-d0eaa927996d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a518f7b2-23fd-44b0-8d54-2076b5fa83b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da47ceaa-beab-44c9-ba10-48349c214437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11018c2b-09a0-444e-9e3c-8fafe942dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf14e73-50bd-4c69-9de3-de570cd71cff",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f14290-ece8-4a24-8c3c-e326b42be96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7b2528-7051-4c46-9c7a-93bb9da18251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ad62f-b85c-48bb-98e8-77d79f85eed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5a0553-ea38-4279-a824-186a15ce02cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9008be-eb0c-4eab-8e93-24d947da3c09",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448c8ebc-f4a7-44a6-8048-40bfd2b6d342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d20c4be-f244-4bc6-b63e-ecabd5105907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8452ce2f-715b-4fd4-b188-5834ee2eb057",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c580ea2-3082-4941-a703-dc05b26e92be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d73ac43-fe65-45f4-a906-8878272560c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382d2d25-07b5-49b1-908c-22155c6821ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d77c074-2a80-458d-bde7-efe5fcacc6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc23eee-1363-4aab-8226-a5d233ef32e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb91221-439c-4f10-b989-1486971a5110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78cc80c-9c16-4f82-83d1-f52389c9656d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e33283-4e28-4070-8e18-1dbee101bdeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a10ecb4-9c87-4b2d-8b1b-432a1d206b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e67d065-ffe4-48c9-a4b3-50696ff9807f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ce6d25-62b1-4ccc-a60d-da62d5446467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c829695-9e1e-4d65-93bd-663295aa1e27",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1325f90-ab5e-4c42-a07e-80edb45b2084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0d2da0-d431-48c1-9dd0-1ab4f9f5a058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa13c09-bd6f-450e-bdb7-08e5f9baf0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163ddcaa-1c82-442f-a4c3-2c7e45812440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfd16d6-c856-455b-bd19-93e8e55cdd4d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec38cb05-9906-4ccc-b522-b077d894538f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d745cf1a-6fa4-44dc-aa46-46be4f35fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e9b003-984b-46dc-a4c1-406e684199d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56416f7e-eaad-49f6-932d-ca58160985b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116d9531-8db8-4e58-a712-716b37cad697",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cebcab-9b61-4736-9536-a799d79ef8e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6770e24b-de48-4d3e-9e9a-79f41ce6da46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c27ad33-41b3-4a42-a7c5-6718d867a4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc084ab-802d-424d-bed5-79a36e3c7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26e2575-0b14-4cf0-8f31-ae2932212bba",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3889767d-d178-4544-bf46-fe1580b3359c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6fd26df-a716-4783-bbeb-134c9ab71990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3891f6-7e57-4364-a26d-832279360314",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961b06d4-10aa-4899-90f4-053b80986fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6145357-efde-4c15-8156-a7d032caaf34",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e02008-46a4-4084-b426-93d3ac447afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed0b945-5b56-42ef-ac61-b696804deb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1ea997-025b-450a-94ad-4dc30f3a126e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ba6312-53b4-4f18-9d79-b4fc7ab3393f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39939283-ed58-4d1f-ba6e-c3c1fbeabcbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "313f7971-a07f-4050-b95f-e4a12e202564"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68637295-554c-48bf-836d-2bc74b2179b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57d0e20c-eafd-464f-9669-d6f380553e89"
                    }
                  }
                ]
              },
              {
                "id": "be430da0-3d4c-4319-9117-54179abafd34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cecf36d7-5584-431f-acb7-c763c5946ed0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be97dc3-6369-467f-b49a-7af28b779eb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "00623119-5f34-4805-a1a0-880c78e30af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e525ee-e694-42a6-b8fb-26d2e8f34664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cbf3c90-5972-4494-a2ba-139bd97938a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2246c779-e901-40b5-9a66-8b7b98baaeee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38e140e5-99e6-4739-9eb1-8d79449b7307"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86e87a20-e941-4a6a-ab70-3e8e4f175bf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c76c1f22-d2a1-4fd4-8177-53b97fa51bb6"
                    }
                  }
                ]
              },
              {
                "id": "f404de23-3acd-4614-936a-59e4a02c2ee3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c35869c0-823f-4531-af97-48aa6b910c0a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b8f61c-00ef-431c-b496-62ac63c010cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c579d8c3-8ea0-4cf0-9365-5763e09c2213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a30195c-a5e2-4070-84b1-5b5eb1c3e081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32eca69c-cbf2-43d5-8c21-fa12b8f5db87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a061f8b6-b3b9-4e64-a396-66801c1c9395",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c287118-9881-4749-a00c-c64b309df374",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06cfdf35-d632-4801-ae2e-a9902ba11c5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5558641e-d92e-49a8-8307-1bed0359ac3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6924f530-47af-4b44-8eab-73936a714604",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "016a8f94-7c63-49ee-84ac-2d1cc50bca19"
                    }
                  }
                ]
              },
              {
                "id": "99a03cda-a5ac-4686-b9e3-4e29ecf58aed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17eba0fa-9253-43a5-ad96-a8090d2c75c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22ba7094-47da-4b19-8f86-5ff13d790363"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ece9e6bc-4618-415b-9194-a800ddae39ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b944584e-d42d-4792-8ccb-1a95603be179"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3026f362-dbc2-43ff-900c-9412b425c7dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d079aa03-325b-48d7-bafa-2f28a75ca1b3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a36c5fe9-e316-4d9a-a29d-6411a638201e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "973a010b-feaf-4fec-a5aa-10da642d3519"
            }
          }
        ]
      },
      {
        "id": "2fc7cc0a-8e35-425a-878d-823f107d2364",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d19f81ea-71c7-40b6-a6b7-9043756468bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44d8b044-d4e9-43a5-be0e-39062ab9d6e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d443e8f8-4c86-4f37-968c-d86aadfeab0e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df1e8e-f84b-48eb-90ff-b1da3fa834e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "598a0035-86be-4527-a134-f45b90962149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30293659-a133-4fa8-a266-cc7edc6cf840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "577471b3-a962-4f42-b129-af076745df47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c562b1e4-96a9-442f-bfc4-019214d704ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8fcaa27-5398-425b-86be-138bc7461c25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "898f722c-7fb4-4356-b928-048dbe732532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1690af34-a9c0-433b-9a3d-aafd508ddcd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e61e117-4bb5-458b-9fbf-1987043c62d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5778c61f-8a8d-4a57-ad6e-3f3cc4519c3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1f95f82-88bf-49b2-a484-a3149b5827cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d880efe9-9163-4f04-8711-60b41b462c26"
            }
          }
        ]
      },
      {
        "id": "50f01991-61f6-491f-9562-df641e1772bf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3447bbad-2ea4-442b-a695-dd4d6a4188fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f0618ea-d194-434c-9fee-5eaa20690ec1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba5e55de-5dcd-4bf1-bcee-6cabff7e36b8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c268d-0aaf-4ad8-b146-aade29d7a3b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f3368cb-04e2-41d5-bd0a-8f6ee24f787e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339d6314-1d42-4a15-9edc-984aef02a6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb1c28a3-1f19-4dfb-a069-a79aefebeb1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "602e20a2-5adb-43b9-93b0-d3942b6a7270",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d4d07cd-d14e-4f96-b136-e5e2654cf584"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f2c1a04-987c-479c-8867-04e866de6571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "295849e4-447a-47a3-ad2c-4d44c4e26c42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad2b9ae0-21ee-45b9-9c1e-bb9bdd2cca1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "321a3901-7c18-4dcc-9cfd-feb3fcb49d4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdcc8c2d-dfe1-4c61-a060-5647349b18f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47c32224-fbdd-4ef4-8f6f-d09c4f8afec4"
            }
          }
        ]
      },
      {
        "id": "046b56ad-62ec-41ca-ba90-88b83be4f339",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0034cba1-aba8-4f85-9968-716efc003ccd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc18da71-2699-415e-b50c-35f63aaf3a3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "036a8559-af45-4f57-a48a-4edcc4e03f63",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176ce319-db83-41ed-a454-f9cab0bdcf08",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f48b015-051b-4e5a-8233-1eb28a04dfe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023b303-a33f-4d65-becb-19db6f30dcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2600f8a0-4bb9-4c3b-8ae8-1e1281f5b46f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3629225-67d0-44ff-a488-816445673cbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da66bac4-d0b2-4b9e-8fa1-9f8647c1763d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fb68cd3-7f99-405e-a04c-8367d0069c76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ce6a3cd-bf61-485e-889c-b6679c8367ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e10b0024-de63-4697-8e1a-79ad99466d5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd442014-1918-4406-88be-aeec46a87497"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8b4f297-465d-4e83-9717-6afc8f3e7303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27f3be73-4983-4e49-8240-619502f1145a"
            }
          }
        ]
      },
      {
        "id": "c95a185c-97f5-4d59-86e5-19aebb9d3e8f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90ddc70-1e2c-446c-ad3a-9941276f4390",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58e1751e-204d-4fc5-a8d6-7a274ca768f1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1a95f0c6-f5a1-433e-b98e-9591f6a96641",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e34a7f7-2fbc-46f8-b45e-f5081422ef93",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eae18912-f7c4-4a89-b9e5-3253a82a0aa4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 435.86904761904736,
      "responseMin": 6,
      "responseMax": 14489,
      "responseSd": 2147.802321494356,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726361389799,
      "completed": 1726361508166
    },
    "executions": [
      {
        "id": "8acdeefc-112d-4e6a-94d9-9e4201c3a53d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "49cb3fbb-2e18-43f4-b9fe-8ef8566d6455",
          "httpRequestId": "4f389d49-5be9-40c1-bfdc-a4790a99ffed"
        },
        "item": {
          "id": "8acdeefc-112d-4e6a-94d9-9e4201c3a53d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b9243690-3e19-4f0c-988d-3b6146fafd85",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "735fa653-a20f-45a0-b096-7420ad47e8cc",
        "cursor": {
          "ref": "0362c642-4575-4f93-8bc0-60c723b1ca96",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "58c0e1db-6394-4ab3-8444-dfbdd364bf18"
        },
        "item": {
          "id": "735fa653-a20f-45a0-b096-7420ad47e8cc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f5e917e8-7931-4230-8013-283889f89f83",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b25aba2f-629d-489f-bade-52b13c3d4884",
        "cursor": {
          "ref": "a3d33c31-3096-432a-8a1d-fb80fc469176",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2fc4b39e-606f-487a-91a3-9b447d33a868"
        },
        "item": {
          "id": "b25aba2f-629d-489f-bade-52b13c3d4884",
          "name": "did_json"
        },
        "response": {
          "id": "b43d0f02-cf74-4f07-b32f-70fd349315ff",
          "status": "OK",
          "code": 200,
          "responseTime": 268,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfecda2-f0bf-4173-a1cd-8f27f8bf0e68",
        "cursor": {
          "ref": "92e8f123-964b-4781-a83b-552078163a8b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "754345c7-8a85-4258-aea4-885ed797b44d"
        },
        "item": {
          "id": "fdfecda2-f0bf-4173-a1cd-8f27f8bf0e68",
          "name": "did:invalid"
        },
        "response": {
          "id": "26dfdd73-a868-4c3b-a0de-ec04e9218eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2247,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfecda2-f0bf-4173-a1cd-8f27f8bf0e68",
        "cursor": {
          "ref": "92e8f123-964b-4781-a83b-552078163a8b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "754345c7-8a85-4258-aea4-885ed797b44d"
        },
        "item": {
          "id": "fdfecda2-f0bf-4173-a1cd-8f27f8bf0e68",
          "name": "did:invalid"
        },
        "response": {
          "id": "26dfdd73-a868-4c3b-a0de-ec04e9218eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2247,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d481af1-82db-4837-baf2-987ad35963bb",
        "cursor": {
          "ref": "154c2499-8763-4330-980e-b9ed4d209d66",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "badcf784-011d-481d-9e3d-d2ecb9d93c56"
        },
        "item": {
          "id": "5d481af1-82db-4837-baf2-987ad35963bb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e7db71d1-b110-40b7-81d8-97dbdc5c2e6e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2205,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4091659-6e6b-4b46-a1bc-185aa31304c0",
        "cursor": {
          "ref": "015756b2-339c-41db-8792-f91844d11a20",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee60d2f7-1559-421e-8354-8df4e36d3aa9"
        },
        "item": {
          "id": "a4091659-6e6b-4b46-a1bc-185aa31304c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1b3e6013-6e55-4328-8a2c-7d862331d331",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2494,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39455816-c43e-4c64-8599-f06fcd84e80b",
        "cursor": {
          "ref": "d36ec40f-11ea-44a0-8d37-d78555b55093",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8324b43f-3550-470b-9c81-02b03d3fb3cd"
        },
        "item": {
          "id": "39455816-c43e-4c64-8599-f06fcd84e80b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0dccee51-56bf-489b-9b28-11fa77c369a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41e2f67-5a41-4666-8e92-dc4de2ede3ff",
        "cursor": {
          "ref": "9c168464-de6f-48e1-8837-2fe39c9900c2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "23e0993e-d9ea-4a35-a9eb-64524520955e"
        },
        "item": {
          "id": "a41e2f67-5a41-4666-8e92-dc4de2ede3ff",
          "name": "identifiers"
        },
        "response": {
          "id": "3ae661cf-2c7e-4646-885a-a5d8bbeb92a5",
          "status": "OK",
          "code": 200,
          "responseTime": 2532,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb3a77-b135-4a91-b77b-0028e5e1289a",
        "cursor": {
          "ref": "219bc1fd-6e4f-4e9c-bcee-5301f3fa1a8d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8d13e852-b896-4707-9871-cb6b60103dd0"
        },
        "item": {
          "id": "25cb3a77-b135-4a91-b77b-0028e5e1289a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bd34afdb-aa72-473e-8c4a-8b75063d3931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd4613f-7fd9-47b8-be56-d8b533480c36",
        "cursor": {
          "ref": "51c425db-13dc-46d7-bd71-306c65a2d4c3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f122d5d2-cdbb-44b7-9b17-009c34ce9242"
        },
        "item": {
          "id": "bbd4613f-7fd9-47b8-be56-d8b533480c36",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2ca7f9be-7c33-4896-b05b-b3660ea31120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff77d36-f266-4789-9713-3db7930bef9b",
        "cursor": {
          "ref": "d455b541-2dd4-43d9-8088-8f5ac47f6145",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0a8d1e58-7b86-465c-b3ae-997ba20bb05b"
        },
        "item": {
          "id": "6ff77d36-f266-4789-9713-3db7930bef9b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8c2a1b94-55f2-46b2-a09b-053bb46e7deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c7073d-7572-4ecf-81d4-92654c058de2",
        "cursor": {
          "ref": "c2700789-f408-4bc3-ae2f-ff300f71c5ad",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "32cfe3cf-8f0c-4dc3-88d2-95378a949483"
        },
        "item": {
          "id": "49c7073d-7572-4ecf-81d4-92654c058de2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ea829988-f48c-40b6-b942-6a73bb9c4652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b285ac1d-3500-48e5-821a-28cc910ef21a",
        "cursor": {
          "ref": "28e3c8c2-e8db-45fc-b03d-11621a8ad146",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2f35cc30-7f25-4000-8d88-19fda9effab0"
        },
        "item": {
          "id": "b285ac1d-3500-48e5-821a-28cc910ef21a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3cbca327-bde3-4834-a2f8-7d93f6027cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4227c098-8538-4c37-8865-13a670b92ba5",
        "cursor": {
          "ref": "a25edcfe-9c12-47c2-a1a3-c0cd9bda3072",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ddee4d6d-ac8b-481a-b31f-b3e17dd05448"
        },
        "item": {
          "id": "4227c098-8538-4c37-8865-13a670b92ba5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "13860fc5-8aeb-4be1-b469-b1fd393d7769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37776e8e-fd87-4978-b19b-d3cfc6b9f304",
        "cursor": {
          "ref": "6967d76d-c37e-4717-934d-5408f2dfe77c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ce095ea8-3de3-424d-b561-7e899ab897bd"
        },
        "item": {
          "id": "37776e8e-fd87-4978-b19b-d3cfc6b9f304",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b837ef26-a5c7-4170-a2f1-ec9fda489c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2284b7-6983-47ee-ab1f-29a497e53222",
        "cursor": {
          "ref": "22b99a70-67c9-4efb-bc7f-78618f3dd9cf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "27987ab4-e53b-4317-ac7b-587b3e2aec18"
        },
        "item": {
          "id": "5f2284b7-6983-47ee-ab1f-29a497e53222",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "092ec1cb-81cc-4348-baf7-e629da086cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe081bc2-c32c-4f29-8dab-4532c84ed185",
        "cursor": {
          "ref": "1e82490a-8dc1-40aa-9915-d696d60d632a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "93702ac0-85de-449c-8464-056d77a58423"
        },
        "item": {
          "id": "fe081bc2-c32c-4f29-8dab-4532c84ed185",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a4a693a0-68f3-4612-91a4-f685a3b853b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b20b8c-8e33-4f12-9c46-77cfd75ffc21",
        "cursor": {
          "ref": "acaaec7b-6c73-4bd5-8436-ef6621853ed5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "12e91210-c618-453f-b006-099d3f6100e0"
        },
        "item": {
          "id": "21b20b8c-8e33-4f12-9c46-77cfd75ffc21",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05cb8626-cfa0-4d44-8f23-3db6e03fbc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd33ff3f-5fee-4ede-9ed7-1517a434443e",
        "cursor": {
          "ref": "4f246dc7-ecf6-42d3-baf0-6fdf9e97bf1c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f70428b3-1a38-4937-92a6-641ca1675f7e"
        },
        "item": {
          "id": "cd33ff3f-5fee-4ede-9ed7-1517a434443e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cf077a18-38a2-44cf-a908-1848a54f9938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8090ca-0285-471d-9dd1-5fca1513087d",
        "cursor": {
          "ref": "7bfba9e2-24f9-4a19-820e-93009b4e9429",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9ba65a35-25a1-45b7-9dbe-be835af71a38"
        },
        "item": {
          "id": "7d8090ca-0285-471d-9dd1-5fca1513087d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bb9ee849-7cb2-4a16-a28c-9698432b11d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f2c2c0-6c6b-4f61-be6c-1def1ee2b37d",
        "cursor": {
          "ref": "baa86dff-fe91-4b7b-ab53-9977dea1ca0c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3f5a9610-0b14-4e60-9832-12034151a764"
        },
        "item": {
          "id": "39f2c2c0-6c6b-4f61-be6c-1def1ee2b37d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "672bec4f-d64e-4f98-9f0d-7eec82a7e7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c00e98c-49ba-4a72-a74c-1c04a005b44a",
        "cursor": {
          "ref": "b17ba2de-369a-4928-8920-64e950222096",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a9c31834-e5c8-45c1-a248-57f62af38a94"
        },
        "item": {
          "id": "6c00e98c-49ba-4a72-a74c-1c04a005b44a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a0e5e927-2bed-49ac-af4e-051bc4ed48e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3bd0b-63ff-465f-8a3a-b6785a3540d9",
        "cursor": {
          "ref": "bd989d05-6431-4d6e-95c8-f56eea05707c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42fbcd45-9c1e-4e06-ac47-b9cec264c6c0"
        },
        "item": {
          "id": "90c3bd0b-63ff-465f-8a3a-b6785a3540d9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2a02c8a9-5bae-49b6-906b-23ab865b6810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8538c9c0-0779-4f42-add2-da8a63bdce3b",
        "cursor": {
          "ref": "32edf6a3-03ac-4f11-9fdd-9e98f68f7180",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4ff94e08-ea73-4508-a1e1-e86d68a31edb"
        },
        "item": {
          "id": "8538c9c0-0779-4f42-add2-da8a63bdce3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b57b0eb2-b995-4fec-8769-151735796a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58b98f3-f9cb-465a-afc4-0cf86cbcc4d1",
        "cursor": {
          "ref": "f686ab57-6502-444c-bc6e-1ec65eceb662",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c970504f-17b1-42c2-9b34-47c820c1b262"
        },
        "item": {
          "id": "d58b98f3-f9cb-465a-afc4-0cf86cbcc4d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "52a8789b-d85e-4fd0-a977-5b601b283746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c61e9f-dc38-4eab-87a3-081878618c60",
        "cursor": {
          "ref": "52ae63c0-d10d-4549-9654-835d458697a4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bac6cbd7-b973-42a7-9249-8409419096a1"
        },
        "item": {
          "id": "88c61e9f-dc38-4eab-87a3-081878618c60",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e832c201-f6df-4a60-97df-083ac56d42f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61ad208-88d9-4053-96a9-be19f0c86f98",
        "cursor": {
          "ref": "4788c1fb-783b-4cba-899c-174cedf83728",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ff9d34bb-2d52-4607-9fd5-39109a05dd2e"
        },
        "item": {
          "id": "a61ad208-88d9-4053-96a9-be19f0c86f98",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d4724aa5-851f-40c1-9534-0b80e62e27b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7751d8ed-cf5c-4733-898e-5b53ea1f6632",
        "cursor": {
          "ref": "c0007ad7-2741-44bb-bda6-351dd290bc44",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "294b3343-ec2d-4ea1-b407-3abbc397b4ed"
        },
        "item": {
          "id": "7751d8ed-cf5c-4733-898e-5b53ea1f6632",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e1c94d70-7f42-47c8-84e3-893495401998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581f9264-cebe-46e5-a850-03b78d8513a3",
        "cursor": {
          "ref": "46443324-23b9-4d0a-a6f2-b0da07342c4e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9c80c987-1da7-4d32-bf53-1b24523b25e5"
        },
        "item": {
          "id": "581f9264-cebe-46e5-a850-03b78d8513a3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "db1ead50-2b82-42eb-a27b-ad757cba7689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf74cf93-bdbd-46d5-ace5-13ff07d1e67d",
        "cursor": {
          "ref": "5df270c0-eee9-40cb-baa6-e3d98caac518",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "503646ee-b316-41b5-9da6-182cd4b246ae"
        },
        "item": {
          "id": "cf74cf93-bdbd-46d5-ace5-13ff07d1e67d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "efe566a0-13ca-4950-8375-ba79885f753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9b7205-059b-4e8d-b0b3-4d406f76b931",
        "cursor": {
          "ref": "936b46c4-acfd-4d66-b7fd-27e9ae7fcf6b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2724bfe6-1e26-459e-8736-048d81dc0452"
        },
        "item": {
          "id": "7c9b7205-059b-4e8d-b0b3-4d406f76b931",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6538cf6b-e009-47fc-9ca1-a35db4c2a6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23da2884-fa38-42da-b071-9a48b989be74",
        "cursor": {
          "ref": "b409f36d-38e6-4b6c-9075-9c86fcb6a395",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4eb7077d-12e8-4a62-90ca-96fd776162dd"
        },
        "item": {
          "id": "23da2884-fa38-42da-b071-9a48b989be74",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cdd9b1e4-2bf4-4005-a2fe-e34920a12ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f20964-fef1-41df-909e-8758cd5b6e7d",
        "cursor": {
          "ref": "a2dd2862-e4ad-4e20-aad8-dcffc5f1dba5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d6695129-3f37-4685-856b-8003a107e621"
        },
        "item": {
          "id": "d5f20964-fef1-41df-909e-8758cd5b6e7d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9c64cdc2-b7d4-4360-a16a-8e6b999191bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8746f4-4c13-4ac5-8274-482b412bc63a",
        "cursor": {
          "ref": "bfb1b7a9-82ae-484e-bcb5-8adf01ed966d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5377a266-a203-48df-86a5-39a0dc732894"
        },
        "item": {
          "id": "eb8746f4-4c13-4ac5-8274-482b412bc63a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d7aee782-a6f9-409e-a4d1-c1b80e59a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af884aa6-ae48-40c3-bad8-688c85bcc635",
        "cursor": {
          "ref": "b8345ad2-259c-4c70-9c5d-59e9043ffc8d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "67e9c139-8ee4-4e80-af28-ced8f0230025"
        },
        "item": {
          "id": "af884aa6-ae48-40c3-bad8-688c85bcc635",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "477d50f6-6bfb-4643-90ac-1b2223cab81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf0986f-f986-4862-a7e8-7ea6a72bf66a",
        "cursor": {
          "ref": "623ae288-0d4a-4d7a-8d64-715ddaee564d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dd8f58da-450f-4a50-a8ba-15c1808a341c"
        },
        "item": {
          "id": "0bf0986f-f986-4862-a7e8-7ea6a72bf66a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "149aaa1a-7dd9-43d4-a8fd-52997e9c4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8474b2d4-d31b-47f3-ac57-ee20e6dee913",
        "cursor": {
          "ref": "3989bc82-2d3b-42d8-a717-0ca94322228e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d630dac2-d9a3-4384-bf46-9338a8c98160"
        },
        "item": {
          "id": "8474b2d4-d31b-47f3-ac57-ee20e6dee913",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35934ad8-e086-4c48-b7c3-4435f08283c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1827443-21e9-4495-b514-9649f22eb6bf",
        "cursor": {
          "ref": "927da86d-a7af-42f5-8b2f-ab7b94947081",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0223bdb9-9e09-4361-ae28-129f8380bf0e"
        },
        "item": {
          "id": "b1827443-21e9-4495-b514-9649f22eb6bf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0d82c5cf-467e-404b-a426-9836374c4cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375f206c-964b-4d93-9645-bdb2598f2a8d",
        "cursor": {
          "ref": "2b280809-6e29-4913-98de-4470481e3751",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cb4f22a1-0b6d-4d63-a847-c48b8438a686"
        },
        "item": {
          "id": "375f206c-964b-4d93-9645-bdb2598f2a8d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bd5ad4fb-3fa7-4ecb-986c-72237cc2a100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0daf40-f55f-48b3-9ec3-f256b09ea59f",
        "cursor": {
          "ref": "9ceb3bff-f3a5-49c6-afba-e2dd51cfa058",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "970dd449-3c68-4d2b-b935-08bce1bf5f7d"
        },
        "item": {
          "id": "5f0daf40-f55f-48b3-9ec3-f256b09ea59f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "61861b9a-b3a8-4014-9c5b-b02e7846a1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3072f0b9-7e2a-4e29-a3da-33a1c13c0839",
        "cursor": {
          "ref": "7c3f13e5-0449-491a-8732-a82819ff1d21",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d21aab21-c975-4326-a6e1-cf3847aaf428"
        },
        "item": {
          "id": "3072f0b9-7e2a-4e29-a3da-33a1c13c0839",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ed33f724-b71c-4edd-aa2d-70a02e8c796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcde41f-5926-421f-8f75-56e831d4afaa",
        "cursor": {
          "ref": "c0b1c807-e76f-4780-aaeb-6428616a877f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "77769e9b-b3f6-43cf-9a87-6aed116b85c0"
        },
        "item": {
          "id": "ddcde41f-5926-421f-8f75-56e831d4afaa",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f56914b0-396a-46b8-b767-dde868f2a4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec9c1de-e647-4767-86a4-7645608c1b5a",
        "cursor": {
          "ref": "91fa9aca-7be6-4281-a17a-25d3a8baf194",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b76aa006-d3dc-4a88-99be-fc220927908b"
        },
        "item": {
          "id": "bec9c1de-e647-4767-86a4-7645608c1b5a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9f5473aa-3b81-4c3b-beb3-f0db6bb5351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821491d1-e1db-4025-8f20-e82a6b2d3f7a",
        "cursor": {
          "ref": "775e7e31-a2b2-4ff9-b71d-0f926b13f237",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9c9f0475-b539-408a-8d08-6297da0d6581"
        },
        "item": {
          "id": "821491d1-e1db-4025-8f20-e82a6b2d3f7a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0378244e-2273-401e-9a68-f418060ecaf9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d7c2ed-64c7-48cc-8146-8f36bd56cfbd",
        "cursor": {
          "ref": "f3c0aebf-d32c-4b2c-b552-638455d4924a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "247de3d4-a1ed-41e0-a4b3-c34119c2a10f"
        },
        "item": {
          "id": "67d7c2ed-64c7-48cc-8146-8f36bd56cfbd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c799c71e-a9f9-46b9-a156-3c710732a828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66e16dc-a231-41fb-b482-72f23055b227",
        "cursor": {
          "ref": "9d803ca3-078d-4bcd-ad59-6de33768fa02",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7054b2e8-ac98-4716-8286-4653efa70f7a"
        },
        "item": {
          "id": "b66e16dc-a231-41fb-b482-72f23055b227",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0743bc84-c7cd-4643-adca-d7a3731f16ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374139e8-572d-44b7-8397-7c5869c2f4b2",
        "cursor": {
          "ref": "7c2f61b1-1bab-4054-963e-472639063097",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b8f7b75d-7936-4c65-840f-736483511251"
        },
        "item": {
          "id": "374139e8-572d-44b7-8397-7c5869c2f4b2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c8e168dc-8b04-4bbd-a360-8e4bfe3f11bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f07873-6e6d-4715-bfe2-63043f16b641",
        "cursor": {
          "ref": "1812de9a-e8b2-49de-9cad-517d510c11e2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e7bc29ea-1684-4b13-8117-c6b8f1da6933"
        },
        "item": {
          "id": "c0f07873-6e6d-4715-bfe2-63043f16b641",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ad26ae28-5d65-4b0d-a603-6e98aad7e872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af37c21d-e9f5-40e6-a11e-beaa5300a1aa",
        "cursor": {
          "ref": "ba8ed665-a6bf-487b-be8f-584d9ef11aa3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e97b69d9-1634-4102-b5d9-1000995ec151"
        },
        "item": {
          "id": "af37c21d-e9f5-40e6-a11e-beaa5300a1aa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bc9b5486-d444-4828-8353-73f9db3b0108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f92e72f-c39f-4913-8aac-01539e8a39aa",
        "cursor": {
          "ref": "29b9d290-1cc5-4b4b-9a09-0597a4b4707b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "30cec032-2ce8-4775-8a52-6ce693b1a485"
        },
        "item": {
          "id": "3f92e72f-c39f-4913-8aac-01539e8a39aa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "de104293-cc62-41e6-adcd-7d26bd96014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d5e98c-b5c6-4692-9878-c62fa7747c30",
        "cursor": {
          "ref": "874283a8-6d5b-4dff-8ade-b2daee4327d4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d6090f54-139b-4455-a78f-4bd3ed223456"
        },
        "item": {
          "id": "19d5e98c-b5c6-4692-9878-c62fa7747c30",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0a91e549-b91b-4247-ad48-8955b80c3ab9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee926b86-497f-4b28-9cd1-b5b6fbd4fe69",
        "cursor": {
          "ref": "19e03a66-b6b5-4e53-8b0d-55bf228e5461",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "db7100f8-8cb3-44dc-8564-888b73f7281c"
        },
        "item": {
          "id": "ee926b86-497f-4b28-9cd1-b5b6fbd4fe69",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "30bc8f1e-9045-4fc0-ac76-4f76e112ebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e399b3-6e57-4a26-b24b-69b48ea05b95",
        "cursor": {
          "ref": "357aaa0c-79ea-4af1-be5d-730896170575",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "39a0b894-1119-4922-a186-a47fdb5c6755"
        },
        "item": {
          "id": "c6e399b3-6e57-4a26-b24b-69b48ea05b95",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1f79cd2-c773-4dc1-bfc7-e97fc6b38571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5dd265-565c-44eb-bb0d-63d803ffd43c",
        "cursor": {
          "ref": "dadd5454-b99f-4c99-a2e8-6666ebe44925",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3c03c715-c746-4d7b-aa75-1f640f56c599"
        },
        "item": {
          "id": "1e5dd265-565c-44eb-bb0d-63d803ffd43c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6cc0a413-9972-4471-b2b6-41d78eb71fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e31e804-4163-48ef-8d36-d22cb80b911a",
        "cursor": {
          "ref": "89e9a64e-5d39-4218-b3f8-8d96c53f0425",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9b912c97-8d16-4ce4-8357-2d9324787031"
        },
        "item": {
          "id": "2e31e804-4163-48ef-8d36-d22cb80b911a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "39b4274a-f2a9-4bdb-bb5f-7bff517182c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2117326f-324e-47e1-8023-bee530d29883",
        "cursor": {
          "ref": "2341268e-1977-4f42-bd5f-76fdb661530e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9eecf518-8007-42bd-a546-b1350daa751a"
        },
        "item": {
          "id": "2117326f-324e-47e1-8023-bee530d29883",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef382f8a-09f8-42ed-b089-3332df77de3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e01692-74a0-4528-bf04-2ff4810984b2",
        "cursor": {
          "ref": "e0efccc0-c1a3-4bd4-81ba-70455f41b6e5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6467c671-eb83-46c4-a162-0e1c33d169dc"
        },
        "item": {
          "id": "c2e01692-74a0-4528-bf04-2ff4810984b2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c612b605-65d5-43d3-ab59-23a1c60bb211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fabf10-ca68-4f25-9654-7e02f5706616",
        "cursor": {
          "ref": "f65a38aa-4b12-429b-937d-4e7050cde669",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "69ed3b62-c899-4f18-87ec-e6176df44e09"
        },
        "item": {
          "id": "b5fabf10-ca68-4f25-9654-7e02f5706616",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d22531d1-f6ce-48d0-ad73-3c788e06eb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5fa0e1-44c0-401e-adc3-887193d0fc6b",
        "cursor": {
          "ref": "2262a5ea-8e40-4a64-9a20-dc1037936feb",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b4e4d883-b80f-4f49-b1ad-9e8ac1c59ba6"
        },
        "item": {
          "id": "5e5fa0e1-44c0-401e-adc3-887193d0fc6b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a30a7fbb-51b7-40e4-936c-c5aa0963d443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984c95ef-3480-4749-b272-ceabe01cc3e3",
        "cursor": {
          "ref": "c5eb5496-3342-4372-be1b-37e155b34a4b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "66a7d36d-0acc-4615-bbb7-3d5e1fb07dc4"
        },
        "item": {
          "id": "984c95ef-3480-4749-b272-ceabe01cc3e3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eace8d3f-5e43-45a0-aa0d-7a3d2b130139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78640bd-22b6-471a-9db2-9026b53db31d",
        "cursor": {
          "ref": "837cb2b7-215d-434c-91bb-dc15badc952a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a88343f6-9cf3-4099-b6e0-c67ca46218ec"
        },
        "item": {
          "id": "d78640bd-22b6-471a-9db2-9026b53db31d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "050fb376-b4f6-4c4b-8109-f5f97add37d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83e9b90-0803-4d1c-b993-f9a6bab1feed",
        "cursor": {
          "ref": "b1d63273-bb8b-45cf-9bea-ef307796ec2f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d7ae0819-d6c2-4a0d-b094-06167a2f3941"
        },
        "item": {
          "id": "c83e9b90-0803-4d1c-b993-f9a6bab1feed",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0636b27f-70f6-4533-8ed0-96158c544b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173b4015-4cdc-40e1-a456-85e2287a0ad2",
        "cursor": {
          "ref": "d274b029-036e-4212-b156-f8ea99bf5738",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b67ffa87-75f5-413b-9647-50e84d5392f7"
        },
        "item": {
          "id": "173b4015-4cdc-40e1-a456-85e2287a0ad2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29c79b5f-1425-468e-82b5-2ea1d58b2572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d719178-c236-44b7-ab47-0742f775f1ee",
        "cursor": {
          "ref": "368ef8b4-ba6e-4644-9e7f-51c091ff29ad",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bd328ee3-4fb3-4b82-bf1b-0217f2e971b8"
        },
        "item": {
          "id": "5d719178-c236-44b7-ab47-0742f775f1ee",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "18bb8570-2096-4f07-98ff-7f3895530db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b527e8-bbce-4a5b-8006-f0d4a79ef472",
        "cursor": {
          "ref": "874cacd0-68f5-49e5-9ff1-69a0619dd147",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "53e10e47-5a97-4b67-8196-6e5525d0becf"
        },
        "item": {
          "id": "c8b527e8-bbce-4a5b-8006-f0d4a79ef472",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "153e8df3-891c-4956-909e-4eece9bf95ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55865c4b-0cfb-4e9c-8e6d-c2943b1dadfe",
        "cursor": {
          "ref": "3535c0fa-1199-40de-acc8-2e404b9f4356",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "570f31de-2b47-43c1-8f56-f14f63b83b3d"
        },
        "item": {
          "id": "55865c4b-0cfb-4e9c-8e6d-c2943b1dadfe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7e123af6-643d-4743-9973-f1f9bc313065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfe7487-eafa-45d8-80f8-af1d705fcd9c",
        "cursor": {
          "ref": "3d6b59fb-b6c8-479f-bf10-3a3fa35c1556",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fa1195de-e336-49f0-853a-b5d314b2861e"
        },
        "item": {
          "id": "9dfe7487-eafa-45d8-80f8-af1d705fcd9c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "26ab61f4-7fa6-40ea-a4a9-f1a250c1abcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9c3690-8fa3-4e09-b40c-507d04cdeb21",
        "cursor": {
          "ref": "40c261db-4d96-47f3-8a49-790504d2b63d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6d57a2c5-eaeb-4cd7-bb30-6f464b0ae18b"
        },
        "item": {
          "id": "0d9c3690-8fa3-4e09-b40c-507d04cdeb21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "abfa3bb6-0445-422e-9fb7-2957c4e405da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26177185-bf48-4cfb-ab43-0986a5845a4b",
        "cursor": {
          "ref": "9b2ddc78-2b38-4bd5-905e-82d934e885b5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5fee4cdc-a827-49b7-867a-ccffe7a899b5"
        },
        "item": {
          "id": "26177185-bf48-4cfb-ab43-0986a5845a4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3690068a-d5b7-4b64-9d6e-fec9b73936c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2286b773-1c2f-44ee-a953-e4cc8e59a3cb",
        "cursor": {
          "ref": "e8c30894-727d-45a1-a856-54586c094031",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f7149b8c-dcb7-4ace-baec-3c12e656933e"
        },
        "item": {
          "id": "2286b773-1c2f-44ee-a953-e4cc8e59a3cb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7e03a534-7973-46cb-a6b9-3c6dab7e3261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ed702f-8c3b-40b0-9a4b-b77620950db1",
        "cursor": {
          "ref": "ca3e8686-d6eb-4a71-a3c1-e8674568590f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a62be693-1b9c-4c09-acf3-dd41527b1cfb"
        },
        "item": {
          "id": "60ed702f-8c3b-40b0-9a4b-b77620950db1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f1984921-676f-4016-a3ce-cbf5332acf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea99f767-92a0-4441-9aff-372603793a6f",
        "cursor": {
          "ref": "e6fca58a-3360-4126-9b53-c8bb0ca3700e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3adbc6cc-5645-43e9-97bb-f50680e9a05e"
        },
        "item": {
          "id": "ea99f767-92a0-4441-9aff-372603793a6f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "42ccb5e2-cae3-4c8c-bf9b-e409639f965b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba865fd-dfff-4063-ac9b-29eb18e42161",
        "cursor": {
          "ref": "bca7535b-1470-4096-b765-1fb1da72a6ad",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5989625b-dafb-435c-895c-8ca9405a5f95"
        },
        "item": {
          "id": "3ba865fd-dfff-4063-ac9b-29eb18e42161",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bee1e278-34ed-486d-bf73-90ab7d9f5e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77474c-fe81-4de5-a3a6-46955c21a13f",
        "cursor": {
          "ref": "298776bd-1d71-4a6e-a8ae-e7dfcde67180",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7cc76837-2945-4ba0-b3fc-3f5e2d1b7079"
        },
        "item": {
          "id": "ae77474c-fe81-4de5-a3a6-46955c21a13f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dd887708-1eab-49ac-a82a-60a1c1d7d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fd6e12-f3c1-4a83-8fa9-db84260a26a8",
        "cursor": {
          "ref": "3f71e708-291c-460f-bc85-b3d15a1d12ff",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "85969b30-cc82-4293-bb72-156211d930ab"
        },
        "item": {
          "id": "88fd6e12-f3c1-4a83-8fa9-db84260a26a8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8302ed6c-0d76-4a3f-9e8f-59a0918dda86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9b9cc3-c665-4b4c-88ad-6684801aba19",
        "cursor": {
          "ref": "22ee1165-3a3b-4283-859b-7152c7e46456",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5074ef49-b9a9-4574-b050-3f297b17db92"
        },
        "item": {
          "id": "9b9b9cc3-c665-4b4c-88ad-6684801aba19",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2283010f-2ec1-465c-b06d-e3914be998d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95aa0e3-fd3b-4cba-a739-554fe5e68990",
        "cursor": {
          "ref": "5824af92-6c04-4ea4-bade-b643504e3bd2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "01941764-bda8-4abf-a94a-ade3ff89b34b"
        },
        "item": {
          "id": "c95aa0e3-fd3b-4cba-a739-554fe5e68990",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a0f74b2a-631a-4f63-8e36-05dc74a977bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f25cfa-c171-45bd-b83e-930e4a373810",
        "cursor": {
          "ref": "0e5faa15-6a63-4914-9a04-e02bdef1bccd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "20abeb6a-f91c-4e6f-8bb1-113143dcc465"
        },
        "item": {
          "id": "24f25cfa-c171-45bd-b83e-930e4a373810",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dae75cfa-0dcd-4479-8510-c7d97b74772f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4c046b-0566-46b3-bf63-6eea23838ded",
        "cursor": {
          "ref": "f8718032-2bdd-461b-b7e5-c54175d9a668",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8c8718de-e50a-43f8-8eb4-c2a1906dcbff"
        },
        "item": {
          "id": "7d4c046b-0566-46b3-bf63-6eea23838ded",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d3d89893-9427-44d1-8189-ce9e57f39057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241d5b6d-fed6-4510-a31f-2e4030584314",
        "cursor": {
          "ref": "af8b9832-abf7-4553-b9d4-5d0fd60a8e4f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f68a6833-8dfb-4993-b128-524f04fd61e3"
        },
        "item": {
          "id": "241d5b6d-fed6-4510-a31f-2e4030584314",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c254e964-6f47-4dc0-b01e-f7739e671762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28251b06-7a5c-4b2f-baeb-408ee540e8bb",
        "cursor": {
          "ref": "5656eca6-1ca6-4d1f-b2b9-b6b29720917f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3d7181f0-17d7-4ecf-afa7-570212add67b"
        },
        "item": {
          "id": "28251b06-7a5c-4b2f-baeb-408ee540e8bb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3c546d3e-6203-4106-854f-c8fa8b3330ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02b85a7-fbc2-43d7-9f38-99801053bec6",
        "cursor": {
          "ref": "fd66c8ef-3fd8-4cef-b186-0e76c4d3e868",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "309d8f68-91b8-43a3-b1a0-febc2bbbd3f7"
        },
        "item": {
          "id": "a02b85a7-fbc2-43d7-9f38-99801053bec6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "722ad9fb-fd68-4fa3-b4ec-dbaeb3c3262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c37cd-ed2b-40af-8ab6-cef9ce1f1462",
        "cursor": {
          "ref": "1bdcf899-f7e1-4d97-90e8-725443a8f75e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16aefc0a-0161-44ee-b33a-268ba6ccf397"
        },
        "item": {
          "id": "483c37cd-ed2b-40af-8ab6-cef9ce1f1462",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "af7d4c3d-45df-4667-8c8a-2c48223c12c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cfe6fc-8117-45d2-920f-5582b6a26bdc",
        "cursor": {
          "ref": "5435931b-05f4-4116-93ea-d878bfb6d927",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b23b02a-ae96-40ba-b199-530cdea41c39"
        },
        "item": {
          "id": "80cfe6fc-8117-45d2-920f-5582b6a26bdc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "50df1ae8-b8d4-434a-bc7f-2b339d5b4758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65450ff-0b6d-4b2c-9713-5dcd66f3bb30",
        "cursor": {
          "ref": "ed635e1a-a040-47f2-9961-7da91e608c73",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "611243f1-fb41-4eaf-ab7e-073fd28b90ba"
        },
        "item": {
          "id": "d65450ff-0b6d-4b2c-9713-5dcd66f3bb30",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "45a4798a-22f3-4b4a-a7ed-aaace7b22e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30633d2d-0b95-43fc-96ea-3c05a32f8dee",
        "cursor": {
          "ref": "f69bd6d2-4cba-41a5-b9af-138b973f7f0a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "65a2bf94-ac88-45f3-b3bc-5bdf81fa8de5"
        },
        "item": {
          "id": "30633d2d-0b95-43fc-96ea-3c05a32f8dee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dff5f378-ec70-461d-836c-318c861db695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6c819f-db95-4d18-92a0-c97a0fb29ebe",
        "cursor": {
          "ref": "42410275-1574-4312-bb5d-4b415b7dbaf9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a1123f33-bc4b-421f-b53f-8e0a3ae6b9a6"
        },
        "item": {
          "id": "dd6c819f-db95-4d18-92a0-c97a0fb29ebe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "21c8fbb5-a492-4f4d-be41-7393f652de8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d2b2ed-9376-42c5-8b38-9d723f8931df",
        "cursor": {
          "ref": "b57ea23e-6fc3-4452-aecb-2d1f46df7b63",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "246ee07b-2daf-422a-bf32-520f5ab1e066"
        },
        "item": {
          "id": "d3d2b2ed-9376-42c5-8b38-9d723f8931df",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "980ff2ca-7d2e-44e7-b97f-2fe2e7a45078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de7b8f8-1663-4ad2-83f7-fa0c08d0c82a",
        "cursor": {
          "ref": "93051ad8-4694-4792-b2ec-f3ba066be7f4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fe0acbfb-86ed-437b-bcb3-e9ae9ad043ee"
        },
        "item": {
          "id": "7de7b8f8-1663-4ad2-83f7-fa0c08d0c82a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "38dec7c8-06a8-412b-b552-872f1898a66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77616fa8-c985-4ba3-bec9-1fbb9a300d02",
        "cursor": {
          "ref": "3886d1d4-0bd6-480b-8d4f-51adc7dbe4c5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "26faade1-4749-4a1d-92b2-90fc7ad9b93d"
        },
        "item": {
          "id": "77616fa8-c985-4ba3-bec9-1fbb9a300d02",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6766e5d9-00b8-442b-9e1f-0bbef410f078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8480c9-f5d1-41b6-89aa-eacda071377f",
        "cursor": {
          "ref": "c4b7fb0f-bc15-418e-b333-3312c7d4ecf0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c2837c04-6c99-4265-89e7-a64ac26dab1c"
        },
        "item": {
          "id": "fd8480c9-f5d1-41b6-89aa-eacda071377f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4ca17e1e-683d-4c6d-903e-cd9baf7a9c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0660d332-7b60-463c-a08d-a04e26934c1c",
        "cursor": {
          "ref": "b508ea0e-1222-4310-91c8-2d8b21422434",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4336d9da-e99b-4f2c-8e82-d1291ba77d71"
        },
        "item": {
          "id": "0660d332-7b60-463c-a08d-a04e26934c1c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c0fca553-db23-438d-a237-26d37bd0c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f0aa41-ab01-489c-b31a-f355d06bf92f",
        "cursor": {
          "ref": "1d219f1e-b0ea-4af1-8797-e2adc035aff9",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "784ace43-08d3-4a6c-b011-b14d516eb4af"
        },
        "item": {
          "id": "01f0aa41-ab01-489c-b31a-f355d06bf92f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a9a5d733-5242-42eb-a203-324ad5f63b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b80495-bd93-434e-97e1-ea81bc29eb17",
        "cursor": {
          "ref": "ae0a223f-afeb-496f-8d77-4bb5e0925e76",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "09a4cb56-c1e6-4f4e-ab17-a1a9536eb62e"
        },
        "item": {
          "id": "07b80495-bd93-434e-97e1-ea81bc29eb17",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b59e53bd-a5ac-4295-b698-5b3d048f5ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c2f8d5-613d-4b5a-8e13-7d1a23a684a8",
        "cursor": {
          "ref": "e37207e1-7856-4b7a-bad0-8162f75f054c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1c964a28-7e0a-427d-b4e8-d55568f3fe24"
        },
        "item": {
          "id": "b0c2f8d5-613d-4b5a-8e13-7d1a23a684a8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "993fa77d-2fe1-4a6b-83d7-e3975e678b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8297c689-adb4-4bb4-b318-9e522a72401d",
        "cursor": {
          "ref": "fb623301-0fc1-446f-9430-100e1b8fb121",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "34a1be60-26c9-4e81-834e-c4d08b5e7fa4"
        },
        "item": {
          "id": "8297c689-adb4-4bb4-b318-9e522a72401d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a789c563-3f2a-4559-b26b-b72417bc18f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42da0e77-f84a-42b0-aed6-e3f3410cf0da",
        "cursor": {
          "ref": "936619e9-2da2-4cc8-aed6-ecc738a1a4c1",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3d1efb0a-e309-4802-af60-e9801fda16f6"
        },
        "item": {
          "id": "42da0e77-f84a-42b0-aed6-e3f3410cf0da",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "594ed93a-b209-458a-8602-efbf7feb78a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd0222b-eb0c-4e90-984a-8335b3f967d9",
        "cursor": {
          "ref": "ea425f59-b838-435a-9a2f-9619450e62c6",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4dca7847-432d-4208-bf6c-34d6b068a8c7"
        },
        "item": {
          "id": "fdd0222b-eb0c-4e90-984a-8335b3f967d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f75f5ad3-fd11-4b53-b6fa-b7a4216b6c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1501aeaf-513d-43cc-91e8-7b43cf359a11",
        "cursor": {
          "ref": "5491e2fc-9293-46f9-98c4-2203f7feecbf",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0ace9ba5-013a-4662-a301-f9bdedb25a38"
        },
        "item": {
          "id": "1501aeaf-513d-43cc-91e8-7b43cf359a11",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9bee13d6-b776-431b-83b1-354e3f33b8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f2283a-5369-4d57-993e-4d5e876c14ac",
        "cursor": {
          "ref": "7f3b2054-38c3-4328-b1e3-a38b215d2fe9",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f041c90a-aa52-447b-b019-475d1dd6ed06"
        },
        "item": {
          "id": "07f2283a-5369-4d57-993e-4d5e876c14ac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0b2fa298-9c65-45d9-bbd7-5463f9d5afc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80afad5-aa0d-41af-bbac-f9df3fea935d",
        "cursor": {
          "ref": "d5be35ed-ac65-410f-9afc-91add581af8f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cef4f473-cce7-429c-ace7-f9478101484b"
        },
        "item": {
          "id": "b80afad5-aa0d-41af-bbac-f9df3fea935d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "74552da7-c7fd-400e-910c-59c1f59f42c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9fa197-d0f8-4eaf-a873-ef4e4ff7feaa",
        "cursor": {
          "ref": "2d895aa5-4420-4212-9f27-b18c66f1d5c9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2de6a550-353c-4c72-ae59-a602a552204d"
        },
        "item": {
          "id": "7a9fa197-d0f8-4eaf-a873-ef4e4ff7feaa",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "087c6797-38cb-4dd7-94f2-418b6b360b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "09ab3d3c-537d-493b-a744-cf0604804c74",
        "cursor": {
          "ref": "09969be8-9ab0-48d1-97c4-4f9b707c93bc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "85f6a9c2-9279-45e9-9217-512299ba2bca"
        },
        "item": {
          "id": "09ab3d3c-537d-493b-a744-cf0604804c74",
          "name": "credentials_issue"
        },
        "response": {
          "id": "faf9cb13-c9ba-4155-823e-b0df63f0a555",
          "status": "Created",
          "code": 201,
          "responseTime": 14489,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2774cd6d-4c4d-4bb4-b119-4df39e27ba13",
        "cursor": {
          "ref": "e471e028-0ebf-4e4c-8c57-9cd5a6f8ec09",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "97351bb5-87a8-4f8f-970c-3351fd83f939"
        },
        "item": {
          "id": "2774cd6d-4c4d-4bb4-b119-4df39e27ba13",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "76291eec-2d6b-4683-b499-b284c25ccdd2",
          "status": "Created",
          "code": 201,
          "responseTime": 14208,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "670080b4-f001-4b52-849b-a77e5f32d0d6",
        "cursor": {
          "ref": "3b617a78-7acd-4752-90ff-925551c3b687",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "93fe80c5-b51b-4e60-8187-58c4591eb88d"
        },
        "item": {
          "id": "670080b4-f001-4b52-849b-a77e5f32d0d6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9bc0d191-69d1-48b5-bba8-034e724af0c5",
          "status": "Created",
          "code": 201,
          "responseTime": 13879,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cfba9e-0e69-47b2-abc4-3fcd6cc040c1",
        "cursor": {
          "ref": "7464fd76-ffff-4c7b-b723-03a8eed437d7",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3213ee12-4871-49b3-9835-c4b8a9205778"
        },
        "item": {
          "id": "f2cfba9e-0e69-47b2-abc4-3fcd6cc040c1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9eda167b-27ff-4c4e-9dcd-c85f6b6545f3",
          "status": "Created",
          "code": 201,
          "responseTime": 13274,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f2264d-59a7-470b-8627-32d91ff0a0e9",
        "cursor": {
          "ref": "4c7e1186-5f05-4d3c-a945-ac3dae968e59",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "caed8835-9ebb-4565-ae40-69a7f3389f39"
        },
        "item": {
          "id": "71f2264d-59a7-470b-8627-32d91ff0a0e9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "618f1a8f-f940-41f2-bef9-a5eeddcafbd2",
          "status": "Created",
          "code": 201,
          "responseTime": 13862,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-15T00:51:16Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-15T00:51:16Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "84631156-9a53-4325-a61e-735456a60bab",
        "cursor": {
          "ref": "7aebc987-3011-4ac9-bd92-ac2da6729b84",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cdab0c92-2868-4f28-b848-e2cc507df5c3"
        },
        "item": {
          "id": "84631156-9a53-4325-a61e-735456a60bab",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3854007d-5cdf-4d1a-aded-9c90307736c8",
          "status": "Created",
          "code": 201,
          "responseTime": 13768,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0e00dd-3858-4e26-affb-da0c37f66ff0",
        "cursor": {
          "ref": "dbea6302-d7f9-48c7-bf7c-cf25da56b64c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7cdc4cf8-aac2-4f02-a1ba-3248c80411c7"
        },
        "item": {
          "id": "6e0e00dd-3858-4e26-affb-da0c37f66ff0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "02b7116d-8ca1-4e2f-93f4-3ded6a322e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b56c0-4919-4675-9e88-827dede93272",
        "cursor": {
          "ref": "180b6617-2a8c-4c16-8dc8-30cad67ab3ff",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "abf796e1-6f4c-4349-9520-4bff16ba5e05"
        },
        "item": {
          "id": "9c1b56c0-4919-4675-9e88-827dede93272",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7a73b318-9033-406f-85d3-13539b830597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c294b83-7758-498a-95c7-abd3a2120f71",
        "cursor": {
          "ref": "3e9180b5-a52b-4ed8-8203-8db0d31e37fa",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a280b647-9140-4f79-beac-d5478b6d79fc"
        },
        "item": {
          "id": "0c294b83-7758-498a-95c7-abd3a2120f71",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6551ab72-2086-4092-8340-8e644d1326a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca29747-ad10-4499-834b-3a3a41e0a850",
        "cursor": {
          "ref": "8227bb95-a5cd-4bf3-a830-b21537167221",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2fd4373b-82cc-4177-9924-2097d0d62768"
        },
        "item": {
          "id": "bca29747-ad10-4499-834b-3a3a41e0a850",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89598fc8-626a-483e-9802-9cfb7fbf423c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e7d698-1a34-42cc-8242-23190505a724",
        "cursor": {
          "ref": "bfb4a23b-d227-4264-8467-25cf5d934dc6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ea3e853b-f77c-46c1-8368-78e41e73996c"
        },
        "item": {
          "id": "51e7d698-1a34-42cc-8242-23190505a724",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e1e5d9b1-72e7-4027-ba85-e4c3db45fdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66417c41-cb46-4ab3-afd0-85e400469c07",
        "cursor": {
          "ref": "76091ec3-d6d5-490d-a40f-159638672122",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1b4e9329-44c1-4411-9405-8ca23c3dfdd9"
        },
        "item": {
          "id": "66417c41-cb46-4ab3-afd0-85e400469c07",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "11695502-96ba-423e-aaad-2d8459fac508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dc9449-fbdd-4aba-9117-33c6e6f1fe08",
        "cursor": {
          "ref": "3a94e550-cb40-409b-a162-7d5cf1deb9b9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c740732f-ff2e-4441-98fc-78d169963dd8"
        },
        "item": {
          "id": "c9dc9449-fbdd-4aba-9117-33c6e6f1fe08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c79c9c17-6977-4174-b94d-618883a91012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0c9f3e-c127-4698-9f4d-9c711d0df98a",
        "cursor": {
          "ref": "e131e1aa-c3d3-49e3-a2d1-d7201cbc531f",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "06fb19b0-80be-4ac4-80ba-497f482a35c0"
        },
        "item": {
          "id": "df0c9f3e-c127-4698-9f4d-9c711d0df98a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7833689-2a57-4477-a2c7-5e023aa2b8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92257c76-8d62-45e1-8bd8-e72f608acb56",
        "cursor": {
          "ref": "1ddb50f0-dba8-4a03-b41b-2eedb54b8aaa",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e0739944-ff0a-40ec-94ce-6380362cbe1e"
        },
        "item": {
          "id": "92257c76-8d62-45e1-8bd8-e72f608acb56",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c5ec41f5-6e24-449c-befe-0eaaf0071538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad15bf6-fb4b-4eac-9bf2-7c861df3d87b",
        "cursor": {
          "ref": "163faf23-c7d3-4e05-9351-361d2d0587ea",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3fd4daff-5fc5-44e0-83f1-ff04fc9838af"
        },
        "item": {
          "id": "aad15bf6-fb4b-4eac-9bf2-7c861df3d87b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "49784be1-30c0-448b-a80c-d26c7d761c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91e249d-7473-403f-ba6a-7ce93b4c2301",
        "cursor": {
          "ref": "6805b93c-2a18-430d-b7b9-ac5d05a778b3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a4670dc0-e515-427f-82a0-588496eff12b"
        },
        "item": {
          "id": "d91e249d-7473-403f-ba6a-7ce93b4c2301",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "af8fa497-0716-4eba-b0eb-757a46ee16a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1854d59a-d0d0-4b40-867c-019e7aa1f1b1",
        "cursor": {
          "ref": "4b776231-19d3-4880-8a63-cc26d953b922",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6a45f1ec-6d81-4d76-b860-30a5b6038aef"
        },
        "item": {
          "id": "1854d59a-d0d0-4b40-867c-019e7aa1f1b1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "06551284-e641-4983-94cb-973c2aa7df1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4d8da5-6fdd-42b8-8b09-e1991de867fb",
        "cursor": {
          "ref": "6a03ee4f-030d-4b91-8990-f1f42db8e729",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "207cf77e-19af-4685-b75d-ccb49c0390da"
        },
        "item": {
          "id": "7b4d8da5-6fdd-42b8-8b09-e1991de867fb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c29a084c-4fe9-4833-986d-2e76035535e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a09843-8081-402f-8b7d-075ed8c4f3c1",
        "cursor": {
          "ref": "ac5ff7d1-6507-43e8-910d-633307e5a861",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b5244c87-9512-4eb8-b127-6619682412af"
        },
        "item": {
          "id": "b2a09843-8081-402f-8b7d-075ed8c4f3c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0bc08384-94da-484b-8bc3-1d93a543130c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572bca86-b52a-4aed-90f5-121a92ad37da",
        "cursor": {
          "ref": "fa0abf92-8ca1-4d4a-8e5c-f6790e9b6cdc",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f78064a4-e318-4015-8763-3b4c89dee289"
        },
        "item": {
          "id": "572bca86-b52a-4aed-90f5-121a92ad37da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b7a2dc04-4597-4fd2-8820-1399295acf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f8e653-358e-4258-9e88-63f2eb00a4cd",
        "cursor": {
          "ref": "0cbb09c3-3dbf-4d8d-baf8-7e2b176bb158",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9214062c-6409-469f-8ffe-585c0d0676d3"
        },
        "item": {
          "id": "45f8e653-358e-4258-9e88-63f2eb00a4cd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e874c73d-42ac-4f4b-80df-56090f2d5f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64c3ac5-2651-4d1c-b369-e3b47103b1f0",
        "cursor": {
          "ref": "3740fb60-7f20-41f4-a51b-66c0109cbb75",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "95bf6b00-0bf0-40bf-9e59-8254924a66a7"
        },
        "item": {
          "id": "e64c3ac5-2651-4d1c-b369-e3b47103b1f0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8edb5bf5-991e-4509-9bea-aa4adfff39b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1e16c7-35bb-4702-8ae9-11234d4375e2",
        "cursor": {
          "ref": "f7959cd1-a309-47b3-84e3-3f72c184627f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3a87576e-9527-42b9-b7f7-51d90b4724fd"
        },
        "item": {
          "id": "9e1e16c7-35bb-4702-8ae9-11234d4375e2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9175f7cf-0995-4b97-ad48-fe59ed721627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0811a9-fc73-4e29-b32b-ea53d2b54acb",
        "cursor": {
          "ref": "c133430d-31e9-4021-81b7-f747bd759d49",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1217aa92-3143-4858-b8a3-3250ed9de6e3"
        },
        "item": {
          "id": "dd0811a9-fc73-4e29-b32b-ea53d2b54acb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a57741ce-7ce3-49b9-9be2-06eec4577fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b01540-cfe9-4f48-ab09-7b789638cc5d",
        "cursor": {
          "ref": "4bd56237-8ab7-4e79-a3b0-6823c6d207a6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4d51b329-3d3a-484c-bd34-eb26f0e67b83"
        },
        "item": {
          "id": "08b01540-cfe9-4f48-ab09-7b789638cc5d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d14769d1-8d18-4e07-83fe-6809ef382587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0566cc9a-d52d-47ff-8dfe-9eac38205f26",
        "cursor": {
          "ref": "9d6e9b43-27b5-4a2c-bb0d-c94293a85240",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6f7e66ad-8091-4e80-b9ef-62978ba670ce"
        },
        "item": {
          "id": "0566cc9a-d52d-47ff-8dfe-9eac38205f26",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "83e192d1-3b3d-4427-a01f-f7c1467b4283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942ba07d-cd44-49d1-9ca4-f55502c7146d",
        "cursor": {
          "ref": "8210a77a-d5e1-4414-8d02-a474d86cfc81",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "44742030-70e2-496d-a101-d3f5e27d8319"
        },
        "item": {
          "id": "942ba07d-cd44-49d1-9ca4-f55502c7146d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d07e5572-3cb3-4641-b036-b50cdb27dfc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b647e0-ff6f-441e-9bec-9d2ec8b157a4",
        "cursor": {
          "ref": "48458050-2ecd-4a9a-a985-2c34021365e4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "190b5b56-4bb9-4f0d-8df7-c191dcc33d7e"
        },
        "item": {
          "id": "d7b647e0-ff6f-441e-9bec-9d2ec8b157a4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "10dd6c29-750a-494a-9d0d-38bd5cfaf110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81af3577-e1ca-4c10-ab90-c647bcdff739",
        "cursor": {
          "ref": "faf3458c-47d2-4611-b95e-e4f855ca3d85",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74997350-c761-4404-a5cc-d0a1604c5e07"
        },
        "item": {
          "id": "81af3577-e1ca-4c10-ab90-c647bcdff739",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "55573004-b45b-4940-b1e6-54f2f868f8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626b9c3-6cee-4063-b01f-602e0b0adc3a",
        "cursor": {
          "ref": "d28c64a5-a7f9-44a6-911c-10e11bd2ee1e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "05669996-ae3f-4cef-8e86-8a32a340af88"
        },
        "item": {
          "id": "5626b9c3-6cee-4063-b01f-602e0b0adc3a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09658aac-ff45-45f6-9bba-2029da1633ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e03ea4-38a6-4259-a9e9-7b3a33648d6c",
        "cursor": {
          "ref": "79a9160c-403b-42ec-a229-946d3180ea3b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6589b8f5-2a17-45a4-85bc-01dd6b3bdae2"
        },
        "item": {
          "id": "37e03ea4-38a6-4259-a9e9-7b3a33648d6c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0e3aa30c-909b-4810-a7ab-aeba2c82f898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdd77d9-1d02-4d71-ae68-ccf06325e272",
        "cursor": {
          "ref": "fd518de8-abc7-47fa-ad55-6009564c7fdf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "22375403-9906-4ecb-98c2-03ff475e6823"
        },
        "item": {
          "id": "5bdd77d9-1d02-4d71-ae68-ccf06325e272",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e37cba7e-7d8b-4281-b8d3-44f32df61491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f0c1b-0a5f-4966-827f-d61ba19dd799",
        "cursor": {
          "ref": "6cac3879-536b-49c4-a79e-819832cf24eb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aabf4d76-052c-4364-b212-1750d5b62db2"
        },
        "item": {
          "id": "2c1f0c1b-0a5f-4966-827f-d61ba19dd799",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba5a2baf-e90c-42b5-8571-a2a73e1e48c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2866763c-8c4d-4b8b-b4d0-c871257ab9f7",
        "cursor": {
          "ref": "a3cad76a-31f5-4c7d-a1e7-9f854b18dbd2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "279d02cc-2b5c-47aa-bd38-f38528e98da2"
        },
        "item": {
          "id": "2866763c-8c4d-4b8b-b4d0-c871257ab9f7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "678e5893-a21e-490e-b7c2-1f4497057371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc8e0a8-3d40-43a4-866d-83e7e24c8983",
        "cursor": {
          "ref": "8ba1c993-8617-4373-b07d-0782d78dcfbc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "58f570d9-8bcf-428e-a325-f8a8dc6377bd"
        },
        "item": {
          "id": "5fc8e0a8-3d40-43a4-866d-83e7e24c8983",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e9936c76-56df-4519-8963-ca8906cc7fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7a4d59-78a2-4ce5-9b64-eb0a724ea7c5",
        "cursor": {
          "ref": "359876cd-6e41-4ca7-af1a-5c61b3caf4ad",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2acb98cc-1924-45c9-8352-e157b02175ef"
        },
        "item": {
          "id": "3a7a4d59-78a2-4ce5-9b64-eb0a724ea7c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f2285bcf-8629-4470-b0b5-8e3fc9d1258c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b954d-d3d3-40ec-8dd4-a17735801039",
        "cursor": {
          "ref": "ffe6e1dd-e28b-4f30-af2d-0cb7dfc935d4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6ca41ea5-bc15-47a2-9599-f24e10a30ad7"
        },
        "item": {
          "id": "7d5b954d-d3d3-40ec-8dd4-a17735801039",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3052576e-cd28-4127-9dbf-560566db98d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d03ef94-f358-45bd-8945-88bd2f8dd939",
        "cursor": {
          "ref": "9a783c9e-a9d9-44bb-b808-6f8fcb0176b1",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3eb8305d-2fcb-4e7e-80cf-3344a3b235ae"
        },
        "item": {
          "id": "9d03ef94-f358-45bd-8945-88bd2f8dd939",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "905dce35-2a47-48e5-bbc6-8c846565f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc72a2c4-b976-442c-8718-887a0389f24c",
        "cursor": {
          "ref": "bd2546d8-cef6-4058-bffa-84d09f62fbc8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bab27923-f436-4bad-8ba7-19c002adc84b"
        },
        "item": {
          "id": "cc72a2c4-b976-442c-8718-887a0389f24c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1d0ffc0f-7f1f-40fb-a680-b8a0f050c3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74df989b-61e3-4b1a-8e61-c8fc86d45956",
        "cursor": {
          "ref": "c206c28a-3f59-4949-a2eb-a7c96858075b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0c1d944c-2ab9-4788-91f0-838c183f8d0d"
        },
        "item": {
          "id": "74df989b-61e3-4b1a-8e61-c8fc86d45956",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c894c788-766b-4a55-bd6c-618b22bfe596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26bb1c4-fa38-4231-809a-5185a7d5aaf8",
        "cursor": {
          "ref": "6e951c02-9aef-4493-ba6d-b19b3d6a071c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d78049c4-b063-4486-b926-49310344ef36"
        },
        "item": {
          "id": "a26bb1c4-fa38-4231-809a-5185a7d5aaf8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fd694db7-adb8-4e91-bcc2-c7cafd009a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e105216-31a1-430c-b73a-e804f53addf3",
        "cursor": {
          "ref": "5a9400d8-fc88-4e2b-8d4f-a9d901dd28b8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e465b9c8-3c52-4f65-b312-26d19ee8b832"
        },
        "item": {
          "id": "0e105216-31a1-430c-b73a-e804f53addf3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e1bbb078-8f4f-4622-aec4-1a5341ede693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83994ae-37b0-44a1-8cf4-557d009cbe34",
        "cursor": {
          "ref": "4ebc5d44-9947-4103-84d1-6b5f7ca77542",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7f1d5e59-b5f6-40e2-b46a-f90721277cb7"
        },
        "item": {
          "id": "f83994ae-37b0-44a1-8cf4-557d009cbe34",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eab3e7d7-b66a-40a2-ba30-5f6c11c620bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343b032e-748c-4e15-870b-957365551a55",
        "cursor": {
          "ref": "0544ad66-bbe0-411b-b16f-ec5d463480fc",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "98108e54-3abe-41cc-9253-46c96ceca435"
        },
        "item": {
          "id": "343b032e-748c-4e15-870b-957365551a55",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b31a3778-ce60-40ca-8f03-663d764fde73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493944fd-a37e-4da5-adf9-51880806e45f",
        "cursor": {
          "ref": "954c82be-55c0-4520-bc20-1b37cee8fee9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "55ca0c01-ecf3-495b-b6b3-f6ce583be4f1"
        },
        "item": {
          "id": "493944fd-a37e-4da5-adf9-51880806e45f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "66df3c02-d503-40fe-8254-e93726613be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12047a6-25e8-4779-a658-b47eb1a13928",
        "cursor": {
          "ref": "b1e8ec95-a73f-44ce-b829-780bf75b83e0",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2c3448cc-0a2a-4b2c-8196-eb4495cf8675"
        },
        "item": {
          "id": "d12047a6-25e8-4779-a658-b47eb1a13928",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a2abbe90-2083-4045-a84f-ce44c3bb5322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d06bea-85b1-45fa-8d52-24b6a892c40a",
        "cursor": {
          "ref": "227bd556-d5b1-42b3-8bd7-447312520c6e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ddc54b8d-345b-46c7-bd09-822cc881cdd3"
        },
        "item": {
          "id": "77d06bea-85b1-45fa-8d52-24b6a892c40a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6dae19f2-9cfc-4f66-8b35-80211d3cad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22687088-46ab-4887-b718-39f03a4de22e",
        "cursor": {
          "ref": "fe7a9683-4a7c-4c82-a7f1-e527965a6a63",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0e82c888-ed87-4d7d-b30c-14ac2ca2cab8"
        },
        "item": {
          "id": "22687088-46ab-4887-b718-39f03a4de22e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c58d7415-ed27-4631-a1a3-398a1a648593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d77952-9479-4656-a19f-b79532dc01b8",
        "cursor": {
          "ref": "0bda2377-1a2b-4a18-bb6e-f87e0145e890",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ad52a9f7-dd9a-4874-b85b-b26be0a64dcc"
        },
        "item": {
          "id": "15d77952-9479-4656-a19f-b79532dc01b8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eb3c9f75-f05e-4a60-9d94-03e5c42c64f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03ea77f-b8f2-49ac-b558-9e76e5627342",
        "cursor": {
          "ref": "cfdf048d-dfdb-42ef-8b39-267623a6ab60",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9d561e9c-a3b4-4c7f-9af4-bc3373de0e92"
        },
        "item": {
          "id": "e03ea77f-b8f2-49ac-b558-9e76e5627342",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "23aba57c-603e-43dc-8185-f3f667b56ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10af3db-b60f-4d35-8999-4544c7171207",
        "cursor": {
          "ref": "c8b12006-2758-4fb3-80ed-f19d3807128c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4e7b999f-0e70-4fce-a7b6-8939cfa004a3"
        },
        "item": {
          "id": "b10af3db-b60f-4d35-8999-4544c7171207",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "618113e9-4c67-4e00-af89-da73c739432b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17b60fc-4cf9-46fc-9039-06c7ef7fca50",
        "cursor": {
          "ref": "5a348907-9b91-4055-abf2-1c15e9ba737b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ee45421-420f-44a8-af2f-aefb00e7c3d0"
        },
        "item": {
          "id": "b17b60fc-4cf9-46fc-9039-06c7ef7fca50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b05f77ff-c694-41c0-9b9a-c1843d6b0c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84e8813-f76c-41d6-a056-afd71759eeac",
        "cursor": {
          "ref": "bd2aba1c-bf45-49a9-9ecd-acb5eec4c1cf",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aa7c1f3f-8a92-4ee6-90fe-17e89ba9b09c"
        },
        "item": {
          "id": "a84e8813-f76c-41d6-a056-afd71759eeac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b3c4878f-5408-4d17-9e4e-7b0bd32d76ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a66b3f-8e9a-4d2d-8e3d-c6a7e31a4810",
        "cursor": {
          "ref": "31acdc21-2942-4bc7-97dd-50b7d7eac643",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "28319c4d-2ca1-414f-8b52-353c435652f7"
        },
        "item": {
          "id": "86a66b3f-8e9a-4d2d-8e3d-c6a7e31a4810",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d5b65846-4e9e-4605-ab06-20b64d72a462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99316910-5145-41b8-b1e0-11426410013f",
        "cursor": {
          "ref": "0552956a-5a99-4cbe-bc2d-ac8b02ca3dc6",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e5b375d6-3a1a-4d62-8903-156d590a6673"
        },
        "item": {
          "id": "99316910-5145-41b8-b1e0-11426410013f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95881527-85fe-4797-847c-4689602431df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476e540c-ebe4-41de-a425-6b732f1207ec",
        "cursor": {
          "ref": "27baaef4-7176-4562-ac52-a79d0403696c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9703e06a-e526-4ca6-bbe5-f3b6d35da1d6"
        },
        "item": {
          "id": "476e540c-ebe4-41de-a425-6b732f1207ec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "18400351-3431-4c91-9f02-9680ded410d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb5b035-2923-414d-8a74-429a05178059",
        "cursor": {
          "ref": "2f67540e-54ba-4e3d-950c-04c29ead3bb9",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "88051149-be4d-46a4-9b9d-b8561245486c"
        },
        "item": {
          "id": "9eb5b035-2923-414d-8a74-429a05178059",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3b6694c4-5eba-4d9d-ad06-5853a921da65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7224767a-3bfc-4279-bfc9-d14d7ada14b1",
        "cursor": {
          "ref": "dd8052f5-85e5-423a-9cbf-b946571c9c15",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0d80159e-3a63-40aa-a32b-4606eee35853"
        },
        "item": {
          "id": "7224767a-3bfc-4279-bfc9-d14d7ada14b1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d7b93b87-57c6-460d-a730-c729fadcd6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fdbfd8-8c92-4806-91e8-1fabb33a8897",
        "cursor": {
          "ref": "7703051f-324b-4481-a136-2fe4db1b492c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a3ebe55a-02be-4da2-90c8-3be227eb3870"
        },
        "item": {
          "id": "05fdbfd8-8c92-4806-91e8-1fabb33a8897",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0713c540-12ce-4e6a-891d-c3da8c61c3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bbc343-6670-465a-b00c-968f7b43ea4c",
        "cursor": {
          "ref": "25f51bb2-0e18-4f98-bac9-0cade37966ad",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0a0ddc31-2b27-4faf-90e6-4d72f9eec14e"
        },
        "item": {
          "id": "20bbc343-6670-465a-b00c-968f7b43ea4c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8d2b3878-8faa-4f77-b20d-97da38aa3d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fba384-ab18-4445-ae4a-3f8daf4a31d2",
        "cursor": {
          "ref": "ba1b13e5-4709-444b-a33b-5923ce6ca08d",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "434c7502-8466-4bb4-84b6-8a78dfc07549"
        },
        "item": {
          "id": "26fba384-ab18-4445-ae4a-3f8daf4a31d2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a8860444-a258-415c-bc52-c136067299f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0137db-670a-46f6-83c5-0cfa6a5616cf",
        "cursor": {
          "ref": "4adaa8ce-3bac-4a74-b39f-b00e48f03623",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a90fe1d7-ab03-4354-82d4-edbfab0d44b5"
        },
        "item": {
          "id": "4d0137db-670a-46f6-83c5-0cfa6a5616cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "36dc7673-c019-4f33-9f58-3d730ba81d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9971638d-4c51-404b-bfd3-78886b58be3c",
        "cursor": {
          "ref": "523632c0-eed3-44e3-b309-555e02a28425",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7ce3162a-0ca4-4c21-9390-e225bdb4b07a"
        },
        "item": {
          "id": "9971638d-4c51-404b-bfd3-78886b58be3c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "00fb0a89-2157-486d-bf6f-c0998107473c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd277e3e-3dab-4c1a-be6c-8270120db988",
        "cursor": {
          "ref": "12b7bb96-bc91-48b2-b26e-c6c18fe10733",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3e26382a-7278-48fa-bab2-9263efed4f0c"
        },
        "item": {
          "id": "fd277e3e-3dab-4c1a-be6c-8270120db988",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ab383047-46c8-4f80-be80-ab1e92ca66e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4a142f-8181-4f44-97a2-b17684d77196",
        "cursor": {
          "ref": "ad651993-59c3-44f3-a742-125665a0a2f6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9c11c5fe-c91f-44ca-8b14-a51dbe32536e"
        },
        "item": {
          "id": "ba4a142f-8181-4f44-97a2-b17684d77196",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85251e4b-762a-4b0b-a979-55cd568ec6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e015e851-8fc8-4b44-8abb-81646c5ce598",
        "cursor": {
          "ref": "aa113fb7-759f-4584-8d4e-afb724834616",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1a9e11e5-0ac4-4d6f-b376-70bfb2ec626c"
        },
        "item": {
          "id": "e015e851-8fc8-4b44-8abb-81646c5ce598",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a6f89d03-7459-472e-91f4-acb8bf9132a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e1c455-06cf-4eb1-a4e3-29e62c35b687",
        "cursor": {
          "ref": "5dfc72b0-d657-4073-8f67-baef78fdd8ce",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "181f4b20-9419-45f7-bb1d-337ce52c2fa4"
        },
        "item": {
          "id": "f3e1c455-06cf-4eb1-a4e3-29e62c35b687",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c49e5341-952c-4232-9e06-10106b34a902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b8ffe7-0cb9-456b-8d46-c11a25c8f4d3",
        "cursor": {
          "ref": "1323c6ff-2937-4aa4-85a2-5c7eec54f6d0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "45af9b9c-84b5-4d0c-8011-eaf5c2210af7"
        },
        "item": {
          "id": "75b8ffe7-0cb9-456b-8d46-c11a25c8f4d3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8c11ba78-7014-41aa-9105-05e9202afd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5847c322-e078-44c0-b2b5-e053e3fa4688",
        "cursor": {
          "ref": "5c607c36-5e46-4ca6-8ee3-649f98640211",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4588fe15-7da0-4321-942e-8cc6d4bf6d74"
        },
        "item": {
          "id": "5847c322-e078-44c0-b2b5-e053e3fa4688",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "66dcabb0-bdb5-48a5-91fe-2f4bf70a16d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7baefc3-701c-4391-88ab-1625752a551c",
        "cursor": {
          "ref": "bd16ec2a-4029-4501-8132-a35271b15238",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2ab49bd9-23f6-479d-96eb-e90b938b5206"
        },
        "item": {
          "id": "c7baefc3-701c-4391-88ab-1625752a551c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "716ba3bf-4172-4d73-aaa3-1b89c889ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d4884a-bca6-4b11-9fcc-934ac98b6ad2",
        "cursor": {
          "ref": "24ea7f09-d4ef-4ef1-b875-1ae2ec91f7a9",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "88c42ad3-6d32-49a7-88cc-9e3365bcb63c"
        },
        "item": {
          "id": "39d4884a-bca6-4b11-9fcc-934ac98b6ad2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a5398805-8e66-4856-a2a7-9acb00656f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b6c9d-4bd8-4f72-a11a-13d85337e312",
        "cursor": {
          "ref": "ca2cf6e3-5a5d-49d9-98b3-0f9196f62869",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "035e2eee-86ee-48e7-8d04-862737afd061"
        },
        "item": {
          "id": "d03b6c9d-4bd8-4f72-a11a-13d85337e312",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6a997164-bdae-4f1b-aac8-68d851cedbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294f9bd1-2c4d-44c5-9f5d-6d4790c0fe8b",
        "cursor": {
          "ref": "87802cba-6dec-43f6-9986-ebe6a8da7699",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "46d666ed-2fb8-4060-a7a2-570c6fd697f2"
        },
        "item": {
          "id": "294f9bd1-2c4d-44c5-9f5d-6d4790c0fe8b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cf62fb47-eb73-4bae-b680-9fae482e0d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c03a40-f7d1-4890-8881-8bc152003418",
        "cursor": {
          "ref": "c86aa196-07b3-4f2a-8056-dd680cd742e7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a8016e13-4693-4a18-805a-c4718dd688af"
        },
        "item": {
          "id": "53c03a40-f7d1-4890-8881-8bc152003418",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "be6b37ce-4037-4f39-b158-78c70b9f8109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6bd758-d5ea-49ff-b7b1-5bb3b5249057",
        "cursor": {
          "ref": "eccf3f93-e1b0-4e61-a8b1-0292878db4cb",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fe6a3fb7-dc18-4719-b559-8f14355a5a17"
        },
        "item": {
          "id": "bc6bd758-d5ea-49ff-b7b1-5bb3b5249057",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9c782e82-15bb-4346-bb8e-da763e7ae94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ebc97a7-ca9f-4aef-8c72-e17ae1113433",
        "cursor": {
          "ref": "88e6281a-ff08-4e72-a791-8f9b225c5d31",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2a350ca6-d964-4f1f-9321-2c630e660dac"
        },
        "item": {
          "id": "0ebc97a7-ca9f-4aef-8c72-e17ae1113433",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "abe91c6a-574b-4c98-8e31-173c1ee8ca7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ec0701-f7b8-4493-baef-a375166302f2",
        "cursor": {
          "ref": "56b52023-044e-4f90-bc6c-82575225c0ed",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5a7050e1-7058-4097-836f-ddea6e72fe7e"
        },
        "item": {
          "id": "c7ec0701-f7b8-4493-baef-a375166302f2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0db3a4e7-51e5-4d22-bd96-3e72e39c1c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24d965a-9ddb-427b-ac76-bd2808ca57ec",
        "cursor": {
          "ref": "f41880ae-c2fa-4033-8627-5bca63edb200",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a8ba67f9-a4c0-4405-b289-50d6edae674e"
        },
        "item": {
          "id": "a24d965a-9ddb-427b-ac76-bd2808ca57ec",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "89c24820-da88-4945-8703-12088100ae94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b495206e-4af6-43e2-b37c-89062b3851a5",
        "cursor": {
          "ref": "e39f7912-a5a1-452a-9b64-fa54f66d2362",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6003791a-d991-46a7-afa6-e1b6e12eeb89"
        },
        "item": {
          "id": "b495206e-4af6-43e2-b37c-89062b3851a5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "21f89993-b01f-4113-8048-a87380f97610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d5ccf9-0ab1-4ea6-8073-fca157a81ade",
        "cursor": {
          "ref": "726365eb-190b-4569-92a1-88f2a2b35eb1",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c1e5cdc3-0910-475c-804d-d6c10fea1ac1"
        },
        "item": {
          "id": "e8d5ccf9-0ab1-4ea6-8073-fca157a81ade",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b32a859a-419d-4114-ae2e-279b68a89373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feed82b8-c41b-421e-b501-cd0c619c421a",
        "cursor": {
          "ref": "edc3b9a1-cf36-4a20-968c-e182a094e435",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6a21744b-a2b9-478c-a424-fe6451e963ec"
        },
        "item": {
          "id": "feed82b8-c41b-421e-b501-cd0c619c421a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a2809724-f677-4a67-8938-7058980dc037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cc1fab-0696-42bb-bd4c-3dcdc35262e4",
        "cursor": {
          "ref": "66ecd3b6-1027-4a7e-8fc0-b661ddd1d27d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f7559141-b4f8-4b2a-88c4-e680e646c830"
        },
        "item": {
          "id": "43cc1fab-0696-42bb-bd4c-3dcdc35262e4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d23f592e-2c2d-41a4-b9c0-b9a10878ad1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8a6d34-bd22-4335-8b51-6410f24783f4",
        "cursor": {
          "ref": "d4967bc6-938e-44b1-a436-e12918432c17",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "497fc062-9d37-45eb-9938-1ce8d7e4e796"
        },
        "item": {
          "id": "0e8a6d34-bd22-4335-8b51-6410f24783f4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9574b2cd-b6b7-452c-be01-95862682f579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c655c634-bce9-4984-a7de-581a6f350b30",
        "cursor": {
          "ref": "ae2f0e26-d8d0-4784-93cf-ab529dafcb3d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "de805826-0acd-4439-89ab-3fcd1e290c82"
        },
        "item": {
          "id": "c655c634-bce9-4984-a7de-581a6f350b30",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4b83f52d-f00f-4340-add8-82f90e998aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24433ed3-0bd2-447e-8b77-78b0eb7f5871",
        "cursor": {
          "ref": "a58388cc-e711-4f43-b62e-4632fd072f13",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "05bb460d-3a41-4cd2-a244-477155b50ce1"
        },
        "item": {
          "id": "24433ed3-0bd2-447e-8b77-78b0eb7f5871",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2f687b3f-6567-43d0-970e-272003e51f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf74dd-9b7b-422c-98da-59c7a715f6f4",
        "cursor": {
          "ref": "f4786b3c-9661-48d7-8bd6-1915d1b500d0",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c8cb8485-12fd-4f5b-a235-a30752e48ecb"
        },
        "item": {
          "id": "f8bf74dd-9b7b-422c-98da-59c7a715f6f4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a34e0c71-8ada-472d-ac2f-3fe8a062550b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9462421-71b0-489b-988a-b11692b1412e",
        "cursor": {
          "ref": "160ffdc0-09e5-48eb-979f-208c29ec2fd9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1d940b4e-7b51-43c5-a60c-90f943e33cfc"
        },
        "item": {
          "id": "b9462421-71b0-489b-988a-b11692b1412e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9184aa47-23ce-465e-a1e8-51af60996bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219ab4b9-19e3-4a50-840d-624b47b4136a",
        "cursor": {
          "ref": "4b6c1ea6-71fc-4c6c-a296-6aa5f93f441c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "49549110-a0c3-4b34-91e9-ceea9243f2b3"
        },
        "item": {
          "id": "219ab4b9-19e3-4a50-840d-624b47b4136a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6400582e-7464-4e09-a470-553e1c8b720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20d32ec-0e00-47d2-9bf1-1d65b6200053",
        "cursor": {
          "ref": "ae912995-99b2-4010-b0ac-63d9227a76af",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "be3c194f-8e7e-4af9-9921-77918f6a190d"
        },
        "item": {
          "id": "b20d32ec-0e00-47d2-9bf1-1d65b6200053",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c5ec8d00-da78-4cb9-92e3-53362ae6ca5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc63ec5-1cdb-4770-8765-752540922a96",
        "cursor": {
          "ref": "730707f3-04c5-418c-96e4-49be0f84a53c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6d917105-3a7f-4237-816c-8a86403d74a6"
        },
        "item": {
          "id": "7dc63ec5-1cdb-4770-8765-752540922a96",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3e329e20-73c5-4962-b541-014c49e11ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cabe9c-2c12-4c39-81e2-6b0c39e4125d",
        "cursor": {
          "ref": "80b5705b-bbed-4593-80dd-7d9c8a32bf81",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "259f211e-5f59-47a0-a846-2e9e167fb86a"
        },
        "item": {
          "id": "00cabe9c-2c12-4c39-81e2-6b0c39e4125d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f15b84fb-c07e-4eb7-9782-1067752d4455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694271a4-30e2-40f1-98ff-16ed6a480e47",
        "cursor": {
          "ref": "de00bfc8-f839-4b95-aecc-938ea0b52ad9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1ad660c1-0a58-47ae-97ca-3474de2155ce"
        },
        "item": {
          "id": "694271a4-30e2-40f1-98ff-16ed6a480e47",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "38000d3c-8d16-4163-bfa1-a7ef8f2e46a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35a9510-8eba-4ea2-a985-a08a8c2d033e",
        "cursor": {
          "ref": "8902c32e-b733-4fba-b3c2-79a7984bb252",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b06794fd-2f02-44be-9874-43c0fc5a48d4"
        },
        "item": {
          "id": "d35a9510-8eba-4ea2-a985-a08a8c2d033e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8a028fc9-1160-4368-9ccf-1e27637bb68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab70b95d-913a-4c5a-b981-c7d37939d3fd",
        "cursor": {
          "ref": "fd840500-94bf-4fc4-95e2-26678342184b",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dbe8af82-f374-4bcc-b320-205857e830e5"
        },
        "item": {
          "id": "ab70b95d-913a-4c5a-b981-c7d37939d3fd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "997a2e52-ec26-4a86-8054-3a65453b1087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2de871-63f4-4aba-844f-4ab1336630c6",
        "cursor": {
          "ref": "d17cc159-fb93-4bdd-b5a0-bacb2edf5a63",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6f1d37ac-9ae0-49fc-8147-b8b25d9c9adf"
        },
        "item": {
          "id": "6b2de871-63f4-4aba-844f-4ab1336630c6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "315a7dfe-6c7a-4f1a-9e96-67c1acee4410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f722d96-fd44-49a7-8670-f33427f64aef",
        "cursor": {
          "ref": "6a4b49ba-1a78-4461-81a4-4bab57e87bd2",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f7ce5060-fa6d-4dfb-8a20-5be28d74bee3"
        },
        "item": {
          "id": "8f722d96-fd44-49a7-8670-f33427f64aef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "378d8ceb-fc1a-4813-be67-dc5bcc3bc4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b846e629-17b9-4ee9-8f5f-4a0a89c897f6",
        "cursor": {
          "ref": "3ede59c7-7b75-404c-9ff5-8211f93f3b48",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "234548d3-88a6-4359-99a5-b57e87502e0d"
        },
        "item": {
          "id": "b846e629-17b9-4ee9-8f5f-4a0a89c897f6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c453188e-c8f2-45df-91f8-400c694b6f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708330f9-01b7-4fa3-a420-433c15b98d58",
        "cursor": {
          "ref": "49729319-2fac-4833-a845-0eb2dff978a0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9f2efb3a-229d-4208-a56f-fe76b94ce256"
        },
        "item": {
          "id": "708330f9-01b7-4fa3-a420-433c15b98d58",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "db1fe1db-51c6-44b4-b9ea-c291947b77ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b52f7a-ef8e-49df-80ad-f0b734d0cdd9",
        "cursor": {
          "ref": "b7d0adf9-3b19-464e-a4ff-ae78e0c77c54",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e9294914-b095-4b1b-b7ee-d55211c17192"
        },
        "item": {
          "id": "95b52f7a-ef8e-49df-80ad-f0b734d0cdd9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3c47db1f-7f1c-4682-a685-0e8d5c42828a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c40b16-4da8-468a-ad11-310e4821e30f",
        "cursor": {
          "ref": "eaa3f58b-4a4c-44f0-84dc-080ec97ad42f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e08602e2-da46-4d26-b2fb-43f4c3020196"
        },
        "item": {
          "id": "b4c40b16-4da8-468a-ad11-310e4821e30f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73ce975f-5406-47fb-94fb-ff91cdfe0398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9389ab-3d3e-46b0-abef-48849dace444",
        "cursor": {
          "ref": "0c272633-a4d7-4621-bd31-6c239a205db7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ba2060e5-7955-446e-9033-a6e9c065aab0"
        },
        "item": {
          "id": "ee9389ab-3d3e-46b0-abef-48849dace444",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d4b1132e-850f-4ed3-be36-eb642d410479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c328921-5f5d-41a5-a6b1-4c074588459c",
        "cursor": {
          "ref": "6908137e-cf76-4d26-ac80-7742b0897fad",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "94c411ad-60c3-4999-b5d5-f720401ae6ba"
        },
        "item": {
          "id": "2c328921-5f5d-41a5-a6b1-4c074588459c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e6e2a24a-0a7d-4721-88a5-58ceee36897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d5b123-3443-4714-a89c-fd28baffcf60",
        "cursor": {
          "ref": "52eda227-bd8e-4a05-a4d9-7ee27a92b992",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0b3f1cfb-00c3-4703-9810-17d488558c5a"
        },
        "item": {
          "id": "26d5b123-3443-4714-a89c-fd28baffcf60",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "58c6fe08-9efd-45a0-8e78-2f17ab3acc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a07cb5-57ba-409f-b80b-bf3ede99fac3",
        "cursor": {
          "ref": "f99a2ee1-eaf3-416e-9cc6-55aa60bb1e3e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bbc63f32-2dde-4a9b-a8cf-4dfd43ae7ab2"
        },
        "item": {
          "id": "74a07cb5-57ba-409f-b80b-bf3ede99fac3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f18f471f-0525-4fcf-8413-631a604953bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e39fa46-5014-4f31-9142-019d53531434",
        "cursor": {
          "ref": "b3b126d7-0ddb-4d37-bad8-c7ba7e109cba",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18e22731-2243-431f-930e-9d6e46c40887"
        },
        "item": {
          "id": "4e39fa46-5014-4f31-9142-019d53531434",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d6673422-e0be-4ccf-9a40-9960decb93e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473b2fd6-840c-421a-a55b-83a61baa1fa0",
        "cursor": {
          "ref": "b68ff0c4-56e7-47a6-81cb-bbabd90b9233",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "09754e65-3217-451e-bc35-c0a41f2e11c0"
        },
        "item": {
          "id": "473b2fd6-840c-421a-a55b-83a61baa1fa0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e5cceb54-6892-41e8-b825-3d544e145bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513754bb-8151-4bcb-8503-1921cbb3c736",
        "cursor": {
          "ref": "419faa1f-d73d-45de-83bc-a94ebd19f292",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9ad7c743-5db8-444a-9750-21b3c8a99147"
        },
        "item": {
          "id": "513754bb-8151-4bcb-8503-1921cbb3c736",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "78764176-617c-41db-a47d-c41a320c2c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c7eae0-76d5-4d10-be45-56ad162f88c3",
        "cursor": {
          "ref": "f3862f02-d5e8-44fb-b5fd-a174ee5bd688",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "02ae1e45-054b-477f-8e4a-c11fae991f6b"
        },
        "item": {
          "id": "13c7eae0-76d5-4d10-be45-56ad162f88c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "20644a34-f3bd-4817-9a4b-fb183a5c8575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98478803-f187-4a96-a884-36a3489e36b3",
        "cursor": {
          "ref": "86c658fc-4d36-4905-a077-2c66862d98db",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8f1188dc-0e46-4c6d-b5a6-ce54d6ca46eb"
        },
        "item": {
          "id": "98478803-f187-4a96-a884-36a3489e36b3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f9f89784-5e2e-43d9-9da4-7d2fd332d322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b8f590-2e16-473e-bee1-b8b1d22e69be",
        "cursor": {
          "ref": "6065b650-142e-481d-a7cb-adf5c1027329",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "db184b56-bc5d-450e-8511-bb479fa780ea"
        },
        "item": {
          "id": "79b8f590-2e16-473e-bee1-b8b1d22e69be",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "83a81411-14d4-4205-a775-2c0303626844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e528f9-5885-4fa4-8b3e-66bcb70a3ab8",
        "cursor": {
          "ref": "96ca3c7a-fa48-4959-a28c-ffc698ade3b0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "38d104f8-b956-4e6f-9477-ae669dc9e9df"
        },
        "item": {
          "id": "e1e528f9-5885-4fa4-8b3e-66bcb70a3ab8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0a964471-9280-463d-aeee-7b9a85ab690c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb76b3b7-47d4-4656-b39c-7f398ddb71b3",
        "cursor": {
          "ref": "ae3f4180-228b-4f37-8eb7-2e8559624d87",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0fbc235b-286d-49d5-b323-e8341be9379d"
        },
        "item": {
          "id": "eb76b3b7-47d4-4656-b39c-7f398ddb71b3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e44b07a9-459d-42ba-8c05-54a20dd12c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fa8d72-3eee-4447-b515-5a99b2eec8f7",
        "cursor": {
          "ref": "5bafac95-6987-41c1-8811-b318198604fe",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ef45f7f0-6ab7-4f0b-9948-ea6761ba27d4"
        },
        "item": {
          "id": "f4fa8d72-3eee-4447-b515-5a99b2eec8f7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b158430-d297-4d48-a620-68528a05ef9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528a6664-c3b8-4730-a7ae-cd64adf037fe",
        "cursor": {
          "ref": "82c270e0-2048-4f18-ab06-f7032d51a493",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "32effc99-0d3f-4316-8168-45ed959e3643"
        },
        "item": {
          "id": "528a6664-c3b8-4730-a7ae-cd64adf037fe",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "38164350-d852-4388-8659-3364214c803b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0022a801-5037-4ae2-a79a-ca65a8ec2b97",
        "cursor": {
          "ref": "cee2bf14-1f3f-4a17-9d92-4819c4e24f20",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ebd2688f-946d-4e1e-ac5f-75b7e1d002d6"
        },
        "item": {
          "id": "0022a801-5037-4ae2-a79a-ca65a8ec2b97",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b27f2433-81b9-47aa-a0a7-5e34d5bb77b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457f831e-e662-4dc4-8d6e-4e6a48e31c00",
        "cursor": {
          "ref": "d76c2d19-5a60-4df3-adbc-83846447bc03",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f283c94-3d6e-4a6f-a005-2cad2dc1c294"
        },
        "item": {
          "id": "457f831e-e662-4dc4-8d6e-4e6a48e31c00",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d680cf54-933f-42d4-9a60-afc31d11c479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead41703-5362-41d6-a92c-6a8e1b3f1dcf",
        "cursor": {
          "ref": "14cb058c-7c34-4fdc-a832-7582030f8ab2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2b3c9bb9-28ca-47f8-9e2e-29f9b20eadf3"
        },
        "item": {
          "id": "ead41703-5362-41d6-a92c-6a8e1b3f1dcf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cbf9386e-521c-4a17-ba0c-bb1da973529a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d7eacd-e38d-4e76-b2f4-7ff25ab0bf48",
        "cursor": {
          "ref": "7129b426-8a21-4d96-a715-07c1db294495",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1156ed1a-aa39-4f56-bbc6-1689ebb13001"
        },
        "item": {
          "id": "03d7eacd-e38d-4e76-b2f4-7ff25ab0bf48",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "547ef078-854d-4f04-b104-ffe3f716260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce60c81c-3b1e-4597-8523-ae3719aceed0",
        "cursor": {
          "ref": "71772d85-1404-4ac2-9c63-6fbdd05cb191",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "123a8b93-8bb4-4e4e-a3c8-afea18c6126b"
        },
        "item": {
          "id": "ce60c81c-3b1e-4597-8523-ae3719aceed0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "715db21c-6339-4ec9-9205-6180716f8881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096df5ae-2261-41d8-aa86-5c2af5a142f6",
        "cursor": {
          "ref": "7e1721f3-f2cd-4ade-941a-eed5d0e5247f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ff945794-34f8-4bfa-bce8-11df3cc813f1"
        },
        "item": {
          "id": "096df5ae-2261-41d8-aa86-5c2af5a142f6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ed297ed6-98e0-4187-9c60-e59338576c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb55ff-736d-48c2-859e-1b223e225ff0",
        "cursor": {
          "ref": "7cc4dee1-b08f-4d12-beea-01eb8babf886",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "536b4710-a38d-42ba-9d98-31bbe81f9053"
        },
        "item": {
          "id": "d1cb55ff-736d-48c2-859e-1b223e225ff0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3f07ddfb-52a5-4c5e-93a5-003518126461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af05995-a7b6-4463-bb5c-4f0500e3ba59",
        "cursor": {
          "ref": "0da33ef7-b24b-46c9-879c-5eb160168717",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e6b9afcf-7d60-41f7-8943-9965f306be29"
        },
        "item": {
          "id": "9af05995-a7b6-4463-bb5c-4f0500e3ba59",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "111fd64a-0097-4635-80e9-d116f5df01d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf55d67-a2fc-4939-bebf-cb48808dda49",
        "cursor": {
          "ref": "28a3ee8c-98f7-446d-abff-e1dc693b7c9f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0045600a-bad4-44f8-a42c-4741e09b7059"
        },
        "item": {
          "id": "ddf55d67-a2fc-4939-bebf-cb48808dda49",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "34141cd1-39c1-4497-9d31-dd7ed80ecc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d455510-a4a0-44e8-9990-008ca6968be6",
        "cursor": {
          "ref": "55289cec-e43b-4514-a3b6-aa7376617169",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "949a5e22-e71b-40c1-a4c6-adf2a354458d"
        },
        "item": {
          "id": "2d455510-a4a0-44e8-9990-008ca6968be6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ccf82e9e-66bc-4283-a5ea-7c01504c27ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a739ce84-887a-45e9-8042-1854237e6771",
        "cursor": {
          "ref": "fe686692-fc5b-4e3f-af8d-85211ed9eb21",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "31204f34-0cbb-4aff-9cad-8b84c6716ec8"
        },
        "item": {
          "id": "a739ce84-887a-45e9-8042-1854237e6771",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "43d25edb-7544-44c1-945d-fff77a1ef47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e6ed29-752a-43bd-87e9-b1f8fc388996",
        "cursor": {
          "ref": "aa140b3c-4155-463d-8bad-d24c7b885b0c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4df9aebb-8c39-45d4-b937-66800b2bdfcf"
        },
        "item": {
          "id": "33e6ed29-752a-43bd-87e9-b1f8fc388996",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "036f4431-cc95-4459-8918-be3520ab9f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d354702b-4e6d-4a9c-9cb5-a95a0f25d213",
        "cursor": {
          "ref": "089dd7f5-30eb-4afe-a975-8bd05b462fce",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f2c567bd-fe21-4e6e-9af9-217e63ed362b"
        },
        "item": {
          "id": "d354702b-4e6d-4a9c-9cb5-a95a0f25d213",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c55ada0-d8ae-4119-8cd7-3c5bf272cc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372b323f-0173-4589-93e5-93f7f091a6e9",
        "cursor": {
          "ref": "978a2561-3684-4f93-ace5-1d37b2e5b457",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "85ef9dac-5e42-48f6-af10-2a81ee9b3cda"
        },
        "item": {
          "id": "372b323f-0173-4589-93e5-93f7f091a6e9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d885976d-d6ed-401a-bb6f-1298a1d04e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d4d8b2-b09c-4b3f-82c5-5259958e8214",
        "cursor": {
          "ref": "77bb851a-a284-473c-9c43-5da171d650b7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "04c5f641-d595-45de-bf7c-da7565f52f79"
        },
        "item": {
          "id": "82d4d8b2-b09c-4b3f-82c5-5259958e8214",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ff838336-de53-4c5b-94db-9115e67c68ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b573472-0deb-47dd-8d54-2649b558dad0",
        "cursor": {
          "ref": "90d5bbea-2a28-4a95-aed4-34ef159d45aa",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "db2541a0-e1ee-4169-acf0-97e76fdd6a16"
        },
        "item": {
          "id": "6b573472-0deb-47dd-8d54-2649b558dad0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7ec0630d-454d-4994-909b-9a37d9a35b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d008f3d8-e8a1-4675-abf9-b0d2a7af1cb9",
        "cursor": {
          "ref": "003f938a-8832-44c0-ae97-506d762c1018",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "556f87aa-74e9-4701-b686-7a618e777337"
        },
        "item": {
          "id": "d008f3d8-e8a1-4675-abf9-b0d2a7af1cb9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b60118ee-083e-4792-a46c-46521254d666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf14e73-50bd-4c69-9de3-de570cd71cff",
        "cursor": {
          "ref": "8bc973dc-304b-49fc-9fa6-9fff24d7ef26",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c9e8457d-c11d-4343-9864-52c082139ac6"
        },
        "item": {
          "id": "3cf14e73-50bd-4c69-9de3-de570cd71cff",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f61753f-e5b8-440b-b343-4bf51031ea8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9008be-eb0c-4eab-8e93-24d947da3c09",
        "cursor": {
          "ref": "d99fd921-15d8-42f8-af6e-3fd813d620fd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d3c9d088-1a54-4247-8459-15176241442f"
        },
        "item": {
          "id": "df9008be-eb0c-4eab-8e93-24d947da3c09",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1caf4b0e-2dff-45b2-aa6b-6e746b82a7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d73ac43-fe65-45f4-a906-8878272560c5",
        "cursor": {
          "ref": "446433b4-4f83-4654-86f8-da123b54fc1a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "84d764b7-d3da-4be7-957b-61fe57277dd7"
        },
        "item": {
          "id": "8d73ac43-fe65-45f4-a906-8878272560c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0f19fd34-8cc8-402e-a7ed-0245c8495b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78cc80c-9c16-4f82-83d1-f52389c9656d",
        "cursor": {
          "ref": "165f2341-0c6f-4e64-b11a-1ea690765054",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "42ecc2c4-22c8-41a1-9580-771ac8fc15c5"
        },
        "item": {
          "id": "e78cc80c-9c16-4f82-83d1-f52389c9656d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1fbe5b27-e3fb-477d-ab0f-d782787f2478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c829695-9e1e-4d65-93bd-663295aa1e27",
        "cursor": {
          "ref": "1f5d5ffd-3d0f-4aeb-98ae-c9ac1cddbd07",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c26b272b-425a-4d12-b918-d7e977d6eae1"
        },
        "item": {
          "id": "4c829695-9e1e-4d65-93bd-663295aa1e27",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "26ceceef-658c-4967-ad63-02e7cd1b1d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfd16d6-c856-455b-bd19-93e8e55cdd4d",
        "cursor": {
          "ref": "ba7e5b49-b6ee-4fb8-9dab-f4e6529c1e84",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e9391110-5692-4690-85f0-3f6b83b2bdd7"
        },
        "item": {
          "id": "4cfd16d6-c856-455b-bd19-93e8e55cdd4d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "40967ab6-22c9-41ba-9e39-c0018e594b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116d9531-8db8-4e58-a712-716b37cad697",
        "cursor": {
          "ref": "1be9c68f-0dce-4197-9aaa-ed8665ff006c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "144fc29d-0c0e-4aea-a796-2917987bdf1c"
        },
        "item": {
          "id": "116d9531-8db8-4e58-a712-716b37cad697",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c4afa053-3760-4b55-bf44-4b93b9a09d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26e2575-0b14-4cf0-8f31-ae2932212bba",
        "cursor": {
          "ref": "e583c3b3-af41-458c-9175-00dd599fdf28",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2cc57d52-2c99-456a-9d60-f3223968ff77"
        },
        "item": {
          "id": "e26e2575-0b14-4cf0-8f31-ae2932212bba",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a93e9e93-4d8d-4357-bf17-416617c36d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6145357-efde-4c15-8156-a7d032caaf34",
        "cursor": {
          "ref": "1fca58f7-f689-4930-80e7-7c3d8dd59e05",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f6582190-9be6-4816-9109-d3d430ce1293"
        },
        "item": {
          "id": "e6145357-efde-4c15-8156-a7d032caaf34",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dcada581-04c8-40e4-9a1c-7f7ce0c0c9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf36d7-5584-431f-acb7-c763c5946ed0",
        "cursor": {
          "ref": "a051378d-fcd2-417e-9fdb-6a641c2dd493",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "24c1bd10-ffb1-4169-9a30-c472650314f1"
        },
        "item": {
          "id": "cecf36d7-5584-431f-acb7-c763c5946ed0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8295fed7-0820-4ef3-9924-a79b042e373f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35869c0-823f-4531-af97-48aa6b910c0a",
        "cursor": {
          "ref": "dadfdc14-3216-4f23-a6ef-9c85cd54b2de",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d6aa551b-ed15-4265-8ee7-8194785c5146"
        },
        "item": {
          "id": "c35869c0-823f-4531-af97-48aa6b910c0a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1e0f6e72-6d83-4bb0-8c33-a78490a8045a",
          "status": "OK",
          "code": 200,
          "responseTime": 2456,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c287118-9881-4749-a00c-c64b309df374",
        "cursor": {
          "ref": "8b11712f-8c90-4363-9347-dd12d2922015",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8d878f99-d65e-4aae-99ef-e2c0989cf33b"
        },
        "item": {
          "id": "9c287118-9881-4749-a00c-c64b309df374",
          "name": "credentials_verify"
        },
        "response": {
          "id": "19412952-95ce-45f0-acf4-7e60675a3266",
          "status": "OK",
          "code": 200,
          "responseTime": 3292,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a03cda-a5ac-4686-b9e3-4e29ecf58aed",
        "cursor": {
          "ref": "9e0ddd10-e7bc-448e-9067-d13bfb40dd36",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "66dd75bb-6038-462e-a951-196a968977e4"
        },
        "item": {
          "id": "99a03cda-a5ac-4686-b9e3-4e29ecf58aed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ae3769bc-614b-41b9-b5e8-7215e4cdb599",
          "status": "OK",
          "code": 200,
          "responseTime": 2875,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d443e8f8-4c86-4f37-968c-d86aadfeab0e",
        "cursor": {
          "ref": "e292ee5e-6041-47fa-bf50-9f056ca83c5a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc123c06-ac7c-421b-a992-d1688cca43fc"
        },
        "item": {
          "id": "d443e8f8-4c86-4f37-968c-d86aadfeab0e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b62972f-bb00-49c9-af05-011b6e51efdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d443e8f8-4c86-4f37-968c-d86aadfeab0e",
        "cursor": {
          "ref": "e292ee5e-6041-47fa-bf50-9f056ca83c5a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc123c06-ac7c-421b-a992-d1688cca43fc"
        },
        "item": {
          "id": "d443e8f8-4c86-4f37-968c-d86aadfeab0e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5b62972f-bb00-49c9-af05-011b6e51efdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5e55de-5dcd-4bf1-bcee-6cabff7e36b8",
        "cursor": {
          "ref": "751812a8-d5e9-4359-85a5-c807367492b7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2588bd6a-9fa4-4d82-8b77-aca420db76c3"
        },
        "item": {
          "id": "ba5e55de-5dcd-4bf1-bcee-6cabff7e36b8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ccdc6d0f-44a6-4c3c-89a4-399937131e07",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036a8559-af45-4f57-a48a-4edcc4e03f63",
        "cursor": {
          "ref": "5ef11ee9-60ba-43d9-ba88-85e99f9066ef",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a0fe31e5-7a3c-4153-8c3a-5f66e495694d"
        },
        "item": {
          "id": "036a8559-af45-4f57-a48a-4edcc4e03f63",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0ef0be2b-b7b9-4022-a0ee-3b7f8a3028d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}