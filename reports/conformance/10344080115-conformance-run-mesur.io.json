{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "929fb6cd-6cf8-4c07-8f48-f523214d8cea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b661559d-b959-4f7c-97ee-2ff0520bbaed",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67bdbf56-2d40-431d-bc4d-3a758bf4f220",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b6bf2496-4a7c-49f8-8444-851384e1f3a0"
                }
              }
            ]
          },
          {
            "id": "916441e5-437f-46eb-aa64-224b5a21ac67",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f814f9e1-2503-4039-ab82-38e7f3af0bb5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a6f1b918-78b5-4828-aa96-008d6094a0ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7a33e83b-1e3e-4cb2-b7ca-64dbe88e13e3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8ec09b61-0252-4c31-b114-e95d09bfc2bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e2a6bfa-17bc-4651-ae47-3f9ae22203e3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f14acda-adf4-47c6-8437-1a02b305c227",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da561451-31be-463c-baab-69d03991f237"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04a00d19-3b8c-4118-a7c0-d73a288bcf76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "465ffe78-f759-4ed0-a901-53250656d9ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "753cec4c-0a10-4cfa-a6f2-acc20801ee6c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "264adcde-54d0-4b37-9863-5046d1defb49"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edeb8147-0ca0-4c77-af3d-1ae1d3cb60a1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "936c61f5-251d-463d-a28b-5da80edc35ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52749999-dcbf-4b0d-aa5d-06659bf7d2fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed407c24-7d7e-4de7-909b-fbe35c3d5c70"
            }
          }
        ]
      },
      {
        "id": "c99a19c6-2f03-41e1-813b-bbe5768863e6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9ce11181-3b7a-4600-bc56-0125e63c03a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd8a8604-4509-42ee-aa55-7e86bb5fb89e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da0bdae4-8da0-472f-ba3b-2b8bf62cd8ad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7e0302-649e-47a0-929c-c7811896fb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64e0d8c5-f2c1-4ce8-90c0-4862266bdd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cd3424-0f6c-4b71-846e-a090a4c45507",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55061144-2308-4cc5-81b7-698e500ae891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "354c26e4-3336-48e8-bbee-4572af0768a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5b617d-e7c1-49e2-b19b-31415f251647",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512db2a1-edd8-47ae-a4ab-5b7521e8f933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2e3fd1f-8957-451b-ac02-ddeec3b4a066"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8b5ef49-e821-49af-866d-ada4798d2337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b4259ef-06cc-4f96-b548-5e87daabaaa4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a7c89c-19b6-472d-a07e-f3cd12b112f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca53bc2b-dc0d-4864-99a9-480a6753df06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14466d2-5067-4100-9088-de5c0e2f3629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fd498c-2c98-4cbe-bfa6-9e75df6add9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2fb4be87-9de1-4900-bbcd-a9e3162bb60e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3aaae884-e67f-48c7-aa85-4480635d1693",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "118c429b-8bd9-460a-b62e-506191fed758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "505f6d3f-4f80-4b5d-ade8-b0ecf2065eee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "054a85a6-b945-4787-a4ed-455ff8c2a0b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ff8f410d-7735-481c-8795-80bde7f08b93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87e0ee94-ec0a-4bca-8d8f-4d66cb81c1a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b31a5189-6d7b-42c5-909b-e3baa1b5c420"
            }
          }
        ]
      },
      {
        "id": "6f1f3f25-19b1-4655-85b2-51219031bd44",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6705d683-49f9-41de-97e6-4a89ff110da7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70f9fde3-1580-44a8-bd3e-674fa8d62a42",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e2481fc2-5aee-40f8-8243-d4b74ef32a1f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f706e1f-1d7a-4959-af5c-33573f240285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d337653-84a0-4aa7-a2d4-c031e1951f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db73ad4-ad44-4f19-bd96-f39959b860f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cb2d196-ea26-4af7-9a33-764622a56d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539b6472-d1d8-421c-86ba-52b542ea3e1b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85602a80-d609-4f3c-b42b-b93976b9249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9300ae-966a-4d72-9e1e-2baabee33667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55779b06-f4b9-438d-95ae-566ba8d8872c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86fa5251-aa1a-49ae-a06b-daa560be11ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8471f072-d75a-4c6b-be17-8d2779b85dac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc101116-1220-4e1b-9053-7901d26339d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d79457-f981-460a-8134-9be8c3fdacab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72e7557-375e-44f0-8a4b-2832d1ce046f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bf31b91-53df-44b6-b83d-5968a604bbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad81a8ff-e076-4457-8b6b-4d0d1873d44b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e89bfd-82af-4ae7-afac-c178bcecab76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80349631-ee75-4c95-8323-a2948463606d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aac7a1e-938a-47f6-abdb-ee14c6348abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed0e7ff0-6733-41ae-8e30-43d272ad7149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cf226a-2baa-49d2-93af-a420d1b87ad9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125c58e9-e505-4a79-b9e7-4a89b768d08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfaa94e4-b75d-4dcb-a917-9b19c5abada8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08a5001-ced0-4a43-9d69-c4cc419f4723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "993f2323-1b6c-498e-9424-41ef49c03695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca17a6f-325e-4095-9782-9bfadce5826f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fca53f-e3d6-489e-ad36-eccb81f48841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6025064-c810-4723-8dc8-24ba8fcb70b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2908637a-eab7-4dd0-bd1a-1007c388aa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed96cb0e-41e3-4b40-82a3-32605612c3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f135d22-b303-4b63-aa62-690352aa09c0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d20a873-5fbe-4cdc-8c9c-cffee0c94e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5a59aa-e17b-4307-b38d-073815875daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0119b902-3244-41cb-a9a4-129106ac2a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff419da-e7af-4348-9c63-c28c3f1f59c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e402f6c-9798-4a3d-9b83-c1054be34bb5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689944d-83e7-4803-a4a0-62499e5bfcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aeeddc-7bb8-47df-b7dd-56402ee46fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbae01f-aa2b-4adc-85c9-4b13da6ddcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38bcff05-5733-4454-8632-37d76643cd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9641c5f2-a784-4e9c-b53e-160e57d80ca5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e887b-a76b-4bef-8649-00a6c446bc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2508356-75a7-4d39-af27-0d59773aaada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f737b1c-47b5-4935-a5cf-78b56b5c2303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c1ab787-27d6-43d5-b93c-6b62131381dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3663b492-c041-49e6-9b4b-8a51afcdaf20",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0012a116-1fd1-4c4c-a073-400a04873d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6ac0de-e414-469a-9104-eae5c03a3c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022472c7-3379-41c9-af26-9b30841388bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ea20347-f1c8-444b-a17f-039f07db642a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfaf0c75-5035-4e27-ba55-0a9202ade931",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50bcd2f-8dcf-4f0e-981f-961fa57d1120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93af3a0-3739-4dba-b951-ee2def7b9057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3003af6-afbe-44ee-83cd-9353af2a7e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7048f4c-76ac-4447-9469-355e88547998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdfa739-c514-4d34-9996-54405572698c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba741336-79b4-4cf4-914e-a8e0d290fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7533a713-b2db-451b-8856-b3d7634a5a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c90491-d393-45ce-8eb7-3b065e575db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d8badf1-406c-4fef-a575-f6b0c032ec11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5834368-7ec3-402d-b4d0-dccafc3789a4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65519351-2097-4c5f-86c1-d2bd1b5465f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc4330a-21a0-4a8d-bb0b-8684555984dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ba8395-6c05-4576-9766-c1f37e96ccac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "810f9af6-e008-403a-903b-59e701fda502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbefd86-fc5d-4354-aa8d-748afa15c184",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71eacf41-a3fa-47d0-89ff-cb18765a31c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6651f40-99b0-47cf-84bc-519e59619eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aec99eb-f313-4e17-a3c7-53d1f5ed80fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ca0fb88-0760-4e48-9e97-11190572987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a2570b-71bd-47fd-96e3-20c768834f38",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8660ec-65fa-4a2b-a762-edb65fa6976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8acfa96-694e-4bdf-84c5-67c187021575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faee8a6-d22b-4bfb-a7bf-c1e17ba40633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa5f1af-b71e-40d2-8b6a-3eac1331d23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae18267-ac6e-49d1-875e-f7974218d8f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63e6ce2-90d1-4ea9-8bc6-cf7932ec5c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7236a1ff-576b-4454-9aec-be8a3d975ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93a1cb8-c795-402a-a2dd-30f7a4db42fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c98f96d-7926-4226-b630-518b9f48622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d6663d-ab11-41e4-9791-32fd1bc62e63",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227e5afe-2db5-468d-bf61-c415a9ebce8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd5c7c6-9119-4e5c-b0e0-e50e60a7a17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa984d0-af41-4208-88eb-ecf47345cb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baffe8f1-dbdb-4a79-b48e-9113383e86ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df4c247-71bf-43f9-9fb9-5d68a15846ee",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e5d36f-6983-4190-8a69-8e6ff42e1b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f5911a-52a9-4147-b991-ce54b1743c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce80c11b-5c45-406a-acfb-6810291f3593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "17469c76-b71b-4372-8fa4-e69d03db1ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787d68c4-d4ab-4991-b730-b79300a0c6e8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab475f16-10fa-43cf-a599-e27c80caea91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b9f0db-631f-4d8b-b508-934ce2b6486e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdb4aba-17cd-45d0-a9ae-0edf9e79d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da29998-d85c-4ad7-9704-daff79a03005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43297dc5-2de4-481a-bac1-b3373bd30cbc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291f76ae-afda-4791-8b8a-c72a3972b5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409c5341-a4e6-4ee0-b7fa-9d4f3dddbae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56033520-b5ef-4842-a85e-e392dbe5c14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef641661-4cf6-4ece-a9c6-248fdfcf29a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88ba7eb-77e6-4f43-bd39-d7eac266b577",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c238d1a-99ab-484e-9481-1bdaf7fa988b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc414e3-3802-480f-a5c5-e30f84dfdf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c075b8-32d7-43a2-b629-4d4a25d1e085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f741ea7-2e84-44a1-b1da-275a0af1a9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46325c43-dbb0-4520-a095-040ecd3e2c72",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2933e4c7-e735-42d2-8157-71122a069bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69c3e32-8ee5-4697-98da-9a41c59774a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3e2652-67dc-4a10-b6c0-58fe0899e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e6d63de-0cf0-4b22-abbb-fa9e91f09e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b08b48-781a-4852-adad-a26e2d1f0c44",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7840f254-32cd-4ac2-9804-2ca2faf94045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee848b6-d967-4bc3-985a-03aa014859bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451a28a8-19d7-4fcd-8673-ea3e3dec0c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83de8235-c4a7-4c09-8353-c2e421b47e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128c60b0-da73-4a1f-9488-c663bee48a62",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f83ecc-6c6e-4c91-ac80-9b5c361ba758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225bd834-e0df-4516-a6dd-6b3c45d08945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd43906-4c0f-4c10-a2ca-2a5f29208dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "58119701-6cf1-4a04-8ca6-394da03f9545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f1efa3-9a3f-4698-9c79-adf702246bb1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278c4ab9-20dd-4a0d-9d41-c56d43ddc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f17d81-5238-4fac-9b0e-fbab9e94e7d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536cb87a-5395-48cf-b8a8-6a141b3015d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "242de948-88d0-482f-b891-b7dc607d1bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bff3068-af4c-4330-a567-b1c597488c30",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a577d6-d6d2-4e89-8893-ee955e7d980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4879e0-d268-4b2e-b4a1-b96c65839fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cead380-84f9-41cd-93fe-e2da42be8ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5b8ef7-b392-4745-8776-4d5ab6222fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ef7bbe-855a-4c89-b4b5-d9722700b9df",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ef8a21-9301-415b-929c-86499f186bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9e857f-1798-4ab3-97d5-63b1e62750ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39fc449-1d41-4f75-976b-f303eb0d8f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "476ec266-6ec5-455d-8a51-4179c19dd681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64517473-7b95-49c0-8a7a-5040323378ef",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ff7223-01d0-4258-ad21-f5cd7a5ad21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933e4e59-5b8a-4f00-a908-1adf41ffced8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a33fdce-88a5-473e-bbe5-8cad9e6b77bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d90842c1-f856-4dae-87f7-a1762c0c6ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8e46a5-da88-43b9-a825-6d33d42a418f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f90c4f-0d74-4995-a2fd-c9739745d4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73e3a91-6088-4400-86e4-9b76e302f1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e0e6d-0eb5-4ea6-a540-fe9ca45082df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e71693-56d6-4d93-929e-95351c83b068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437bcf74-81e9-4a51-8da2-3baf3255466e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c50287-be60-4b75-9e08-4c2878997d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d25b0c-8b84-4544-b012-5db9fd4d4661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de70987-4ec1-4681-aac4-178e4be7ef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4b933b-d4f4-4835-8d8a-517822ae33d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21596ec-e7e9-4732-9aad-f6a9b6873404",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cefde2-4d9a-4d29-97f3-74faa6fa06d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8590ac5c-526e-401e-84a7-e1d381db4c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a31675-acb9-45b3-b0fe-912795ee2865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "432f8178-f798-4cf1-9a84-c419b83493bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec9d555-3686-451b-9e3e-91940a1a5b35",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ed829e-b719-4257-bcc8-4058ab7bde77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac42ba8-452d-4e66-be38-0ed2299967b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac33765c-23d0-440e-8265-bca973545554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd79957-44a7-47b5-8d93-d17905b9abd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a26aeb8-7e5a-4091-b641-2e2488ecd54f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfbb9b7-e82b-4f04-a337-5d440355ae54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67666881-6611-4789-b2ab-dea913b35c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eaea37-4bfd-46b5-9e27-6d796f0467e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "192a60e9-e3bf-4849-bcdd-822a5840f8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a30ba7-ce90-46ae-9634-81506066099f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75be48e-dd0d-4c3d-bf83-a37056925000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e986dbca-db76-4df7-8c6f-02084920d02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2efa9e2-7637-4406-8953-f1e91823b759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0201f86-9c49-4dc7-87fd-31d4c902e234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362657a8-0b2d-4e31-a1a3-644efe3e500d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5efbaa-1bbe-418d-abd0-19c5c17b8d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212ab5a3-0441-48f3-ac5b-cc7ac0b151af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1601314-272d-4dee-b084-294d9a11298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "670f6bac-c9d3-421c-9665-d73c17d58543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183a8ff3-a1d7-4101-97ed-b4fd335efe56",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc39715e-d91c-40d0-b7f6-9e78c02b06c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40918488-2fab-4608-8d4b-96e468c7f6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee980072-69cd-4e0b-b1b0-32e7594b3f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "377566b5-3c59-41b6-a416-7a47c3e86458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667bad34-c496-4da3-b88b-6c201bdb3935",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddb4787-4921-4d29-beab-4f013193356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dde481d-1498-46b6-a84d-40d0881759a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad10e797-aa21-492e-87d7-3f5920967630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c766d76a-7b79-43d7-bad9-84acac590264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657a41b2-22a3-422d-9364-420efee62002",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af0eae7-40e1-43d8-86c2-c8e866f790df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afc0dd6-9606-47bb-92dc-6b6eb846ecb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56e1f10-4dab-4a31-98b9-1ed2c48f8740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7290d5a-4a6d-4ec2-9e9a-d9fa038651ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e82e470-788b-433f-8a08-c4b0a35e4e8c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96239a88-b4ac-47f3-ac19-c83afd95af6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550472d5-d85a-4cef-b784-cd658888fa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462a492-0f74-4377-a2e3-e42bfcb88fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e92bca-23e8-4512-b7b3-6424d5baae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fed8c5-a5c3-4276-9e9e-7bd90addc510",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ff248-edb8-431c-b568-90a527c87ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b1063c-d7aa-49d9-b50e-4a07bf3e356d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eef34e9-b3a7-4d1e-ae7a-dabb388fc5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb16b45e-28c1-4269-b321-0f76512fc227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dce6e9e-495f-41d4-b8d0-e330a2955bc7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27850cb-f120-4799-9225-733ff0fc7480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39af0247-5c95-4a4b-b530-ef5495f15aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61db0551-419d-480b-aff3-058f3c944180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "62d81a86-e426-44e6-bdf8-c7f05e59456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7bf078-d2f8-4939-b3ec-572bb890902c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2239b90-3132-41f1-ac10-aeef33ad64a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f85e66-b794-4127-b812-a1f8a2c782bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af65d3d-5093-4dc2-a933-d533e55a36bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0a331639-6ecd-4ab2-acd4-ac31903fe335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55e196c-dd8b-4bc7-aa44-98640c6548f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78faba3-2d69-4264-a83e-45f59accf3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b515d6dd-8d4f-492e-9fc3-c1f4ec327121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a2471e-b5df-41ea-8ecd-111ffb5d5b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41334f53-5759-48c3-8dfb-8e190c811c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f4c3aa-2dda-427d-a225-3e327f9bd93e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5937cd86-3cf2-4178-9750-5f3775802d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31871791-1966-4e1b-9506-bc688409a5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3519505-a7eb-49a6-9aed-570946818527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9f0395-9606-4a5c-85e7-29fe706ddd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c09e609-c2f4-42d4-91c7-835d3c158692",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d19005-04f8-4894-94ac-3e7bdb5ddce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b1a53f-1033-44b9-bd58-778b2b7ab82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ddd567-efc5-4f9c-baed-5b7651bd7682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d52e4bf-4d15-4b5d-b3fb-90ff7c92704f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405e14e9-11dc-44e1-b266-4a02ac1e2f1e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9498caa1-56d5-4f01-ba22-553e789596d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01d21e5-017b-46fa-9ee2-3cd0bbaa2361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d34e152-6bba-4ee5-a7b4-3852040eae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "700dab7e-0ca0-4b78-83a3-6950dbea600e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a75557-bbe2-4f31-a9cb-526bbfe3e25c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "147f3f62-913c-4c85-8c70-bfac16cf8f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d53ec6b-b328-4e50-b94c-d9f084c1ee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc83b6-8158-4919-ac02-816dd8eca2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f1d0bc-ad35-4277-9d4f-89a77ebe2e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad076b7-80fb-433b-9b9b-4c66a69b65f4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1918b3-1689-4909-a4af-f4a657235115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ad23f0-ec97-4951-b668-307bd9c3693c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21ecf53-f4eb-442e-8814-8b881b9651b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ede7b55a-8cd6-4974-855a-3b8ff6f1ba7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b492fa1-59d1-4b88-ac38-8bff72a57cb6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e658cfa9-6f80-4330-815d-fe3a7e54737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158e8166-3eb1-44ce-9298-c8c7431c6494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b33de8-ece9-4a37-b66c-d6c7d552943a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "feac73e5-cd9c-45c9-a3d5-17233f363a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691af434-2e57-43a9-8fac-c2ce6ca7a1eb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683bf8bc-eaec-44cc-8c48-814b2a64d27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ded2e35-4afb-4b23-8599-853ccb7a8832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9506203d-1789-478c-92cd-be9c6eac0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbe7ccd-3500-4a3c-b948-8a8d03cff5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b8a502-1581-4bb0-94c3-0e10b6562aa6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b7f008-e925-454f-9d1d-9041864330b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5998fbf-4cd5-4839-b51d-ebf661e5ae3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15757d63-26ca-4ec7-8d76-0b851f8dd58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b86cbb-4fc3-4173-b203-744a790c1223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af45cde2-0177-4d82-8d06-d5c9ca5cd178",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e27de9-676c-4d46-b4f0-cce5eda47519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fceda3-1600-4fd4-ad0f-bec4509522fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7457df-bf9a-4ecf-8512-54918355056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc96b41c-8aa5-4b22-ad5d-2e9ec1f434bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccc4e68-9059-4a92-a9a4-8856506a24ca",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f67e7c-8ba1-4e6b-ad52-83f880a3ce6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6d9603-09a3-4f81-8659-b243a2cfbb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d30b276-009c-4a9a-b706-605b0317cbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e877179-77c4-4798-9604-d23d864badf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fba77e-091c-4cb9-97a0-f9d5c22db17d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f720cd-e892-48da-b934-7ca27d9535d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02680e34-c5ed-46b7-9fea-8720966da4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d201a153-9458-4d76-a6d7-8c8f198c45f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7928acba-83d7-4290-8814-f33aaab765d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd06d3b-b4e5-4d62-aa00-6e91c8826bb0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028a42c0-dd6d-4611-8125-12ffc4f5f957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9222050c-feb3-4632-a966-82d24d39ef78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d3ce0d-4ac0-42b2-b470-3030134c8997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6c1bc8-6008-4244-a0d0-382313d13396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfa13df-5237-4171-81e8-638f749682b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aece30af-9f39-4d04-89c2-6e82535de059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cca1de9-24b8-423b-83a1-75ea695b7919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d290765-8718-43f7-875f-c938b2bea5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c5308b7b-e73b-4b9f-a851-dedaf6fd8613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561ce701-285d-4e5b-8e17-876595b5451e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ed7af-e3f3-4668-a6b6-cf96893d066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea3956f-cab7-4805-92bd-0a9a45990f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e56254-1685-40c9-973d-e72d04264d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65d560a6-1f7d-42da-a484-1b22d897499b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6431f098-4f12-4736-9587-f636a4131c5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173e1ca6-a081-4d6e-8245-6431bffc0e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5615111-5cda-44f0-b6b9-31266340cc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b546f918-5061-4a36-bf6b-5995efee80ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e3bd78-491a-418d-add6-529761373b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48494c2-11e3-4dc7-b683-4086bb7e158e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b161eb-0793-4909-93ae-b93ff1a11e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf15d2eb-3ed9-46f2-b82b-424d9f30cc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45235c35-7bbb-44d7-83fd-7a59f3be10f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e29c7be7-dda5-4654-a7a0-a9e582abe5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e10895-95d3-4688-9854-56e532335d5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3713fb-9b6b-47b1-a49a-69d96cb6982c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54f1d57-c71e-4f3c-bc52-baddd9409ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f51682c-f633-48a0-9a57-40a2b059db20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6eaf4a-44e6-46e4-a2a2-56d0586ae450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e053565-7076-4da2-9f57-63c13a888981",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bf893f-a483-49ba-b167-1d6c6643cf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93984853-7548-4c6c-ac5d-3c87c298ad26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f99c2fe-3aae-48d5-863a-cb9ff765ce6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "928eb642-88b3-4625-895f-5e96d49be287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba51f56a-6567-4b57-9677-184ead1975c1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa50d79-1695-41c6-9e53-69dbd829f2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d90ca1-98a7-44ee-9cda-701d60c86d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200374a6-4e07-4762-8feb-1849aeacecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3363b043-28d2-4d36-adc3-6e73099b4759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fadc3e-c4d6-4569-8001-0a5a25ca349b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ff7b00-e7a2-4b80-93bf-deb4b881b662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6049c8-5e61-495d-85a7-9c3b9ced31d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2139e9a2-3f5e-4319-a603-0fce260aa98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce38aeb5-ef08-4fd7-b857-6e10bb9746dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8099ed23-6dc9-4400-acc2-899dbf9c7a36",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68263bc-4416-4426-924a-102c767614a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e81a567-b132-4658-b78a-e27f7a599f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c247b98-add6-47c0-b118-80c1f59fbae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db90bc9-426e-4e61-82bd-20a2b49a9878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de26aad5-2e84-4ff5-99a6-9e0b3085cdf1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22bf105-e761-46d8-b59c-35514e7d9d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3061ed4f-8c82-4997-86bc-3e19efd8c79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895facf8-fe1e-4d39-ad56-e6511c8baa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6190055-7cce-48b0-98fd-0bd96a0bffaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ec0188-1445-4d0b-9100-64030b4f0163",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab8cca0-5e03-44f4-bbb8-1f362e858655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7888223-d21e-40f5-8d3c-e1aad7f43136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85597863-547f-4d05-b8f5-48cf57298dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3881234-f15c-48f0-96e0-480236ca92a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aa02fc-a33f-4278-805b-fa7343fb989c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869f6d91-baed-45f8-9fe3-46189046053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d914ba-1478-4ebb-8c67-b3b44e2b0e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6785d8ee-cfdd-47de-bfef-0ff9de07e79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6222d2-4d0b-427a-83c4-0c0f8b3a5b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b8a913-3d26-48b7-aec3-93c11938f21d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e1c2ec-1a76-4972-9d19-c401271ac02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181478aa-077d-42ad-99c5-5c211cc5c430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29b9370-a504-4da9-a5c3-37fe5c835bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "052aafd4-a64e-4e9c-a29b-1438749580de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7670f3-a22f-4640-a054-3f52df7f91e0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ae49f-ab05-47c5-954d-9832e92a617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a9a976-b45c-45a3-8530-29e06c3cbbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b5be57-da05-4173-9794-87e97ff6fa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fb1dad-84c8-4b89-bfe4-d596ecdd6f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf99692-326e-45e8-ae82-cb0f42fcff9b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be07d9-90b0-48a9-8c52-9b1a06b2ca83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a68f6f8-76de-49b6-a7d3-dd37a7e48952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce040f-992d-4148-93ef-46fc08b793cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffef4f08-c2d0-4640-812b-73c1b319d022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b29654-6c68-41df-a2a7-a700ad51c638",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec4aa0-f162-49bf-a141-eb93a2949af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eed8f7e-f105-4c92-9f38-459139ae8422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208cc9f2-f256-4464-bdd8-dc6bdd9988ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4209a97b-2dba-40e6-b9a4-c7cc0441bfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134d3fa9-521b-4278-8c8a-09712572d86f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f547a9e-bedb-43da-b594-d9327a3e7018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c66a59a-34df-4ce6-9f51-fa0a7844fca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c305a2a-29fa-4f17-b208-9dd8f19a409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd42b09-b133-4106-9e23-73c9dc2d749f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99d5a1d-e797-4e28-a70e-ed84aa25837e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e190e9e3-c59e-49a6-9318-cf0452a20c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd4256d-fea0-446f-a4bc-90617026df6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc09bb-da70-4b01-9528-47a1334cc74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1bf19b-334b-42bb-b108-1ab81d0efa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c10cf8-5643-41eb-a00a-99437c243792",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd75a7e-fcff-4db3-80b1-384a1dd4983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a900e27-eca1-45f8-af72-dfa081aac638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ebeca-f3bb-46a2-8ee4-74d9a2913470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "713a0aa0-5c20-4c84-9e61-d89a391fdbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a0719b-35a6-47c5-ac53-3a9897ce789b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4d93ff-a18f-4617-9638-46d5aa75b5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba8f330-a131-489d-baab-bafd3c9355b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac39d4b-bb26-49d6-8345-f25648352aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e36dcba-e936-49ac-92d9-310f603723c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fea770c-3955-4997-8376-1411b7dfdd55",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf24a9c-62af-4f42-ad2b-5afa3251681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b4cef4-003c-4918-996e-8d81b6243eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e159bc-51bf-4d42-ae34-54eabd7f1719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00d741f6-1db9-4a43-9214-90550ad37830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e4b8b-db95-452c-b610-55e073117bf1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98614683-a5db-4602-a4b6-4c5505221b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb515e2-f699-4b06-a8d6-4c768274848e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdf3da2-2244-481e-ac1d-c19f1526dc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7a5d54-5586-4c89-b56e-b116cfea36a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55809f4-a694-49e3-96cf-f3271d5ace6a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dbb66c-a6d7-44df-86e8-0fcd8f01ffb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baa3806-f0a2-4572-adb5-dca7b875c29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da6fd5d-48c9-4126-bc6e-b733d9b10acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61ab80f3-9525-4eee-a9e6-d829101100c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e4264a-8bad-42ec-bda9-ccdc092c4813",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5898ac33-9ad9-44b7-9c69-c80267998a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5389a4e6-5536-41ca-8e31-26b5378d8d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d8ade1-1f5b-4b88-933a-d0d48f633df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0f49ee-95ff-470f-8ae2-e80327dec3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b6b660-88e3-4069-b303-fca7877f8396",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b602f8ea-9ff5-4b9d-82dc-9606493a45b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b56e60-7869-48e0-87f3-44ae9954fbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9764b42e-d083-4bdb-87ac-7918c0fbdbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8a36c3-e601-4146-94f6-c8a56be1562b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dc0c5b-9537-4dde-9947-f06ed239e5b4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab3fc33-b365-4acc-902e-b51574489776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33ffb9f-eff7-485c-98be-9b8ebf10e068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32d63cd-0dc9-4077-a5a9-fc94fb51fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e78e49-4013-4173-98f6-58ebdd12d9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a319c52-f9e9-4543-9f8f-475212918d1a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ee27dd-1af2-4ae2-89af-dddd31780d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111b6eb2-9b40-4208-8a1e-cb01b119fcc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d5a57-e721-441b-ae70-af7744497594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad01fc9-8377-40a7-b3b6-f880ec9fa5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fd9456-4a13-44af-a051-ed5b8dcd5583",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80570b22-494b-437d-8227-076915204641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20481c4-8941-47f6-b9ef-8daa5f712197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462c9d42-6668-4b6d-aef4-a36712f6460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c9e16b-f73c-4f7e-8af2-1649aa93ff5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8030e15-3d2f-4717-91a0-6155a6a7c358",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d9b211-5f58-4cad-874a-1dbc8dac4d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0696475d-28af-481b-b99c-b15ec7c9a3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3db891-679d-4076-a6ec-d139bf248c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e76e1cc9-374d-4405-86a5-8eb5286b30e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c367b3ff-b5a3-4185-83e9-840fca15e76a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41fe1c0-2dc3-44f1-be1f-15c4548800a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ccb72d-d9f1-48a2-958b-74d77acaca70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e82386-3070-4f8c-af25-82f3c771f232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad98a80e-3c2d-4e66-8f1b-e13e15db08e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274a7150-824c-42e7-b93b-a354d1c2cc2f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5c9197-5cf6-43fe-ba49-818de319cfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf0ab0a-55b0-4127-bc47-6a2ce73629d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acd36bb-1771-4386-8428-e520c1bb78f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a0fe8e-1af2-44a0-aa5c-c9a617395ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9bad460-a383-4be6-a7de-f2f8f0beb748",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6cfd44-6b30-42c6-b36e-0beac22e7750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d431be-543a-498a-8475-ae04396795ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0bc8a3-6b15-43b7-a019-59a843139190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f76bd0f-28f3-42da-bc99-ffc8cd3b993d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55127741-b53f-4a89-a6da-f2feb61179d2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da91e293-70c4-4ca4-955b-3aa4af6140ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e32541e-7d4c-42d5-a38f-9a412d06af45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124c1579-0613-4843-848a-c0f65087f19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "397a5986-a1fd-441f-81a4-a0e97d2852bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf8b426-bd1a-4054-b1d7-75258d91fcff",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020741c3-6c00-4b46-af98-92b10c82b02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fba7f9-03c5-4956-ab8b-122f9dd9fff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a47bd0-204d-4fd0-832f-8dc1498b5228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1db0c3f-0745-4e68-a97e-7893077c0af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8cce5-f301-48a1-9d2b-b894856395ef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15175238-4162-4353-b048-b770e0c80738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc60be2-b296-4603-887a-81f83cd901e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c727e651-dc8e-4431-920e-821f5a62db3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d186a6d-d6be-4772-b83b-28e78865d6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5b4b98-04bb-4310-9004-702ca806c0b5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ab45e1-6b18-41b9-87e7-a9d8b4823e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09916e2f-98a5-4158-bd2a-86ff1882443d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45f8eab-d085-415b-ae93-a2513bc31ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6b9605-e57b-4e1a-98bb-e2f01a21411b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32483a4-9de3-4ab8-a270-e6d35f0182a4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4873b480-9046-4553-a2ef-6fbb5ea3a879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c508550-c391-4b16-805c-8ba79f9ecdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b072352-b824-4557-a582-f254d8334d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbde349-479d-43df-a447-f53563e2061d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3859d99b-4d03-4343-9ada-84fb434e4cbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e4264d7-1bd2-40bf-a459-cf37c87335aa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341ff222-23ec-4c7b-9989-cefd5d3fac1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70c33b25-ba07-4b67-b866-28f7470055eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041629e2-34ef-4e67-95fa-c2c470ad1fd9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1f60fe7-6b85-4665-8965-a84565784f24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "104e5fee-2d8b-490a-999b-e2449e6e6a60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dfb4b6a-2528-44f5-ba2d-a7d1dd3f9962"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1918593b-a6ab-419c-b164-6b18ed0fb8dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48d0354e-b26c-4371-9423-de961767f0ff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a3481c0-47a0-4bff-83ec-a63adb59a538",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5a92da3-d0fa-43ab-9be7-e13afdfa7fa0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2034e0b-b7a6-43db-8cee-a9817a33c0b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9b6070d-8b69-42e6-8a8d-107ab988080f"
                }
              }
            ]
          },
          {
            "id": "83355749-4f74-444d-aabf-98b59f462e3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3deacee-42f5-41db-abd9-12d35917132d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0f71b10a-20f7-4737-9245-5e5828a1c874",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bb6b0c-38fc-4190-8615-fdc4aa7b9c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b3ffd1a-1b85-48f8-a0df-a18eeef06312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfddb7ea-1ebd-4798-bfee-cc066dfe07fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb47af9-30ba-48d4-b558-1fd60696af8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48779eec-21c9-4772-81cc-e8742ee5dcd3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d9727f4-9038-4340-ab78-13836053985e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc76e0be-b570-4b5a-80ab-3dc81fee72e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14057e7c-213f-438a-a10a-d69011311d1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df08e758-87a1-42af-9362-15e0a4d88d25"
                    }
                  }
                ]
              },
              {
                "id": "0d601861-001c-4242-9335-2d4f0ff93336",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b220606b-8217-411c-85a0-dfae14d5e1b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8748054e-f685-43ed-a8d5-f2dc912500c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a9cb6e6-2a1d-406e-8327-ea36ffb45ad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60b37795-925d-4037-81aa-13f66c7a0bff"
                    }
                  }
                ]
              },
              {
                "id": "e4498765-3a61-489d-bb24-861ae027a9f8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee0687c0-5df0-4736-9f03-2841f230abdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45292dc1-955c-41b1-a44b-ed0fb570f64d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39a67c8-aed9-4dc5-a852-56afe06bc3cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09288f37-522b-46af-b845-24a16667d053"
                    }
                  }
                ]
              },
              {
                "id": "2497a851-c567-4862-b00f-0753945a6526",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73bc2773-8cec-4440-a7fc-e91fb6e8ed8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f0c4ff2-5a5d-4891-aa4d-0983d9491a76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "206974eb-eae8-49d5-9481-6a6603c14929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b2f0d364-f492-467a-a28b-49f04cea734d"
                    }
                  }
                ]
              },
              {
                "id": "3757ca3a-7446-4247-a8fc-19b4c2fcad6b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a57bd2da-4c06-4b89-ad19-553d8356da7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d544c5a2-f94b-4b0c-9d06-eff2c677a1a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82555019-3a9e-43d3-8cfa-a5e079b3bd47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e085da47-bb20-4d60-9511-42dd8d157fa0"
                    }
                  }
                ]
              },
              {
                "id": "72277a8c-0d72-4fec-85e3-ba744a493d8f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92811306-15ee-4d59-b089-085d252a8787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "311947e5-7a53-4634-b78f-0494b52ecf98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc30b81a-458c-42f7-8464-fbd51d7ea34f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffcdc45e-80f5-4f97-9d76-c9023597f37a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63dd4ddb-515a-4f5d-8c5b-2e66a9e87c2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cef7df94-8c6a-46cc-90d9-efa7a04747c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d9dd86d-2345-4006-a600-05e390d27884",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6cd281f4-ab9e-4697-b581-094ae041c855"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f0106a3-7076-4bec-b164-44b5b2d02eba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14531f26-a2ae-455b-93c3-915705d4d75a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "257fdb63-e487-40b4-8ed2-539351bd94ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87602ae6-2b2f-45ec-8de2-834b878081d9"
            }
          }
        ]
      },
      {
        "id": "dc39c6da-c767-4f73-a446-af8703050628",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aa23b9a2-8fb5-443d-b006-5668c1877b76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a317efe6-8975-4d0e-81a8-496e5d884de5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0e907d7-aaf5-44d7-913f-6d00b0500a4a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bead272-b71f-4554-bb9c-babad6afd3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494cd768-bcd2-46fb-8ed3-e4577772f138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3782bd9-659d-41f4-820c-bab0a8be3e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c149d047-0dd1-4475-969f-75bcf93e061e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a6eb80-c429-43a7-893d-22c557b74c19",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b370f1e2-f1f4-49f0-9acd-b6aa373b2c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4b90a1-8abb-4307-83ac-8336058a4296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253cabcb-f21e-418c-be60-f2466b1e3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "812575b5-0ea4-4a93-88cc-c400cc26f8ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cdf71d-a1d4-4a1a-a24e-95a4f2891a29",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d486d6-2667-4668-85d2-93df5c602414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c061b8-83a3-44ee-af9b-66c0bae2268f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6087f84a-e13f-44fb-b339-ed1436a33225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "021cf586-d518-439f-b32d-4027e5aaffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f24678-b781-4b88-b76a-01cc67aec9b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9be978-bd82-4638-8f8a-f7a0337c2bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f41777-0142-4484-b24f-70d998946396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07def5c7-e571-431e-8745-bec48f4cb085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b44286-06df-4db1-90ad-dd873c7e2e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84590674-a7a7-44fd-8c79-5014305682ce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b0c933-1429-4b90-a3b6-f120203380db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d850ef-daff-4485-b90a-70d431e1fcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041a8cd3-560d-45c2-a80b-a9fc87ee4f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cee4bd-4fa8-4739-b3c1-7a4e917a655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066161a6-37ea-4073-9876-91b66baff528",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bfed75-1e1e-46aa-8064-5cd304e8eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb66545-b59f-4965-9427-66bc0e434a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b064dce8-4333-4000-a4f9-b7f79cc28114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab97be4b-caab-4153-b995-e4daf6632722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce97ff6a-f726-4813-b98b-11d621533850",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798dad82-a980-4205-9c48-b93260c93752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762b2b5a-5972-441c-b2c6-3da48e90902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5bf9ab-6a89-4dae-bfa4-f0d9f7c72ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3019e7a-b9e0-4385-9cd2-4ab2151abb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae65b4ae-1692-4d25-8df8-806b5049c671",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dc2de5-8e2e-4c27-b986-95a1ef64ca3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871969b4-8f09-4cb9-8cd0-c4945a03f20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db99905-843b-4ba2-a420-5d26efdf26b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63df686a-b0d8-45a9-bf29-41aaf31c8a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bc5d2c-7be1-4f50-9ec1-dba76073aa46",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74a5e52-6418-46c8-b917-2ecfa1e1cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a5b66a-269e-4514-a0e6-dbebdfb31a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecd4ca5-1575-4455-ad03-e0d40ac92bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a309971-302d-4f85-b81c-7fa9cf4604ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e45ec2-70ec-476a-86f7-0e5b5554d92d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9144fca-060c-4352-aea1-9827260d379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c39e45-d56e-462b-a7c5-33cdec328f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12abd5bf-068d-4031-ad36-10a3c1fa01c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6496a32c-5ae9-4f49-b844-1e8a62e91f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a5d2ad-c3eb-4b86-9339-4554dd856aca",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d7a015-f52c-45e7-bff9-8014911246be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3011eb-1e6b-4b43-a3b0-34e836126948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5219b4-67e2-4fb2-987d-ecf499b6f68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d783ffa8-f803-4072-aa5e-a3d2ed2ba507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec13a3d7-96bd-4fa6-a36c-7eaccc4b6023",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e4d1ae-1547-4e5e-b58e-922e3304dfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b535f8b5-20a3-4323-8fc0-721ac3be46f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae8f6b1-fc16-4c1a-9231-8ba822e32560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d20b383-cfba-44b2-8650-b72ad60d1828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e3a2f0-061c-4e5f-91cb-399cecb0a0a8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c698b3-4892-4209-81be-20dc2c34dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da0f8f6-63dc-4594-92cb-84383efabb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d09fa65-b322-4a68-80c8-7428fb093de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74079721-7435-40d4-941f-7f6dc432757b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3a0901-e98f-49e1-8db4-37eecc9c6ddd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e7fb4c-91b2-4a0b-b61c-d0bfd656a584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de5cf1c-02cc-4ebd-bb4c-4e431acfae1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e2ac8e-e1e2-4af2-9186-de910598594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0388dcb4-7fe7-4536-8bd9-24fb2a07f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd11b02-b0d2-4d24-accd-23386c839ee0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb15e98-2098-4323-a126-0c72858db77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45540df4-ce93-4acd-a2f2-79c67b27081c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88157b20-b671-47e1-a0e7-7df61210a80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b682458d-5dd4-46bd-8b69-31b4db1b172b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3360b33-0408-47cc-963f-95319343a65c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018cc4ed-756e-4c06-8d28-40f57dbe8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f74c4f-31f1-4015-b914-e09c2e3d4136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3959a2-654a-4c48-a148-8ee033f4056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5037307-5a18-40d6-a484-057135e15522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c4114e-4f08-43c0-b7e2-31961cec6f1f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33740d11-2a6d-4f8a-9465-b1930b32c106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70180eb3-16c0-4371-b000-189ccddbc1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd09f5f-4f13-43f4-bfe8-029da34659ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7208aa23-b3c7-4ebd-9408-a5914ff13404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a075e8-cc5e-442c-96e1-85c7e8084e36",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76b8df0-609f-44e3-be28-fca275f29b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c8c826-639d-421f-b43e-d095670740ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3312d4-9b93-4464-b57a-38124bfa102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cae67d-06a9-4f2c-9828-76c21a677cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b231ad-ccf7-4783-9201-33c70668f7c5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606006d-1663-45cb-9cef-c7838f48f200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7902fe4-2514-4ef5-b9fe-ddaa05457ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b39c7f5-b9b1-4245-bd8a-4ca19ccbf50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af18538-7db0-4550-83d1-d9cb40819a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b048ca-90f7-4f15-aee6-10fa3e688641",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694af1b3-49b5-4a3c-894e-9a8fd38544c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7453631-ab4d-4067-be7d-ba82eda6f446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61464aac-fbb0-46dd-815f-a1436fe3a440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "145179c9-910b-4cf1-8826-269712a2858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e271b7d9-790c-4a86-9ab8-66c6fe4e5046",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b407c9-8df7-4afb-b168-ef6d3f0852d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3503f802-866e-4bc5-afe0-e850574d9f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48db9ae0-a91a-4f82-8983-8872c2b5f293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e774c7ee-b826-41a4-a8c3-a268586ac5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4e76d3-c744-48ea-8ad8-b4c0dbe17619",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a026e43a-a76d-4798-a3c3-e2345e51a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287428dd-4ece-47f3-b67c-2d5b6ace5129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080eae49-064f-492e-88f6-87850e8ce7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf3efd1-f14c-4713-b1e6-ba461102ba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f29b06-105b-44c8-a2be-b26d87457570",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522b1f86-cda0-495f-ae76-e348857015b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14eb38a4-c2f3-4723-954b-7c2cf35be826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fbd1dd-4b0e-455f-a1e2-6cbdfac7d921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d92a0bf-293f-4f4b-b83a-75a078fd4dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbbf1c6-cc39-4c8e-a456-6a7a8f6fe83c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336f6f2a-0b62-4cc9-9919-78bc8dcfd93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42966c2b-6291-4c97-b366-739861f8b5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c8998d-84b7-42fe-8bcf-0a8cecd2fd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1004a8d-c22c-4927-b98e-75f47315b401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54404e-692a-4c00-974c-59757feaab89",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c6fcaa-3938-4e0b-92e6-87af6241913f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87f309c-0be5-42e0-bbcf-3b7da19adc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff68dfc2-89cd-4367-a416-b5d11877d503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba758ba-3271-413e-bd00-5af4f5b42eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e46c99b-3d50-44b4-8a2b-7190d288bd71",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b2b0ab-de14-484d-a4a5-bfdc02bf8239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7693b9-49d0-4f3f-b920-735ea7b1e774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f9a39a-5210-424e-863d-fe97aa405354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7555256-6f4f-4a03-b8f0-3e0968c4d5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fe8ea3-f5db-4103-9d79-0fdf66b3152b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82d0f14-2ccc-45e5-af57-50e70e6d9675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696a511b-b660-400b-8504-bfd2fa817d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf64d35e-abfa-4712-ad4a-a61e19907637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18818e97-3e62-4573-8bce-1cf632bddb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4cc921-93b0-413a-922e-83f109611d6d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f564602-71ca-4a0c-8005-8be117f084d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe4fd15-a3a7-4386-ba4e-4019962fce00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683c2166-1b92-43eb-aee8-b93ead7d38b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ea56f8-6df5-4b91-b05a-8c2ac9e1f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8f8827-624b-4dd2-95e0-e9b086941214",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f5543e-57e5-4080-b69c-9ab37a4c2c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82768b5-89b1-4b27-ac30-41db4eba7394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7772c5-8181-406e-bac2-cab5d71d5675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "827e87b2-7e6a-4ea6-85f8-dec3a1903ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adfd3fc-a42c-4ef4-b3d4-a0b3a7384523",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794efdd5-7c69-4a5f-ae03-fabcb5355387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493e2997-21dd-4098-aa9f-5b39bd3760d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aba2e3-18af-498b-9567-080b5c93ac0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cefef43c-15de-4435-bff4-bde820b5d9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a4b54c-1b2f-4c3e-956a-23648dd20bfb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f07447-5b62-43f3-bed6-0e5b7cd92b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe18d9da-e383-4c0a-8af8-89ac59d589a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867de4b4-fa0f-4c7a-8a9c-177b3a9c423b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33e9eac-17d5-4df4-8827-ebc7c6016e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6564dc-8790-4e3a-aecc-8bc44db0c12e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39916f0a-ad4b-4046-b7ea-d0d3666a5aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe01c401-61a9-43d8-8c33-80c2a85316a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6610ca48-a289-415b-bbe2-6013ed0213f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6d6259-0801-48a7-9b10-e27cfc43229a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eb21f0-a5be-4b6c-847e-9492cc0835e0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f193208a-942c-4f73-b865-864ccfca213f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36bbe0e-be4a-4725-ae56-73516237ff4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a3b4db-08c2-4405-8287-ca1e73894c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3660d2-3d9e-4a23-a7ae-78901230d80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d60cb2-535b-48a1-8cbb-0e68d0d36b6b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf061ca-26f4-4f84-8bbb-383a4317859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de9d88d-3d54-43b2-bbdd-c63c1e44e52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e1a971-9e90-4ab2-9f07-485646a4aee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f48936cb-bf5f-4775-9ddb-4cc88ac1ee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619726b0-f0a4-4934-b56d-e0e1a774f452",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395bfa39-f9b1-4ab1-9df3-c7cb1d30c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fa50ed-b748-4771-b33f-7c471d815f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf31260c-1904-45f6-a706-e676573a78c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22317b-153a-4ee4-b738-f66445768823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c76577f-5bc5-4f9a-a5b1-27aa54b06324",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcafe35-384d-4807-9be6-5924196feb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb9ad07-a98f-4756-9d30-d1bb97b81ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5db1fc5-eb2d-49a6-ba0a-d5c22463cd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f02d27-9475-4b96-8f70-6783912f276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e769e0c-216f-4045-879a-12971c019e6e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8035f829-840c-451b-a8f0-18f91c4b2a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b351a4b0-939a-443a-9ef6-909bb399692a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a44bd81-065e-4d7a-b5c0-afb5b95a7350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ebbef4-2291-4acc-affe-0a22eab2c70c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7015e597-e593-4405-a2e9-0e121ba15a05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "372f76af-5e03-4936-827f-fa6ce81f159a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb92a9-4933-4e32-a213-966ec456142d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b3346d-7bdc-4a5f-8e94-cca276d19b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c59433-4e24-4d7b-82fe-128dc95e16bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dac7d5ae-7d8c-4662-a37e-3b6b590f83ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced3c6df-9ee1-404e-83ea-3e9dac920225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ec48552-067d-4e95-a3c6-6f14b6bf3cc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "543858de-6e74-4082-af33-5a7b1a2cc5fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9172ce93-4701-4297-968e-739dde037b28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8583ce71-4086-4f48-8dfe-0b6761c7e66c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f263a144-6a63-4a29-803a-d4671f13b9aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08fec758-cbf0-49a0-9344-fbb9179d5070",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5cdc77f-faa8-4c10-815f-6efb9191b4c4"
            }
          }
        ]
      },
      {
        "id": "852d9eb1-608b-4684-ba2d-07c8892d9527",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3b2edf58-1049-4af8-adc2-d04ee14a0f4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "881306dd-268b-4709-8df2-74811b1693b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07a80d26-17eb-473e-98a3-883251d438ac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d927157c-b48a-4a58-9916-e5d8d0a118db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea0196a-4cd6-4f26-b5e9-dfdbe8efca78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5efaa34-86ed-4def-9b57-f1b6b12ad779",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cf7001-2d96-4205-8b8c-40ba3470cd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80270120-06f5-4d6b-a6ba-c2d61ef6831e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad6099-4fec-4473-a8e1-22fd959d6f4f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55ae26a-beba-4eec-9391-1db6a5cdd148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf9a050-434b-4d70-a00e-a89ff903ca48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995614ff-a982-46e4-a8f2-bdc0391e4275",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e9973b-d026-4143-a041-5c25c854e1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0196406c-3afb-434b-aeb3-d4ae9f25aab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91a935a-a2f0-4435-b683-41902d31de8a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a33557c-e440-4e54-8959-a3198de22fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1346938-1dce-437e-ad75-5ce8694569dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989c81f6-e4df-4bba-8669-e37a17e62044",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7e40af-cba2-4b07-8213-5c602950de7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d811616a-93ea-4b7b-88fd-a16b50cc8c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465a6b6d-8923-44b5-9e78-be010fe5882a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1a02cf-0799-4ecf-b1f5-3bc564346708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62bd192-92f9-45d5-90f5-967d8a2a6c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b3be06-465f-4633-b629-e2480eb4268d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98d5902-ab41-4a65-b2b3-fc7f9b617112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc6570f-53f4-42b6-a116-70bfbc86415f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560569b8-2dd5-4c10-a84e-e84f41e1157b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942318db-fac6-4734-b197-dc2056abbca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ef2848-991d-4bc5-a523-7f36e928f346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38431192-a578-4003-94d6-a085f8b0beac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688a50c8-ad67-45dd-9ca1-1df2ee9dd9ce",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ade4c1a-3d35-4cb8-86e6-9e21b497ee4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b425af6-f386-4c82-9ba7-53641efdcb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61bd0a7-2493-4a5c-8aa8-c61d947d73ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b9963e-e2a0-4551-8570-3f071a711316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbeea82-d89c-41e2-9f1a-f03b22a04862",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215096ef-cada-4fec-91c7-854366b72e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b8892f-f158-4865-b6a2-9a95ccdfeef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1af910-0e5d-4352-8a53-7bc18a17ea9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4e826b-e83d-4793-8756-a08dc8e7b6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a95b40-55f6-4e58-8e89-cb40f3bb95b3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86be1767-4e9e-419c-8ee1-f38dd6db82b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3e035c-69a8-4935-adf5-d6dc543561bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02d16f2-29b3-4040-9bc8-6e27ee95df38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478a9730-437f-4d35-b6c1-2440205ba4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01e03b6-fe38-4306-9a12-e8e18fe85798",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712caca7-0782-4aa7-87b6-fb997a08c7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c7b31a-c356-4e19-9de0-821370bb77f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baf829d-e170-48ae-ba11-61ea16a4e933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17628d91-7aff-4d07-9069-ae16ccdf15a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e25829-cb26-4bbe-9264-06a1d78c21d1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33f8b6b-0978-4ece-bfb3-db10e290b52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a482d5b-be67-46cb-8d35-4481fb59261d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed25a702-793e-4f43-9c50-233fb11eba08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b7c9f8-4bfe-4625-ae7e-1afdd5995999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961c73bd-2e21-40dc-8bc7-6af985a9012d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b82a45-404e-4451-ae2c-8235794ed916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06cfa985-9e9c-4814-818e-d6a4921e7502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ddd2d5-0f76-4a26-bb13-2409dbb1d3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b069ad6b-48a5-4211-8f25-53ace3b3ff75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b2ad65-4b82-442e-ad49-95af64b8201c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0b0121-7b22-40cf-a3d4-c467e476937e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9311f695-b339-4496-b867-3c4960e47f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa23718-352d-459f-96e3-702d6d08f361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb26337a-a9fd-4ae5-a6c7-984b71e6e89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4931a8-2acf-4e83-8e26-968523f2fcfa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60cc928-7df6-4196-896c-a0b9a9a2149c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32be55bf-b837-4724-a864-5f57f99ad9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505dbd7d-72e5-4db5-b28c-4fa3762d5564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddddecd4-1b09-405a-814e-88919d503b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694f5819-c442-4a0a-82c3-cd7ae6aca7cb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c72749-4937-4c3b-a250-d27526f6bb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605157d8-70e8-44e5-8891-cb96224aa710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad330e9-9d5c-4dba-9ed5-b76ed9e808e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72183b3f-d125-4d8e-a73d-6a08d7218cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e419a5-d42c-4a1b-bbbf-46e0111421cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abca888-52ac-4021-94bf-3ae667ac06bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b457ec-96e7-434d-a538-c0ebe4c34bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1359dd7-87c2-474a-b932-2c6899745b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62906709-a155-437a-b0f0-9aa69eb3d09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873915f0-a910-467d-93c9-19e5c51fde60",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920aea42-0272-4b4f-a743-81d357120556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c4f51a-eb3a-4e58-9b73-ff4d050f8efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31a2c1d-e862-4dd5-a7d1-697132a5e32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b2b67a-7f4c-43a1-9fd8-aa4234d3e546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7697a919-1f19-447f-b175-8b1dffec1e90",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbf59fb-0907-47eb-b93b-13907d218cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda8ccbf-f44f-4fef-9ac6-21ee26037d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2baf90a-3c5e-4705-80e4-72a1b73f0fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d174969-e2fd-42af-993d-06593b691d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bc32cf-4eb5-44e9-9a0a-f598983ea88d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef92b503-15de-415a-8c2b-4c592647e9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d83655-3fe3-403a-8fa6-1cde1c3494d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb06f20-052f-4147-8aae-dd379517882d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b856c7-61ef-4f07-b9f1-e5c44ee4806e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6efd86-48de-4eab-8b1f-ff1002c831dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3d9734-9328-4f07-94de-ae3058cdfdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0fcd9c8-4107-41c3-af89-c8222bfceabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1061665-5fd9-4fc9-894c-3d6956a37729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658d17ca-a29a-4966-84b9-5a78f5dd0257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c44eb52-30d0-43fa-8e77-28bc5941fad4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791d612-b35d-40ac-b645-694ff46f34f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c335b572-b241-4474-b9bc-b4fe9328e38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9841453-790b-4e29-9aec-2fa6df9e7f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314bdceb-f343-4d2d-b65d-f28403b53656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996ab73-8de6-4d84-b0f4-7b5fad7d3c52",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c101f7-823b-4971-a7f0-c7ce71a4961e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f406da-081e-4780-9098-f77f7bcc1722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01779c2a-b7df-443d-b6a2-1e899ac1d2d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db1490a-2b76-43ac-95f7-7feb452adddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65805339-fc6f-41f9-ae5c-a5efb6733898",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86634e0-0c70-4e3b-a033-d6b8aacd11e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c106b7-3788-4f13-9fc7-ff8ffff71d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b06270-2067-4fc1-8423-0df19b35a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3deb8dcd-1a74-4a55-9807-52958a68011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5962bb-a719-47b3-9d27-444ddc5cc8cf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015a0709-c0f3-4695-bdcc-1dde3d937f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34db0aab-7e56-4caa-8e93-c0c5729127b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa5686-8a18-42d6-b883-284406bf9bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f6f1b5-8b2a-4ce2-b12d-eca6fc66fba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e3fbc-5605-4c8f-968b-3e5535e03411",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1198321-dd60-48b8-be52-6ecb8876e019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da378f8-d8bd-43ab-b2c2-10eae7f65aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7d2484-927f-4221-91eb-189cd2273cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256cf7ca-9ec2-4d30-ac12-20981625ec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25311846-bc2d-4b83-8b89-8817b101be52",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1dd428-175a-47af-9239-4d525eec4885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db38605d-61be-463d-a86a-3a4d497c416b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb99498-4d1e-40da-aae7-bbbcb0481ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a3a17d-7d5c-46df-b2f0-fd6cafb9b975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc85b70d-61a5-44bd-bd44-6a62c75175a4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f86621a-59c6-4ebc-ae22-1cd008443afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282da67c-8c44-4fe5-8f39-b163623761f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ccf999-d870-4965-90bf-fcd2066736ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd26278-1140-4f08-a98a-709056164434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5015ff90-43b1-4efc-879c-f809f9dc4209",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0900ae-3a6b-4662-a87b-3aaf9effdfca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa3ca74-8fd4-4000-bbf2-fbf0937f8bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9771243d-24f6-4cb3-9fad-33b1374f0f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76f8e2b-b38c-46e7-83b5-34f1f7d1c700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269ccea9-07b5-4a90-ab88-4b63c0f1bacc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afa0c23-33dc-4089-9d02-ba6892923486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c7da05-2f38-4edc-b3f5-103935d3fc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a666d1-363c-48ce-a339-638cd03557fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425836d6-8f9b-47d5-9a6b-ff6125b7bde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f8c08a-aa27-4279-afc1-d6d121775f59",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a974e28-745d-4b80-9dd2-caeaf07341c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddde339-7e02-4735-97a2-5fceda8808e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0886d880-5f30-4f94-8e4c-716f61760789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9768e3f0-edc9-4075-a443-86415b34886a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0cf6f-7989-487c-9a36-7247ee88890c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e77de9-6427-407f-9ef9-979ac37a7886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "104db151-3c6e-455a-b393-e59c8b2fb6f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915bc613-c2f2-4943-9b37-571bcbd543ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230bbec1-07ab-4402-9c17-4388f8b17f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb30220-c307-44b8-826b-e06e59f2a6e4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ea7979-c4ed-49fc-bdc9-f7d7e4648bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6698aacf-5fa7-41c4-9323-11c4f8b7fe9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba5e53c-3f5a-4426-a09a-28d52ca805d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b6ac93-78fb-4072-bec3-02eaefeb053f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fea075-4659-42f9-9c4d-0bb3c565e27c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f95a9c-3b06-48c6-9ad2-a41e619a76b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2914439b-f305-4163-9b71-04993ceadb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e13bee-66b1-48a8-bb87-da84f68455cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4932c426-cfd2-455e-a5f0-480f8e73112d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bd1207-dc43-4566-a016-07d314ac91ed",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25439574-6c48-4151-a4a7-8e2c3e486d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cf318c-4bba-4552-80d0-944d267e0426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a13039-5a72-4686-94b9-c74bde672c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d53bef7-ec69-4ca5-923d-701c8d655167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c79bd85-a75d-4e70-9012-84f911229fe6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e37d08-6a1b-41c4-abec-a263d916deb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3500cb3e-4cf1-4161-a0c7-0b1398e66c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe8685f-cf54-4e07-bd3d-fe2498968756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9ebb52-43b1-4bf5-8034-11a2de8c5990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e55c97-72df-4d11-9ee3-2dcff4b2d795",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e866c81-f243-49d5-8e54-4a1a0aafdde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d9bf6f-1b74-4a29-be75-abb93e387cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac62dae-a34f-4dd0-8d3f-a15a642e9d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afeffda4-ce01-4959-b527-711e5e3baf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d555a73-7cbd-4ad9-a8df-3671d9166876",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5201f2-cbca-42b0-b920-9e5e5f839556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b286f9-80c9-407c-98ef-2c6c12ac5568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f670a5-3450-463b-b5ad-67cb18e351a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04cdac7-027a-41ee-b55f-f29c64533068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5944c146-b8f2-41ef-af83-3d8861d2574f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0eddd8-3d6c-4b42-b1e9-539506a2a1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e9d790-e120-4ca3-b0a6-9567009fd6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c5fe05-e5ec-4d33-b2aa-6b04918b9ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be111abe-0301-43af-9d35-1300db5ab8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6338a454-2360-4667-8cf4-5ee8b5960a89",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b7312e-2ff8-409b-89f9-372a552ae34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6398021-75f8-40ea-b34f-3884138daa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9683b2e-06da-416b-a83b-10e70559392e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348d0b32-8cba-49af-a39f-66fc80cd251b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14418f88-bfd9-4840-9a1f-a86e2eade6ab",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8bbe04-57c0-4ad8-a1d5-048e98881050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22329875-03d8-4944-a512-ba8c2714d763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dcc371-de87-4691-9245-96e977407608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddbf58c-75ec-4385-abe0-c32aa1c540a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8485a47-094d-48d9-933a-aadb7d7a432d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4992ad6c-805c-46dc-92b2-05f44dd7fc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497e2db4-b72c-4a4c-a663-3ba97b5cdf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19056901-3d0c-4553-af58-04e98fa2b6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5e80eb-94d6-46e7-9467-59e12c98e99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d00ca22-1cab-4411-9ae8-3f6068e1de70",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e6e3db-ad61-445e-a07e-19038d7a8c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57431f4a-0bdc-471d-869c-86f038a019d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbed573e-c9da-469a-a45b-d63c88f04fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196df55b-6c81-4aa3-8f7d-c936275b7d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e11a32b-c582-4473-bbd6-067b67360dc5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14e9aba-9013-462e-a5f0-79d340c9d307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf065fde-7162-4259-b70b-8e86c8aabe2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4098d9d-6889-4596-bf23-28f38006d063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3da4b88-b785-49ff-aad4-a90f4f530306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6fe56e-5601-4f72-8535-e6f610379699",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a195f0f-e73d-4e00-9a75-fa61185d49f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d91a5d-30d2-414d-be04-1889f0652f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bafda2-975d-400c-bbea-01adeaf1d4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae304f4d-cab5-4139-8b4b-f6688ba6ed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08d2c7b-e568-435c-8837-577b5102aa2d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9c8b7b-3e44-42d8-b119-0bee7ad8527b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f001eb9e-2f1a-494c-8b78-5e72d3daa534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42d53c6-fb8c-4ca1-892a-3b8126e71d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881d978b-9832-4cc6-967a-ba54ae07d242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9610d076-7c53-4438-9f7d-2d553d3baeb9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f70483-ce58-4468-b300-bce0c6f5a885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6f1903-3902-40e3-972f-5f1dc5be1e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e5f99c-c447-4719-8a28-6034830b70f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db757295-34e6-4826-8c98-75468af424d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d1da65-67f2-4009-9c35-90a954cbeb8a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9ce0c3-28f8-4fd6-87b8-3dfa507339b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57093e1d-6921-4a82-9306-0f1545a2611f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6761daf5-db59-47e3-86d8-15fafd20602c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f84b22-9939-475f-bade-fb0d078ce64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613d4323-2897-4853-8d8c-b1777e856225",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c271d5-1693-40f9-af3b-8f8cc240304b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f8e5ac-bcc4-4054-b04f-828ccc62b5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a86403-2788-4f1c-a431-1c9e81aa1889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcd6d40-f16c-4bf3-b114-04ded5818516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1c5ebd-e26b-4833-818f-d55ad9cc93cf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8537fae3-d883-488f-a94b-4d51319ca3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f400065-8a7c-4337-b896-03a7ce380166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35a738-ca06-4c8e-9d17-2af8ee58e15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1349ac-353b-4494-b613-b98488f810ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff05832b-465e-4cfd-9190-b383f0b533c0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1914ca9e-450c-431d-965d-70201056f5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702e2558-9e57-4514-a5d4-ef98ff024a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d04f468-aedb-4a16-aeb2-e90cbd5707fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1646be65-d21e-46cf-8174-d76a135167dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbba63f-882b-48f7-a3db-4a19594d3625",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01874fba-bcc9-4994-8107-f5f3e1abc321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f71a35-c4cc-4776-8f97-f81a789c0513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae9ba1d-2029-4c9c-9622-9cbe513cae6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257a5380-9517-450c-8e92-f58f87ef459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec696385-1565-429e-9a54-497aeb904fa3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cf6e88-00d1-4271-a7fb-5e5690b48c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db6d67f-67bb-4069-b276-4b64c4a2af85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7a7d6f-1891-450c-bc65-35a0cd34ff57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00b8f96-2ef9-4302-bcc2-09cb70105672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ae9c66-d195-4c4b-9ff6-72f3a6d13241",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d60240-2213-4d7e-a0ed-ed0f1f6ba629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3ebf10-39bf-47e0-b7e0-66839aeaa892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92d613c-7961-442a-8dec-1242a2cfe87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25329bd3-5254-4324-84d5-af1ff7ff87c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53ea013-1832-4285-be90-edc45812c22d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38995cc8-3989-4d44-bca6-c32056f4031c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b607d801-89af-49c5-bb13-55769235ba3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644b2aca-8d87-442d-a35a-3c6893e45894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9271d5d6-c4f6-4373-b2f3-d7608615314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e8ef78-8830-47d6-a1c3-992412e2d012",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6978e631-546d-4359-818a-24b2069c7f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f3b74b-b9af-473e-99b5-e4d5e4af2545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22454ac7-0672-4636-9662-8db3475d5aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b7193b-7d4e-4900-841a-1b1a7a9f74f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9928ca-ebbb-4a71-9b2b-7bd0305cb60f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ea3ca8-1a90-4c69-8f87-2d5ab13c72f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961e8a3c-2aaa-423c-b6b2-43945634a51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01968183-5a37-47fc-aca5-1398d02522d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10640333-3672-45f2-9c28-d991449fbda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75400291-cc6b-43a9-9965-c1df34ec3786",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e82f73-e9fe-4df4-a16a-78a6095b5fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90337fdc-ac2d-48af-9817-30bead6cb916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f663178a-3343-4b04-86d5-7d3c824b7214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86b5a3e-6602-4e6f-8bb7-0f474205ba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c80df1-c4e9-4586-86a3-27c6e04f1e4e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e805327-4265-4128-877d-f8b23e949e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5776a436-b1c8-4d3e-b573-fdbaeeb7c84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee19c67f-1461-4654-aac5-e490d5a9bc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76da16d-e397-4183-9df3-d8092752604a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e0994f-433b-40b6-ad71-060420b66075",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bcdd53-9f5d-4363-8f72-e741ed8fefb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d713675e-b72a-4094-bb63-a8ef309cc6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fc8fc2-a3e0-4e97-bdf4-b1030cc90d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50382d2f-145b-4709-9acf-11e67f11488a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9228a4cc-2586-4055-9b8d-a23e52797100",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2332a092-1862-496a-9920-43c183d0a38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7166df-58ad-443c-bbde-732d78c91463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2678a1af-56a8-4d41-b50a-f308ba57f1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dcab72-6d7c-44c4-a848-52e7ffc29411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98fe1ee-ebbe-41cf-a0ca-7fd1f9302be3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b373246-ecf5-41bd-b7c0-ef1f3d31e2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b898ee3d-16b8-43bd-b5b9-72b1694a6215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909ba642-9230-4f5b-b97c-bd1a62535bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b08851-6891-4d1c-81cb-85281f2af2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2018e935-0039-466b-8b5c-43c73f25f45b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cbee56-451a-423d-9992-d5346fd7ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93925d57-ac20-4d6a-b0bc-a125e40ce3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9512bdcd-2ade-4281-a3ad-6a32b9ef1662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a67b5e-9a3b-45a5-945f-467c8a62d6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c285a848-192e-4346-8b3d-bedd2f1cd622",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5137eb02-2d75-4815-883b-0eab8a14e67e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bce52b1-4f65-4c23-8caa-e76d3508af39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a6eb7a-39bd-436d-9fa8-c61b0b9e4259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf55c64-aba8-41c5-a141-d7ac25bc0217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849456d1-0d0b-40ef-a263-da9a80223251",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4183942d-0b11-475d-ae84-a1dd2268fedf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ea6254-5d93-4102-b01a-ad7d384cb48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7e741e-54ed-4d8e-8d60-1393ecb31a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce910589-d930-47ef-9cad-3510aecba7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb06cf68-ce6d-4f0b-b5c0-b803ade420a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b396278-5b4e-4d9c-8256-75b8d3f6b1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb2e88b-48b8-46ee-ba5f-c9a6bfbfc313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c596e55-e1a8-43cd-8267-d6efb2dd4a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea4c18d-0d63-42e2-bb3a-f8afb6b3db04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863517c5-cdda-4317-9071-b3b7f373e79c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93efb67-8658-4219-8eb4-f007d89c422d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9627ee29-8961-4838-9222-65dbf67161be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6a3ef3-ac23-46de-b136-83779a89d15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4806cafb-9b4a-4537-8131-9fb5c965a81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652369fa-7bed-41ba-8db1-ac2dd2121bba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69f2fa5-42e9-4995-ba6a-df6877b3aa23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec255c5-d4bf-4912-a7d9-4f40f62faff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae42da0-2147-40e8-8843-a365cca28dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c8344a-80e8-40ba-8948-22fc6212c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509ef18b-ec05-49ee-b5ce-e15654b2aaf9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a476b3a1-1361-4c50-bb83-d6067bbaa92b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4238d1-a5f4-4560-a5db-3e85173ea2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad4c52b-9993-4b70-af04-3d5ab7a5148e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5968132-07d6-4fe4-819d-73304c6cf923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6265f5-afe5-4da5-ae9d-d138ce867064",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f523390c-c448-4afb-a477-0efee39284ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e55579b-cb71-42d0-a5fe-8a3f5bc07dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb4a61c-271a-42ea-a09d-c1b6e02ba194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997c4936-4f9b-4d84-b7e6-6c92d26546c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a42a77-3f10-4812-a056-08a7f850c4b1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dc1ced-3c9e-472b-9dcd-5927fe9d6224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870a065b-9efc-4050-a298-b298bb04e137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961f9c93-8893-4717-b3fb-d7671bb9188d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6958bede-75e6-4910-9616-8aba4e4f3bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c689149-b424-4798-9777-c4af7b0bed4f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad6a34e-b1c8-448b-bd82-ab028871012d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b30c56-835c-4c0b-a0ed-bc7edfbdf13c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101fb4f1-f3db-46b6-a511-e9f2887dd2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1189f5e4-bf57-4e85-8f1a-f5de598b83e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955a47b0-4ed7-46c4-95f9-8c74d6241ecf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741ac256-6621-4de4-9fdd-4f4c7a7c88a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d342dd6d-f907-487d-9948-7ab4d2e98d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d98727-7104-4955-9cd4-29c6a6d57a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48caccad-64c3-45f8-9499-e469b591033e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e54a90-072e-47ab-8d64-810fd8d237c2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffd96eb-7099-4803-bc2f-280514173ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6df885-aef8-4be9-8635-d59c4c5730d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20dd3a2-f08f-497d-b09b-837c7bc57cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c654f9b4-a7aa-486d-855b-cd1be3932e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b13ab0d-bb2d-45a9-9f3b-1552fcd6669a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32812fdd-2a07-4e32-84a7-42d1d879b50c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4b6651-7e9c-434c-86c6-b211d5a3888e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3518be4f-94ec-4bda-a8e1-ff6c1a0ac383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969084e2-20f5-42eb-86ba-954798afea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ea69f4-201f-45fe-b694-339f0d8d4e9c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33c75ae-a4da-41e3-a78c-17bb119b6200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd61d1a-4059-4192-8723-18e6f1895caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf6b491-b139-464e-9b13-695c3bec2ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ac0ed6-d4e1-4f4d-996e-9eeccd8bbcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fae13b7-4355-4d7e-b614-c4ebcc91a9b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7edb69-9e48-46d4-9286-afa9f8f98ae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d340760d-ad5f-4786-8649-367c6a9a7918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464c427e-2fc7-45ff-9897-2107c1833f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce25cabf-503f-4269-b727-1f8aac4de76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b8114f-2c01-413a-8a4f-ff10be224289",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b417c071-5893-4534-8b40-aa4fde488bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd982182-7f29-4d91-91ec-101940629867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765fe2f6-6950-4e9b-805b-a56ac9f7be85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c87cd-f3fa-4e25-83f5-bdc5dc92ed0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cadffe5-1313-4042-95e4-3027ffa9e953",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324bdf6-62b0-4aff-8690-e0434ea78450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee535a47-05ae-438c-8a9f-82a2827e1920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216cc06-c9dc-4d1d-9dc2-2868f58a32e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7df081c-3262-4e00-96e7-63f2227d469e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751f74b5-e31c-4990-b733-21ee095de301",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4511d1c5-1cd1-4240-a2ae-2c88c26f9741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51875a2-bc4d-417b-878d-91d635219a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4a6386-b566-48c6-92b5-eab9dd94ceb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5c5db2-798f-4cba-9ed4-908615b9ed14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0f3129-1734-433a-949f-6858b4cae2f9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a9a91c-59a7-47a4-9ea7-a533adb3ff1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b669c6-f1a6-422d-ac2b-91ea46551157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c3ad75-78a3-4b04-a67f-9211ef7b688d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abf4ae4-26aa-49bc-97b0-8938ec8e1587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfbf4c9-52be-4edc-b7b8-718e3e08f860",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef0be3f-dbda-40f4-9688-40938dd0e4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f351036d-0115-4da6-8d93-4103ad52c8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc4d809-429e-4fba-b050-6e24a3592a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebae303e-2a05-402a-87d5-c748392c1f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b7fefd-35db-4d05-b157-320a963b8340",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289077ee-b369-4dc8-9bfc-c610f1108481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12ddd03-bb9a-4a6d-8d1c-9e9e29768c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eab413-ee26-40b0-b2f2-39efcb10c964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce99848c-fe93-48f1-a208-35a26aafb0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccb2e2b-f4ff-4bd1-ab21-b0959d57dbc2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e2fb39-144f-4eeb-af81-7b3a1e0e3d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e075b86a-e276-463f-aa3b-287e7fa75a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbdc1a4-2d77-4be8-87a9-53cc6fb92b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600e0b29-11c6-4d35-b8fb-ccc377b71dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfbe1e7-a61b-4103-bbaa-e0db0e637290",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775218ba-87db-4d34-bf65-c37093d238fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67410a24-90b9-48c6-a862-a11bddf1ee7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5fdf5d-6155-4ec7-b3f5-97c1fb7cfc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36501f9-18a1-4678-bf92-a7fd6f6106d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29f221b-2f42-42a2-bd58-1d58661fb436",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12173633-3851-4194-8bbc-0459d9b6e3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f5f54a-e7fc-4866-a82d-5d291e945ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8715d9e6-0f2a-405a-b0ca-4e0d7d583193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ed9fac-da59-4320-a6b4-a28ee786500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9ec7a-9b6d-43be-9167-80195b295263",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8be050-9e50-4b33-85aa-6b1e8ee14465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4877a839-3cf7-478f-b93b-3abdbe1c941d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a3880-ae90-4460-9b56-76179e5b401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f703599-ed56-4e7c-ae6f-c8c49bfab2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a160a8-8ded-44d4-ba18-e996210508ae",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94b9116-52d3-419c-aecb-d470470bb165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7f6b1a-8559-4b5c-9a1d-b7326aa5555d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9808a2ad-3663-45d7-a0c5-c65b15008fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46cee25-c3a0-45ba-ab20-c51195b60e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539cb0e9-d327-4013-a004-9a886886900f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b486fd-69ac-4b09-83e7-bdc7c5b9555c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1320b46-1fa4-48b0-afd6-c0c4ec1c2b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b149b81a-da98-4a95-979f-60f8fbe60b4d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a995e5f1-a2b4-46f5-8d20-315ddd4797e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2ef93a-29a3-42a6-8f0d-10320b0c1848",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7751c016-b224-4d4a-b07a-c0f242d770db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aaec3bf-7214-4dfb-9225-7333559e3b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abec0c5-eb47-4da2-b31a-8a584243519f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2db2870-6b90-4aa9-8094-b4eb71ff5832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795b6ceb-340a-4600-937f-71f510e16619",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1b9d0a-9edd-4f76-9970-d6d5c53aff08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ff3e0a-1504-41b3-bb9b-b79844f59029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa438a37-7764-4536-b8a0-0b0abe4aa18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b897d390-bbf7-4864-a13d-6ca013ad4172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca72085-d91f-444e-84d2-4d395c868d18",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef67c72-0df5-4f11-99f7-c43c878ba4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5957d02c-ae8f-4ce0-8d0e-002668ea4c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19a9dde-9b06-4253-b486-67ab379f313b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ec7815-d936-4c5c-b6a6-2f927bf91697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a80246f-9015-477c-8d28-071bce45f409",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45126949-5f46-40df-9f3a-501961851d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ac7fc8-0990-4ef1-a120-b132539e9e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8aac48-068a-4a1f-aa1f-fbf752407c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a498a9c-af7e-4093-a589-168038294bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b6caa8-e38c-4db9-b127-b0d91d47acc4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00921a5-c73a-4dad-b8b0-a3e7d2725109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d481f7d-7ba0-489e-a26b-84d585ef28b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b9b7c9-a3ba-4021-81d9-0a6c14a4a649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5971fa31-1e3b-44e1-b115-17ca6a86b6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8af6e6-834f-4d87-a21a-ba14021f4c6a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5a28cf-ae02-44b6-a474-b87570f345fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d9eb7f-87a6-42c0-ac2b-956a03b541e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b901cd43-364f-4a1c-9810-f97c042b333d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb30e7b2-0e63-4e35-8808-6c3d128bb95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0063d10-5d82-435d-8f91-d2044a4a3749",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b4df14-121c-4b07-a964-87720a2532a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88f8699-3278-4dbb-ad8d-8cc8d7090f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867c0f35-220b-4a73-a0d0-3d01bb57dd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70dd6cf-01b9-4668-bb11-144ebbf74f2b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3ef4635-2a43-4efa-a061-ee2d126dd076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffc742c8-2d40-4db1-8b31-e9cfef8cc669"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04bc0c4c-d1c8-49f1-9091-fb77321c276f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac1e8aa5-4d05-495c-aba8-e97855b120a7"
                    }
                  }
                ]
              },
              {
                "id": "e84757ee-70b9-4777-b9d5-d58f5c3be406",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2b526e2-9115-4b02-9823-6c19161ca4b6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029c2f1d-583f-4347-af21-84c9ba6deecf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b3f30005-1a78-41a4-8f62-0bd136dc3550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b5092d-74ae-4e5a-81b1-0f9daeef8c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c2311e2-2026-43ad-9a88-70d626fc037f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f2f4a4b-d84d-4534-ab20-eb6c0a65717d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5058b64f-6503-4bd8-b228-8a3fe6cbbb97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b65e7519-bf52-4c11-9586-5343f3bce29d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cea9172c-36b7-486e-881b-a38dbc205fec"
                    }
                  }
                ]
              },
              {
                "id": "52844da9-c938-4f7b-b5c4-fde41598ed9b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f383b1e-34e7-40d1-9404-3b0df71dbdbf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5011bf-0b32-47a4-9791-546829332a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4253be44-01de-4fe2-b83b-ab97366aac7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4a9e8d-32ef-422c-8704-8b5db2affc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d8db37-9893-4601-8b2d-ed201011b37f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fdf66b0c-ef4b-4278-a027-9a96d60ccf20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "337e8441-644e-4f20-ac7f-a779fc337079",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "657a175b-db8a-4b33-9323-198c600bfd85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f52ac6b8-4781-4d2a-a024-8d51fe77295d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51164e4c-69bd-4896-a5b8-0554800edd13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2217baae-6859-48a8-8d9f-a9421f009a47"
                    }
                  }
                ]
              },
              {
                "id": "565ba975-4b03-4a49-8d25-0d7b9ad32615",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "487126dc-b58e-414b-9b7b-8f520793f539",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a97e1cc2-680b-4b2a-9637-47122ad0d8dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d374403b-0852-43ed-bc00-8585649a22f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a8c083-12b1-4899-a9a2-52dff1610aae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dea1fdd1-dd3e-411f-b87f-c11a5f8a128a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c2ba31be-cae2-488c-ad4e-e3966ccae398"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32e7044f-e048-4c7c-bdd9-2ebeddc26bd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57f3584f-ddda-4054-bb23-fec869ee50bc"
            }
          }
        ]
      },
      {
        "id": "9a078fdb-a5fb-4c70-b6e3-b78f525032bf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4e8d142d-f81a-4414-8cea-0929d8b95143",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f360311c-82a7-4a5c-80dd-7f6f3cec0ba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1abb444-b6f8-4fe3-bc20-cf17af9e8211",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5549ae4-ce8f-424f-8976-1c0afae66ec7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "41832338-a196-4998-bd97-5318ac31a043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f678f396-6878-42b0-9fc5-e5a24081434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f75fdbc-23ed-4028-8ddb-d1b1c7d22ecb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80b8b0a6-f5b6-454e-8b6f-c47a628d18b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02d28769-2dc2-4128-87f5-a4df7f16ad7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08cca289-a944-4c1a-afdf-33ac2ceb8489",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec260e45-c096-45f2-a0e4-ee9479f1ad34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b39ade22-2ee8-480f-a828-d2d479dbf8f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c4af6fe4-29ca-418c-9c24-612ab3a65587"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5bd1a8a-4f84-4eda-a843-f9498a866988",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36ab21c4-6820-4cb0-b42e-9073c065d938"
            }
          }
        ]
      },
      {
        "id": "2f6745a1-9619-4eb0-9bb2-454f0edff8d8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b03a5c8c-fec9-4bac-8494-c4ccb6e79a55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a85d78e-50e7-498f-b081-704e725c81b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8769cfd-e345-4f8f-9e5d-e871c0d165f3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef7f1c2-139c-4e54-8b75-b0bc70705d9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f314fa-c252-4324-a17f-110a38bc0941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782730ff-8aad-4f67-a597-b4fe1bcd96c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6ba6dc3-9c22-4089-be67-967af7b5c905"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f43f6083-ae0d-4751-beef-5c44f754f98c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e66e138-d41e-4c91-bb17-91800f0a6861"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "250484cc-3f1f-4264-9018-3d2f63d54ecc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b41eaf61-166f-49c7-9590-9ffe33b488b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "254bd59b-76c4-479f-a212-3a928fdaf499",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "75eaa8ae-ecf7-47f3-991e-f37b05d521f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "732a6ffd-3f98-418d-a413-f2c8bebd4aea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93754aef-f745-481e-8439-8d94d1bc1ba6"
            }
          }
        ]
      },
      {
        "id": "e2f77eae-7dd1-4d47-8934-a91f262bf014",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df92f5a0-0087-409d-ba31-1221f9e0f361",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14f80b2a-39db-410b-a686-ef5cfc0946a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "491ed6b4-85d5-4032-8773-22e762fe0031",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfaca68-e2a7-4c69-bbb4-301a7d4674e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "babead51-c2ed-44cb-9a8d-c95c86d4ef42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a97a1f-a671-4091-ad46-0aaa17b03504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b33eb33-43e3-409c-837e-4bdb2d1d4eb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8663c65-50eb-4d5b-9943-da41b87665dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "600026d4-12b2-4e08-8f47-7561e8fb11e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94279e20-2516-401b-98e6-11f75705ab15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bceccf3a-2bca-4df7-a62a-2c36ce176c0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d574f25-5ec1-416f-919f-b34618a12efe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "32c45250-d913-427b-a28c-a28ace773252"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79957ac6-14e5-470e-b8c5-40441262f5f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1ad99dc-f529-49dd-840e-3cc233ea2962"
            }
          }
        ]
      },
      {
        "id": "22127559-afb4-4f1d-afee-8bbe6f5d54c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4c3823a-7b3d-4241-b8a2-579121e7217d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac4803f4-4c85-426f-bf64-cf0be6f24580",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "09099290-fdc4-4ba1-8f69-b756b5677844",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a92d1b3f-7a2b-44f3-b41e-562485746406",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82074faf-f78b-4512-a221-f76f9cca9e60",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.38492063492063,
      "responseMin": 7,
      "responseMax": 279,
      "responseSd": 26.705155460478192,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723423332181,
      "completed": 1723423347526
    },
    "executions": [
      {
        "id": "b661559d-b959-4f7c-97ee-2ff0520bbaed",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bb6835fd-4a76-4a83-b0d7-b44df3d94b72",
          "httpRequestId": "e83f2f04-5e52-486c-b69f-a10e61c840b8"
        },
        "item": {
          "id": "b661559d-b959-4f7c-97ee-2ff0520bbaed",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1cbfd37b-e532-4872-896a-a328604b148f",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "916441e5-437f-46eb-aa64-224b5a21ac67",
        "cursor": {
          "ref": "a849c6ff-093a-46b9-8369-b0dfef52e068",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2db3a0c1-15d1-4d71-95d1-2a64906fa9f8"
        },
        "item": {
          "id": "916441e5-437f-46eb-aa64-224b5a21ac67",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "222be972-964c-488d-9ac3-de7f468ab582",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "9e2a6bfa-17bc-4651-ae47-3f9ae22203e3",
        "cursor": {
          "ref": "0e3d71e6-a00e-4817-9e51-fda0e08e438f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3fc9a2df-a770-4519-a7f7-36aed3ffe757"
        },
        "item": {
          "id": "9e2a6bfa-17bc-4651-ae47-3f9ae22203e3",
          "name": "did_json"
        },
        "response": {
          "id": "79ddaf75-83d8-4bd4-a0d9-08270b9278e3",
          "status": "OK",
          "code": 200,
          "responseTime": 279,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0bdae4-8da0-472f-ba3b-2b8bf62cd8ad",
        "cursor": {
          "ref": "e6f01457-7a1c-4471-9ff0-e1fde6b4ec57",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0040244f-dd14-46b5-8377-e6a431914bdc"
        },
        "item": {
          "id": "da0bdae4-8da0-472f-ba3b-2b8bf62cd8ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d220b9d-18ea-4a49-8ad7-5fdd0b0bb0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0bdae4-8da0-472f-ba3b-2b8bf62cd8ad",
        "cursor": {
          "ref": "e6f01457-7a1c-4471-9ff0-e1fde6b4ec57",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0040244f-dd14-46b5-8377-e6a431914bdc"
        },
        "item": {
          "id": "da0bdae4-8da0-472f-ba3b-2b8bf62cd8ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "2d220b9d-18ea-4a49-8ad7-5fdd0b0bb0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd3424-0f6c-4b71-846e-a090a4c45507",
        "cursor": {
          "ref": "ae5f0b63-db69-46aa-8c3d-e6f44872b32d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfd4fc39-96e6-4c91-bdcf-dcd48ee8a68f"
        },
        "item": {
          "id": "35cd3424-0f6c-4b71-846e-a090a4c45507",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bfb07388-02a9-48bb-b72b-de9ee913497b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 134,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5b617d-e7c1-49e2-b19b-31415f251647",
        "cursor": {
          "ref": "9d11f186-5189-4c80-b2fd-4bd3f7b65b20",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2eac5c93-2e96-44b7-9d9c-122a60d8ce7d"
        },
        "item": {
          "id": "eb5b617d-e7c1-49e2-b19b-31415f251647",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f9b49160-c9ac-4974-8c36-a574fc5423ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4259ef-06cc-4f96-b548-5e87daabaaa4",
        "cursor": {
          "ref": "16c5697b-d364-4f90-92a1-9cc6ee8af955",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "360de8f7-80e8-4b2f-b64f-5e7c82442991"
        },
        "item": {
          "id": "5b4259ef-06cc-4f96-b548-5e87daabaaa4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "aa22961e-5691-43c2-b42b-f81afab82a5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaae884-e67f-48c7-aa85-4480635d1693",
        "cursor": {
          "ref": "13dcb412-8156-4b63-945e-891a77ab67a0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a08d9b5e-46c1-4b17-b0cc-ed8cad7687c6"
        },
        "item": {
          "id": "3aaae884-e67f-48c7-aa85-4480635d1693",
          "name": "identifiers"
        },
        "response": {
          "id": "11186e60-ff91-4160-a9e7-13f69ffc6d83",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2481fc2-5aee-40f8-8243-d4b74ef32a1f",
        "cursor": {
          "ref": "1c5084df-2bde-48f7-8599-8aa404e4d2f5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1176c135-a617-44e1-b3c1-ac12454c2e1b"
        },
        "item": {
          "id": "e2481fc2-5aee-40f8-8243-d4b74ef32a1f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78125157-3c5a-49ae-9681-bc1290feb9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b6472-d1d8-421c-86ba-52b542ea3e1b",
        "cursor": {
          "ref": "136edd4b-4551-4b94-b032-e6738ac432ac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "567bbc01-b60e-4819-bb20-73ab9142b323"
        },
        "item": {
          "id": "539b6472-d1d8-421c-86ba-52b542ea3e1b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5abb776a-45db-4526-9327-6b49a3689c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8471f072-d75a-4c6b-be17-8d2779b85dac",
        "cursor": {
          "ref": "0c8ed9bd-f3f9-4ee8-8749-fc86cd2d5153",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c322835f-de7b-41f7-afc7-b6722ceaf092"
        },
        "item": {
          "id": "8471f072-d75a-4c6b-be17-8d2779b85dac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f5b9b76-0f17-4b45-a44b-8d3c6aaaaccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad81a8ff-e076-4457-8b6b-4d0d1873d44b",
        "cursor": {
          "ref": "a670bb30-493d-4de5-bda9-e1b164c38358",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2a6bed99-8721-4cb7-bbf4-e5c5056ffc52"
        },
        "item": {
          "id": "ad81a8ff-e076-4457-8b6b-4d0d1873d44b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "92f312ae-cd7f-4166-b303-4c6e900d4308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cf226a-2baa-49d2-93af-a420d1b87ad9",
        "cursor": {
          "ref": "9ea059fa-96df-437c-8b59-f1972b1e9a9d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1e5b3e7c-1df9-4372-851c-ac1928f62a13"
        },
        "item": {
          "id": "e2cf226a-2baa-49d2-93af-a420d1b87ad9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "80d131a0-0a26-4ed5-b0b2-7a8dadb63a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca17a6f-325e-4095-9782-9bfadce5826f",
        "cursor": {
          "ref": "d14ef14a-815d-4010-85f0-6a1c7c00ce7c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "824f757a-96fb-4aae-b7fb-13b2bd7a31cd"
        },
        "item": {
          "id": "7ca17a6f-325e-4095-9782-9bfadce5826f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "dca9a125-cce0-46df-a8a3-08734d5a7f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f135d22-b303-4b63-aa62-690352aa09c0",
        "cursor": {
          "ref": "eb0f238e-ea7e-410c-ab78-29abcb5f452b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "77aea425-4cde-4618-953c-9a4d69a3b665"
        },
        "item": {
          "id": "0f135d22-b303-4b63-aa62-690352aa09c0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6d411f13-1688-4c0b-a266-233b28ac07dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e402f6c-9798-4a3d-9b83-c1054be34bb5",
        "cursor": {
          "ref": "8806c11d-f2e0-4fb0-a8ce-75716be0002d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8f1ecb46-c268-4b34-bb86-388fe895fdc3"
        },
        "item": {
          "id": "9e402f6c-9798-4a3d-9b83-c1054be34bb5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aa5cb7dc-94c2-45dc-b9f4-49f0702c01fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9641c5f2-a784-4e9c-b53e-160e57d80ca5",
        "cursor": {
          "ref": "58ce91e1-b5e0-41aa-bf1b-bc6c2fc7258b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fd326679-b813-49a5-925b-fdb7ffe497d5"
        },
        "item": {
          "id": "9641c5f2-a784-4e9c-b53e-160e57d80ca5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7529d315-c545-4622-bca1-599b9d0dea8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3663b492-c041-49e6-9b4b-8a51afcdaf20",
        "cursor": {
          "ref": "f271cf59-df7f-4259-9454-a5832f2c7136",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2969f963-01b7-4974-b09b-1c7ca0ddb6b7"
        },
        "item": {
          "id": "3663b492-c041-49e6-9b4b-8a51afcdaf20",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "afc9d23c-5040-4acf-9259-1ce36c19dc06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfaf0c75-5035-4e27-ba55-0a9202ade931",
        "cursor": {
          "ref": "6aba224d-9763-4c9b-b672-db1ef30020a5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cfadbe61-b0db-4687-85fe-a823504464fe"
        },
        "item": {
          "id": "dfaf0c75-5035-4e27-ba55-0a9202ade931",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "78b81cc0-6749-4461-8a8b-d570741d32f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdfa739-c514-4d34-9996-54405572698c",
        "cursor": {
          "ref": "b97472b0-27f0-4f24-ad67-611849034904",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d0a55374-1c02-4a8e-85e2-cf1a6723e164"
        },
        "item": {
          "id": "ffdfa739-c514-4d34-9996-54405572698c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "68553527-6138-4700-8aa0-8f2517523deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5834368-7ec3-402d-b4d0-dccafc3789a4",
        "cursor": {
          "ref": "621017a2-c10e-453b-b1f6-2ba8be24be88",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "682f0c99-5d73-490d-8b80-e2d66d8ad2c6"
        },
        "item": {
          "id": "a5834368-7ec3-402d-b4d0-dccafc3789a4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "58495f92-25e9-4e7c-822f-5649b17bb768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbefd86-fc5d-4354-aa8d-748afa15c184",
        "cursor": {
          "ref": "b751bf9e-7644-4586-9c1e-5efd1f855f78",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9a3e51e1-0a17-41a3-82df-83eff1932672"
        },
        "item": {
          "id": "6bbefd86-fc5d-4354-aa8d-748afa15c184",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "06c77fbd-b400-4f2c-bcd1-54fb20048557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a2570b-71bd-47fd-96e3-20c768834f38",
        "cursor": {
          "ref": "eb546047-82f0-4a3b-82dd-8df671512065",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7a0c6c9e-fa43-4dac-b90d-7d490b89e4d5"
        },
        "item": {
          "id": "c4a2570b-71bd-47fd-96e3-20c768834f38",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "21cd75c4-1d1f-4c79-8386-d20281acd2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae18267-ac6e-49d1-875e-f7974218d8f7",
        "cursor": {
          "ref": "aae84591-9b77-4afb-90d0-5c4402841131",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "54987f6c-b7f9-4137-815a-08e20c8ccfc5"
        },
        "item": {
          "id": "7ae18267-ac6e-49d1-875e-f7974218d8f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b292ac7a-3dab-4450-af84-485256b1cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d6663d-ab11-41e4-9791-32fd1bc62e63",
        "cursor": {
          "ref": "a24e60ed-2202-4323-bf43-a57188dc3239",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "15e7c868-4b29-453a-97e6-9cac458d1d79"
        },
        "item": {
          "id": "34d6663d-ab11-41e4-9791-32fd1bc62e63",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "022ecc5e-e1f6-4588-8cfa-7dacbfc478bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df4c247-71bf-43f9-9fb9-5d68a15846ee",
        "cursor": {
          "ref": "39e060ff-3722-4ed5-b141-4244e34e143f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb214ecd-3354-40b6-9a72-8e7b3fe0b925"
        },
        "item": {
          "id": "1df4c247-71bf-43f9-9fb9-5d68a15846ee",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "00b961dc-78f5-4fc6-991e-fea52018aaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787d68c4-d4ab-4991-b730-b79300a0c6e8",
        "cursor": {
          "ref": "58602055-7065-4956-bcd9-7613ea50e7e4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae242c79-32bc-4329-826b-4395281b9162"
        },
        "item": {
          "id": "787d68c4-d4ab-4991-b730-b79300a0c6e8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "00a5a3ce-04a7-400a-a556-11a5bc419a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43297dc5-2de4-481a-bac1-b3373bd30cbc",
        "cursor": {
          "ref": "c73a43d5-3281-4a37-ab04-7e94332ba310",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "05bb8c1a-e2e8-4e8e-9565-b4964b19e7b9"
        },
        "item": {
          "id": "43297dc5-2de4-481a-bac1-b3373bd30cbc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1f9a40b6-c067-4101-b725-a67ea0dd3fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88ba7eb-77e6-4f43-bd39-d7eac266b577",
        "cursor": {
          "ref": "82920807-b106-4861-bba2-9beafc70edd4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "58d4e871-102c-4788-98b2-dbeb60534ee0"
        },
        "item": {
          "id": "c88ba7eb-77e6-4f43-bd39-d7eac266b577",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f1d3b094-3b6f-4296-89e2-14c27f5fcb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46325c43-dbb0-4520-a095-040ecd3e2c72",
        "cursor": {
          "ref": "584d781d-0faf-4b31-89dd-a0e4ad2f1f7a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "760fd130-6303-40af-ab8d-a68983ac39e9"
        },
        "item": {
          "id": "46325c43-dbb0-4520-a095-040ecd3e2c72",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "016ec94a-9804-4abb-9a81-c8f28c38f9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b08b48-781a-4852-adad-a26e2d1f0c44",
        "cursor": {
          "ref": "879726c5-7b9e-427e-896f-4b2630a304b5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "76d83561-1d01-4803-9b31-a425d4e1133a"
        },
        "item": {
          "id": "06b08b48-781a-4852-adad-a26e2d1f0c44",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f77fb77c-acb7-4415-b7d1-82872b872b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128c60b0-da73-4a1f-9488-c663bee48a62",
        "cursor": {
          "ref": "d334f48c-dcb3-4914-95dc-335921900dfb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b7dc8ae3-0422-48c8-8314-9422e284e27b"
        },
        "item": {
          "id": "128c60b0-da73-4a1f-9488-c663bee48a62",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5516734f-cc8b-451b-b62e-367b2d2d27df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f1efa3-9a3f-4698-9c79-adf702246bb1",
        "cursor": {
          "ref": "1e57a58e-c003-4857-9124-66d15a86f690",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "85734cc8-119e-4c19-8b14-d88904dc052b"
        },
        "item": {
          "id": "e1f1efa3-9a3f-4698-9c79-adf702246bb1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "97b66f86-0490-4e33-b432-0d0af3d62794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bff3068-af4c-4330-a567-b1c597488c30",
        "cursor": {
          "ref": "c39a1c7b-07c3-45c1-90bd-89d579f2faf6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dab034e9-47e8-4683-8659-6b1c7c5c5a72"
        },
        "item": {
          "id": "1bff3068-af4c-4330-a567-b1c597488c30",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ea2c2244-02e9-42df-bd0e-12d47ffe5f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ef7bbe-855a-4c89-b4b5-d9722700b9df",
        "cursor": {
          "ref": "d8e67176-34a8-4da1-a89d-4844f21fb3bc",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2e6154a3-9b21-430d-ab3a-3595f588cbb2"
        },
        "item": {
          "id": "d3ef7bbe-855a-4c89-b4b5-d9722700b9df",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6e659c29-66ed-45ed-947d-274b59793053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64517473-7b95-49c0-8a7a-5040323378ef",
        "cursor": {
          "ref": "5caf46f1-0e32-4398-abda-b04053f577aa",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "360004c8-6dc4-4fed-b864-16588756b450"
        },
        "item": {
          "id": "64517473-7b95-49c0-8a7a-5040323378ef",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9f7ea7dd-780e-4d5f-a48c-1f9c9d25fa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8e46a5-da88-43b9-a825-6d33d42a418f",
        "cursor": {
          "ref": "517be88b-38c8-4a6b-b23c-f2133bb5c961",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "24341794-744a-4ad7-9fd7-d9d459d4d697"
        },
        "item": {
          "id": "dc8e46a5-da88-43b9-a825-6d33d42a418f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "13519638-3a4b-423a-bf89-b0a0fa477a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437bcf74-81e9-4a51-8da2-3baf3255466e",
        "cursor": {
          "ref": "da88cbdb-dbf7-44ea-a087-36a21dc58d2e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7b72b3a5-9718-4676-8c56-fb98ffa2b5f6"
        },
        "item": {
          "id": "437bcf74-81e9-4a51-8da2-3baf3255466e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6cd7b593-0ebb-4c2b-9f9a-df3f1d3a90f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21596ec-e7e9-4732-9aad-f6a9b6873404",
        "cursor": {
          "ref": "7246ab2d-e1d2-4d5f-a5d6-30ae7d73f838",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "87306c01-0e3e-4e2d-badc-102aec520edb"
        },
        "item": {
          "id": "f21596ec-e7e9-4732-9aad-f6a9b6873404",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a04c404b-313b-4176-ad9f-1987d69e117e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec9d555-3686-451b-9e3e-91940a1a5b35",
        "cursor": {
          "ref": "8987d1d1-db0d-464c-8ba6-fa800721df94",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "01dee7d5-5f6b-4b92-a4d2-72f59151afa0"
        },
        "item": {
          "id": "9ec9d555-3686-451b-9e3e-91940a1a5b35",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "51768420-ab99-43c6-b993-d12deae816fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a26aeb8-7e5a-4091-b641-2e2488ecd54f",
        "cursor": {
          "ref": "2475d1a4-e21e-44cc-baa1-ead15ec4bf06",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c91163bc-e509-49e3-abdc-746758b8ce13"
        },
        "item": {
          "id": "7a26aeb8-7e5a-4091-b641-2e2488ecd54f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b2f7720e-f733-4395-a9ff-6ad2e014041b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a30ba7-ce90-46ae-9634-81506066099f",
        "cursor": {
          "ref": "15a57593-d4e1-4b16-aa84-e4d2d19cee79",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eeee4feb-ac48-4b0e-9676-cab14c5969c0"
        },
        "item": {
          "id": "c3a30ba7-ce90-46ae-9634-81506066099f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "11f93a4f-3fe0-4022-93d0-d2a9f465bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362657a8-0b2d-4e31-a1a3-644efe3e500d",
        "cursor": {
          "ref": "651643a0-b71d-4bab-96f6-64de87d10db4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "085a1ea2-1a51-4f9b-82b1-75d28e9faebc"
        },
        "item": {
          "id": "362657a8-0b2d-4e31-a1a3-644efe3e500d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "676f6bd3-819a-4342-896a-16603f54c766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183a8ff3-a1d7-4101-97ed-b4fd335efe56",
        "cursor": {
          "ref": "c6f68070-a320-4496-b855-bed4802b1dbd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "02346ad2-5411-4382-8624-2d08f1c818ac"
        },
        "item": {
          "id": "183a8ff3-a1d7-4101-97ed-b4fd335efe56",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b847a632-4008-4b69-8522-b20b9feee241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667bad34-c496-4da3-b88b-6c201bdb3935",
        "cursor": {
          "ref": "9579b765-ec79-4671-8a86-311198140234",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5a220f3e-fb75-4c10-b8ef-c1742953f86c"
        },
        "item": {
          "id": "667bad34-c496-4da3-b88b-6c201bdb3935",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "617d51c0-fcba-4dbc-ade2-edadeedbf622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657a41b2-22a3-422d-9364-420efee62002",
        "cursor": {
          "ref": "bbdbaa0e-857c-4b6d-b9a2-05d6f4ac3757",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c210031-a200-4dee-a516-f4226a53c084"
        },
        "item": {
          "id": "657a41b2-22a3-422d-9364-420efee62002",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ce4437a5-0901-42ed-bb6e-4ec137069c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e82e470-788b-433f-8a08-c4b0a35e4e8c",
        "cursor": {
          "ref": "44b5c3ca-9cbf-4e42-a523-7a1b245c9db8",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1f4dea14-2cde-41ad-82c8-41a0d5c0bc2d"
        },
        "item": {
          "id": "9e82e470-788b-433f-8a08-c4b0a35e4e8c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "631a77b8-ce8e-466b-b5c2-b829cc1f6c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fed8c5-a5c3-4276-9e9e-7bd90addc510",
        "cursor": {
          "ref": "acf64f1e-0063-42ed-b28a-35597a1f4402",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ce9e2a04-ba8b-46d6-91b3-dc3fe9a9c018"
        },
        "item": {
          "id": "40fed8c5-a5c3-4276-9e9e-7bd90addc510",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f388670d-e849-46e4-aa05-6adffd82920d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dce6e9e-495f-41d4-b8d0-e330a2955bc7",
        "cursor": {
          "ref": "1d5e5ab5-d57c-4a83-b505-183492a91ef0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6831dffc-1a16-43e4-8015-3bc0003e374d"
        },
        "item": {
          "id": "0dce6e9e-495f-41d4-b8d0-e330a2955bc7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b8622ee9-b034-4f50-bd6b-08605ded7ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7bf078-d2f8-4939-b3ec-572bb890902c",
        "cursor": {
          "ref": "91bcc471-967a-47c1-901a-bfca57e0e8eb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4f8f56d3-23a1-4cc8-822e-d286a3f63edf"
        },
        "item": {
          "id": "be7bf078-d2f8-4939-b3ec-572bb890902c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e096a0ab-5762-4897-94c4-61549862b6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55e196c-dd8b-4bc7-aa44-98640c6548f8",
        "cursor": {
          "ref": "e58df7e9-babf-4ca6-9c56-b514e739d57e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e841cb78-bebd-4429-86e7-7a1a95466ffe"
        },
        "item": {
          "id": "a55e196c-dd8b-4bc7-aa44-98640c6548f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "abb713d8-4200-455b-b556-c6f60aa3357d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f4c3aa-2dda-427d-a225-3e327f9bd93e",
        "cursor": {
          "ref": "75ec7735-15b8-4e2d-b38a-50faf87c76b9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b4c066e5-7f10-4d16-9573-c833906fde6c"
        },
        "item": {
          "id": "a7f4c3aa-2dda-427d-a225-3e327f9bd93e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "678120fd-29fa-42e9-ab66-2cdab071e8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c09e609-c2f4-42d4-91c7-835d3c158692",
        "cursor": {
          "ref": "e621e849-a050-4f18-a465-2e48134aa5b3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6fde76d0-bb40-41dc-88f8-0c2094ed9b15"
        },
        "item": {
          "id": "5c09e609-c2f4-42d4-91c7-835d3c158692",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "438af49d-8d6a-4e3d-bb5b-024ab4f78600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405e14e9-11dc-44e1-b266-4a02ac1e2f1e",
        "cursor": {
          "ref": "a9b6531d-63c3-4f7a-aadd-6833ef3a2ead",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "df90001d-c902-4212-9a8a-51bfae4721ef"
        },
        "item": {
          "id": "405e14e9-11dc-44e1-b266-4a02ac1e2f1e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "258f268a-ff4e-467e-84f3-22685df58e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a75557-bbe2-4f31-a9cb-526bbfe3e25c",
        "cursor": {
          "ref": "858c6c33-b8bd-4a92-b4a8-200a971f4361",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "90554963-7d6b-44aa-8486-e40eac1aa974"
        },
        "item": {
          "id": "06a75557-bbe2-4f31-a9cb-526bbfe3e25c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c7b9cc33-459d-4700-b7fa-c008de26b90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad076b7-80fb-433b-9b9b-4c66a69b65f4",
        "cursor": {
          "ref": "d42c270a-0233-4711-a4df-6bfb92eebdb1",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eaecfe2f-f2c6-403b-a860-79e44b99da94"
        },
        "item": {
          "id": "4ad076b7-80fb-433b-9b9b-4c66a69b65f4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bddc7aa6-93bc-40bc-9f50-88d7d1cd94bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b492fa1-59d1-4b88-ac38-8bff72a57cb6",
        "cursor": {
          "ref": "24be7e31-0ceb-4c73-bce0-f2b2790de224",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ec8f7d60-3bb1-4d53-8aa7-504856e64993"
        },
        "item": {
          "id": "9b492fa1-59d1-4b88-ac38-8bff72a57cb6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a333f5ba-a79f-405b-ad89-cbbf3903a4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691af434-2e57-43a9-8fac-c2ce6ca7a1eb",
        "cursor": {
          "ref": "6792760d-5c76-4c61-aba0-80f1f99733d5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c11aa978-3660-42c6-b0b5-ab217c7fb0e5"
        },
        "item": {
          "id": "691af434-2e57-43a9-8fac-c2ce6ca7a1eb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e5c4ca25-a965-4c9f-b14f-8a53a05337de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b8a502-1581-4bb0-94c3-0e10b6562aa6",
        "cursor": {
          "ref": "ac5c155a-8532-4706-a90b-adc193202535",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "71e17b8b-430c-44a7-8717-8624a6b51afb"
        },
        "item": {
          "id": "b2b8a502-1581-4bb0-94c3-0e10b6562aa6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ac7740b4-89c3-4ac6-85d7-f89d6257c4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af45cde2-0177-4d82-8d06-d5c9ca5cd178",
        "cursor": {
          "ref": "21272a0e-aa12-44d6-a5aa-8151fe97e567",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d359f18c-cd27-4b0c-804f-ea8cb815df12"
        },
        "item": {
          "id": "af45cde2-0177-4d82-8d06-d5c9ca5cd178",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c3117453-b4de-4e25-aacf-0d74b9e0e3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccc4e68-9059-4a92-a9a4-8856506a24ca",
        "cursor": {
          "ref": "31f03ead-b635-4c44-b153-79f5f9c64c2e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "efb93fca-effc-48c3-b075-08d99a2597a5"
        },
        "item": {
          "id": "4ccc4e68-9059-4a92-a9a4-8856506a24ca",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1f47cff0-49f6-40a6-bd11-9a183fee4dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fba77e-091c-4cb9-97a0-f9d5c22db17d",
        "cursor": {
          "ref": "15e5306a-4732-46da-918b-ee704c848be6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e70a9196-ba69-4ebb-bc92-0004212fc0ca"
        },
        "item": {
          "id": "51fba77e-091c-4cb9-97a0-f9d5c22db17d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bed48ef3-4b5d-4e00-a6da-492757a6f8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd06d3b-b4e5-4d62-aa00-6e91c8826bb0",
        "cursor": {
          "ref": "6bc7d9e0-5fed-472d-b5e7-5074eb63878c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ea1b1239-5f65-4d92-9f56-608937f89b69"
        },
        "item": {
          "id": "9fd06d3b-b4e5-4d62-aa00-6e91c8826bb0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ae657fe5-e62e-40f1-bcfb-714510dc5ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfa13df-5237-4171-81e8-638f749682b6",
        "cursor": {
          "ref": "8479d595-a943-4c63-b106-1dbd0c2f4ff1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "59a2cda4-4d48-4f67-8762-44601b48f80e"
        },
        "item": {
          "id": "5bfa13df-5237-4171-81e8-638f749682b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fab8cd81-98a1-45e8-86bc-11e1514c406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561ce701-285d-4e5b-8e17-876595b5451e",
        "cursor": {
          "ref": "f08cbe88-4bc1-4624-a6f2-fc54df8be929",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f603966f-5b2e-4a01-acff-495ae3034a24"
        },
        "item": {
          "id": "561ce701-285d-4e5b-8e17-876595b5451e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3ef2f4c3-ffc3-41f9-8092-2c0247477985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6431f098-4f12-4736-9587-f636a4131c5e",
        "cursor": {
          "ref": "4a83d3e6-5198-474f-a548-dde1197a567b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5d8d3298-f6b0-4ec0-9c73-0ae141e86ab1"
        },
        "item": {
          "id": "6431f098-4f12-4736-9587-f636a4131c5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9ea23598-9e01-43c7-8e79-3fda125fd5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48494c2-11e3-4dc7-b683-4086bb7e158e",
        "cursor": {
          "ref": "bde47a68-2b36-4f19-8723-07e72d432035",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c5bcb0e5-4ecf-45b2-9a1c-d0498e66d98f"
        },
        "item": {
          "id": "e48494c2-11e3-4dc7-b683-4086bb7e158e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "40e957ce-7c1c-4f29-a0c4-64cf4cf8a2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e10895-95d3-4688-9854-56e532335d5d",
        "cursor": {
          "ref": "fadacbc3-c6b1-4dd5-85f1-cd964f887244",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "87c1592a-04de-415c-a756-8d799b14cec8"
        },
        "item": {
          "id": "32e10895-95d3-4688-9854-56e532335d5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3730115f-da16-4a07-a4b7-2f7ec2c10078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e053565-7076-4da2-9f57-63c13a888981",
        "cursor": {
          "ref": "0260ec84-6260-474f-a6ba-4b27e07eea84",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ef03578a-c492-4722-84e7-c9b3a2c7110f"
        },
        "item": {
          "id": "0e053565-7076-4da2-9f57-63c13a888981",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d374be58-0205-4dae-b4f0-627a6b4d9474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba51f56a-6567-4b57-9677-184ead1975c1",
        "cursor": {
          "ref": "f81581ef-4743-4a54-815d-e3c9667a04f6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "98462c3c-11c4-47e5-ad41-5ec1e5a008f2"
        },
        "item": {
          "id": "ba51f56a-6567-4b57-9677-184ead1975c1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ee8f6dae-5d69-4403-a670-6f9939583399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fadc3e-c4d6-4569-8001-0a5a25ca349b",
        "cursor": {
          "ref": "d6aa8904-316c-49af-ba6b-539f9aeeba21",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "60301e1a-7d07-43e6-be72-47d5923a9dff"
        },
        "item": {
          "id": "69fadc3e-c4d6-4569-8001-0a5a25ca349b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9cd4f1df-948a-4dba-8b8d-066abd7447dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8099ed23-6dc9-4400-acc2-899dbf9c7a36",
        "cursor": {
          "ref": "03c6de52-d630-4f1d-a5f3-8fd02630085d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "87a5e2a1-c744-4d85-a6f4-af78157885a8"
        },
        "item": {
          "id": "8099ed23-6dc9-4400-acc2-899dbf9c7a36",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e6bb5899-69e6-45f8-8790-4b575c3060b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de26aad5-2e84-4ff5-99a6-9e0b3085cdf1",
        "cursor": {
          "ref": "ddf8e792-8a92-41f1-ba7e-583a1365d659",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8f493b3d-b976-4ac4-8b8f-d17448a27054"
        },
        "item": {
          "id": "de26aad5-2e84-4ff5-99a6-9e0b3085cdf1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8a17b3d3-6021-4d92-a623-05e4ee30ddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ec0188-1445-4d0b-9100-64030b4f0163",
        "cursor": {
          "ref": "72920452-a976-4d8f-a054-99837c4c4934",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3203b613-4462-481d-b114-a4283f625004"
        },
        "item": {
          "id": "71ec0188-1445-4d0b-9100-64030b4f0163",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e3f8d9d8-3ec5-4c02-baed-49981e289c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aa02fc-a33f-4278-805b-fa7343fb989c",
        "cursor": {
          "ref": "34ff0fea-a51a-485f-9df4-9ed1ac23724b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac8055dc-7982-46fc-a2df-f27bea3c4c4c"
        },
        "item": {
          "id": "86aa02fc-a33f-4278-805b-fa7343fb989c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e5e56110-3e98-413c-aafa-894b83b40a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b8a913-3d26-48b7-aec3-93c11938f21d",
        "cursor": {
          "ref": "150b624a-2375-4ebf-9714-8f4d46a5d3fc",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "84fe58cd-9dba-4263-b690-ca9d77432e7c"
        },
        "item": {
          "id": "e6b8a913-3d26-48b7-aec3-93c11938f21d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "025e9d0f-1b8e-425e-bdae-c16eb7abf786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7670f3-a22f-4640-a054-3f52df7f91e0",
        "cursor": {
          "ref": "820a6f4c-f266-41cf-bd6d-579c0f2fff5b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a0355ded-9547-449a-b649-0b8032db3712"
        },
        "item": {
          "id": "0d7670f3-a22f-4640-a054-3f52df7f91e0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "70b08588-64c2-4d24-a9b5-888715c57fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf99692-326e-45e8-ae82-cb0f42fcff9b",
        "cursor": {
          "ref": "ad688d7c-dc11-4e97-b5e7-49988cf92538",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d3ddd42b-3ac6-49a9-baf3-4390d2785276"
        },
        "item": {
          "id": "4bf99692-326e-45e8-ae82-cb0f42fcff9b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "efc06048-5ee4-45ec-afb6-6f787cda8332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b29654-6c68-41df-a2a7-a700ad51c638",
        "cursor": {
          "ref": "75c5621f-8aa5-4341-8722-83133f363d69",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f10213f4-8b9c-4143-b94b-e83aaac78f41"
        },
        "item": {
          "id": "09b29654-6c68-41df-a2a7-a700ad51c638",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "34953265-bf4a-4f61-8bfb-0753acbb6850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134d3fa9-521b-4278-8c8a-09712572d86f",
        "cursor": {
          "ref": "c6357607-dca0-497f-90f6-509f3289b590",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b09ba3ea-1e59-4eb7-a366-cff8158ce670"
        },
        "item": {
          "id": "134d3fa9-521b-4278-8c8a-09712572d86f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2bf97729-0956-468f-8a46-ead120fd14a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99d5a1d-e797-4e28-a70e-ed84aa25837e",
        "cursor": {
          "ref": "e2be8040-d988-4ded-a1be-8d4c745a1146",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "baea88ea-b4da-4386-8746-f4792356f548"
        },
        "item": {
          "id": "b99d5a1d-e797-4e28-a70e-ed84aa25837e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "23b51c63-94bc-401d-873f-feab53aa26da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c10cf8-5643-41eb-a00a-99437c243792",
        "cursor": {
          "ref": "52b22dfd-16a8-4b6b-9fe6-7ec4e2d741bb",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "28617874-396d-4041-b245-89dc2fb3f31d"
        },
        "item": {
          "id": "71c10cf8-5643-41eb-a00a-99437c243792",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1418d2dc-1e20-4315-bf72-0c752195c1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a0719b-35a6-47c5-ac53-3a9897ce789b",
        "cursor": {
          "ref": "c46f434a-287d-43a4-9ed4-ab232aa59b65",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1b97a243-0fde-44b5-8b37-1f7e0256ef8a"
        },
        "item": {
          "id": "b2a0719b-35a6-47c5-ac53-3a9897ce789b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c287a5e-b31a-41c5-b8cf-fa2f8bca68f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fea770c-3955-4997-8376-1411b7dfdd55",
        "cursor": {
          "ref": "8de2daf1-0163-4f2d-a047-189933dc9ad7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "48bf4743-e3c8-499e-8c06-4e5666a0c29e"
        },
        "item": {
          "id": "4fea770c-3955-4997-8376-1411b7dfdd55",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5d21aaeb-a462-4215-87a2-3a2857db660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e4b8b-db95-452c-b610-55e073117bf1",
        "cursor": {
          "ref": "d99f4ac5-cfaf-4d8d-9990-486710efcb38",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "254da51e-bbbe-461e-943d-c4e3a4155748"
        },
        "item": {
          "id": "467e4b8b-db95-452c-b610-55e073117bf1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e84e70b4-908a-49c9-8c52-496d15a09f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55809f4-a694-49e3-96cf-f3271d5ace6a",
        "cursor": {
          "ref": "6ebb10f3-0e39-439c-b9e8-f3732ce0d63d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8149a29e-a1e0-4f1a-85f0-b8de430c2ae2"
        },
        "item": {
          "id": "a55809f4-a694-49e3-96cf-f3271d5ace6a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a541f00-c274-48e5-8028-ac314363703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e4264a-8bad-42ec-bda9-ccdc092c4813",
        "cursor": {
          "ref": "0ee8cc43-32c7-4948-b575-a15844a6a46b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d3341cfc-b797-478b-b067-e48d8a8c1b5e"
        },
        "item": {
          "id": "70e4264a-8bad-42ec-bda9-ccdc092c4813",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "126d55d1-577f-468f-8323-434ec562f3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b6b660-88e3-4069-b303-fca7877f8396",
        "cursor": {
          "ref": "87879b7d-c157-4d0d-aa1d-186402ab979f",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "821a664d-40bf-4845-b14a-9f98395538d2"
        },
        "item": {
          "id": "a9b6b660-88e3-4069-b303-fca7877f8396",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dadbcbd6-30f3-42a1-9046-845939e6079f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dc0c5b-9537-4dde-9947-f06ed239e5b4",
        "cursor": {
          "ref": "186ad253-5887-443e-bbee-b713482f096b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "875edea4-42e6-49e9-8eeb-701b163e080d"
        },
        "item": {
          "id": "88dc0c5b-9537-4dde-9947-f06ed239e5b4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3764d7c3-8fbb-4230-82d9-32d3d357fca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a319c52-f9e9-4543-9f8f-475212918d1a",
        "cursor": {
          "ref": "847954db-cef2-4750-8cbd-f0a5ec7fcb70",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "30b87358-8f5d-4228-96f1-40134ff5e930"
        },
        "item": {
          "id": "0a319c52-f9e9-4543-9f8f-475212918d1a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5ecd2153-0143-49d6-81b9-92057706f806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fd9456-4a13-44af-a051-ed5b8dcd5583",
        "cursor": {
          "ref": "ad992fbd-33bf-4fa5-a6e5-dba9aeb1dc76",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f4413ca3-ca16-4655-8a87-77c0a18d195f"
        },
        "item": {
          "id": "a4fd9456-4a13-44af-a051-ed5b8dcd5583",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8f22a62c-551c-4580-8051-e334c507541f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8030e15-3d2f-4717-91a0-6155a6a7c358",
        "cursor": {
          "ref": "b7fd9c18-d7bd-4c4b-b9b0-91f8ca148a34",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aef0111c-9a6d-424a-af78-6021a5bad717"
        },
        "item": {
          "id": "a8030e15-3d2f-4717-91a0-6155a6a7c358",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f4d43e0-25ee-4de6-b279-b5a6a8e90d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c367b3ff-b5a3-4185-83e9-840fca15e76a",
        "cursor": {
          "ref": "6399d8be-b3b0-4771-8cec-6e1f1f2a8203",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c9b92fcf-664e-432c-a11a-10bd5f78a521"
        },
        "item": {
          "id": "c367b3ff-b5a3-4185-83e9-840fca15e76a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c73012f5-f40f-41c2-a4be-adf5a4318254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274a7150-824c-42e7-b93b-a354d1c2cc2f",
        "cursor": {
          "ref": "33743d41-4eb5-4152-96cf-d070a7e3c50b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a694dd14-b192-4176-ba87-e3ccc965550d"
        },
        "item": {
          "id": "274a7150-824c-42e7-b93b-a354d1c2cc2f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f54381ee-4892-41e0-8945-b12ad6851164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9bad460-a383-4be6-a7de-f2f8f0beb748",
        "cursor": {
          "ref": "64893e40-f0ce-4c3b-89b3-e70e22a5b7ca",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "15b75bce-dea2-4a00-bb97-0a6b6062b678"
        },
        "item": {
          "id": "b9bad460-a383-4be6-a7de-f2f8f0beb748",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "35dde510-7aba-4da7-ac85-3dfe7b6f3556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55127741-b53f-4a89-a6da-f2feb61179d2",
        "cursor": {
          "ref": "e4039e29-fb8e-4220-bb0b-2873a40fb1ee",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e5e394b7-c508-492d-a53b-4680d92d2c1b"
        },
        "item": {
          "id": "55127741-b53f-4a89-a6da-f2feb61179d2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "20498897-b76b-48d7-8abe-349c3a8bb9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf8b426-bd1a-4054-b1d7-75258d91fcff",
        "cursor": {
          "ref": "8d4d9ec2-6ebd-4e46-a877-d5e135ef0d87",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "24be2524-6841-4b32-ab52-cbd934eae60c"
        },
        "item": {
          "id": "3cf8b426-bd1a-4054-b1d7-75258d91fcff",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2e535a78-1f03-4fbc-a212-f4fbb7ad5365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8cce5-f301-48a1-9d2b-b894856395ef",
        "cursor": {
          "ref": "a60cc45e-067e-453d-bd90-b3562f84e6bc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1d390227-d511-467e-9f7f-4f6b15b1ec36"
        },
        "item": {
          "id": "dfa8cce5-f301-48a1-9d2b-b894856395ef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b9a96997-d512-4fe4-ab20-382f36b0370e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5b4b98-04bb-4310-9004-702ca806c0b5",
        "cursor": {
          "ref": "596127ef-eaf9-4120-a740-de3efb39a8cc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3ddca10c-f187-405b-9725-9f036fe3b883"
        },
        "item": {
          "id": "ba5b4b98-04bb-4310-9004-702ca806c0b5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "36d7a84f-858e-400f-96f4-a0f39b55f5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32483a4-9de3-4ab8-a270-e6d35f0182a4",
        "cursor": {
          "ref": "8b0c01f3-d6e5-4a6b-9fcd-ab06c86be078",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3b966761-60be-41da-ab41-e075dc967335"
        },
        "item": {
          "id": "b32483a4-9de3-4ab8-a270-e6d35f0182a4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0b8c93a8-70f6-47f0-a7bb-1f06bb81a9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4264d7-1bd2-40bf-a459-cf37c87335aa",
        "cursor": {
          "ref": "da6570dd-ff1f-4709-9cb4-be8efbe1ab59",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "46482fcf-4907-4a30-acbd-317062d4ea49"
        },
        "item": {
          "id": "8e4264d7-1bd2-40bf-a459-cf37c87335aa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d4fd67a6-a303-4bb7-8c42-8630191faa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f71b10a-20f7-4737-9245-5e5828a1c874",
        "cursor": {
          "ref": "8d7a46e3-bf43-4afa-84e8-7155f05bcca1",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4915e28-1d1e-4b39-9d63-4a83622d48f6"
        },
        "item": {
          "id": "0f71b10a-20f7-4737-9245-5e5828a1c874",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "69eb6e35-2f42-4d94-90a8-d1697be4084f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "48779eec-21c9-4772-81cc-e8742ee5dcd3",
        "cursor": {
          "ref": "5c451086-025c-4d62-b118-0b70a22e63ce",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6466fb90-8007-4aa7-957e-abb5f4d2f89a"
        },
        "item": {
          "id": "48779eec-21c9-4772-81cc-e8742ee5dcd3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1649f9e6-59c6-4598-91ba-132b3fd93fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0d601861-001c-4242-9335-2d4f0ff93336",
        "cursor": {
          "ref": "bdd29e9e-185d-40ac-8ea9-423b1ab5ffb7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6c2fc66e-a1d9-460e-9614-44a19a5c51e9"
        },
        "item": {
          "id": "0d601861-001c-4242-9335-2d4f0ff93336",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c9af2db5-2837-4839-98c1-88d584756001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "e4498765-3a61-489d-bb24-861ae027a9f8",
        "cursor": {
          "ref": "82b415cf-a565-4fcd-85b5-0815c5826fcb",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6abcecb4-dd78-490f-b6a1-1cbee275d260"
        },
        "item": {
          "id": "e4498765-3a61-489d-bb24-861ae027a9f8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "544bea31-5b76-42f0-b01c-1050e8cfe2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2497a851-c567-4862-b00f-0753945a6526",
        "cursor": {
          "ref": "0ddfde09-9e8d-4e53-8382-fe47c3513bfa",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "24dd6683-56e7-45fe-bb39-9361e3e00979"
        },
        "item": {
          "id": "2497a851-c567-4862-b00f-0753945a6526",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a01eb95-1f7c-4232-92ad-4ace56743468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3757ca3a-7446-4247-a8fc-19b4c2fcad6b",
        "cursor": {
          "ref": "93217389-ad35-49c1-b81d-919dd5fe18cb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "06e80bdf-23aa-445f-ab2b-f049520c5e24"
        },
        "item": {
          "id": "3757ca3a-7446-4247-a8fc-19b4c2fcad6b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d0889779-02e1-45c2-9ceb-da922acc8de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "72277a8c-0d72-4fec-85e3-ba744a493d8f",
        "cursor": {
          "ref": "5dfbe966-25f6-4fb0-83b4-62d01ff3b746",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "082c45be-a783-472b-9d93-3ab0bcac0ec0"
        },
        "item": {
          "id": "72277a8c-0d72-4fec-85e3-ba744a493d8f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "220787a0-d5b8-4a2e-90d4-2ec7dff955c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c0e907d7-aaf5-44d7-913f-6d00b0500a4a",
        "cursor": {
          "ref": "d27a6c33-617a-46c7-9a58-55c71ded037e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5eefd196-4ea0-43dd-a0c4-4709dd811c3a"
        },
        "item": {
          "id": "c0e907d7-aaf5-44d7-913f-6d00b0500a4a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3778c742-2950-4ab6-b4b7-2c37397868be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a6eb80-c429-43a7-893d-22c557b74c19",
        "cursor": {
          "ref": "de038758-7dbd-478e-8e85-a580247a395c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8514f122-65ba-45b6-8379-9cffdf0f157a"
        },
        "item": {
          "id": "08a6eb80-c429-43a7-893d-22c557b74c19",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ef779938-2792-40ae-a158-9c90aafb281a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cdf71d-a1d4-4a1a-a24e-95a4f2891a29",
        "cursor": {
          "ref": "26ab0927-2aa8-41e0-bcf8-d433e08d73df",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c68840fc-5bc7-4103-a1ab-0a9595b4533c"
        },
        "item": {
          "id": "58cdf71d-a1d4-4a1a-a24e-95a4f2891a29",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "062db142-5385-4b57-8b5e-ecf3cdeeb42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f24678-b781-4b88-b76a-01cc67aec9b0",
        "cursor": {
          "ref": "f7639a8a-0196-46f9-862c-924ad1eecd05",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b8767d94-4dd8-448b-b964-923ffd5cd8cc"
        },
        "item": {
          "id": "29f24678-b781-4b88-b76a-01cc67aec9b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e866db14-a5eb-4f8a-bf8d-8bb03e0610ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84590674-a7a7-44fd-8c79-5014305682ce",
        "cursor": {
          "ref": "91af6645-147b-4bcb-9d1c-b489977e4af9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9164e46f-fa7d-4925-9b7a-5956bff34436"
        },
        "item": {
          "id": "84590674-a7a7-44fd-8c79-5014305682ce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a9e1b61-6180-4b02-b549-f929ce88887f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066161a6-37ea-4073-9876-91b66baff528",
        "cursor": {
          "ref": "0fab9ccd-1ba0-4bd5-9966-427657e98879",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5aeb85a-ce46-48a6-a7f3-b6fd89232ad7"
        },
        "item": {
          "id": "066161a6-37ea-4073-9876-91b66baff528",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "79611bae-d821-45fb-a29b-d47ef6cc0d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce97ff6a-f726-4813-b98b-11d621533850",
        "cursor": {
          "ref": "146e367e-c126-454e-8951-8b9916944849",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3ba8c21f-557a-4bc6-8b6d-672dab00b0c5"
        },
        "item": {
          "id": "ce97ff6a-f726-4813-b98b-11d621533850",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af9e8a9b-a32c-4c79-82ab-d8173bf2517a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae65b4ae-1692-4d25-8df8-806b5049c671",
        "cursor": {
          "ref": "64462747-22fa-45a3-9b69-a1b1f3aede46",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cee08c9d-f5f5-45da-96cd-8a5d1c5699e8"
        },
        "item": {
          "id": "ae65b4ae-1692-4d25-8df8-806b5049c671",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "db81eb87-4f00-4047-9c53-5bdda2e248ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc5d2c-7be1-4f50-9ec1-dba76073aa46",
        "cursor": {
          "ref": "b866310f-474d-40d7-922c-e87a3ddce3f7",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e49ecae2-c27e-47e9-b261-ad0657d2b8d3"
        },
        "item": {
          "id": "72bc5d2c-7be1-4f50-9ec1-dba76073aa46",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6ad127a5-5ca8-42ea-b2aa-e1953666d675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e45ec2-70ec-476a-86f7-0e5b5554d92d",
        "cursor": {
          "ref": "4c088f1d-df02-4a9e-bd77-1776d15b6aa4",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "20d8ee67-dd8e-42ff-977b-47d14acb9a44"
        },
        "item": {
          "id": "b8e45ec2-70ec-476a-86f7-0e5b5554d92d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d85a0a82-2aba-4463-9afd-030e6c4ec070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a5d2ad-c3eb-4b86-9339-4554dd856aca",
        "cursor": {
          "ref": "87fa676e-0f49-4d66-b060-8228dc8c0bfc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eac8cc9a-1d20-416d-abc5-4d3e20cec799"
        },
        "item": {
          "id": "80a5d2ad-c3eb-4b86-9339-4554dd856aca",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "71daa7a6-ead1-4ab2-9370-ce44a71f82db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec13a3d7-96bd-4fa6-a36c-7eaccc4b6023",
        "cursor": {
          "ref": "ebb32daf-7064-413a-ad61-6ef9d0397a88",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "06507ced-4f11-49ce-9c01-de4279974d24"
        },
        "item": {
          "id": "ec13a3d7-96bd-4fa6-a36c-7eaccc4b6023",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b95602f9-52fa-4444-8a40-9d0d79501226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e3a2f0-061c-4e5f-91cb-399cecb0a0a8",
        "cursor": {
          "ref": "52e50deb-487d-47d5-91ce-e0de616ba1f5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "69ee2f40-9c8e-4164-b9b3-ec131816f970"
        },
        "item": {
          "id": "b8e3a2f0-061c-4e5f-91cb-399cecb0a0a8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6076e28d-9cce-46d0-88c2-6c27fef88ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3a0901-e98f-49e1-8db4-37eecc9c6ddd",
        "cursor": {
          "ref": "21640c4d-8032-4b91-bfc9-8ceed3e12287",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7169740f-4f65-4651-b400-6c9ba0843ad7"
        },
        "item": {
          "id": "6f3a0901-e98f-49e1-8db4-37eecc9c6ddd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5be654e3-e074-4d0f-90ce-959452e5ab4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd11b02-b0d2-4d24-accd-23386c839ee0",
        "cursor": {
          "ref": "6cfcbfa1-b438-48d1-ad9c-eff44355df9f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "485bf872-3d5d-47c9-9ca1-f045bdeafcf6"
        },
        "item": {
          "id": "8bd11b02-b0d2-4d24-accd-23386c839ee0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "66c1e23e-58d0-43be-83cd-c14d0ec4359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3360b33-0408-47cc-963f-95319343a65c",
        "cursor": {
          "ref": "ad431678-37c8-405c-89a9-36249873e616",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f43cc737-6c50-4df0-8004-4c91994813e0"
        },
        "item": {
          "id": "f3360b33-0408-47cc-963f-95319343a65c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2f9515ac-e3b2-4bd7-af03-324d4b3ca3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c4114e-4f08-43c0-b7e2-31961cec6f1f",
        "cursor": {
          "ref": "fce75174-4916-4179-9bfa-0953ce20eff7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "66905466-2517-4836-b57b-5ce3aaf0e621"
        },
        "item": {
          "id": "c5c4114e-4f08-43c0-b7e2-31961cec6f1f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "38b2eac3-bdf4-425d-916d-9b7191a3b1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a075e8-cc5e-442c-96e1-85c7e8084e36",
        "cursor": {
          "ref": "ed3d93b7-6076-4e88-8968-cadc5fce2abd",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "049df261-84c6-47c8-a3dc-9df89f0c9ac9"
        },
        "item": {
          "id": "61a075e8-cc5e-442c-96e1-85c7e8084e36",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "922bbaa5-59e7-437a-8218-368d48c6e656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b231ad-ccf7-4783-9201-33c70668f7c5",
        "cursor": {
          "ref": "6c77577f-b7bf-4a66-ab13-03decc686bab",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ec41a1f7-e954-45ef-985a-8b8d8649f04e"
        },
        "item": {
          "id": "44b231ad-ccf7-4783-9201-33c70668f7c5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1969cb3-1c14-4814-a0d9-926b89934e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b048ca-90f7-4f15-aee6-10fa3e688641",
        "cursor": {
          "ref": "79998995-442f-4542-90c6-2ac5b33091cd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "06ecfd08-cfeb-41ab-b942-4f0d4943084c"
        },
        "item": {
          "id": "14b048ca-90f7-4f15-aee6-10fa3e688641",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6b9ac3ee-ad24-4ee6-b588-2577d357800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e271b7d9-790c-4a86-9ab8-66c6fe4e5046",
        "cursor": {
          "ref": "c2a4bf39-0626-4049-89f2-38afa7179535",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "870d2727-2d14-4318-a3c9-f3648149822b"
        },
        "item": {
          "id": "e271b7d9-790c-4a86-9ab8-66c6fe4e5046",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ff5f590-a478-4faa-a2fa-7c419970bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4e76d3-c744-48ea-8ad8-b4c0dbe17619",
        "cursor": {
          "ref": "b96264bd-6ee2-4244-b6ed-1f608fcf7a6c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4e24abea-c5cc-4923-90ae-af07da5dbe2d"
        },
        "item": {
          "id": "0c4e76d3-c744-48ea-8ad8-b4c0dbe17619",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "71f803c7-e752-4d54-88a0-f222b5723ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f29b06-105b-44c8-a2be-b26d87457570",
        "cursor": {
          "ref": "ede80078-d1fa-40fb-87a0-b884fb501f9d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5a5aa498-a776-4bfc-88e6-b01bbace4108"
        },
        "item": {
          "id": "03f29b06-105b-44c8-a2be-b26d87457570",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "55e0dcc8-2ffc-4a05-b3d9-33abbc79f242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbbf1c6-cc39-4c8e-a456-6a7a8f6fe83c",
        "cursor": {
          "ref": "f5edf772-c6c4-49a7-9a49-2487061bcedd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9dcb7869-3153-4a57-8e18-a595e594082a"
        },
        "item": {
          "id": "bcbbf1c6-cc39-4c8e-a456-6a7a8f6fe83c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a648ee24-c2fd-4361-8cbc-1b7d330f9ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54404e-692a-4c00-974c-59757feaab89",
        "cursor": {
          "ref": "bc68722a-d228-42d5-a26d-9256ba546851",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "223b3d9f-456a-4f1e-b4e8-60036da5b3f4"
        },
        "item": {
          "id": "ca54404e-692a-4c00-974c-59757feaab89",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c4a3ac95-b591-4b86-aeb8-ed04422fa7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e46c99b-3d50-44b4-8a2b-7190d288bd71",
        "cursor": {
          "ref": "c1069d4d-a884-4aba-87e4-c3965f8bb6e9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f6236762-a6cc-4f80-9158-683aa4b4be8b"
        },
        "item": {
          "id": "6e46c99b-3d50-44b4-8a2b-7190d288bd71",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3399d669-70b4-459e-8288-fe645bf0550f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fe8ea3-f5db-4103-9d79-0fdf66b3152b",
        "cursor": {
          "ref": "d3661ce7-2448-45f8-96c0-5a335b2a1fde",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d1eba28f-913b-4f18-a051-44219783ca4c"
        },
        "item": {
          "id": "07fe8ea3-f5db-4103-9d79-0fdf66b3152b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "20178d18-bca1-499b-933b-f51dbff636f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4cc921-93b0-413a-922e-83f109611d6d",
        "cursor": {
          "ref": "186804b8-0cb6-465b-89ce-35a5168a7723",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f8abc07a-1ee1-45d9-8604-06aeb4c29651"
        },
        "item": {
          "id": "0f4cc921-93b0-413a-922e-83f109611d6d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "491c6c29-23b7-4a8a-b081-de338acbdf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8f8827-624b-4dd2-95e0-e9b086941214",
        "cursor": {
          "ref": "a0a4a924-9732-439a-86cf-c5b49c4eea73",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "22780a39-54bb-4c05-8093-fae2b93f4e13"
        },
        "item": {
          "id": "8d8f8827-624b-4dd2-95e0-e9b086941214",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e4ead29-f972-4cc5-b9f4-58d1657b904e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adfd3fc-a42c-4ef4-b3d4-a0b3a7384523",
        "cursor": {
          "ref": "1be58a64-284e-486f-b3e6-c64b2e9d2e15",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c7264fe6-54cb-47e0-865e-1e473d2a34f2"
        },
        "item": {
          "id": "1adfd3fc-a42c-4ef4-b3d4-a0b3a7384523",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82709efa-7bc6-4b00-976a-3ca15222298b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a4b54c-1b2f-4c3e-956a-23648dd20bfb",
        "cursor": {
          "ref": "82b2d271-73a9-47d8-b11d-9baab1a97e2c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c960fba4-e908-46e3-810d-e68631ee678a"
        },
        "item": {
          "id": "d7a4b54c-1b2f-4c3e-956a-23648dd20bfb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8588efe-b397-46bb-8b03-4edf7d067322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6564dc-8790-4e3a-aecc-8bc44db0c12e",
        "cursor": {
          "ref": "e794a3ff-959b-481d-8d0a-fca16d38238d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb5ad74c-ae70-428e-811c-ea2ee26586a7"
        },
        "item": {
          "id": "aa6564dc-8790-4e3a-aecc-8bc44db0c12e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6e0fc023-af9f-409a-9d58-44dd8fafccd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eb21f0-a5be-4b6c-847e-9492cc0835e0",
        "cursor": {
          "ref": "33592d14-f2d8-41a8-bcac-3786c0232512",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "889f13ee-3449-44cd-8f1c-d07d48a5feef"
        },
        "item": {
          "id": "68eb21f0-a5be-4b6c-847e-9492cc0835e0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "480b5cdf-8a62-4085-8091-f85e10e00f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d60cb2-535b-48a1-8cbb-0e68d0d36b6b",
        "cursor": {
          "ref": "8fa4a69c-32b0-4281-9527-1fa7c6bb8ea4",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a095c189-3640-4727-a47d-dffa54afa1e8"
        },
        "item": {
          "id": "a3d60cb2-535b-48a1-8cbb-0e68d0d36b6b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7f6e806c-f918-4457-b0ba-abe2b3285f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619726b0-f0a4-4934-b56d-e0e1a774f452",
        "cursor": {
          "ref": "ab9b4018-31c0-45ae-a802-d69be8acd89e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ef63b2a3-1f42-4ac6-9523-524949169373"
        },
        "item": {
          "id": "619726b0-f0a4-4934-b56d-e0e1a774f452",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "775cb59b-e77c-412b-9e49-f1879d8e2143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c76577f-5bc5-4f9a-a5b1-27aa54b06324",
        "cursor": {
          "ref": "fa9fe380-022f-4ac1-b62e-f1d6d87a1649",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2604423b-89d4-40ad-b175-4b5d3b72d3bb"
        },
        "item": {
          "id": "9c76577f-5bc5-4f9a-a5b1-27aa54b06324",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e53faf29-4ac9-4842-8069-41e6cbcb7e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e769e0c-216f-4045-879a-12971c019e6e",
        "cursor": {
          "ref": "9c882b3f-4bf8-4f99-bb84-c2546cc3371e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fe835c00-c590-406a-a0f4-05867c3a0790"
        },
        "item": {
          "id": "9e769e0c-216f-4045-879a-12971c019e6e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c7093866-7ad3-4f65-8bb8-8199ee77372d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372f76af-5e03-4936-827f-fa6ce81f159a",
        "cursor": {
          "ref": "9a2d9a88-a0ab-441d-a748-6012eef65498",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "537a0015-5550-421a-9c54-a65481ba2e07"
        },
        "item": {
          "id": "372f76af-5e03-4936-827f-fa6ce81f159a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "98d62d24-c11a-4c89-ab92-d9edeec53385",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a80d26-17eb-473e-98a3-883251d438ac",
        "cursor": {
          "ref": "525c0c7d-5279-47d1-83a2-8ab84c761f04",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "24824bb2-35ae-42dd-ac95-1466062ede0b"
        },
        "item": {
          "id": "07a80d26-17eb-473e-98a3-883251d438ac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "141ed9fc-49aa-4eae-bca8-226acbeb53ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5efaa34-86ed-4def-9b57-f1b6b12ad779",
        "cursor": {
          "ref": "5a7fe1b6-4da7-42db-952b-06d1004cd0bc",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "395acde9-3d5a-49c7-8bfa-0f05313da59f"
        },
        "item": {
          "id": "a5efaa34-86ed-4def-9b57-f1b6b12ad779",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e6197533-413a-4781-80f3-425c332ca14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad6099-4fec-4473-a8e1-22fd959d6f4f",
        "cursor": {
          "ref": "5378ca35-18f3-4002-9a40-f3089905096b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "672b5709-054e-465c-a25f-4bcc06a908ed"
        },
        "item": {
          "id": "a8ad6099-4fec-4473-a8e1-22fd959d6f4f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bd639c69-078c-4b6b-af8e-ac83e3b80201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995614ff-a982-46e4-a8f2-bdc0391e4275",
        "cursor": {
          "ref": "9895be1e-4fb4-4ba0-b403-0042d23f0eb4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3947275e-212a-446a-bed5-0532de917e3c"
        },
        "item": {
          "id": "995614ff-a982-46e4-a8f2-bdc0391e4275",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "71df34da-37ae-417c-abf3-33073ad5cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91a935a-a2f0-4435-b683-41902d31de8a",
        "cursor": {
          "ref": "e508bd54-98b3-40f4-b20d-59d1458ac2c8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "86fbd7cb-a58b-42dd-8d75-8ff168098194"
        },
        "item": {
          "id": "c91a935a-a2f0-4435-b683-41902d31de8a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9dcb3d69-5e15-4439-8c61-fc192e31b954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989c81f6-e4df-4bba-8669-e37a17e62044",
        "cursor": {
          "ref": "52843c6e-6b50-4f7c-8495-af696ed9005c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "18ddba6d-1196-4e26-a2e9-ff53d747e20f"
        },
        "item": {
          "id": "989c81f6-e4df-4bba-8669-e37a17e62044",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "aa395090-bde0-44a6-9c6f-632e2807c3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465a6b6d-8923-44b5-9e78-be010fe5882a",
        "cursor": {
          "ref": "5a70bbb0-b73c-4229-be0e-1cede5d7426e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "184893d3-351c-4a19-b6e9-807ce65d5375"
        },
        "item": {
          "id": "465a6b6d-8923-44b5-9e78-be010fe5882a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1c29678b-c058-41b2-be8f-5c6c86ff1557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc6570f-53f4-42b6-a116-70bfbc86415f",
        "cursor": {
          "ref": "a9040809-a133-431b-abc1-60bd0547325f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d63a0421-ef38-4d03-936d-817e7391d380"
        },
        "item": {
          "id": "ebc6570f-53f4-42b6-a116-70bfbc86415f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b5bf160e-07b0-4854-8cc5-1cb402f21e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688a50c8-ad67-45dd-9ca1-1df2ee9dd9ce",
        "cursor": {
          "ref": "84a116bc-ca9e-4fe1-91d0-6ee579a8427c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "de7e7f4c-1f3e-4c19-a548-7e6e5525421b"
        },
        "item": {
          "id": "688a50c8-ad67-45dd-9ca1-1df2ee9dd9ce",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a256b3c9-c4a5-4944-91c2-576064eae9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbeea82-d89c-41e2-9f1a-f03b22a04862",
        "cursor": {
          "ref": "acdae903-f7ad-40c6-b473-b6ab5086ac66",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "47430051-3fec-4610-a962-9f17faefbb70"
        },
        "item": {
          "id": "5dbeea82-d89c-41e2-9f1a-f03b22a04862",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "542c9b15-20b5-40c8-9878-6defa694abc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a95b40-55f6-4e58-8e89-cb40f3bb95b3",
        "cursor": {
          "ref": "b8b504af-bbdc-4f66-9f4f-8f21cc6e19fe",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "941e9fb5-424c-4adb-a35e-7c1cdebccf9b"
        },
        "item": {
          "id": "e9a95b40-55f6-4e58-8e89-cb40f3bb95b3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0c545e91-cc89-4423-bc85-08f31c23e5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01e03b6-fe38-4306-9a12-e8e18fe85798",
        "cursor": {
          "ref": "57a543bb-90b7-4a35-8ed4-0179ef553736",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7d81a41a-f1f8-42d7-9dfa-69110f3f272d"
        },
        "item": {
          "id": "e01e03b6-fe38-4306-9a12-e8e18fe85798",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a953d145-1dea-42fb-a689-85f749abe0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e25829-cb26-4bbe-9264-06a1d78c21d1",
        "cursor": {
          "ref": "eda22ab2-4a13-4c8f-a277-3d3c733e56f6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "dca11040-70af-4caa-ae0a-cb15677062da"
        },
        "item": {
          "id": "45e25829-cb26-4bbe-9264-06a1d78c21d1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "11c79211-80f2-46e5-b9ea-c5892bfeef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961c73bd-2e21-40dc-8bc7-6af985a9012d",
        "cursor": {
          "ref": "ee9d2f8c-f782-42e3-a48e-9fb94fc29eaa",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5c34f7e8-2000-4c7b-ba86-e0a69e0433d1"
        },
        "item": {
          "id": "961c73bd-2e21-40dc-8bc7-6af985a9012d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ee5d6e58-7a21-4e03-825b-2785385ad2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2ad65-4b82-442e-ad49-95af64b8201c",
        "cursor": {
          "ref": "9ebc424e-7490-405a-8236-c311a476aa04",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6539079b-7c70-4555-89d0-0a7d0a32d794"
        },
        "item": {
          "id": "a0b2ad65-4b82-442e-ad49-95af64b8201c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b9dd67b5-4f38-4cbe-9ad6-6a7a084ee1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4931a8-2acf-4e83-8e26-968523f2fcfa",
        "cursor": {
          "ref": "2a157a89-a49f-4d0d-b1de-7b54fec3d4f3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "80d5b9c6-f80f-45d4-bc5e-b9a547dc940a"
        },
        "item": {
          "id": "6b4931a8-2acf-4e83-8e26-968523f2fcfa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c0867b5a-4929-4b31-98f3-58ba3943b85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694f5819-c442-4a0a-82c3-cd7ae6aca7cb",
        "cursor": {
          "ref": "8e02d30c-a01b-4dd7-aa92-9946b9667e1f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "51771e08-6354-4e9c-a80b-81269cfb89fe"
        },
        "item": {
          "id": "694f5819-c442-4a0a-82c3-cd7ae6aca7cb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "db0f62b6-38b5-4d55-8407-310ef8308ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e419a5-d42c-4a1b-bbbf-46e0111421cc",
        "cursor": {
          "ref": "4aa51e2e-191e-48a6-9f70-6dcd17856d00",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "50be50d9-43e1-40bc-bad5-01bbf5de971e"
        },
        "item": {
          "id": "48e419a5-d42c-4a1b-bbbf-46e0111421cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6545553c-f41e-412e-b775-147e292ba250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873915f0-a910-467d-93c9-19e5c51fde60",
        "cursor": {
          "ref": "3cd52aa2-b124-4267-9558-5c155ce21429",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "297a09ae-18b4-45ae-9255-df7a03580126"
        },
        "item": {
          "id": "873915f0-a910-467d-93c9-19e5c51fde60",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5c9b4db0-b796-44bf-8200-81a6d320f08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7697a919-1f19-447f-b175-8b1dffec1e90",
        "cursor": {
          "ref": "a9cf8256-90d6-451f-963b-a64e4c2befc6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4429f104-7b1e-4748-a917-549ec8b481e7"
        },
        "item": {
          "id": "7697a919-1f19-447f-b175-8b1dffec1e90",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6f8e4509-05f2-4978-bf98-63b9d9a0aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bc32cf-4eb5-44e9-9a0a-f598983ea88d",
        "cursor": {
          "ref": "d897a886-128b-4a4c-a562-fb965404c4a8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b1a18a99-7035-430b-aca7-1ac8246224c6"
        },
        "item": {
          "id": "01bc32cf-4eb5-44e9-9a0a-f598983ea88d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "69befa7c-0167-45e1-9074-9658f269a1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6efd86-48de-4eab-8b1f-ff1002c831dc",
        "cursor": {
          "ref": "44501f63-af41-47d0-895c-05f75c79ba16",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f36001d0-40e0-405e-9c0c-3e6b415e738c"
        },
        "item": {
          "id": "be6efd86-48de-4eab-8b1f-ff1002c831dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6dcbfe7a-19ad-4847-9e43-29db366224d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c44eb52-30d0-43fa-8e77-28bc5941fad4",
        "cursor": {
          "ref": "307464d2-1251-423d-86e5-5db010fb7ba3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "19ea8cf4-61d8-4262-9d2e-36946a0fbff2"
        },
        "item": {
          "id": "7c44eb52-30d0-43fa-8e77-28bc5941fad4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7834c5ff-d84a-4f26-b412-d8018f7751e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996ab73-8de6-4d84-b0f4-7b5fad7d3c52",
        "cursor": {
          "ref": "e3a2ee0d-2a6e-4391-8813-a8be20c2d428",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a987b6d1-c3fc-443d-890f-230e9f7f881a"
        },
        "item": {
          "id": "e996ab73-8de6-4d84-b0f4-7b5fad7d3c52",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1b7cda89-2fc2-4b3a-899f-0d7f67661cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65805339-fc6f-41f9-ae5c-a5efb6733898",
        "cursor": {
          "ref": "1e1216ff-fdcf-48cb-b93c-96059b937545",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6569e649-d7a7-467c-98d9-fe2ecbc01296"
        },
        "item": {
          "id": "65805339-fc6f-41f9-ae5c-a5efb6733898",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2215ea96-a65d-4336-b386-02ff95500aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5962bb-a719-47b3-9d27-444ddc5cc8cf",
        "cursor": {
          "ref": "0129495c-19a0-4526-9607-182fcaa6a16b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e504f123-c412-473e-a7ab-098d3b2e94aa"
        },
        "item": {
          "id": "0f5962bb-a719-47b3-9d27-444ddc5cc8cf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "affb2073-9882-405d-8b01-de7d24728715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e3fbc-5605-4c8f-968b-3e5535e03411",
        "cursor": {
          "ref": "9c157554-ecac-4c37-908f-e16a7117c5d3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "845a7435-87b4-43f8-9822-20f2fbf4e3a2"
        },
        "item": {
          "id": "602e3fbc-5605-4c8f-968b-3e5535e03411",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2abf5624-3a4b-42b3-9a92-858221fdb911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25311846-bc2d-4b83-8b89-8817b101be52",
        "cursor": {
          "ref": "9ce7b254-fd2c-47af-9f2d-fb521dd5ece8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b343f92b-e487-4165-a27c-f85f60edf48a"
        },
        "item": {
          "id": "25311846-bc2d-4b83-8b89-8817b101be52",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1083dc59-9b50-4d78-a2ae-355e8369d0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc85b70d-61a5-44bd-bd44-6a62c75175a4",
        "cursor": {
          "ref": "4d77c3fc-1daa-4e2f-bbcc-68d0aef101f0",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "339d4301-c9b4-4703-8a0c-fb54615f5516"
        },
        "item": {
          "id": "cc85b70d-61a5-44bd-bd44-6a62c75175a4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7adce049-3425-4f9d-bda6-fb6d92fca8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5015ff90-43b1-4efc-879c-f809f9dc4209",
        "cursor": {
          "ref": "f7598da4-481e-4481-9d6a-fe47eda6fe37",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c1316339-fe96-44bd-b5ec-c9237cfa9b10"
        },
        "item": {
          "id": "5015ff90-43b1-4efc-879c-f809f9dc4209",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac3f03b4-5f3b-4de5-8ca0-1ce32de65bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269ccea9-07b5-4a90-ab88-4b63c0f1bacc",
        "cursor": {
          "ref": "315c90c8-f779-477c-992e-98cdc6cf4e4c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "efaa1c2e-80ad-4488-9224-3b579469f296"
        },
        "item": {
          "id": "269ccea9-07b5-4a90-ab88-4b63c0f1bacc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9d3c040b-8c21-4650-aaa4-dc2c8dd9fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f8c08a-aa27-4279-afc1-d6d121775f59",
        "cursor": {
          "ref": "56f97a10-497f-474b-8b74-2861b4f9643e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1cffad0f-11c7-4f75-9408-8ca813ff92dc"
        },
        "item": {
          "id": "d1f8c08a-aa27-4279-afc1-d6d121775f59",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "54966b4b-6f73-4b21-adf6-24452a656ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0cf6f-7989-487c-9a36-7247ee88890c",
        "cursor": {
          "ref": "d34a54f1-4a7c-4cb4-b085-d2550d8550c4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "263970f7-4ff5-449e-a124-dc98aa025554"
        },
        "item": {
          "id": "a5a0cf6f-7989-487c-9a36-7247ee88890c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "38642d49-b496-4150-9854-9022ff55f892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb30220-c307-44b8-826b-e06e59f2a6e4",
        "cursor": {
          "ref": "acb64aa6-ff81-4ea3-9840-116981bdfcd6",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e94191ba-4f65-462a-9e89-94e04ecefb8d"
        },
        "item": {
          "id": "fbb30220-c307-44b8-826b-e06e59f2a6e4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8eb40b94-5fb8-4ab1-8c80-aca693248323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fea075-4659-42f9-9c4d-0bb3c565e27c",
        "cursor": {
          "ref": "02319585-6990-4bd2-947e-82b3c1bac155",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5d4cfc52-5287-4f61-b799-3f97c24971ff"
        },
        "item": {
          "id": "a5fea075-4659-42f9-9c4d-0bb3c565e27c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0357d08a-3a02-45de-a5a9-22ebedff26b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bd1207-dc43-4566-a016-07d314ac91ed",
        "cursor": {
          "ref": "9fe668fe-af3c-428a-a3d4-ba4cea282df1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a677272e-774f-43ac-a1ce-247d2323027f"
        },
        "item": {
          "id": "62bd1207-dc43-4566-a016-07d314ac91ed",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "16a061fb-ece4-46c0-93e9-bddba2fb0632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c79bd85-a75d-4e70-9012-84f911229fe6",
        "cursor": {
          "ref": "3b1d0fc8-e829-4d22-9646-67c7d20a5d3a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1912cd58-237f-40f7-83de-ebfa28cfba23"
        },
        "item": {
          "id": "5c79bd85-a75d-4e70-9012-84f911229fe6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5a3da095-0850-4da5-a2bb-ef26b2e7c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e55c97-72df-4d11-9ee3-2dcff4b2d795",
        "cursor": {
          "ref": "56f86231-565d-4534-ab17-7de2195d5463",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "65e22544-20ca-49a0-9d9a-0127c47b830c"
        },
        "item": {
          "id": "19e55c97-72df-4d11-9ee3-2dcff4b2d795",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2b1e14ee-f90b-4fa7-8975-662a90c39057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d555a73-7cbd-4ad9-a8df-3671d9166876",
        "cursor": {
          "ref": "f5bc7f13-06b0-4b87-a7a4-e817883e3980",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "381bff97-9d66-472b-a75b-98c6c38fea97"
        },
        "item": {
          "id": "6d555a73-7cbd-4ad9-a8df-3671d9166876",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1c0cae40-43bb-4589-ae5b-602986ef33b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5944c146-b8f2-41ef-af83-3d8861d2574f",
        "cursor": {
          "ref": "ddbe1dbb-295e-45c1-810e-b608aeb8ec94",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0ca5ad0b-4f27-4214-bfca-311ea1c41596"
        },
        "item": {
          "id": "5944c146-b8f2-41ef-af83-3d8861d2574f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "df7b4b45-9409-40f9-986a-cfd379c4b20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6338a454-2360-4667-8cf4-5ee8b5960a89",
        "cursor": {
          "ref": "fe3b15b2-910b-4bb6-a452-c13e0f9696e9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "30d5d421-464b-46e3-a1bc-3d192e3c6041"
        },
        "item": {
          "id": "6338a454-2360-4667-8cf4-5ee8b5960a89",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fd23b402-f6cb-4411-bbbb-4245c22fed3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14418f88-bfd9-4840-9a1f-a86e2eade6ab",
        "cursor": {
          "ref": "4077b180-31bb-48f8-9a2c-06ee9cc5c4f7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c3a8c813-89cb-4ab9-8a08-3cb5275e59de"
        },
        "item": {
          "id": "14418f88-bfd9-4840-9a1f-a86e2eade6ab",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8a82e67c-7e60-451c-b55b-830425307ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8485a47-094d-48d9-933a-aadb7d7a432d",
        "cursor": {
          "ref": "e31597f6-87aa-4753-9b56-69c9bb0ea397",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f630345-dd45-40b3-a87b-bc39d8ffcb11"
        },
        "item": {
          "id": "e8485a47-094d-48d9-933a-aadb7d7a432d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6bf554b6-7e28-411c-916f-9c4a593bb550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d00ca22-1cab-4411-9ae8-3f6068e1de70",
        "cursor": {
          "ref": "33fef426-3f3a-4f0a-9e35-efaf980c6b93",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1f466d97-15b4-43a1-bbf7-039c615b36aa"
        },
        "item": {
          "id": "4d00ca22-1cab-4411-9ae8-3f6068e1de70",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a7720f5e-e613-4e4e-aefd-f3dc040d2863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e11a32b-c582-4473-bbd6-067b67360dc5",
        "cursor": {
          "ref": "96ec24b4-f239-4964-8443-da5354ecf584",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3af88e0a-a02b-4883-a38c-d763bfafa39a"
        },
        "item": {
          "id": "1e11a32b-c582-4473-bbd6-067b67360dc5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "31771c67-f155-49a8-aee6-dfd289e7a8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6fe56e-5601-4f72-8535-e6f610379699",
        "cursor": {
          "ref": "d8add978-9c59-4d4e-bd78-0d2725af482a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e7de2eda-e960-40ef-a61e-5887bc91b9f8"
        },
        "item": {
          "id": "1c6fe56e-5601-4f72-8535-e6f610379699",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6b700e29-ef56-4475-b9b4-8deafabf6286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08d2c7b-e568-435c-8837-577b5102aa2d",
        "cursor": {
          "ref": "e880de31-47c0-47ca-a4b2-d409e2ed8b4c",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "73695e65-9f7e-42ff-ae20-8ba7b1c23813"
        },
        "item": {
          "id": "f08d2c7b-e568-435c-8837-577b5102aa2d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f2059989-a38b-4aec-8f37-4277678222ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9610d076-7c53-4438-9f7d-2d553d3baeb9",
        "cursor": {
          "ref": "4d7fa011-efd5-4640-87b0-c92dd6d268d2",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1400e135-4931-4d61-8eb8-826fbc7fc1ec"
        },
        "item": {
          "id": "9610d076-7c53-4438-9f7d-2d553d3baeb9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "28aa0939-4f66-45d3-bcf8-ea317256f2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d1da65-67f2-4009-9c35-90a954cbeb8a",
        "cursor": {
          "ref": "cdc359e8-7940-47fd-855f-b05b8d7f03d9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9e839d3b-e341-4331-8382-052068658887"
        },
        "item": {
          "id": "c0d1da65-67f2-4009-9c35-90a954cbeb8a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6044a9a3-d2c5-4f45-bde0-0a497090795e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613d4323-2897-4853-8d8c-b1777e856225",
        "cursor": {
          "ref": "02fc810e-910c-46f1-9699-e532be8171fd",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "abea528c-8dda-407e-ac58-8aee8a81bf31"
        },
        "item": {
          "id": "613d4323-2897-4853-8d8c-b1777e856225",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fa3097ab-5141-4d33-9843-aff95b65b20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1c5ebd-e26b-4833-818f-d55ad9cc93cf",
        "cursor": {
          "ref": "4bab8d57-a149-4bf8-a565-3017ecc7d0ac",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0c440acf-8ffa-4484-9895-91d2d6090738"
        },
        "item": {
          "id": "cd1c5ebd-e26b-4833-818f-d55ad9cc93cf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "57b0e77c-78b7-4af3-a38c-c3e90162b50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff05832b-465e-4cfd-9190-b383f0b533c0",
        "cursor": {
          "ref": "19e9c04d-fa47-43e2-8f60-633edafcaeb2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a21d0e37-3a97-43ae-bf7b-8770c8806658"
        },
        "item": {
          "id": "ff05832b-465e-4cfd-9190-b383f0b533c0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc7e04e2-3aca-4106-a60c-78deb0975741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbba63f-882b-48f7-a3db-4a19594d3625",
        "cursor": {
          "ref": "d87fa7ae-a018-4b5e-b498-061de0557726",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4f7453da-1242-4fd2-a2b3-1d9ece30dc19"
        },
        "item": {
          "id": "abbba63f-882b-48f7-a3db-4a19594d3625",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fefc70f6-2c00-454b-bce8-554d1c9a2b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec696385-1565-429e-9a54-497aeb904fa3",
        "cursor": {
          "ref": "aef5a06c-51f8-49d1-ab7e-30c0921fb5c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad639afb-c69c-4185-b54f-3efdea0e6600"
        },
        "item": {
          "id": "ec696385-1565-429e-9a54-497aeb904fa3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3e437e44-89de-4d89-8018-2409e1aacd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ae9c66-d195-4c4b-9ff6-72f3a6d13241",
        "cursor": {
          "ref": "4c4cea4b-64ee-4a67-957d-ae615c43ea55",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e6837ca9-f0ba-4cc5-862b-c6adf30e246d"
        },
        "item": {
          "id": "f3ae9c66-d195-4c4b-9ff6-72f3a6d13241",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7b0abdba-6a9c-4cf8-b30a-90be34453980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53ea013-1832-4285-be90-edc45812c22d",
        "cursor": {
          "ref": "c91a403f-2537-4c86-aefb-b1ebc6530c66",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cd5e8418-3a4f-4f41-8f77-4827c9ea0fc0"
        },
        "item": {
          "id": "a53ea013-1832-4285-be90-edc45812c22d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8a5ff056-fb0c-4c80-9b39-9669c3114873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e8ef78-8830-47d6-a1c3-992412e2d012",
        "cursor": {
          "ref": "48f2b44b-de63-4828-9f14-f0873bc745a6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "29d58365-bc58-4d64-8c2a-aba7eb99c69c"
        },
        "item": {
          "id": "36e8ef78-8830-47d6-a1c3-992412e2d012",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0f8a233a-64b5-4eed-b2c8-a76303f37917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9928ca-ebbb-4a71-9b2b-7bd0305cb60f",
        "cursor": {
          "ref": "e9703f01-65b2-4ed3-a8d0-04b1105e04c5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b1c0c561-04f1-4485-8f7f-20d4d63665f8"
        },
        "item": {
          "id": "1c9928ca-ebbb-4a71-9b2b-7bd0305cb60f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cedffd83-e43c-4e58-ad59-2caa5775e863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75400291-cc6b-43a9-9965-c1df34ec3786",
        "cursor": {
          "ref": "c3efb5f1-d8f5-4204-a8a2-f23a1c254aee",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "248d2816-c93a-4916-aa5c-4a70b38eda4c"
        },
        "item": {
          "id": "75400291-cc6b-43a9-9965-c1df34ec3786",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3dcb7024-a24a-45ec-8573-96db449c8bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c80df1-c4e9-4586-86a3-27c6e04f1e4e",
        "cursor": {
          "ref": "3504cb85-7aee-49a1-96d3-2b2df4f2baca",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fe4b8940-d6e5-4fe6-8365-cc29340b9c82"
        },
        "item": {
          "id": "66c80df1-c4e9-4586-86a3-27c6e04f1e4e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f5dcef7b-07bc-4972-a60f-da96c1a256ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e0994f-433b-40b6-ad71-060420b66075",
        "cursor": {
          "ref": "5c3d53b3-d13f-4a0d-bdd0-e2f2a07f9107",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e5373b3e-f255-4e2b-a5c4-8888a26162ec"
        },
        "item": {
          "id": "56e0994f-433b-40b6-ad71-060420b66075",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "248fbc5d-601d-449a-a306-d821fbed10c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9228a4cc-2586-4055-9b8d-a23e52797100",
        "cursor": {
          "ref": "e460cfe8-2cd2-41a1-89a1-a22ade1d69a7",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "de43fa13-c168-49d4-b9b9-e252174ca685"
        },
        "item": {
          "id": "9228a4cc-2586-4055-9b8d-a23e52797100",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a9287a71-681d-477b-9a33-0a03540f7513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98fe1ee-ebbe-41cf-a0ca-7fd1f9302be3",
        "cursor": {
          "ref": "6ae1f9a4-577c-4a15-9420-8fd84450b803",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5757007-76d2-4ab0-aaf5-c4cbf77a8b00"
        },
        "item": {
          "id": "f98fe1ee-ebbe-41cf-a0ca-7fd1f9302be3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e398c4c7-5ac1-4831-b332-ece9aab70b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2018e935-0039-466b-8b5c-43c73f25f45b",
        "cursor": {
          "ref": "6cabb75c-6523-4f2b-9b88-7735eff106aa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "50eb98b2-7c53-4c69-8de2-68919c9885f4"
        },
        "item": {
          "id": "2018e935-0039-466b-8b5c-43c73f25f45b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90d68fcc-749c-478b-8442-5dd9c10a831d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c285a848-192e-4346-8b3d-bedd2f1cd622",
        "cursor": {
          "ref": "a83f16ac-ab6b-4558-abae-48ec69bbbd31",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2347eb8f-944f-4280-991c-038e4fa1732c"
        },
        "item": {
          "id": "c285a848-192e-4346-8b3d-bedd2f1cd622",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8069ca9f-b651-4238-ae2b-ee0f19da34e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849456d1-0d0b-40ef-a263-da9a80223251",
        "cursor": {
          "ref": "110586c2-083c-4cfc-a2f2-22ab35bafecb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "83102f07-6e2a-4e7b-9ca1-d8204faffca0"
        },
        "item": {
          "id": "849456d1-0d0b-40ef-a263-da9a80223251",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "672cbcfb-c02e-4013-b605-5033fc217fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb06cf68-ce6d-4f0b-b5c0-b803ade420a8",
        "cursor": {
          "ref": "e00536c6-e538-436d-8662-5a2303f8fd0c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6739b069-f3d8-427a-908d-77e03db07184"
        },
        "item": {
          "id": "cb06cf68-ce6d-4f0b-b5c0-b803ade420a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4931b554-6eb2-450c-807e-8b582a01acfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863517c5-cdda-4317-9071-b3b7f373e79c",
        "cursor": {
          "ref": "102e62a8-8098-4aac-945a-8aac8a4e8b35",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84ad937a-dd12-4c05-919f-85c48fe5f2ce"
        },
        "item": {
          "id": "863517c5-cdda-4317-9071-b3b7f373e79c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b7c05785-abca-4929-986b-b23fe3e6494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652369fa-7bed-41ba-8db1-ac2dd2121bba",
        "cursor": {
          "ref": "e2c68ee9-03c4-4304-b391-afb5d418b760",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d7833eaa-888d-405b-8b6f-e58011dd433d"
        },
        "item": {
          "id": "652369fa-7bed-41ba-8db1-ac2dd2121bba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "328801d5-f39f-4ce7-b4ec-252366f87843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509ef18b-ec05-49ee-b5ce-e15654b2aaf9",
        "cursor": {
          "ref": "e8b1ef61-4cb6-4a94-ae03-112bd11c7d52",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1312acd0-d65e-4f45-852b-23f396e9cd32"
        },
        "item": {
          "id": "509ef18b-ec05-49ee-b5ce-e15654b2aaf9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "13578429-7078-4ffc-851b-8137f50a340a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6265f5-afe5-4da5-ae9d-d138ce867064",
        "cursor": {
          "ref": "c39ee2cd-e6b5-4f7b-ba88-f2d4db9b7769",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "389da475-7843-449f-8aae-bb12b4816c98"
        },
        "item": {
          "id": "df6265f5-afe5-4da5-ae9d-d138ce867064",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fe912afe-032e-4a5d-a0fa-fab8890e9458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a42a77-3f10-4812-a056-08a7f850c4b1",
        "cursor": {
          "ref": "a58aead2-a6ac-47db-b1a8-26bd9259b2cb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a164158b-b767-44a9-a909-e75c0fd80b9b"
        },
        "item": {
          "id": "77a42a77-3f10-4812-a056-08a7f850c4b1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "79b6e685-93df-4c8e-abd5-b3b815e02ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c689149-b424-4798-9777-c4af7b0bed4f",
        "cursor": {
          "ref": "5f576fc1-b2c9-475e-92f4-e893fee01549",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a191fc4a-2d1c-4464-b9c9-9f92a6ba949e"
        },
        "item": {
          "id": "6c689149-b424-4798-9777-c4af7b0bed4f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e16c8646-d1eb-4fbd-b88e-fa408daf8f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955a47b0-4ed7-46c4-95f9-8c74d6241ecf",
        "cursor": {
          "ref": "01d4accc-43ff-4aa2-bf87-4faaf98addbe",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a791f19b-a1b3-4c21-abfc-1cc60c22b6d0"
        },
        "item": {
          "id": "955a47b0-4ed7-46c4-95f9-8c74d6241ecf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a26fa415-7ad3-4e72-97ac-d1ec2b488054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e54a90-072e-47ab-8d64-810fd8d237c2",
        "cursor": {
          "ref": "d8f2d729-288e-4850-ada3-0480b2a14fb4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d3b6b7fb-05de-4234-b891-28ef5867f71a"
        },
        "item": {
          "id": "44e54a90-072e-47ab-8d64-810fd8d237c2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c0cb0072-94fd-472b-b0a9-6bff20d2356d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b13ab0d-bb2d-45a9-9f3b-1552fcd6669a",
        "cursor": {
          "ref": "fc36e997-5b49-45b5-8ef1-db35c5f6b0b0",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "092b7dec-ff35-4ce1-8825-0914661cf5ca"
        },
        "item": {
          "id": "6b13ab0d-bb2d-45a9-9f3b-1552fcd6669a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7cc3cb23-7691-42ba-a5d5-e1d2fe2e2591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ea69f4-201f-45fe-b694-339f0d8d4e9c",
        "cursor": {
          "ref": "5e288e67-808f-430a-87eb-3884b8954cb6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b4086c1d-89e0-47e6-91e6-6f309f266506"
        },
        "item": {
          "id": "66ea69f4-201f-45fe-b694-339f0d8d4e9c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "831a85ed-1cfb-4780-ab84-4364df8e8d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fae13b7-4355-4d7e-b614-c4ebcc91a9b8",
        "cursor": {
          "ref": "af134625-d749-4155-a182-3171e61de460",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce937f42-df15-47d4-9622-be3b8731299b"
        },
        "item": {
          "id": "5fae13b7-4355-4d7e-b614-c4ebcc91a9b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cebbdeb9-4fd1-4fb1-919a-6a6d415f37fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b8114f-2c01-413a-8a4f-ff10be224289",
        "cursor": {
          "ref": "6d3531d6-3dee-4367-bf0c-6ef02ef666c8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a8fb741f-0fc7-4720-a308-24f1d99b14f2"
        },
        "item": {
          "id": "56b8114f-2c01-413a-8a4f-ff10be224289",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4ea949c9-9b75-4f8e-9f15-ac2b3841a7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cadffe5-1313-4042-95e4-3027ffa9e953",
        "cursor": {
          "ref": "d734b67b-06f3-4e37-99c4-55fe5c8894b7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3a18781f-42d3-444e-b577-5a1cc7cecc28"
        },
        "item": {
          "id": "1cadffe5-1313-4042-95e4-3027ffa9e953",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "96e3aa71-a597-4ceb-9fdc-653f83b33520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751f74b5-e31c-4990-b733-21ee095de301",
        "cursor": {
          "ref": "8036d194-efb8-476c-8b3e-5c697d4886e9",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "595d34a5-57f9-4a18-b05c-4412b1fe5885"
        },
        "item": {
          "id": "751f74b5-e31c-4990-b733-21ee095de301",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "82a166a2-76ea-47dc-948c-ec68a4b5ba34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0f3129-1734-433a-949f-6858b4cae2f9",
        "cursor": {
          "ref": "f2576956-05cc-4639-a3b8-dc3326f4b738",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5e65b495-98b6-4c96-a0b2-aee582f6d67b"
        },
        "item": {
          "id": "4e0f3129-1734-433a-949f-6858b4cae2f9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bf1ec036-d657-4b46-a155-cd53e199d7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfbf4c9-52be-4edc-b7b8-718e3e08f860",
        "cursor": {
          "ref": "e76b0a81-cb88-4656-8e06-959b41a154de",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8f7e741b-ff3c-447f-9167-550eaf2d992e"
        },
        "item": {
          "id": "ecfbf4c9-52be-4edc-b7b8-718e3e08f860",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "245917a1-5fc0-42cc-9a39-f2607a30b645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b7fefd-35db-4d05-b157-320a963b8340",
        "cursor": {
          "ref": "4029f49d-0061-4d91-b4ed-f08473d91118",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b1a2e2a8-c62a-4a7d-8e38-3b75a92289b1"
        },
        "item": {
          "id": "a1b7fefd-35db-4d05-b157-320a963b8340",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c0a1f41a-2642-4ec4-beea-6cab8b32a645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccb2e2b-f4ff-4bd1-ab21-b0959d57dbc2",
        "cursor": {
          "ref": "d88d5ce0-ec26-417f-97c2-69336c077751",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c77307e7-663c-4c24-acd4-28133c1000c7"
        },
        "item": {
          "id": "6ccb2e2b-f4ff-4bd1-ab21-b0959d57dbc2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "72f96880-2574-479b-a44e-fdbcc4d84927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfbe1e7-a61b-4103-bbaa-e0db0e637290",
        "cursor": {
          "ref": "c7304d42-17a8-4758-8c31-4ab49ae60c54",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "082c6e57-f686-46dc-94c2-1130c6886bef"
        },
        "item": {
          "id": "9dfbe1e7-a61b-4103-bbaa-e0db0e637290",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e8c39dd2-084a-4634-be9f-29c5a66d6919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f221b-2f42-42a2-bd58-1d58661fb436",
        "cursor": {
          "ref": "dd44908c-e354-494e-9724-d30531378479",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7548a08e-7b14-4256-b0cc-15ee8dcd58f4"
        },
        "item": {
          "id": "d29f221b-2f42-42a2-bd58-1d58661fb436",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e6f54164-d7bf-4a8f-904a-bd5f07bbcea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9ec7a-9b6d-43be-9167-80195b295263",
        "cursor": {
          "ref": "2a1c9efc-9abb-4c52-bf9c-35d31fdc1ed3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "308e597c-4a41-475a-aca7-84f718ca133e"
        },
        "item": {
          "id": "83d9ec7a-9b6d-43be-9167-80195b295263",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7df60dea-171c-478b-b8a5-83a36e46f3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a160a8-8ded-44d4-ba18-e996210508ae",
        "cursor": {
          "ref": "c301c98e-4986-4fc8-8ae4-cff0eaa70154",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8eb3c05a-5e6f-4915-bfdb-20bb06cb05f1"
        },
        "item": {
          "id": "67a160a8-8ded-44d4-ba18-e996210508ae",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dd1e22f0-ac0e-4f6b-b1d0-4eca1aac8650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539cb0e9-d327-4013-a004-9a886886900f",
        "cursor": {
          "ref": "dda95b3e-08ac-439a-a48c-d1de89d18191",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c909db4d-2a07-4935-8479-d8ed2917468c"
        },
        "item": {
          "id": "539cb0e9-d327-4013-a004-9a886886900f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "db7a1eb1-31f7-4883-a94f-5bc2934590ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2ef93a-29a3-42a6-8f0d-10320b0c1848",
        "cursor": {
          "ref": "6b7b7c0f-04d9-4c13-8a24-ea8a9c62cc75",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a0ebe20d-a2c6-4eba-bc0b-b9d7aa0b048e"
        },
        "item": {
          "id": "6b2ef93a-29a3-42a6-8f0d-10320b0c1848",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "843f0447-a059-47dd-a417-28d8ca40d5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795b6ceb-340a-4600-937f-71f510e16619",
        "cursor": {
          "ref": "b48995c6-1502-4c0c-86e5-e8f6389bf996",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2cfff06d-8820-4600-baf1-71e0a4cacd17"
        },
        "item": {
          "id": "795b6ceb-340a-4600-937f-71f510e16619",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eca14572-24d6-4c0e-9d68-cad478457909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca72085-d91f-444e-84d2-4d395c868d18",
        "cursor": {
          "ref": "5805ca92-a12a-4243-9a91-bce8cdb50727",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "56603346-f7c9-4126-b562-b7e5a11033ea"
        },
        "item": {
          "id": "dca72085-d91f-444e-84d2-4d395c868d18",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b5f4d8ad-9150-4a48-97b5-6ab345698ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a80246f-9015-477c-8d28-071bce45f409",
        "cursor": {
          "ref": "91e1c13a-50af-4f2a-a51c-92f192c2502b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2da1d0a2-2756-4f5f-9435-7f554327536c"
        },
        "item": {
          "id": "9a80246f-9015-477c-8d28-071bce45f409",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "059203a1-3c66-4393-ba91-b3dc40720557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b6caa8-e38c-4db9-b127-b0d91d47acc4",
        "cursor": {
          "ref": "744fb4aa-78cd-497a-9e11-e536a07be2b0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a1731fa2-93a0-4de4-b9d9-fdfcfe7fb8bc"
        },
        "item": {
          "id": "b7b6caa8-e38c-4db9-b127-b0d91d47acc4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "89ce8f2d-9fc7-4d95-8ee7-7fd1a42d2733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8af6e6-834f-4d87-a21a-ba14021f4c6a",
        "cursor": {
          "ref": "6a7a9552-0509-46af-9b06-f821d385c85c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "65682832-c95a-4d2c-a6a9-b3f382c89131"
        },
        "item": {
          "id": "2d8af6e6-834f-4d87-a21a-ba14021f4c6a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a2c8f22e-c539-4afa-93ec-fadb70ea23e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0063d10-5d82-435d-8f91-d2044a4a3749",
        "cursor": {
          "ref": "de977ef0-11cf-4291-a4a5-f13725884bf7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8aef5ae1-3b57-421a-9cc6-2018b1e94274"
        },
        "item": {
          "id": "f0063d10-5d82-435d-8f91-d2044a4a3749",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2dc6982f-586a-4855-aa8e-9cfbd2f58b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b526e2-9115-4b02-9823-6c19161ca4b6",
        "cursor": {
          "ref": "77f06f68-f801-4947-9984-f20ab3fa0efc",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "62aeb1b6-400a-4407-8b12-a60f30c6f2b9"
        },
        "item": {
          "id": "b2b526e2-9115-4b02-9823-6c19161ca4b6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "043a4515-7d4a-4038-880f-66ae6f5d63b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f383b1e-34e7-40d1-9404-3b0df71dbdbf",
        "cursor": {
          "ref": "bcd1640e-5c51-470b-bf6c-8f996c77c007",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "70587de4-d7ba-4755-996b-0562c9c0255b"
        },
        "item": {
          "id": "6f383b1e-34e7-40d1-9404-3b0df71dbdbf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f7161fd0-c38f-48b6-bd4d-aa100a4f826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "337e8441-644e-4f20-ac7f-a779fc337079",
        "cursor": {
          "ref": "af36b645-00ec-4966-b1d7-66752009d82a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "32345c76-cba4-4ee8-ae29-0e62be36c3fd"
        },
        "item": {
          "id": "337e8441-644e-4f20-ac7f-a779fc337079",
          "name": "credentials_verify"
        },
        "response": {
          "id": "86eb57d9-d50a-4706-9585-0fd30cc13a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "565ba975-4b03-4a49-8d25-0d7b9ad32615",
        "cursor": {
          "ref": "3d5d552f-f213-4896-8e59-f79b54447524",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "74f83769-1433-4a41-96c1-1146e08c21d8"
        },
        "item": {
          "id": "565ba975-4b03-4a49-8d25-0d7b9ad32615",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "59accd11-9a0e-4ea3-a5b5-8d9bf1f93865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "f1abb444-b6f8-4fe3-bc20-cf17af9e8211",
        "cursor": {
          "ref": "ebcca3d0-f23f-4d3d-abd9-72e6233fdc2b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a7947669-94c8-4837-bba0-29de49843101"
        },
        "item": {
          "id": "f1abb444-b6f8-4fe3-bc20-cf17af9e8211",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "605206a2-e30a-4ecc-b194-b3cb46a1c662",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1abb444-b6f8-4fe3-bc20-cf17af9e8211",
        "cursor": {
          "ref": "ebcca3d0-f23f-4d3d-abd9-72e6233fdc2b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a7947669-94c8-4837-bba0-29de49843101"
        },
        "item": {
          "id": "f1abb444-b6f8-4fe3-bc20-cf17af9e8211",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "605206a2-e30a-4ecc-b194-b3cb46a1c662",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8769cfd-e345-4f8f-9e5d-e871c0d165f3",
        "cursor": {
          "ref": "439a19f7-e79a-4b13-a1ab-fc824fcfbfed",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c1cf2d4e-d530-4ae9-8e39-91d4c57f966e"
        },
        "item": {
          "id": "f8769cfd-e345-4f8f-9e5d-e871c0d165f3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "db4d05fb-8ba0-42b0-a7b2-db28a0e470fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491ed6b4-85d5-4032-8773-22e762fe0031",
        "cursor": {
          "ref": "b5b1a6a5-12c4-4d2d-add1-4a6c07fd467c",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b75108b3-6847-4dc7-bbaf-808633626c81"
        },
        "item": {
          "id": "491ed6b4-85d5-4032-8773-22e762fe0031",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f7749b24-6446-4df7-8917-a4cf87bab9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}