{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f711a062-c3fc-4c6f-a06a-0d9d805504bb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ffd7014c-ec95-4aef-a2de-578e96f403f3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab19b971-dd12-49ac-8d9c-335cfc552846",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5acc193-9bc1-4b00-bec6-d53684c1b53f"
                }
              }
            ]
          },
          {
            "id": "8002a752-e265-45b8-a645-1a741571accf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "884c72a2-65cb-48c5-b44a-e5b2ace0aeca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "543c6072-bae2-4a6d-ac80-981e5f0907f8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a79be349-ae33-4db7-ad1f-8a30c28e6953",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "163294e1-fee5-4bd5-86d8-bdeb967cad4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "768c4413-939c-4e24-8a88-bd36ad5777d0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "300d8c03-cfc1-4982-a089-4d51f6c51ef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d745b733-5cbc-4187-a229-fdf77adcf503"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "382530a5-b614-43a9-845b-97674691ab3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70570681-e787-49f7-ad39-495778f329b6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "377c2fbe-16c1-4f30-ab84-57ad8515077f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04ab137a-5215-4df2-975d-ea6f1b2fda3f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c6637aa-4402-4576-97d8-9721671f17ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7e999773-a7eb-4df4-a26b-6d76b534f178"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fec7ebb9-8938-450b-9a70-ca38debab408",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e42148e-c0a0-40b5-8c99-5255e4b42c0e"
            }
          }
        ]
      },
      {
        "id": "b27ad909-3063-43d0-8747-e97fff87a49c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4bdccbf7-7470-4bcf-a514-6e7bd087bdfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7621b7a-a391-4004-b242-e3dba49daf28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d7f34c1-bbcb-4233-85ab-2abcff034135",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042c8a91-cfc0-4d24-b797-594c2f72f227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e0afdac-b45e-4a12-a3e6-119d9e0072f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acff7b14-abfc-4a25-8620-0100f6eb994d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb069be4-7733-431e-8f3c-52d4b376fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69639cca-315b-47b7-8255-a29f8593d545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05db665-2238-4c75-a5d1-4293ed104fde",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d1c916-660b-49b8-9b0f-a73defb80582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64567e12-8565-4770-bc02-1d31af7d8509"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "910e44f2-851a-4c20-8c27-2372826eded2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bde608e-db34-4594-aa00-502db6efe76c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ed3554-c2d7-459f-ac19-d0119d8fb54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4afa2ab7-ea52-4b27-83b0-28cb4c206786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65104d65-62b5-4650-a4dc-1787fbed5083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd44c6d-9052-4527-9428-17ced5c7c11d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6eb4ef9-978b-43a4-93a1-8b15267752e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32527990-069e-41c9-98f5-2d26cd08f7db",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b0770bd-7874-4f3a-9b2e-8c5b5c124420",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9254c53f-ecf4-4bc9-b896-1ef687d502ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c95843-bf2c-4a94-b279-0ee8d6f4cdef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "69ed55b2-d356-4b51-aee4-f78b9afc3edb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "557578ff-6006-4552-8833-3e2abaec97b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcb25002-27b7-470c-9156-f3853e59ca7d"
            }
          }
        ]
      },
      {
        "id": "8fb749e1-28a3-44f9-ac23-f366a4503067",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d21bfba-d997-4c49-9c0f-42ad9ab6cef2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4566979-5e99-4885-8887-885164fe45d0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7d7f39c5-a978-4af5-ae1d-5c097d83a5df",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc183c8-e3b3-4094-8feb-b4eab5104880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ae18af-598d-4f33-912b-a08f951642f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434cbc4f-74db-4bf6-97a5-465be9b28b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc29be59-8e9d-4461-b9a7-e636501a3890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf61ead-6275-450e-b5c1-194335d9c25d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66f775c-db18-44a1-8a0e-bf16014de624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d993e2-b568-4870-b22d-ec7a91bf85c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca3cee6-596f-4751-b1f3-94e59717954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "768f8831-17c6-4009-9b1a-4e6eb2d8094c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966f5a1a-943b-4558-8101-bd3ba5a0be42",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2468e05-8f3b-4e7e-ad3a-765435eb20a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48a6c62-7a9c-4919-a5c3-e0843be4eb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6e7d90-9cb3-42cd-91dc-574cde451af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52c4d2b1-006f-428a-aca4-c975a7f9507a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3de4c74-5b56-4712-8f75-2abcdd1afbca",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba2031a-9586-484c-a546-004e70490841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e898a2a-5fe4-44a6-b6de-88b9b301b049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8794b0-ccb4-4fea-abea-04cc58aa906b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cd01803-96fe-467e-90f3-e5a17a79f9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024b2e99-02db-49d4-ac8f-4fe447591cf0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1a575c-cf6d-463a-a815-d57d0925b95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb260a6-62f8-4f41-aeb4-cdbc5559d376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e54e90-be56-41a0-a682-3c168cc8ca4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9889f846-8af5-4285-8533-95b25f664849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1180bd4-22f5-490b-9038-2fcc167f045c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86107499-2862-4eab-8754-a72223d7ffe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784cb751-76ba-4606-86de-05a12a741dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f03d0fe-8fec-4c2f-b71c-f6e5985a72e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01309d65-b0ba-407f-a527-5be765b3d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364f9a7f-4dbe-4630-b182-a8f89fa77f4d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0471ad1-9abf-4a0b-ab6f-62beb2164b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab7a002-67e8-48e5-bc51-1a43b1bfae76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c37bfaf-3adb-4852-83b4-528a6b0bcf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60355833-75a2-49cc-9362-4f6b21b69f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1970db56-1719-46e5-b4d4-6e25426a39d8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78ea22d-cccb-486b-98ba-9fe58b7f5d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a9e79d-145e-47de-90aa-e7faf69efdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be26b9a5-b8c5-470a-a420-a6a744fcc9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d47031c-7095-4d18-860a-dbe3e1f039d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46a5132-2932-4478-9b7c-354bc8003f02",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6adeb3-8aac-41b3-9728-ec58e3025344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa5defb-bf58-479c-b755-545b58d303ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878cc274-234a-4a20-a96c-95c6ae05669b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83745f55-d220-4694-9c7b-6398f4008ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc0291-2c0e-4486-af17-708d4d52ef5a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44567d0a-08e0-43d9-8881-31c530f61f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c52c5b-6dd4-4d0f-8bcc-b44c0ef0e987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a230b63-b6f0-4206-8b51-aea9e0c0ffb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39afeb19-9e94-4047-807b-12fd568c4971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582e9300-87e9-4405-8c16-e372c01d8c85",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb42c2e-ecef-4860-bc34-22323bc34124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5f5d38-a229-4f24-bd4a-aa9b83d4dcdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15aa5bd-2434-4152-aad6-edd95ef40601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a86a103f-f1e3-44c0-b2bf-15c97c1d53d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd17a6f-0a4a-480c-aef2-60651b121ff7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d93d918-969e-4ddb-a65a-99682b5a0de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384525c3-0228-44f7-8117-bab5b39bb7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc1a09c-8629-4730-90ca-054362c0eaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f9e4942-3ad1-4f6a-8200-b96598d38b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3cec88-630a-4edd-82d2-f9208997f630",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae718687-fd65-4171-92cc-58add1589877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fa0e1c-e7a8-4068-a82a-50bd5ce9b47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a79ee7-a356-40c6-b046-db6efefb709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f605822f-6b8d-42ba-9024-8c730d35a390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6adb6b-6f64-498b-9f78-cb6698dcafb7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc5a683-26f3-460b-9fb2-c1776689895d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e19de7-4949-4322-b754-209387a5a954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed23df8-85d4-42a4-87d0-0613f128fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61470aca-2b3c-4555-9126-c64a0d8284be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a110f2a-f8c7-49b6-abcf-c1d16fadc0f6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a92c54d-566d-49df-a5fe-7be566a17e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9517fd2d-eba7-4e15-898c-9c187882ee96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba657cde-3381-4c17-b61a-8824b857c455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb758b3c-5d40-411f-9fea-9a5f3ecb7e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8733210-759d-4077-ad5a-157115e8bd4b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3347a4-6119-4ebb-93d8-48369f459145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10639e2d-4853-42c3-ab02-7a247db24977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763d2856-d991-4cbd-961c-538ea878dc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1981a39-b94f-4d3c-8133-c3ad5b317505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4616dce-a948-4b57-bc73-5c3c55d452be",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9df01a-0e31-48de-a770-37307509f391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cb118d-b2bb-4bd7-863d-a09ecc8b010c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4a0118-aaa4-489f-9cc3-db2c6d5e853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4522b5d8-7b79-4514-b22c-a49002a1d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937e5fd8-0903-4a55-82ef-213732662439",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fde77b4-4cd1-4c9f-91e7-d8e540c27bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d89dab-7e6e-4b87-83e5-d80508d6bcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379a8231-0483-4862-b258-d4eb224972ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5d1e09-453a-4a01-bc7c-bfc8686e128e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a61439-3ed9-47a7-a02c-640ad0d7c02c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4258173-b9ca-4376-955c-b9b4a12ae7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5287cf-a0d0-4456-abf3-c442ca7a8d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1a1287-1011-43dd-a2c9-23e0054f42b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9ba46f-c849-4f6f-86f6-71328271219f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f3882-31f5-4569-85fe-f59cdd1dd925",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4568c-207d-405d-becd-92534bc391d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc78c84a-35bf-4b49-bf08-42943ec72930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc0d583-2982-4943-bae1-4596baef0193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "320a8215-ef51-4759-abd6-909b8cd5df5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7ed961-8bee-4795-8c9b-2c4257caa399",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc2038d-8872-4c6c-9765-1f868ace4d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a801ca-b4da-4fd2-a915-f21b3cd46883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dc624a-5ecc-405f-8d9d-c6e4f77e8fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca10207-7073-47cd-962d-975807e42912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08424255-9692-421b-a47c-b5941186a569",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62241fb0-5b4c-4d78-848b-bb4862ca1fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba454cc-3353-42de-9b4b-a4cfcacad2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118f1d88-100a-43dd-b8e9-f38e4f928691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0516af93-ea08-4451-9beb-a1410a26fb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9aeb604-d87a-4209-b794-06f7b3ba1583",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945bec75-ccff-4166-bb36-15d83c25556f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5c52e5-8fac-40c6-847c-c2b39946754a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f57d5e4-88ff-4dd6-a22d-a1870203d298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1423e23-1e10-4b43-9841-6863867d1700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fdfafb-3272-4759-9688-a184b6b77ba2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab3f4c5-834c-48d1-9b8f-b684f6db51a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2d5951-4e86-41b9-98bc-193dd13965dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb37fb7-614d-4e59-a500-35a4804ac828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca58140e-4000-435c-aeeb-286445ec11cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493ec76c-f1da-4184-ae0d-67b69db6bc46",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee184db-6c38-4560-8137-dd44eadef25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b954d3d8-0293-4324-a055-e8e08975f2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d051b1d-8ae9-49dd-a674-aa413cfa324f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54674743-2753-4192-9fae-ce298ebbc487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653daafb-8818-4aa6-aa64-91aa626b74a8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bc1a09-1550-463e-b62f-2642c025c8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dea518-2a8e-48ca-90aa-efcae794fe76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b40a4e4-36bf-4922-b67f-1b066a609bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13a1867-8079-40f9-b4e0-7705b909a9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14c80e1-b88d-4ebf-a915-b093cb5417eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcf82f3-82cb-4acb-b7be-78ccd5aa72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bb51cd-120a-48aa-9cd7-b01fb407bf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b5e101-cb1f-463c-aa1f-a6517a886b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "527da982-55f0-4343-923f-a9a2bdcecb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00adf530-20fe-467f-8fbe-fb731b3375ba",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebab9d2-cd77-49dc-a2e1-f445cccb16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ae095a-72aa-4227-a60f-34db88d77288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a97b252-ec91-40bf-95f2-23578cb594f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3c981c-c4a2-4384-8a54-2fb6d89389aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbf539b-6ea8-4ccd-b764-2fbc1086c78d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc65a556-f67e-4d63-a9b2-3e005a58a080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5025428-32a7-4436-8aac-41a549f630ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d1294f-f960-4f94-8080-8d559a673516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9e4a12-cc54-46b2-893a-f582765d95c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3d7b63-fa0a-463b-b956-3a90f01df32f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85261e7-3991-4bbc-862f-8cb7cf300603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6a6a1e-9d5e-4f90-a28a-a7e065c5ffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353408e7-43b4-4a00-a373-fbc94e393dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7093a8-c5f3-4ab4-9e2a-5a666a2b1127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9013a2-9712-417d-a1ef-323168f17577",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ab8c8f-439f-4fcf-bf7b-daa8e5b4b650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc11015-51ed-4112-93ce-605c16a2e246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fee65a-9773-4a31-bfe4-04cf078a3a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9be6c973-03ef-4eee-9fd7-a0849b21979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb168258-518d-446c-9f90-7c831e05bc76",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a49ecc5-a250-4289-89ed-22bfd41fdff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5a4427-9fad-4c99-a6d3-3acd5281e6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f0c438-945f-4e02-bec1-2201a152dd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c99d94-421e-4832-aac9-e6d130d13888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d742a25-03db-4241-887f-1c0677c1bba4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876eb631-6bfb-4718-bec5-4113592bc4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545259d3-7190-443f-9c35-773945410c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e3579a-b1ce-4802-94db-6a3df6c01234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e45867d1-8828-4afd-bb16-f6072715f4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ae67e9-c61e-47b4-8ebb-ab6fb33012b7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9cbd81-5ce8-4428-9bc4-039a460cde46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5b45b0-01e5-47d3-9e2c-3df76124bc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30742c9-b5dd-4ed5-907d-e2b3b669cc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c2e651-9e3d-4643-b9aa-b54b9584e9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad58f16-2702-4ae7-9eab-d72798e69f12",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4bbcec-6502-4925-9859-b5973314a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce88d6dc-037f-4c9d-a665-1b261ed75eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf5e322-c9a2-44c5-b06b-575e778c579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "109a149e-4247-4f50-b20c-e1dccf492c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78be464c-3e2c-455b-bb26-2bd7d21225bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b168f6-88be-4b1f-98e2-3eb0a0caa1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60d2cbe8-0f96-434f-bf1b-8ebb9f370280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43342c6a-f417-4152-b88d-b732977c0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d590317f-5e95-495b-8243-2172072df608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2be7311-2a87-4aa0-be9d-10c4adce34b5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579c7132-aca3-4266-bbe3-b413862dcc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe28b1c-e1de-46c3-a7a8-54cb3f8f27de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36326288-7bd4-45b9-9799-5ba90066737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83b6d7f-8406-4109-b537-23809a8858e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a88340-7737-4dd0-ba8e-5e5967472161",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a133a5-47cf-4e66-aa5f-0789a3b6c377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8787e3-2366-4d0f-b05d-57457ba29fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2baf6c4-30f0-4c55-8133-6c37cf59642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "798980fb-1bb6-453e-ad7c-7ceb1aee94ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e8caa3-3d52-429c-b7d1-284a7f2bd887",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb056f8-8a4b-420b-adda-eca4b7b0d59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22a3490-a222-4c85-bb5d-a57c035ed233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3c3694-068a-4b53-be32-67f8b9f40fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c652ea-9e51-4fa9-8b7c-c43412af1e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068969f8-f688-430b-b362-35eaf1c0191c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c179940-c1d3-4ce9-8a7f-05d24df0d6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0364cc-916f-4813-830c-a4d530ea16d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0d8f3b-658c-43f2-b29d-b4de09caa06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7f9cf2-69da-4653-8b8c-49f0705e42d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cf951a-d457-45c6-b2ac-bc7eca963460",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12f5596-bc55-41c7-a16d-fc8bf6852458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501c46cd-2225-4788-9612-081f95c53d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac361cf-9cba-4d2b-88b6-0994dfd8b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e26a22-87f1-4b20-91d5-dc50541c379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a698359-75a9-457a-bb07-9c3d020aff4a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91fb825-66d7-4da5-a9c2-db1d6ec273aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485f1878-c869-48f8-b3d3-19ca4a4c9691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cfd4c2-fbee-495b-a7a2-4bdd38bb3691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "179f66c0-470f-43f6-986b-339c52f7910b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0cfb0f-ff53-4272-bccc-7cbaa856666f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9c05c3-3468-4db5-92ec-50c9b7dacc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c83a33-f793-4b7c-adbe-44b9ff7cac0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a834239-8f6b-4be5-b160-c3f308ee9468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc537e2f-f358-437f-a710-7b692c8508d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d68d020-ec1e-4891-a147-195820f9a9ce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad957e37-b4db-4f5f-9a2e-95c2d5a24fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f519f7-8b2c-49ac-a2b5-3c07c5e5e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba7b502-068c-4668-8127-37375e4315aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad4db72-ec61-4283-a375-dd291286d12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe5de76-2ff4-4984-940f-194d21474f4e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b89af6-6afb-4157-8a8e-75027b3bc1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48638d65-3d8b-43a7-b2e8-ba2a0ef1befd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8559a048-f806-4a9f-804f-73f63996ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "274f3f0c-9afd-4067-9a81-d0c978b54ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654ac41b-b3bc-47e8-baad-4ec08c50e22d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7054787f-68de-4306-8592-80328cd9ec56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0efd77d-7430-4fb6-9688-5a900959c0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd31d0-a139-4fd0-896d-f061bd46b81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a83d3d-6363-4bed-94ec-3ff07ff7dbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf889681-577f-4d0a-98db-50a0190d93ca",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca36db86-2b3b-4dd3-a312-2a596ebca815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8c6a95-9551-4ebd-8cb7-9e8432736e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b45bbd-304c-49cf-b6ba-34281b43d14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea9d86b-2860-4898-ab49-12ba0ba15d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa022e1-032c-426d-b5cf-8aed643a0848",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccd742c-a9ac-424d-8d89-43997bfa3a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d34c2f-dd1c-4001-b5df-523e543d66dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfd07db-f021-4581-9cbe-cf99292ada47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f03252e-e97f-4083-b145-4f6e3c1b442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe1e73a-57a8-4b6d-a92c-a9db4d025518",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49459777-b40e-411e-bf7a-c8751c9ddc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35472c6-a578-42ac-bbf1-3b0d2ec928b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ee18f-e8f7-404a-8913-902686bf296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd107ea-4ab8-4e62-8a8c-61bd3d83139d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b5d27-a186-4d1a-9ccb-f589e28d308d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab616ba6-3d0d-4e5d-82e4-09097eab204b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66614364-b2eb-43dc-b5c5-0fc283401752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abe1eec-b600-4f5f-be3d-087a3f20d018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c49076c-8cd0-4cae-a91a-583b5109ca37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac780807-d903-4b0d-940b-af29db146554",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d381292-ba94-4811-88f9-ce8e2935e92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc4cd27-c364-4d70-918e-6d55fbfc3c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2382683-856a-42d1-8de7-47cad9b51547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "af456b98-2eed-40ab-afc4-5e94342a5f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa224024-e111-43dd-b3fd-2763506734cf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981beb98-15e6-4724-8756-8710b8458c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40b70c5-46b6-464b-971b-aec7f3dc3b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fc4057-0103-44b2-97bf-a16cb0c254cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e15d52-b2a8-4273-9f8d-52ab6e6dbc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3861e082-8484-4632-9797-5fc49539ee92",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52cdd53-8968-4368-9ca6-92bf89f25901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190edf90-aa03-469e-afbe-b8bf59dbe63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4b2586-e49e-4987-ad8f-288f0466de24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb39e060-bf32-4e33-b985-3f263191ac77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f9af8f-6014-4ad5-bdfa-134b42c71272",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afc72db-b0a3-45ea-a72c-60e9cdd0fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24700d56-473f-4b04-ab28-9a914174ba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac90bb06-b851-4f9d-8fca-77ebb2cb3575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d617f40-3b9b-44d0-ac5b-0537e9aac86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35d2d74-24f6-4d72-b8ef-791d2b7d64e8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa642778-8869-4865-8bb1-5dee2cd0a627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4b91ff-adfb-4a5f-8fbb-cab4d146783b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95752018-c15a-4fb1-9df7-6d145936d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d35f7bb9-8eed-490a-9b1e-77db51328c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f6f95a-1cbf-4853-964a-77bb2440e613",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a21852d-4661-4312-8b50-284f8fe5beb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16152b77-ffe8-4f09-bb90-9cf8b276abc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c240bd87-8e1c-404f-ac3a-0fb1d6ca67a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d1f78d-2a69-49f2-bf9b-73f9b66fb56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e026959-090c-4f50-b0cb-2a3b1c8d0c07",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7e6a01-0b68-4841-9c61-df0e92965baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6f04f4-a55c-4c68-b476-ee763c742d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c676e3ff-03cd-4b9f-aa33-cff4c696566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a17d258d-bc29-4573-88ab-0fd1d28a00b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1afdbc-3b11-4580-8568-c6bf1b932eb6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ec47f-3daa-4529-bfbe-fc2c13dd3b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49604124-0cc8-4269-98ee-e4031c9fbb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16969033-39cd-47a7-8ec8-9c42a5b00c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc8dbd1-ef6e-4af6-80cf-e41002d34595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7744ea-26a3-4aa9-9c09-742b232b9b09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2c0b05-7420-44d0-8743-bb6ac21731ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e07187-b94e-4789-af9b-5ec3574ae9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020fa8a4-d5d7-4489-a194-c1017c4652ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "76c07d91-d80a-4e27-82bf-4e9bc8fb55e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1776f28-9c3c-4af4-b49b-f2238d60ffcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d1897a-55cc-4e89-96ad-f45e080e06ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64daa2f5-0f51-4cc7-a95a-a42fbdc63949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9074b493-83c3-47a2-b579-5465a6c14b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9aeafd6-3e3c-4a93-ad5d-0fad580fdab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fad6272-38e7-461c-bdd7-5f0d9d2b7331",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be03e064-c756-4da6-98aa-c381474feb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8442aa-3c73-4f9c-8623-9ebaca4f84f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59efb110-cb7b-4027-9cd1-ad20a20d2102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "99502af0-5e4b-4438-969d-30f2cc30b75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d344c4e3-d79d-489e-89db-7ebbe9152d70",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113406de-9128-4b1c-8598-2695c455dce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f932d07-8f2c-4b72-bb00-a4adee171a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c90235b-3282-4d2f-bd12-7eae2c4a9d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d89fd6-6a14-4065-a7a0-caf5fee52276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576fce55-252b-497b-ac80-c521b766275b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eda8176-8f3c-4f3f-b7e7-202a6407d01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2851fe-d825-4ae7-acaa-6c1da268b9b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81d53a1-ec16-4f37-998c-0bfc77e1b1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c3850b-ef80-438f-8dd5-aa82ecfcfcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f06202-4fbe-4c54-ab1b-8037adaf76a0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45d10ff-ce27-4826-9869-c905c758d1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1889fde5-efd9-45a4-8ea8-5172949fac83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bf8b3c-04c9-4276-8e71-e816c019a892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42828fe4-d0b6-46e3-a183-ad64d4e03526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8025da24-5e8f-4dee-b049-7593dfdf8638",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b25f876-a75c-496c-bd60-fd312a004813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39510233-d6cc-4614-be14-e9e0eac05bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e9d7de-2225-4a30-9cfe-4a9c10b2aaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a6237a-78b6-430d-83ab-e20316afcef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1286ec72-c05b-4c91-9725-3a4b69be6897",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b67b0a-26f8-45df-bab4-34677ce57788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637718c3-6053-4cfc-ae38-bdcb7172ad07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d06068-b272-4570-9d4b-bde709a360aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52830a73-566f-4433-90cc-61042fb12f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e3669-cd04-4ddf-86b4-0d6daba6d48d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120d16e9-085e-497c-98ce-c8d273f58dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96445ffd-0ff5-4549-9244-33fdef3a2594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b87031e-1d03-40d4-add6-ceb251ae5463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe491e0-ac1c-4763-8fb2-45c05909aaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4823bb-2a45-4918-b1e1-754f9e072638",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d5284d-8a63-4a5d-8c25-fc0d5a2f652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c246d0-0a8e-4891-a829-0b1923e1ebf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25f07ae-afe0-4ba9-a704-e435b57f98e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6e4cef-a992-4e0a-b2ca-8d3a480989ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99373780-5179-4ebe-a658-b3a7a6b6deef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09223b64-7836-4cad-ba87-ca53ad87c528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7233c165-2cf9-4c85-8a1c-e16fc2200f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aae7b89-3fff-48c3-8d00-2be17ddac350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd696e23-3230-4228-b347-8d2e74a93757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f40011-786f-4d65-8238-eeb1944dcc39",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b054f-4344-4886-8c55-f230be036646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9795a0bf-59e5-412e-9b6d-87a86ab7966e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a88d6b-da58-461c-be7e-25da65482956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3218de2-0585-44f4-959c-5eb354e181cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945da74-9224-4054-b01c-6de186888ad3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1559e60c-08a7-4f48-9801-3da1df44af85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f97ca59-6be8-4e40-85b5-4ea7eef0f2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190bd112-0129-4857-8208-2abdcaefe600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76234669-45d8-4e08-ae16-81183ad874ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c632c4-e7e3-48f9-86f1-1799649a660b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6e64a8-2910-4873-b7a4-4f194be92130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b65f6f1-248d-4d37-a450-7440b4f96196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3874aa39-4171-46f3-990f-0b7946d988dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c31900e-5215-436e-b9b1-ffad75daf319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f400922-3f61-481a-8a20-b2f5be069395",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e5333-3358-4ac1-8b1b-a9e3ee92c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c71726-18f1-4276-871b-7cb903fee66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f7d940-efa4-4926-90df-658a46df3625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf09aa73-a8ce-4e8d-8b52-843b84186702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18ebc96-887d-4abe-a1f9-d8fc329efba4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0953ace-7674-4d52-8d2c-205f7e636224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394221b1-984d-46f9-8d94-b9e9c05ebe6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798726c9-4591-45a0-9049-4fc5ac413891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f36fd06-9956-402b-92eb-61c3c084c9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6625c3-9b05-4043-8a5e-7661a10373db",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f74987-e7d7-4642-b14f-04231972becf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75a5b02-aab0-4480-adfb-d6a5da72fe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d940176e-cb52-4456-9248-97fc98743f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f923945-cc0d-4efb-b897-9c086f23aecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36b25cd-acda-4c45-8318-2276e71f270d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b700750-d308-4dc5-a9dc-9c2e15cd9868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2e9b88-a090-4960-93a1-bd6746fe35e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb6bfc4-1c8e-4dcf-a286-666eb695e8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e880a41-a7ef-4639-ad4c-809faa62a52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28b2575-8abf-4fba-b0ce-17e1f2b9b401",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fa52c6-e803-41d8-9934-57c38e11da62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7a133a-b2ea-4798-88e5-bc7444139239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92d8611-3580-4bd3-8eae-925f0b227177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f6f3ec-d1a8-4cda-9c17-27cc39ee45cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68a39a4-e597-417b-a85c-1c7993c75b05",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923a5035-e7a0-42eb-9f01-41aa891d7746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79df779e-6635-4258-a584-8aff7af22161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1042af6-c54a-4ad6-8362-c7de746102c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9480f4-e628-413f-b6b8-72315ccdd5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ac7d1e-c491-44fb-8d98-53d6fbdf7c03",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14059b0c-71e5-45b2-bc61-1742abcd2cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f3f970-e549-49bd-bc66-12e5824cf162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28529b7c-ceae-4297-9ecb-490d6970e1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcce2a3-855a-4f83-915a-419ef9ee8aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ec7046-371c-43f7-bf39-e40c9637b944",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be59e061-2a20-4cdf-8653-8e182f3efffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f461add2-1192-4112-b7c3-d88358c91c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d8a361-68ac-4484-aee3-126f3e5b6d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64a59efc-a387-4895-b3a4-4524f570b420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee82b759-f040-4450-8e07-f9ee606193bb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e911e744-e82d-444a-8d64-99c2e383cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c717f8-e102-4d41-b181-a831c2f497a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf07e68-696b-4174-935d-a169b729721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd225d82-92c7-4862-bba5-07bc0bd866b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7467a0ee-9034-4552-876e-cf888c3a7fef",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27155141-6ccd-41af-9f37-7ad57f028bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01dc42a-2e47-40f4-9f69-2fd71a194d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5db9d5-80c2-4fbe-b37e-718527ecfcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a20fe6-ddc5-4285-a2d1-c529e67c7b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5afa3b-af91-4efe-98b4-fc6b2e2c1696",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0685248b-5ae8-4898-8f57-e5ee55a15096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb955a5-a94e-482e-9a5b-dcc6b443c510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cf2f4c-7763-4a8f-acd5-c1a91e27431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea5a999-8546-493d-ba1e-38f5446dcfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27651ed-cfb5-406c-a2bb-ecf8b58350f4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc22a9bd-834e-40bd-94e7-edbdd45e42b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5392cffb-c49e-413a-bc2b-ecf9ec736b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6546dc91-1db2-48e7-9ab3-1b8c31698283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24c44bc-209f-4317-8e4e-e302eb466f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9450e15-454f-4076-85b4-d3bf88148c9d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce63fa34-1b41-4930-8371-89983d94d9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac0877b-5114-4666-81d2-f7aad00ac9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc048c44-8f31-481a-b246-da26f487d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06826eb1-53c4-464c-9aea-25931c3addd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ffd2ad-a807-4996-8458-c96a36bbc223",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646a9c99-7a94-494a-b99e-2b327050703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3855082e-ab6a-4639-b956-79f6d638f037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa456169-f1eb-47bf-aae5-526fa1d07c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5719ede-6c0f-4378-95c3-3bda728163b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c588d91c-57cb-405a-862a-39c76e7e9e22",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397648d8-603a-49fc-ac71-c39bc910ab34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452008b4-533a-4e6d-a215-1d7ab84e5173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d258572f-bc96-4b35-8adc-f34f73d404e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef477af-770f-4fb3-adb9-d946120e0392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8af9f66-486e-45f6-bb29-030614b60cdf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c05664d-8ce7-4051-9359-3d0220856260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deaee30d-f813-4f03-a1f6-4874ed40475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca143ff-bea4-4bb9-91a5-689b73505efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f00b19-63e1-400b-b385-19f6a811f9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0059cd-99ed-483e-afe9-b8bbcab2f2ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ee3b66-8255-4221-b829-529f1fda1153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb0b881-9f9b-49c3-bd83-dffceca4a9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876b9521-54cf-4d12-b245-3218581ba184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3980da55-6a0e-4a26-8f09-02b986dd4ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c228f9d4-0de0-44a1-a0d3-573d3121673b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4c85fa-0b44-46e4-84a8-d6c11e9c60b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a315fdc-c8b2-4e83-8874-4015d75aa84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfd4b40-6390-405c-bbc4-ea68340c61f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa7852d-d493-4a5e-b0c4-f0adc37bb424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4a0d39-e07d-43b2-8d1f-f871a09ef789",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad564498-e0bc-4925-bfcd-116749aa00f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51708083-c834-4c18-9738-fa73a5ed1a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792ec6ae-1c20-4133-bb5a-0d0f49d3bb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3479d7-e353-4c7d-8a69-71ab1db80200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b85a42-8caf-4021-ae15-b3b48f27342f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15ad565-879b-424a-8e4e-ad270c3d7e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "85ee16ee-4f39-46dc-a0dc-416bde0169f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7afb2a9-8107-411d-ba99-07d75101916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2323801c-fd37-489b-b51d-5cc14a657bc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8bd17db-f9b1-4af9-870e-22654263ac83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58921883-bd28-4213-bd67-a1627af083f7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c395fa-51bb-4f3e-9ffb-fbb79e80015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aaf2569-934e-43b1-bfbb-dfd163593d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae353ef-2052-49f4-b1d0-ea204f40c4b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d2a39a6-c98b-4127-88ca-f41dc78ccf18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0d1b8cd-0abf-4df9-aeee-1d6c3986725a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93d4f148-b166-4fb6-9a41-492b206be149"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39044474-4be9-417e-a89b-01144f25ca50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37e5aa4-492f-4db3-a0b9-dcf9519f046d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80ae709b-4ef3-4325-a532-53a9bac15da6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c4a2bbd-ece6-4aee-97d4-2695d3210360"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "77595df9-fcf7-4368-acb3-a07d2d39f734",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8312c12b-7636-497a-b5c7-a55a85ee3e0f"
                }
              }
            ]
          },
          {
            "id": "2f08e504-1c11-44c4-b8a6-5604a75fe83c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6e59aee-b8ac-4b5e-a7d5-4882dc0f1f60",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "53c00d0d-2134-47c7-bbfa-209b3615b0dc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2306413-4607-4de9-b3f7-7e6ea5d3e187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7f5a7fe-2ba2-4b4a-b657-17de429cae8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0789ba7c-e4e3-496f-ba2c-4638101599d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c84c149-a2c6-4813-862f-abc3a59fb7b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3549d20-7aab-4856-b2cb-882075a34396",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a6b4e63-1da8-4ddc-a658-c2d84a1dc258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94794a1e-be8a-486b-b4a4-6f8fbc1822ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b28a274-3d1c-479a-bb17-fee36b0e76a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f282e3f-643e-432a-b12b-d1a0147d4375"
                    }
                  }
                ]
              },
              {
                "id": "a2a7bcad-65dd-4d61-b69f-b78f7fa76066",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac5fb4d5-4e81-414a-b9db-59d2dfd6d5ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97aba4ff-eb37-40ff-ad25-3addb5e4d4c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb48ea83-b093-46c7-8ea0-e76f810e66e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48f6735b-632e-4d77-8695-b37dbdbea3b3"
                    }
                  }
                ]
              },
              {
                "id": "9f4c786c-3bb4-4e98-920f-fbbf2dc45b2f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c1948db-f700-4eba-8bcf-2c530ddf2e7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bae2fb2-f20d-4216-ba1a-290f79b49487"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "829ddf0b-1d57-4e3c-af2a-39ac16bff266",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e077725-74fe-43c2-be18-a22347a287be"
                    }
                  }
                ]
              },
              {
                "id": "9141d97c-5e8f-4da8-b9d9-406e4cbfed33",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd26fc62-fce4-4ce5-acaf-f8628426345e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2eb710f-d35b-4a4e-ae8c-1a3c5120a9db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cdf0b52-7eb1-4457-8b3e-fb7fc81cf3bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5b1bb980-832d-4eac-9619-45f11fad4f99"
                    }
                  }
                ]
              },
              {
                "id": "6878d6b6-aac1-4b0a-8c40-462fda9a49f9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7081900-bf54-4fee-b621-130a5d06d8cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "225d9a30-1442-4396-afdb-4e8cafc1b1e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "801db174-37f5-47c1-89d1-47d7423f2f7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "872a73b3-1284-4f3a-adc6-51e1f6c3c31c"
                    }
                  }
                ]
              },
              {
                "id": "0bb5e5e8-150d-492e-b881-9d317acf2e1a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4d79e0c-a468-43b9-8639-e686a91fdacb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fb286c9-e269-4fb2-8fbe-79f3e69ff6eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8aa3e297-8fdf-4294-b75f-cb8d766a2751",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49435048-987f-49e9-9161-7a9f55cdfb1c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d9c728e-fa1f-41ea-87d3-5a0a53e7ca65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4252bacb-eec5-4b9e-9d05-08986591b57d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62a59c9f-3f6d-414f-b0c0-48d1c164b9a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "beab6ccf-fe03-4d85-9420-015bb5d670a0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "052f1f50-0ac0-4cbd-853c-72dc4fda7f11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f087211-b339-499f-829f-9be2e3ab4b59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "126c6a25-c9a2-492e-bd7c-987bffbfa7bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65352a5c-ae20-43b5-b044-94118b3710bd"
            }
          }
        ]
      },
      {
        "id": "8c2432ea-829d-4e21-8d34-8e9b0cab489c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "361e622b-127b-4eda-8e2e-23a492649189",
            "name": "Negative Testing",
            "item": [
              {
                "id": "011b01f8-d719-40bf-a0e0-83f6f582f687",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "491777f9-e46a-4c60-b574-fd9923de2ca0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8d3c4-83f6-40a4-90c9-2c5bee8bdeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c405f9-9d90-4ce1-b40c-106456e8de69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47859c33-f4ea-448c-a446-337e2a99ee92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "69dea18a-f576-4151-bf8b-4b19e278e9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3291eb3-bfd8-4623-8970-258213828002",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5352cf7e-2e81-4264-b833-72f5ae76e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee1bc81-8b73-4edc-b7b4-b344d137f70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edfb9b8-75f1-4278-9a30-82ecd6e3852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72027ec-8247-41b1-9edb-3a9a96cacb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a29ece-7cdd-42a0-a09b-cd14f82523dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b8f8cf-cc28-4155-94c6-b33e8781f18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50425d18-3627-4f46-bb53-a200ac68d9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb031f8-0095-42f9-9b2d-76ac080b5c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8054095-8f11-451a-a32f-a3c9c75c5a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1198ac4f-0f2b-479d-871d-e3fa1d58f6e0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7207876-b2cf-4b08-b429-f185837dc52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63e9932-f4af-465b-845a-36c326ffd6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18238b9-f338-4d19-a921-9948f19e4ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e34a900-d16b-439f-b5eb-608453e72c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae283ac6-f045-44ce-902f-04662cb791b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e739a1-5cb4-467c-83bb-cbaa59a9afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d61e28c-ae83-4eb8-93c5-408d63569746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be0c189-0f63-4fbc-a847-b43a668c61ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "110d3ca2-e5ab-4ecd-a073-fa7ba6edd119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf393706-5216-4a9b-a8c1-4669a024d1d1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cea0009-bb2a-46e1-a4d3-f8f1960a0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e0c9fc-b5d5-4227-88b5-4861b41e6394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7394c451-cc8c-482c-80db-8cc11c497de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6a16c4-b8de-45ea-84d9-e70a72859e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2948709-02cf-4fb6-a00a-902d9a40ac88",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cae830-00fc-4dab-b314-43f4ef1beb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453d8f5f-f4f7-46ab-829d-9c99e0d32867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431389cb-43f2-4360-910c-bd400cf2f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "56ea7846-d56e-431c-93ca-e18cbddce18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c343fcba-2eb9-4528-9d79-581f29e28e86",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fae8d8-efe2-42e5-99d9-f8e46937fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55848de-43f6-4f28-9b57-5302a12aaf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7170f4b4-9160-45e7-b2f4-7864507139ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06866f4d-971b-4dba-945e-f4b34755618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7452ebc5-2405-4659-9176-ceb0305075b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf23fd6f-6583-4a55-abfe-c3f3775a675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e05d601-ad09-491c-9c32-e20d136da350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70b1850-2f26-4496-b26c-09f67f2be9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ae4773-9dc2-4285-91b9-579e6dc6f71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dca6aa-f0f6-4138-a683-b174a55284d4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177ed4ab-5a38-453d-904c-ff6be609bf52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4d4f39-b572-4f58-aa99-fa5ea3f330ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95b6c93-66eb-4c37-a193-a62865cad0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8170b52e-d9f8-44cb-80e6-0100c1f437fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4549f6b-0c68-40a9-b65a-8ce5db435cb9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce6c370-73ef-4971-b9ac-b7dc1fcbf636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b615d90-0df9-4d05-bbeb-dbb3d445286c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6634c62a-5785-4c2e-b28e-954971762083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3e274b32-af56-4e95-a0db-fd24cf2dec75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec02e944-0645-473c-aa08-da77510c2b1f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51bb8a6-9c66-45a9-8e1d-d2472888b1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5ee35c-e458-4825-9869-ee0b12e4606c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a0c41c-7cbb-4a1b-a2ae-f9aa44cbc77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cac4884e-58c3-4149-b9ff-4ce10654b4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16db2d64-50c9-43a4-8ead-6918638d8113",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b296fd-e0fa-4026-ab6d-0704cb065c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b3ccaa-1aff-4ae2-b104-53fdd76dff2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef85b146-3d25-4f55-b6c3-7417bf0ae55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "764841ce-c8da-4bdf-b832-51530d9c4473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3549d3-9109-484f-9260-1f6787d28b67",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2b082b-18ec-44f4-8acc-224fc2252494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa744a1-a8bd-44bc-96d3-a2f5934b5448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab07b9c-dfac-43df-9a6c-f1b8ebb7ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "651421dd-0def-4c33-89c9-64d6e2be246b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8263786-b741-4c06-aca4-3d1d4eec4054",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a0226d-c773-49a8-8200-455edd076d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438ba6fd-2494-4a7a-b45a-3df50f09bc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c280cb4-edc1-4d43-b2d8-71b9fea51734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "34fc30c5-a282-4044-8935-48d636d208bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a7db65-7695-43d8-a9cf-37b5546e2c4c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce53055b-054f-45d4-b4db-83929644016c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bf7b5a-14f4-4e42-87b7-a2262afa32ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd5ec7a-1f8a-4c98-b2e5-9788464173a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb9170e-62a1-4ddb-8dc5-fceee53a6bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebb86a8-7ffd-41a9-8295-9efcbc34596c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59a9e8b-1dc8-457f-9461-46620acbe558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0a3949-4416-48d2-877f-86edb3710ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3b2949-4f21-4f1f-8713-8e57dd79ed37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d2ee5d-98a1-4d56-9d8b-afa846c559ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04759ac7-6dee-4476-bfd8-0b5e395515df",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef26e821-10ca-46a7-a9e5-fadb7c1b307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20f7103-b387-48be-a511-7413f658a7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a09a2c-9df8-41b3-a342-80f179c70688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c091d307-c83b-4bd9-ae97-6d003d1a7019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674734a-9d70-4c15-b51e-746b0cabcaab",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574c7d40-3111-4b69-96e9-cde0edef3d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5cdf5dd-3f09-4072-a372-14a46695c8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51e936d-8cae-4f2d-b9fe-1e161387324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f843184-23c2-4aa8-a4aa-1ed17a31a392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebcfb30-c932-4acf-8d76-535c019f4649",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9752c250-dcfd-49d1-9f0b-5d06e47c62ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6a36a3-f935-454e-b3f5-2f75f84bf759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72c3c93-e045-432e-9619-bcf0e5d1fb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e876dd6-434a-455c-98c5-8cd708b2c644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bcce08-5f6c-484a-8a6d-c3f78c6b28f6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e3c976-5503-48ee-bb32-25e67bfdd5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3b8373-5d6b-41e7-b163-f0a26c36486d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f08f4f8-2caf-4e21-9eb4-85208a58df43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dde01b-d810-4bb5-aa1e-372fbc4ece33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cdcf02-0482-4603-b38c-6df035b2f0d2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd9b8fc-66a8-42c2-8ed1-eaaa118fda65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132168be-bfa2-40b9-8a27-ea272838b2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bf28e7-2f53-494b-b47e-200e2bbeb00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df349cc4-f43c-4840-8ee4-54b39d1aae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c162b57c-2c62-401c-bb9d-8ce331957780",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2e83ed-119a-4bd6-b8e2-fe280ed436c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1148b7e2-01ea-4e77-95eb-874be8a29d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e91031-6dcb-460a-bd81-edddfece0b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c27a874-bad1-4f61-954e-9390e4c8b1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8d9964-f535-42c2-a5ff-a9e05d385549",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330b1414-20db-4fd3-92ab-3cee41db34d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cad73f0-a1f7-4bd3-b517-a02cd655198f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c114854-853d-419a-a6a5-3c9ffc0bce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "860f5b6c-4b41-43bb-9736-6138284cea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d7b74d-66d7-4fd3-bff5-732f8f9e23d7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815ecf5e-ea26-4d31-a473-2ba35bacfca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66a8bfb-9401-4003-9e0b-ef9de0b875c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fece75-23e9-46ad-b2a0-b79bf4b20993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d6eda6-fd38-4b83-9af3-936fbf771374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e485cf37-02da-4224-b19d-5ee6271854af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77c9467-9358-42cb-b6da-9c6602576cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbdb6bd-7370-44c5-ab5b-8413a33982d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c77414-66db-4bdf-af92-3c123cece893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e880c5-3dae-4277-996b-913675ebbf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5ba523-83a7-455f-9f35-60dc8dc635a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565bdb38-606f-4926-88f2-6a67dd34a985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4c2e1c-5fc6-4ca1-bc56-77e78c58c168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cfec6b-fe9b-4b8a-8472-252af7a594de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0f9894-4222-469f-af99-a66c28b8bc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532b81d3-6e81-4f43-afd5-faae1abe5d55",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cc17d6-f765-482a-9df6-99c427fc6a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd819d5f-fb71-4638-9c15-b35c85760971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47982267-3a17-4f1c-a387-2e883600b8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b775354b-970d-4c5f-b6f3-59946be05826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7ae814-8d8e-46de-8696-fa61e9d2490b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d42a7c-9f7f-42f7-92d1-77641dd84a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be20d27-da10-4ba7-9443-cb57145a5a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1da18f-89e1-4ed0-aed0-9e52c9ece9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7abbc3f2-08b9-4155-a32d-e819f13b4a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b7f003-2528-49b3-a209-8eb720b5756b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c532ee5b-b9fc-496e-9c58-efe513db4b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193957d6-b599-41a0-b344-ddfaf91f7b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f440bc9-7235-4262-8fe5-7aa4e20dd4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca6847d-95c1-4208-85d6-3889f2b7fc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c029fb8-5714-4ddf-a3e9-63c5de0c4907",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11797f1a-203c-4947-9a05-c3468df705a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9597940a-36cb-4375-9500-9abcd4ab7482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e1d4d1-1ad3-49c3-ac25-57d4e09dc165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d0f2e2-4e71-4a11-8430-be08bde119ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ff679c-f271-4fd3-be5a-ee1f6ccfae55",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510f2e08-2caf-4982-992f-ef9629c1119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7e5221-fbc3-4904-9791-d766ffd034c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559c2b44-707a-444a-9c08-2e82a6089b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9faa01-c68b-4ef9-a1c5-90a446e15b97"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e586e3d-6504-48a0-a7ed-8fe5f7582dfe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c386dd59-0af6-4735-aaaf-f22eb3d59d23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9241fe12-d163-44dd-970e-3b9488a2b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4a75674c-af25-4fdf-8665-09d02a8213f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6ba19a-2f64-4699-b219-2988d479b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b276c20-c835-4540-b121-6b4143f2bb37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb5a03a9-b106-4181-b0a3-3c674e29066a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fae3c37-b174-4f21-9a97-33a38f1391b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6aa45e8-a83d-464b-bd1a-d132444510d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "932c56b8-080b-4734-a166-53d93f2ac43a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1601605-6646-45b1-94dc-2c0b1e4f12d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8116455a-a421-42ca-8b31-7c2f16ef8092"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c71931c-4641-4a68-b7c2-b263d9939fed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6e1f7b3-a30e-42c1-811e-e7a0c9ad6e9f"
            }
          }
        ]
      },
      {
        "id": "26fad153-e81a-4cb9-8fd9-7f168090510b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d8aed624-e804-4a8d-859e-dd3f1faf1ab4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af4be2de-eb82-46d5-b072-5948e04e0977",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a066e00-b643-4745-ad59-5e421835c096",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9ec2f7-ca6b-47e5-81f5-bbd9fed15f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d02487-5c6c-44a3-875c-6dcc2cc01ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c84916b-5b34-450c-b54b-bdd37c107f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea08001-951d-42c4-8159-b992db876498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3405e93-67d9-4112-b0f6-730e1c626318",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581599e8-2dbc-47ae-905e-aa0dd3dc0cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6575daa-159e-47f8-8ede-a537c27c1342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730d8f85-ffde-4268-b8ca-f2f52d5b1042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae6b97e-20ba-44b2-8b0f-086f4dae9fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da31e2e8-8fd5-42bf-a1b2-3dfce4ac93fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e02d4a-39db-451f-b449-300edfb3e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b1c7af-5903-47a7-a708-66431b035993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92a652a-52b1-4cca-ac4c-cd887bc5d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06c8049-a29a-4ecd-a679-a85fddd92566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1e7443-8457-435e-bce5-027bacb32a15",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272fbd4f-f96e-4232-baf3-68ecdb287cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbb938b-9a14-4637-a5c9-66981d597800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97530e50-480e-4181-ac79-e54877dabe42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5140b121-e750-434c-b4be-7e1ac36b305c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a22c27-c768-4997-a1a4-32fdd8b71edf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1779e696-366f-4cec-b144-7e4f34731ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f109be-7783-4f71-9ce9-56da433114a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f087a2f-da1d-4f21-bd50-6969a0f2d5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf6729b-1d94-49dc-bf3d-bec762553fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431b782d-9f31-4d9d-aab0-b60093ab07f5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de19d77-d9fd-4cc3-92b2-b49535d16196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85dad61-c7af-4cec-bc56-26cd6393a63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4919ef1e-43fd-4fac-9fdc-c56c38cf17a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3c87f5-9a8f-4044-bb13-986fa8206a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803a04ca-d54e-463d-9942-46800ea13ef2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaac6e77-d6ce-4c62-a1fb-e991ade40cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fe9933-322e-4bde-9658-752f4a25efa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0864f4e9-0f8c-4e7f-81bc-8cc1f8964565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "58262f38-94eb-4443-b228-45ccef9a621b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bfb129-cfae-45ee-9e73-5f6e552169b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4beff6c-fb32-4b94-9610-04b6203f0264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb734dd7-f95b-403b-a600-5faeb2828bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edea90ad-9d5e-4774-909b-d901e5442152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc10098e-6611-48b3-943f-954618b49075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a29c3f-a354-485b-a1ca-05b87e36b523",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e543670-de44-4d10-aca1-24befef758bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79efc092-da5d-4e15-a4da-00c66be3a6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710eef4d-6c27-42c7-a5d4-6c734bbc528f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844efb8e-779c-4a22-9c14-8e9ff0ae2aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c7cad8-002e-49f8-a155-21521218b4bc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d72e167-e616-4b6c-8350-e555bb2fe72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f87aeeb5-23af-4506-b831-ab386848898e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc3fc01-9f9c-481b-96a7-cb557da1d291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d41eebd-9e5f-4620-b542-45d93d322191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871129be-ec3f-49fe-a4dd-068b7591266c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df718b9-6fd0-40dd-890b-536738f85985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd31cbb7-280b-4e52-921f-c9fefba9017e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891bdae1-eba0-4873-a8bd-71c0cb904547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "61be32bc-d5b7-4170-8dd6-1754f450cc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a87c5-e64e-4be5-b5bc-1bdfd06e2ffc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93473b88-0b35-4d2c-b923-9fbac31c182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a6fb44-f73f-4592-8489-21ac584ba6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eaa7df-90f3-417c-b3a1-2678ff070caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "968133b5-1626-487e-87cd-49b4fef03028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050adef6-67f0-4517-bc57-a2c1dd09cd45",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac86c3c-b7f7-46a2-b58a-9db7a11e70f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474de272-2cb6-4df5-b5dd-1bd66901aaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5af6c7-823d-42e4-ac48-4424b32452a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "782a6983-e18d-40aa-b134-83d236d909c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7481cc0-c5f9-480f-83d7-ebae583f6d06",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d003ad2c-3471-4ed4-973b-032fefa14373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60005039-8742-4bb4-9f42-ae88e900255b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696b5642-45af-4e96-9b95-f4376aab772f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb01bb5-86f3-4d57-94de-35198b9829b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d47205f-6c50-4747-a561-eba2ad10b14d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dbab16-9ecf-4dc1-963a-6bab6704d782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee48cec-573d-458b-8019-f51f3513be06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abf0255-94bf-40cd-a7fe-868ab618f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d32178-aabe-4277-8265-b9421825760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b95542c-4da7-486b-b2f1-e9d038e64d27",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77925ef4-fbf1-42f9-bf66-c81d42a2ad08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c1808e-0d7d-496f-807f-1bc011205c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c395e6a3-325d-46ad-9af3-f73c28bc0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7debb3bb-fea8-433a-b9e9-1883478504f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ec1073-1ba4-4a08-8002-020a90c609fe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f732327d-152a-4efb-9330-07b68cf96966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd578ad0-aead-4f2c-ad44-6ef8bf8a713a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d0ce93-eafe-4f09-b4dc-d97e435cbe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e97c05-c969-4af9-b4d6-ac55960f3870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da12cf58-40d8-4a8c-a67a-ed8e56b920c0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cb072b-5a3d-4e70-b1bc-c7aea6a77329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315a1a09-2a9d-4d96-ad7d-133d9fcd637d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2c14da-1fd5-4853-a24b-e75e011bc5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "869495f4-071c-4918-8af2-e4d0a73a870e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3e08ab-61e1-4de3-a9c2-9fd85ba93c08",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55af4721-4bca-4307-b727-05d744d7ef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c83c4e-d9fe-40be-b710-0ad74f79f14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d119f1-c9c0-4806-8e2d-528b589f30ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa205e1-8cc6-48d1-9563-d2c62996be3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20863885-a5a7-49d3-939a-1cd745399a54",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3c7f99-8df4-4204-9289-f693bb4d1d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cb2120-9732-4c1b-b42d-042daaf48590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b985a3-78a1-4ebb-a5ea-7017386e393e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b96a446-3f66-4695-9cae-0fbea32403ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ae0e55-42e7-4c31-9417-9e9b301c241c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfe77e7-391b-4ef1-b33a-c8d4ebb8bab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a781074-6635-49c2-81b0-4472753e6e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02159799-cbde-47f8-8d3c-cf736c15f60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7b02c4-59fe-4044-a266-222475a16515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d964eaf-3f70-4970-b849-cabe800d8f55",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4492ec6-be5a-493a-9ffd-3dea95ecb3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6add614-9edf-4d91-ae13-eb87ab181a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009c02f8-adb4-4ff2-9164-b3e00dd74ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bb9bfe-bb02-45a8-8150-24f24a388dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a369db0-5bd0-4bf1-b926-ead5dfa8b7d3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8b8def-b242-44fd-995d-b5a1386422bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc14499b-500b-4d41-a464-326d230f31d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e7a620-fd26-407f-b646-a3a31926f7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9926838d-2960-42f8-9c90-9152cf9f4cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e3ac74-f1a0-4283-a86e-e3fa0823d6eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03dd821-7112-4e95-82ac-c0db779ae2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f075ab-838e-4058-a420-e36da615056a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db665a0-ce13-4070-9388-e1b7d5f6424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91532fa7-e0a6-4cdb-97bb-f1411644e5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86123718-e93b-4d25-96c1-0940a383f6ca",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1833ce-91e5-4f6c-8d2c-76a7d70fecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e4072a-90fc-41ac-a580-581bbebd05ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591995aa-804f-4452-a16a-1150d7c7f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9015b8-2cff-4706-8800-ab00abd6e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f54187-8c11-42f7-b3f7-33ee71ce40b0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731285df-1b2b-4bab-9677-74a58954dcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b688d125-dc27-41da-aad3-ff5c37f101c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b5b164-2472-4900-94ab-b931acb191c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75542e74-5fff-42e9-83b4-432fec9b3b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c795f6-bb04-4f4e-b987-38f1dd6a615e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123b6a47-308f-47a3-b9c2-72f10f71128c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d4e867-7bbe-4b3e-9f44-9c5d9477bc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eb7e4e-41b3-46ef-8d35-caaa2d740033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f985e56d-2295-4af8-bdb1-6a3af881d2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fa09b1-48bd-4354-9c7d-2dab876c2a05",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8923d6e-0081-41bf-93cf-c1bacb8286b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340d046b-75d6-40b4-924a-d5b6c4de92a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce2f244-c5ee-4572-ace0-2ceb2efdb995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb9cd5b-aa16-4427-8c9d-943c2180b3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95d9d99-68ac-4371-9744-beb962670149",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c899db-9305-45c4-9b66-ef2bac891261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f5ecaa-4e13-41bf-99ed-e2a90068ccec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc0795b-652b-40ba-a886-78d6bcfc00b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc34e415-efee-4887-a0e8-9949a79a9c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eb9843-960a-464b-a0e9-940707d9a057",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276cc3a1-b4ad-4b92-8d38-9c32dc4fbc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60d74dd-7569-4857-8f68-9c51d01e18c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542b7fce-0260-41ae-bace-eaa739fbbf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc92cf9a-2d72-44dd-8c78-89cedfb43e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bc3912-17f5-4fc7-8d41-bc617da49dda",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a9a69-dd1b-4e16-8f33-045f6d16b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d03935d-5ff2-4e02-910d-dcadd450ae86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c7402e-14da-4b01-93b2-d118d17db48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a13b79f-e00f-45d1-a0b0-99db1da8a08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2015086c-10a8-4be0-a604-0e63d0e88adb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a40dbac-1c47-4ce8-b41c-7d1921460de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4feaa9-d38e-4757-936b-2126676b05f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f7fceb-a37e-4520-b004-274befc91ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31aad28b-2822-4c5e-8953-5136e9e788a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa763a8-1756-4279-bfa7-e6068220dd37",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074835f8-a21a-42a0-b4dd-6400ffbe1874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d612f4b8-574a-4349-8891-c2f26f1cfba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb596f-1443-4208-a6ef-e98cea07f88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed13b0a3-1ebd-4daa-a88f-9365057370aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535b6307-afca-4599-8bc9-48505d9bc9c0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d64c1c-27b5-45ef-bdcc-2bb2b2f32ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cea47a-ad94-4d5f-85db-a0cf3a55e997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977f5646-cb8a-4ac3-be59-090e2c0b20bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b71cf784-be78-43bb-9c22-e7b80d92c45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee3fa70-c175-47f5-b913-1f72f69ceeb7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee697e8-5ca5-4536-93cf-b5f244ed262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249e88d8-e731-4070-babe-277dd47f5506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17022d2-4f59-4c81-9fc1-6eeaa4797a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2edd3ab5-ee8a-46f9-ba68-78188678dd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72918819-60d6-4b7d-b635-a3d6e4ffc9fb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dfd923-49b8-4bf8-9411-0264f122fc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64692e7d-cba0-456b-a4b9-aecadbf4aab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56e294f-fc1a-48fd-b3f1-1ec407d78b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f739863-5ccb-4c7c-8ea8-b993fb7aa6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bff52b-e429-49fc-ad53-ac27450108ac",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9a56c8-82e4-4b9f-9fe4-256e69a1133e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637915f6-b10a-4286-bb57-b80ce7fd3b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42d0637-4779-41a9-854f-eb42e7105942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69ec5ab-57a6-483c-b878-8ef1a51d1ecc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fdc151d-d10c-4d7c-920e-1adaf2bdf907",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5ef3357-8d46-4960-ac92-f4c03049131c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10578336-fd53-4691-9bd1-1def6d6628f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d944d-a372-46e6-a8cd-2042aa007715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da68819-425d-4433-8186-13fd5f8467c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72bdbd82-c73f-4492-90db-05cefaf4da50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a034836-2d40-4b49-9401-b53f1809c01e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc334aff-f09e-4e6b-a8cd-292ac0aedf4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a772caf9-1281-400c-b1de-49f27f7ddfec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58077cb0-cec4-45c3-bd3d-14d59514114d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bcce091-6679-4b44-b351-72d72bee7058",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eae8c099-898a-4b65-ac93-477fda2fe98b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67044bf5-f31f-4b45-96d5-6c28e143ebb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75cb8121-fd23-485a-991e-26d65e7d36ff"
            }
          }
        ]
      },
      {
        "id": "9dedd50f-fad7-4d0c-ad9d-640c8eaeadf5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "52da394d-61e5-4b98-af32-439830b2d828",
            "name": "Negative Testing",
            "item": [
              {
                "id": "748427c6-5275-4e54-929a-6097b6252079",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f45257d-c6a9-464a-85e0-cc2861b99a75",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596e4e38-4334-47aa-a42c-2a6c54c2f23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6295b47d-0640-4c60-93e9-5c7cefbe8244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43e2572-6fcc-4cca-95f3-f142c1a89bb9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57e1b4a-31b6-49d3-94d0-0a7ae6bc61ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b359807f-b63b-437d-aa63-83b4cbaa3480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effbe12d-4be1-41a8-a75f-264011595df9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3ecdbe-1d26-40f4-a1a9-4c11400d0f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f155b19-fe62-4768-8675-6c5196f7e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90ea6ed-403e-4e35-80b8-5e3836bb3b86",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e41fbc5-2844-4977-89aa-81e4d9f9acdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2928ad29-a4e4-459e-80c4-75b13241254f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27715c2-3cfa-4f2b-97ed-4e98aed1df53",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ae3603-8c13-486e-b980-fb8000d83812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ae5d0d-4224-4799-9594-07121e222dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1b702b-13da-418d-b992-ad95c56a5557",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febed906-ab28-4e9d-abea-bfe6e1f9b25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37063ab-9f5e-4b75-a4d2-362cc6d2a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951a07d5-6a66-4ced-b7a2-f5c85ed8dd2a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b1e47-8272-4245-a946-81f62faf1149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0712a997-1b1c-4092-b2d1-e16db472c927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a304324-7df9-4b6e-93a8-28b906650112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179f93cb-f147-4111-8a6d-f0e014c64032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22244f85-5cff-4c1a-b301-caa7a90c81f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e59a5f8-6ac6-4c1b-8b42-c8a44e8f19d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e15ccc-7ad5-417a-a166-269273d5ab3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4744c6-b1bc-4d09-8c9a-78628e64bd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9537d8c4-4d28-4500-9675-55869322c42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9659de-42ae-44fe-8e8e-accdbb178205",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aaf76f-add1-426b-a9d0-9401a591d9e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fdde01c-756f-4cca-bb24-9e41b4c75dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac891bd-2b0b-4c7e-8af9-b20a18c034ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c171b1e-2516-4715-a512-a91eecd1e0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cd7f14-47b7-45b9-90b7-7d9c80c7fd97",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87198d1e-d707-4cad-b535-66be44c670e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53af3321-e78e-4563-b4d5-ea67561c3c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a772308-9ad8-46e5-bb4c-f4ca0bb4569e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c280456-68ae-49e7-84ad-a2740769d826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6878f1-4cdd-48a4-9888-d603f8e96acc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6749868f-c6eb-4c2d-8f7c-e2897baaef4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6bb89e-3663-448c-9a16-3fb9b5b14d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ded134b-dac8-4131-904a-b932036ebe8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cb3887-2fba-408c-bade-d90ade32b439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505dafd2-cac0-4422-aca6-f9cb5ba252a4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11e45f0-fffa-400f-9f16-c63c9207881a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b03de1e-79d0-4b88-b3c0-94a4fadf0182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa00410d-e629-47fc-ab96-61b2f9f44c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce782599-b014-4f79-bf33-0e8646c763fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a0b316-c3d3-4ef8-9deb-99753173eaa3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b5d95a-b7f7-432d-b754-6abad88d5b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cad877da-bef4-4a3a-a16b-6ae8be26a66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7287dc9-1285-44b0-9cf5-14eff50b3cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c05932-c527-41dd-b09c-d6380d0a7b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19314db8-f044-4c88-b9fd-f730c3e4d30f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cf6d03-298a-4ddb-9735-e455a036cbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8883b52f-66a5-418e-a456-60bec11ae077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecca3db-35de-4f5c-8114-2bedd7196a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e815939-98f7-45f0-a74b-c9a947aa6eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89eb3d68-9e82-404f-b4f0-52eee8bd9445",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892dedd4-c202-48d6-b9f3-ce9522381a3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38154ec-e9d0-4c9d-88d1-1ae7fa26bde7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bf6b41-0b65-4d7a-8641-894821807cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebab3cb-7080-48c6-aa3a-8c4a19d54cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb2e906-0468-4206-b152-f82f9fcd3d03",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad958e9-6054-4697-8803-5d020de01416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13836489-8454-4fa5-bb58-3fcc60d2f40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2a2d9e-dfe3-4743-82ec-54c3c8568901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd5fa9d-0531-4df3-9de5-a37a58c18d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a5482d-b52e-4918-9bb9-7e584fa219c1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ea68e4-070f-4fb1-a96c-15d3a5db71eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51affea-667f-4552-bcd1-186b6e765899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaef50d-53c9-4bce-927e-c4585ab5ab04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799e9d7c-0cad-4f47-9cb9-801e02465f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68bb2b5-56fe-4c75-8e0c-9948634b3677",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a62483-f3c7-49b2-828f-8041737811e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca3dc03-de6a-4c2d-aa0b-9ee4721f7744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bd610d-e7f7-4ac3-9cad-6ac5bfbc0d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1085abaf-ceb8-423d-8329-5a10a1101c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f035b6c-7dd0-468f-9a16-711baf6de0e8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d1640f-bbe7-424e-b707-3ceef7c1075d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce6a0c0-7c44-4a0b-9e00-2873b44f456e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4555cfd-8540-404f-98a6-1c43bc38877f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54dfe2c2-408d-4fd6-a4f5-09867b0bba77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc8c6b9-f7fc-4b01-9ecc-a692f548eba4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57e7b56-312b-4fb0-903a-2b7123b9b265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be019505-f5c3-4afb-9175-11cf2bbd5fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfc2f1f-e8c8-402b-ae3c-f4baadd47378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f557b6-2407-4ae0-97e2-6221c24904ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf417dc-a50a-41c8-9b9b-d8c470743d3f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606d4127-4729-4ab1-9b71-ece8f6573e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c078301c-d816-4114-ac64-412b3c330e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef72bdcc-402b-4132-a157-7613692379dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1563ca4-c542-4fab-87b0-466f8f4343d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f891d1e-8689-4583-ba04-bba5df472ffd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8373500-a9ff-4438-a3ca-c2ab6467cd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5ff897-610a-43b6-863d-04b5b621d398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb912509-393b-4359-9fb4-51c779c1d6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4655a4-03b2-4774-b5c1-c88e76d97a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa8d735-1aa0-428b-bca1-36410f1b32f6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25a1af5-658d-4356-9998-93c101a366a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecc0e6f-9d2c-4297-b4ec-1bb5ff5b881b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d2652-ab7a-497a-a779-2e798cb51375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23577620-1f4d-49f9-953f-0e89d7aefc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243f8263-1acb-4af1-9f48-00357074de3e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28552432-4cd6-4d17-bad6-841e61b20343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39350d3e-e1b6-43c0-af3f-3c0e612e43bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bcfd05-09a7-43ea-94cc-e84bda4361c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69972bec-74e2-4cf5-9646-b072d776ed11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5326d-3f83-46ce-a1a1-0d6a41ee5b3f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1580bd2a-460a-4f47-9b59-a452437a18d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417da4e7-32a4-4687-b507-f171846b28e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82696653-ed26-4dbd-a523-de1268382ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1b5747-4648-4132-9665-4488a8871dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866d06c4-d976-42a7-97e9-fd2e88ab4d9f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439e9c49-e29d-4a17-90c7-fff0f93db676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d3ec8e-eebe-4ee0-849c-ccee3e0d6bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52edfcfc-9f63-4d41-b594-88864879dc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a993fb2-7dfb-4704-9560-6253a01ce0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fd99a3-b691-4df1-a0ac-a13ded2139ea",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3462f082-bb65-476d-ac78-61ed2bf7617f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e55b619-5d52-44f6-8377-187fcfe8b70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675fa5e8-1de2-429f-94b5-9c7c4db92872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5638816e-cf02-4f26-84ca-7379c0de8a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0f373d-8a3b-4c39-83e3-9424f64eacdc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064d3848-125b-4dcf-8878-4c2ae253dc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acc2fc5-1213-462f-9d4a-d67f0140c130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6196a43e-b5e5-4332-b07a-851827142275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acb0a61-6d42-4b4f-88d7-0bd70abfd313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec162ab-8804-453a-af9e-ce946c849c40",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c275852a-a1bd-492f-9f52-364d7ae4ea8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f921423-8fd4-426d-a138-9fce158357e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0531d3e7-84ed-439a-be4a-6a2b7b32f2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99858ce5-dcb3-4eb7-9d45-c5dd231b8935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414e669d-005f-493d-9f13-e44a7c2bed3f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522eb611-d3a4-4132-9ee3-3bc307ca6604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88aa372a-ebf1-4690-bd03-9c785858fcdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b449e8-b00a-4291-b146-7cbaf878632b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407e2cdc-fc0d-4669-855b-ea0c9dcca300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ceaad0-e1ba-46d3-abe4-c804d26203dc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02000f6f-d7d8-4b8f-815d-d7be1f0c39b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6928ca79-8985-4489-a761-cd3ba5bc317c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35accc5a-5763-4672-be06-10aa2e20a370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "155f6627-828c-4e22-9004-476448acf5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c44d57-ac51-455a-b184-6ab827dc408b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79637c7b-5640-4f56-8c8d-67e38121b5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ab831ff-bdd6-423a-a819-08f75b706290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7635713c-bfe2-4c0c-b5df-a030e0107aa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073dfd48-4c30-441c-aead-15b721f74f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7496c71-9eb8-4f28-a95f-fa63cf64c32a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23b8229-a4ac-4c7e-8531-1bc3143da5ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367f9f41-90fb-4fef-97df-f5710629a58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3e63f7-ff6b-459e-8c15-779a2e4a46bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ce3f90-4252-409c-8ea9-1c5baae7f00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4a2671-6da9-488c-9119-a524763814fa",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d201e8c-dc89-40c4-9503-17514aa80b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb82f064-424f-464b-a71b-fb7171ebcdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eda432a-0296-4464-8587-13662cc1bb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3444bf0b-fba4-4c4f-a405-190237d908d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13742006-b993-43ba-8dca-807247b40c06",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a526b9a3-238b-4010-b26e-3780521ec87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c56088f-e5c7-4da0-a534-f06a22dc742b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b30ee0-cbdd-4235-b235-8f0c00737e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875f593d-18d0-43b8-9170-9d3c4722fd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20d7e0b-a0c8-4c59-9b4f-a357c05bb47d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64edf669-5a6a-4c2c-a2df-0ff39fe59a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fcb3ce-7102-425a-9c0b-1143cef13399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea998fb-7dc0-47de-b252-9868317da637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcc10e3-deb6-4cf3-af18-d93baa9c34d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f27595a-3e47-4445-9a50-0a9536427923",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70648e90-601b-449e-960c-41a58d3e3fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94a35e9-6fa8-4627-bc6d-381436402b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb788809-9a57-45ad-9635-ed625e6391d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34694cf-5403-42e7-8503-4b78a316b532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0665b5-81a8-4389-83b6-8e0d897d2aa2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df3e253-a9db-492d-bfb1-732dd89d2d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0044688-8e7f-453e-92b8-1f3397451769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a96193-b795-4fdf-8392-716d7044eb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5688481-061d-4def-a402-aa4f3f744c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2cd9fb-fd69-491b-b7bb-586d06feb062",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d19410f-543a-48bc-8c19-0ce3ea681164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f189fa-4b10-4b56-a1ea-202c1e8e3897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25a4720-7a90-4df7-8725-3d24ea624beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c503dc-7dd2-4c4c-b76d-858ed3471fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b795cb-06ea-44ab-bb10-28f44a24197a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f709e6d4-feef-4cab-b716-d5f7c9dd7a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca9a2aa-4b9b-4247-ae2d-2ed8f1eb9b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea80ae3a-82db-4a9b-8f47-b1f71e1bd020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996a2044-9177-41c0-9b62-096e7a94d395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ac0c06-407e-47ac-9624-f26aa60589a9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df460be-c539-43d6-8b65-46387b1094e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc88aff-3f3d-4026-98eb-433d1c0122a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd865a1b-b0ab-4070-bff2-46d2f7e6f4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da9bdf4-6db3-4aea-a519-7f9fce2c13f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed6deaa-9a7e-4cb8-b3ac-7222a9481b82",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced5467b-9f98-42b3-bbfb-b699e9793ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdd49d8-81bf-4f22-a7de-bbedf7b8ebfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51e0ada-d503-48f7-bc2b-1828f830d2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca70e143-c398-4939-978a-fada469d5c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5babeb2-02ab-4884-9f5f-c7e21bec194b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401f60b8-0b11-4b4a-aae5-29ff4585dd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea9fa03-5c8b-489c-aa8c-22774fd21167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd6dd6e-3d8f-4dad-8b7e-1ff3a64c5dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8569fd4-4e19-4f9b-8f16-89da65cafff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa188a4d-4ff4-4bed-89d0-7ed4598d934d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7226ee2c-00b1-4e6a-a3c6-e8e9765762f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000d54d8-0753-45a8-aebf-f761fd3058a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688763d5-9d9c-420d-a5fa-8019084e634b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebd8164-4d38-4a2e-a117-1c1496560dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a2a898-e9e4-4148-a81e-02e68c07047c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e3978a-8d0e-481a-bf67-3f51983c98d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788e290c-ed70-4ea4-bd31-0eddda1c22d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8239e108-6b6b-47ae-890f-a5490bd8e87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17ea3b9-0474-4aa6-a7c2-c7f5f69729cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f49ba85-bec0-46d6-822b-1e02b02f79c9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a6a71e-ee00-45aa-81cd-bf8738eb9b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d503e120-074d-448d-85ba-4fdd9b29b6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cbcc09-78c8-4da2-8ed4-c43087c4b04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747473de-843b-422b-b4dd-40087cf7c238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268b0ea0-b92e-4ff9-9cb0-0a33e928ef09",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86aecc6-278d-4370-bd22-dcde70e1c4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e71ffd-f5fa-48ce-a1a3-24bbd90a1e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb88b0b-d267-4436-a838-e2c2a18ff312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a12740f-c7ea-4ad0-8202-97bf5d480d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d686f2bb-d653-4034-a9f2-6fb8485e1066",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1ee385-16c0-424b-8cee-39294f2b93ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f09e734-7391-4fd2-b334-be277a354e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabe0be3-c7bb-4954-9513-bdf9e81730e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3140352-f412-41d8-a8d8-3ff2cbf2b4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6f776d-3b54-412e-b066-cb1840b90a06",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9dde8f-def6-4b33-b835-e2ac9d01d238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd48cb8-0a59-4de9-85ff-f6bbc408a8b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b73f92-f9e8-416e-a7a7-49872ca246bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7de81f-1c2e-4d1a-9212-fb512045bb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c44bf7e-ff06-4758-9daf-bf788da39c55",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef9a82-50e8-4314-afd1-d07d91dee4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db23291c-a252-402d-8fb4-f3cca6a11900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d020135-3c8a-416f-88e2-7c2e5684bd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4089b106-6c54-4004-8445-f8696f527236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2164f53b-fde8-4109-b2f1-0ed5346c5a4d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a2764f-2e7e-4d58-a71e-0cd52023a551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d74d897-1b5b-4273-8136-b2e0fb26b4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e888d3-af28-4c18-965f-7fe69e5ea4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2736b713-71ba-4f6c-8cfb-5d321c126a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8deefe2-85d3-4c8a-bf5e-1faf985bb0fd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce32c78e-389d-44f5-91fc-5158e629b02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e396e86-ede7-4a50-b9e4-3939c76cb28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb8baec-e19c-4b74-8195-624570ef0ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6494cff5-c33e-4b0c-b75e-e90fa048eb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adef39b8-ff43-4995-963c-f0f7a3862ce4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02406b48-12b5-48e1-a8fc-6ef0448213a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2a6387-8b58-4091-9b4c-6d77358499b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd1041-6026-4792-8e49-35ae4cda8c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cfe727-a6d8-4bec-ab8e-726657de9f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c70746d-2dac-431a-9c04-f2fe1921a48f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0153cd38-5763-41f9-923c-524a05be2eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ff0865-e865-433f-ac7a-d339528a79e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a745c0cd-6f89-4fd8-8735-667fbbd2af9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7f12d1-5156-4f59-ad00-55eab62d505d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607a790a-53fe-4865-9ed4-a7f809a5354f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e6d668-a0ef-4451-84eb-91dae9f210ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27e41c42-ad8e-45df-a25c-147d66bad525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5930daaa-bec6-4f97-a228-0ca4b5aa7490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad410f5e-3c8d-47ef-ae4c-7632e5412a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bdc86b-10c4-44cf-8e7f-17ad9b032f8c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8407ce-9ef0-46b7-81e1-1f55c6b36c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af349b8f-509f-467f-ab2c-4cbbfd9638b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a623a7-516d-4536-814a-f74a3ace91fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a24708-d846-4ad3-9e2f-583700aec287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4114cf07-e9a7-4728-905d-893cb419dc5c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d88e4b0-fab9-4908-952d-bfc713dfe0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5287c7ef-2cbf-456b-99aa-61eaa07063a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b071fb8d-38c8-4370-b4e0-5d428355cf14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6286654b-1121-4ead-b7b3-7e0818661d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8812bd-f4a7-4348-952d-15aa936806bb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771ffe4a-8cab-4bc2-8129-789c6f50b049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e931c01-7951-4487-a333-00a3ceb38979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05943c2a-95bc-4998-9cbd-2b140a43a30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e33b6d-7c03-43d5-a821-ffdc4112dc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f177a04f-2682-46cd-ae79-ad7e5889fa4e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3b9ca5-0960-4501-a769-a7b232475818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48c5c6f-07bb-4ac8-9046-54f2fe809ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62528a93-26f2-4e2c-b53d-681e0a19b972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89de147-575a-4853-8b5f-0c69579c3d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e39cf5a-a64e-40b8-ba3f-2f07e7217c97",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18f7ba0-de60-448b-be50-64c511837dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eac2779-76d3-437e-8723-175bd4b222c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57901808-438c-4bc3-9d71-2daacfcc8770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e3c38f-bddd-4e60-a910-d9f2640891cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146a3526-f6d9-45ec-93a5-908f01a8664b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc21ce64-8cc6-4e19-ad0d-6e9e1af2c36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c39089-190a-4735-982d-e879d2611c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51d7bb5-b611-4226-9e8c-fb8e2d23ac67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432d9df1-e7da-454b-b3d4-9181dcacdce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128e4e30-5271-4e9a-b8d5-a09317d184ea",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb52253-9b09-4ec6-9b36-7ad3d9cff066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45fa6f1-e79a-415c-b986-526b4297ec27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7be237a-5cc7-4291-be33-6c4b858ba749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a6b344-086b-4239-a784-9604fcf45348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb837d-d60d-4730-8839-89e3f36eef57",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77840e3-c573-432e-b2ab-19e13d04e1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7d58c9-3504-42af-8c0d-e42302301ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e682be01-94ce-48de-bffa-a26099d2485a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f774b72e-6d12-4d8d-9d8b-9a99522a1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064f798d-3566-4e7c-8c90-b5beae849ca5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a9a76-7fbc-498d-a63a-35fe169c5384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e4ee64-0cf9-4f4e-ba9d-d720d158348f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bf5377-d744-4664-bb9b-525a5da38635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c47fef8-7e5e-4b5d-aaf0-35c91bf97f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de69364c-a28d-49f9-84df-e9c608d2ac2a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae7c427-5b63-45de-8fce-8ca356adcae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a2f374-a883-4631-a749-a7b3986b1cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a8a17e-cc54-46c1-b0f4-c0b476fc8324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91a6d0b-019f-4202-9652-ca08732cc69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9a1fa-1e4b-48a2-8ef1-98c4c6f5e525",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64abbaf3-7d3c-4a18-baff-7ceccbd82199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12da8b7f-ffe6-4601-80b4-7ed3043cff5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5813182-f3f2-44ef-8343-251942d65327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f23c24-54a7-41f5-bff9-a3cc9d00b600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ca660c-cf7d-4b4a-9db9-3bed360d5641",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e518d0-ebc2-404e-9018-7e2dadd4d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86d2085-ba6e-44f3-9e51-034a3bd22112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3306b5fd-69d7-402f-9724-aef5b7fd903d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c16609-2f40-4d2f-9ea0-117db3b0907c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492cfd00-4e81-49ca-ae20-1e5e0a0643ad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824d11b2-d5a3-46a5-b8f4-e1afc310b599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce64216-b500-4d39-8684-b705142802ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c081b477-8efc-4556-9083-f517d501a4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0fa663-65a5-4a85-8f37-9e87a67f1b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9afb90d-dfc9-4a69-ac52-490b328772fc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073d8da9-1365-4e4d-b978-5e8567e6da4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731eee49-1bf2-4e4e-a272-053348577804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25746c8-9b3c-459f-b733-d7f91f578615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d54730-a5cf-4fac-b4c6-7d2918dfa7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7ebc20-f099-402f-9d85-fa24aaf0f1c4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46804f82-3085-4b85-978a-450656f9f021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962aaa59-b9dc-4e04-adb5-5c677a1e329e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90cb22d-492b-4e33-bdf0-0d1a1ffa2d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b2bf9a-435f-4c58-a16f-e952dfe618f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3074817-184a-4bcf-b983-ccb9c4bf657a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1d6a9e-97bd-49fc-888f-cd338b099c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a9925c-ba33-4a06-b076-6425d556267b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed69e400-c9a3-441c-99fd-e8f8a267e446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de4b27e-1c3f-476e-bb33-2af2f6d5d4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697b7b29-5c55-407c-b93d-27afad8ef8de",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a26594a-508d-4be8-bb97-bdfc9df60d3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdead8dd-c0d9-4ed1-8389-2af2494ac8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e95c67-fddd-4086-be24-717c1bb75b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcc653d-9dd9-4ca4-b375-6a16719807ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b98d49-095d-4733-8488-e8bcc525ffd1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab158786-83f9-4eab-a7ee-a36df1121e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb78a0d1-1c5a-4ecd-88ea-fca9665ab1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae2f467-d3b9-48b4-9ae4-42d7c414246c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861c73f0-8ec1-4d33-a975-997711dd4c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861c0a70-c075-41a8-9819-a73bcc4ffdad",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5124eca3-c856-41a7-999c-b137b85bef95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e104ce9-8a79-4810-839f-dba5f6cae3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd27bdc0-02bb-48d3-8ac0-1509cc7934aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e52008c-0224-4006-9692-3f25d037757e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7b9619-019f-4b4f-ad55-7a8c617cc5d1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85c73e7-f805-4fcb-9735-2c67e3c756c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0384122e-8cd9-4991-8e76-dc23029bd9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301b9609-4330-457f-a14b-6d9b0fc27b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3773d60-1045-4b8d-9e68-67b68ccf3468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8422fd6-dde8-45dd-a851-48e2ecd86f4a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5228bb73-d942-49fe-b62b-f63345860441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d495bfc0-2bbd-4595-9d5c-f8ce2736c036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6871b001-90c5-4089-8d72-895576b102fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3b6988-34b2-463a-9be7-212f3fbb4f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a731d012-042a-4ce4-b995-aba1aa162522",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb434af7-f461-4b5d-8f59-d177f61b00a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f060b1-fd5e-47d3-b7bc-61a82e34e152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7873a0-4169-4978-bb30-b099a8c31556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b69de3-3464-474f-baba-a97d03f0c819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9010bf-6386-4bb9-9764-6bb32c2cf9ae",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cbd3d8-1ed4-4103-915d-5a88c010d5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277d4c5b-3562-4319-b696-8158293ff476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9da4616-2656-4a58-b19f-022d101cb2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a483f9-c0e8-43c4-8b3c-4a2033509b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcc75f4-c0d9-4f55-bee6-c208b2e63841",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c1cd7-d4dc-4545-9764-b84b5ef7234e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2bb31f4-a682-4a72-b4d0-c8f0a23d3cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e623e624-f1b2-4afa-82c7-925f45e0b79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da2c298-3e04-45c3-a164-d4b99f2474f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42656d7-a87d-4b44-a4f6-9fae41b31d3c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8cccf3-450f-48b4-ba54-001f218f205d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d52825d-0790-49ef-924e-fe7f57b8d860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4bbdcd-b064-4ba3-adeb-011290899c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ca06cd-7ee6-4f47-8acb-bda1adb122ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f505c0-2c6d-4880-987f-8e92053feed1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4e261a-5937-4c5d-8f02-6697dbd0cde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60778d31-ff38-48b9-82c0-4838fca80188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c9107d-1328-4c26-9a7d-19e1e1803961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fd6a69-a218-48f6-b7a7-2749e9680610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182e3b48-fb99-45b2-8f55-63ed03a28100",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80975ab5-ce4f-4eb7-8080-59cc6a072507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a87b4b-4ad5-41ef-bba7-c59da15e3c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda633e2-362b-4560-b7af-c85227d3e0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1054e965-2151-4c95-a3e4-1bcaa569dce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e237c3-ca70-43f3-8154-5cd61de70a12",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310d7e05-f5fb-4d6d-8511-0b94f2f8e678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f263a62d-8660-4d66-8c5d-1a1eabdea18e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2dff8a-dc8c-48d1-a2fc-32ee146f2663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631db1c7-f77b-4c36-8a9c-856ae959bdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ddb7ec-5caa-4225-b098-5130294941d7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72ba151-e556-45a2-9951-060a0f248b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062abf15-dc96-4a2b-9cc0-6b1db1d963fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d4df27-55c1-4e44-8e05-6d176e8c786a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0078da7d-ba47-4a8b-95cd-f6459ae692b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9417bae8-de5b-4909-9bc7-48ebec5ac51f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04823b0a-029a-4f74-b228-c45b048d0f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d57fc239-343f-43fa-a61f-c8b99184707a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f917cfc-f300-4af8-b8a3-61daa1488a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27130334-71af-425c-b48f-7d9f99a35952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a2964b-a8ce-4076-8820-c2e436ed2fa4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5481a-fa29-4a41-9e0e-e9bbcc639b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a490aca7-94e4-458b-a94e-9f943da0e309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c52a18-5d18-4a00-9888-3d86e52c5ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa20334-e812-4c83-83ed-f4eda0fd418b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdbbf7b-0f5e-41d1-a1d6-03802913b302",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ce328f-39bf-4647-b6f1-710f278d0a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6177bdd-8a62-404d-ac4b-4ca63433fd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91ef6dc-23d3-4a80-9e15-7bc06aaf069c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ea7b9c-d07e-4983-84dc-5f8ad0c3fe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c988ec-28d9-4797-a6b6-4641b54a8160",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2800f33f-708f-498b-aeb1-c104dbb2f656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2069617c-f105-402e-abdb-43b38b3392bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91430c0-eb59-45d8-9eaf-a7e643a1e1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6dd449-42f1-4e91-89f3-d0c8adb052de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1f85d0-7c31-4986-9911-80b8e611657d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbedcbba-0abb-41be-bc10-bb9b791ea401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32256f2-c129-41d9-b708-de17c8c64216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31201d01-4167-4e5e-acf0-a95eba5fd5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f4d7f6-42e5-4b03-861c-8431cdb20610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00f0876-1f8e-4cd3-957a-a60092e01657",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8836ab-f913-4c4c-9c08-564e303b54a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c38c10-2a1a-411e-8e52-dbd7d9e1ec56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f7bd7f-53ed-4073-97d0-3601d6b7c2db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16529e2-c7fd-4d97-8222-f296566833c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6502b189-4f01-496b-b0d7-77ecb387677f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d84230-10be-4996-972e-3549f7210b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d406a4ce-5de2-4469-a1ca-534a8f4cb81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e5c46-df01-4d57-9bda-e2e94ce6e260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce12a3e-c4c3-4f9f-951c-4da197b00726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b240981b-6407-4f72-91e2-ad7f6c658735",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f46d07f-d3bd-4ad6-915c-197bddc6a239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7538c486-ce7e-43d2-95c6-3444443511ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa2447d-eaec-46b6-b98e-bdd60d1d78f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e771356a-e770-4ff3-a882-8aaebf0f6070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6f1588-ef28-44eb-a1a2-94643b6cb8ca",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8d8726-92c4-4e36-9090-3e60cf5f71f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3949860-0369-44a0-bf49-a271c6fdc36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7a45a1-b081-4437-860d-cc1fb61b1dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b7f4569-9912-413e-8680-9a47ec89a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7ef5da-9a92-48ab-a087-f039f9f15578",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774a08bb-f1a1-492e-8258-f6c1a09e69b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09436cec-bb23-4706-84d6-f0bc2ef2a397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a468de9-532a-4b36-911f-84a96bb09134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e2b65e-c802-40be-bef1-9373e9c7a406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51ee86e-4b19-4654-af84-f7697e5513c1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66c6f18-8b30-46ee-921d-77ccba1cb0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d5766a-a264-48c4-b3b0-cb0fc85724a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea265b6-823f-4e26-93db-5cbcbf1d6ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6d956d-3c22-48d4-94e0-a3fe2ac26fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999a4076-103d-49dd-805b-6f3f782561ed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91837ac-e53b-4e85-9cd4-eb6ef8bce94b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493d812e-66d9-434c-baa1-d553eb2cd9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c723f89b-bfc0-4d36-90f3-7d0ab58c99ca",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69d4a85-6bf4-4b97-a3d8-203ea6d967fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a2181f-c14b-4dfe-afae-6df887eb122b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35269333-494b-4dca-8196-fec44582785d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f91ad3-ad92-43fd-b151-f62589db4db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c593840a-ee5e-43e5-8f8a-e277bc317917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab21772-7180-4351-8d46-98e9755c2c70"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3c0aaca-4d8c-41f2-a648-5fd5139354b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1f7ff75-7e20-4caa-a7d0-f71c18664d1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e6e22f-8920-4d34-8d2a-61d1305b8a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e003897-2662-4250-80c3-ed926b1eae32"
                    }
                  }
                ]
              },
              {
                "id": "bfd40378-2b75-4b37-aecf-a63bc4d67b99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f85cf29b-094f-4e5d-98e6-d86c513a1c1a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f51c961-4cd0-49fb-98a9-aae1584e3470",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6c1b9628-1d9b-4c94-9ab7-c2564469dcc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc23f05-914d-498d-9d37-2133c32638b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb0664b1-cc1a-4023-bb4d-f5c9368a8647"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b8df8d1-f7ad-45fc-bf90-61b3c4cf6049",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c61eb8b3-14af-401d-98f0-b079cbb4da31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7acdd295-57da-4d49-9a15-147d2b58b167",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0684fc-99f7-4c7a-8b6f-ee9a1cdfbb9e"
                    }
                  }
                ]
              },
              {
                "id": "427db684-95a4-45ab-acc9-257db5fcea26",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "99466ccd-cf09-4d58-9ba1-8aeb4403bbbf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e497b8-3662-4926-a037-ebdf621fae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "92da04b4-c2e4-4297-9648-cb7797e316af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9eea75-1e8d-43c4-b293-16ab08cedb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e60dfe1-49b9-46bc-a9be-778cb6f7ee09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a0e7a32d-964d-4dc6-a3a5-35a6ddc13c6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e894eb75-56cd-44be-8cb4-7660cfc77208",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ad0aa5-8a2d-4da4-93d9-68977e4d7528",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c8a92f1-0d3b-4df9-bbb5-7fccd7e04cb6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "629a4fea-e339-4a0f-9f9d-ff4d46375e1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8aa7c14-8620-4565-92b6-ff0951f5c149"
                    }
                  }
                ]
              },
              {
                "id": "f4bf902f-a99a-44db-bf0e-70a15232db3a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42599a86-df81-4921-8a37-17e107058c2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "04fb9467-e0d4-4e6c-9e9d-61d4145b6b7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7309e9ff-d2f2-45b5-9de6-0b56bd3b8cfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be62d9ec-ff08-4b21-bd85-1110fc57b271"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf1f94f8-6afa-476b-bdd0-8119ff6cc0c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c602c948-3cbf-404e-a266-c915013fb6f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94ed4020-e82e-4375-b234-35f6a8c755e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab7d80f3-6341-41d0-ba96-ba3c3d44bd15"
            }
          }
        ]
      },
      {
        "id": "aff1840c-2cf9-448d-9088-6b4824d53485",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f6bcc8e-7833-4fd8-8f15-e20c405701ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7535f07-e961-4ff2-bf4e-7676e8e33295",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55e2a452-b95a-4aec-805a-e979cc706aed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7811c797-e263-4469-b910-60175c2e9e5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "947f5d70-f7ec-4c94-bdc0-aa90857a90ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77a86d9-e63a-4922-8796-d1558c3d1f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11a198bb-233a-43c4-9849-7567fbe6a4bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc64f5c8-8573-4008-99e0-b378ff471836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19414db7-d36e-41fb-a32e-80f3ddbb5f69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5ea69e5-981a-44f5-936e-8f2d8fa6d55a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ce81799-56e2-47a7-9158-3c5f2ad6c42b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fa1d73a-d6b3-4d3c-a950-e8cba2796ea7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5e7793d8-20d1-4af3-9dd7-e3b59845f905"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4dbf59f5-5630-4455-9a88-de744c4b8d98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69173bbf-24ef-4369-9ef8-ba9176ec2abe"
            }
          }
        ]
      },
      {
        "id": "4ea4f2f3-317c-4aae-8a0c-6d324cc168a1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "413790dc-ceac-4757-8d7d-ffc560287faf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47e4bf2e-e891-4b05-ad26-11988f521374",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "573550c6-bdd6-45ec-92ec-a08861434801",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4ad0ca-99c0-4964-a60f-3027709f9307",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a82ae9fe-c253-4d2f-99fc-9b7a08c273b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fde401-e18e-4dd2-a536-dbe3745f8209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f65fd5e0-ed3b-4092-87b7-fc1ed3e6d198"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86e40476-109a-4e71-8b38-f9f85e3c3e82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0956b3d2-b4e6-445d-a2a3-d8c9ceb485e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b5a8323-b200-4516-b46d-0117ce101657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd37eba6-0560-49f7-93d2-07e2dc4e5f8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86af934d-c761-4463-a691-ad4a1cc5c772",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "525c87ca-322d-40ab-ac3d-91b89c297686"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77d14526-c297-4c0f-a62a-b3bbd16d324f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b79b91a9-8da6-4bbd-a96d-778568450d51"
            }
          }
        ]
      },
      {
        "id": "6f55ae79-6df3-4d2d-827c-77f9e2326b7f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "39a056f4-d780-4fbd-af15-517e5763a559",
            "name": "Negative Testing",
            "item": [
              {
                "id": "568e7926-1147-4d3f-b68c-1f3d6cd0b263",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4c5569d-6046-4d87-a1c4-c6626b0c0457",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9c7045-957a-4afb-9439-68613922b4a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2e47425-6f18-4e14-81ef-2274e1cfd8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35ae112-1fb5-45de-8ae4-5b62049f58dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e286351f-8047-4a7c-92ee-3d36992fc33e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dc1de93-0fbc-48ef-aa36-de423b8b6138",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2648ec3-4e80-4086-8953-4583b133b54f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5951a1f0-914e-40b9-8aa1-86a1bb118632",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "754fc07d-9e9e-43a8-8132-580f0064fa45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aab653e2-e53b-41f4-b76e-f7c5599bd711",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "826aef9e-efbc-41bf-b9c5-7a8a5e8606cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "022c5731-2228-4a4f-bb5d-46e92743bd46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dcfacd2-c938-4bba-a38a-45f17c6b85ad"
            }
          }
        ]
      },
      {
        "id": "cbfd82ea-17aa-4af1-ab6d-8a849f614599",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6f0cfb2-315f-47aa-99d7-b1a0305fe1e5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "282502c6-629e-4d1c-baef-c5be48022bbc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "65245380-1081-4446-a1d8-50bfc0b7179b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79eb25db-7f37-4599-8cb9-facd9c508d1b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6832b896-c4ce-404f-8302-a92c090144fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.69473684210527,
      "responseMin": 20,
      "responseMax": 10029,
      "responseSd": 631.9692931750388,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711153993848,
      "completed": 1711154041052
    },
    "executions": [
      {
        "id": "ffd7014c-ec95-4aef-a2de-578e96f403f3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4baaa9c2-7553-4745-971e-9666bc429164",
          "httpRequestId": "44184219-75ff-4a5d-a138-81258b6a7815"
        },
        "item": {
          "id": "ffd7014c-ec95-4aef-a2de-578e96f403f3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0a9c29b0-76e2-402c-bdbf-aeb10a257d65",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "8002a752-e265-45b8-a645-1a741571accf",
        "cursor": {
          "ref": "6cc3bdb0-cef8-484e-93e9-c892eafd3b45",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ef0e191e-16ad-46fa-9aec-9c5b63bbc36a"
        },
        "item": {
          "id": "8002a752-e265-45b8-a645-1a741571accf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6315ec99-1759-4290-8cfa-7d767b016c64",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "768c4413-939c-4e24-8a88-bd36ad5777d0",
        "cursor": {
          "ref": "7a2969af-7e91-4af8-9021-84204101e876",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a7b571f0-7346-41e8-8f9c-89c644b4a687"
        },
        "item": {
          "id": "768c4413-939c-4e24-8a88-bd36ad5777d0",
          "name": "did_json"
        },
        "response": {
          "id": "bd279c47-b473-467f-b5f5-f421ab92c293",
          "status": "OK",
          "code": 200,
          "responseTime": 447,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7f34c1-bbcb-4233-85ab-2abcff034135",
        "cursor": {
          "ref": "3110f025-eccb-4e41-8163-20922440dc8e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee08c3fa-7c01-4a39-b0b5-419e09f5f219"
        },
        "item": {
          "id": "0d7f34c1-bbcb-4233-85ab-2abcff034135",
          "name": "did:invalid"
        },
        "response": {
          "id": "ff6d035c-20cf-44d9-8e38-f2e60b6c1563",
          "status": "Not Found",
          "code": 404,
          "responseTime": 472,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7f34c1-bbcb-4233-85ab-2abcff034135",
        "cursor": {
          "ref": "3110f025-eccb-4e41-8163-20922440dc8e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee08c3fa-7c01-4a39-b0b5-419e09f5f219"
        },
        "item": {
          "id": "0d7f34c1-bbcb-4233-85ab-2abcff034135",
          "name": "did:invalid"
        },
        "response": {
          "id": "ff6d035c-20cf-44d9-8e38-f2e60b6c1563",
          "status": "Not Found",
          "code": 404,
          "responseTime": 472,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acff7b14-abfc-4a25-8620-0100f6eb994d",
        "cursor": {
          "ref": "0c2e5109-6feb-4601-a07f-09bcc77a781c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6dbe79ee-1a08-49c4-9fda-ab281ac526fb"
        },
        "item": {
          "id": "acff7b14-abfc-4a25-8620-0100f6eb994d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e4063ffc-630d-43f9-9f93-9e1bd122470b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05db665-2238-4c75-a5d1-4293ed104fde",
        "cursor": {
          "ref": "361cb636-d437-4191-b55b-50f14e500d98",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5fb3711b-7081-4cf3-a086-6549d6dfb202"
        },
        "item": {
          "id": "d05db665-2238-4c75-a5d1-4293ed104fde",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2e175be2-28a5-4f73-94e7-5225bc0279af",
          "status": "Not Found",
          "code": 404,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bde608e-db34-4594-aa00-502db6efe76c",
        "cursor": {
          "ref": "a90c440d-523e-4d75-9f87-a0614ebd3334",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "801fbcb1-c588-412b-948e-1189c3bdc625"
        },
        "item": {
          "id": "4bde608e-db34-4594-aa00-502db6efe76c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7ec4680f-582d-4557-a496-05f28d2c9f56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32527990-069e-41c9-98f5-2d26cd08f7db",
        "cursor": {
          "ref": "59bbfd19-8c96-4247-be4f-827912f6efd6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "29ce1bfc-69fd-48ed-9911-9f0a01438756"
        },
        "item": {
          "id": "32527990-069e-41c9-98f5-2d26cd08f7db",
          "name": "identifiers"
        },
        "response": {
          "id": "174506b9-5845-44a1-bdfd-1a156230e736",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7f39c5-a978-4af5-ae1d-5c097d83a5df",
        "cursor": {
          "ref": "8ba467c5-f50c-451c-b382-ad369f27bd8e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d896336-5146-46d2-a6d9-d3a29908b401"
        },
        "item": {
          "id": "7d7f39c5-a978-4af5-ae1d-5c097d83a5df",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6eccd4f9-2989-4358-8947-091cc9d82452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf61ead-6275-450e-b5c1-194335d9c25d",
        "cursor": {
          "ref": "f68e50d8-713c-4ff4-b65f-04a0af847718",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d2d352c7-1df3-4779-8e84-c24b49fed3c6"
        },
        "item": {
          "id": "aaf61ead-6275-450e-b5c1-194335d9c25d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a96089a8-e79d-42a2-8846-b2e55f9f3e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966f5a1a-943b-4558-8101-bd3ba5a0be42",
        "cursor": {
          "ref": "9d76b271-669e-4345-9825-a1351901f513",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ffb71059-8271-4b81-9a14-f4be3ff5fadf"
        },
        "item": {
          "id": "966f5a1a-943b-4558-8101-bd3ba5a0be42",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5b6115d4-36d1-4b4b-a2a8-93dc52ad59f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3de4c74-5b56-4712-8f75-2abcdd1afbca",
        "cursor": {
          "ref": "0a097b22-9ae9-4925-af48-8144d9777638",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4c162a02-1433-4bfd-9919-e4b38d73e54a"
        },
        "item": {
          "id": "b3de4c74-5b56-4712-8f75-2abcdd1afbca",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9bf2d34b-2054-41b1-8ab8-abc6c21460da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024b2e99-02db-49d4-ac8f-4fe447591cf0",
        "cursor": {
          "ref": "276417e8-db10-49b6-b679-78f26394caed",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8f368bc6-00a9-4a26-8adb-055fb80c8e0c"
        },
        "item": {
          "id": "024b2e99-02db-49d4-ac8f-4fe447591cf0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "10e30b9d-036f-4004-b9b1-923ae57fe862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1180bd4-22f5-490b-9038-2fcc167f045c",
        "cursor": {
          "ref": "70c53537-7143-4b0e-b252-fad7b2b4ba87",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99e5bd1e-bb3f-4317-8a75-578bfd3250a7"
        },
        "item": {
          "id": "c1180bd4-22f5-490b-9038-2fcc167f045c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "75ebd57b-0177-4fe0-a99c-5199b7449e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364f9a7f-4dbe-4630-b182-a8f89fa77f4d",
        "cursor": {
          "ref": "5913cb90-66a8-43b1-b74c-e9e5466a9f2e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "51fb9d17-cff8-45db-9a17-f1cb610392c9"
        },
        "item": {
          "id": "364f9a7f-4dbe-4630-b182-a8f89fa77f4d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "70a26242-b666-4ea7-9c02-c4e9423fb6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1970db56-1719-46e5-b4d4-6e25426a39d8",
        "cursor": {
          "ref": "570dab8d-ba77-4cd8-aaca-de5369c799cc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b3a2912a-5c50-4d14-95c1-b9107a606f34"
        },
        "item": {
          "id": "1970db56-1719-46e5-b4d4-6e25426a39d8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "047c772c-5a15-4c0e-b972-f2d4afbf21b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46a5132-2932-4478-9b7c-354bc8003f02",
        "cursor": {
          "ref": "605368e3-f6d0-4df3-9ee7-378482e1442f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "332fe803-d3da-4658-8ba7-6b7beb5cff39"
        },
        "item": {
          "id": "f46a5132-2932-4478-9b7c-354bc8003f02",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f4d6ae36-07cb-47b0-ac55-6162aac52f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc0291-2c0e-4486-af17-708d4d52ef5a",
        "cursor": {
          "ref": "6384d6e0-79c7-4fa5-b67d-cda3d2d081ee",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "194ec3a7-6f70-4043-a27b-241d46afef06"
        },
        "item": {
          "id": "3bfc0291-2c0e-4486-af17-708d4d52ef5a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6ab39521-f297-4d03-a997-f0935294be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582e9300-87e9-4405-8c16-e372c01d8c85",
        "cursor": {
          "ref": "20f315db-8b47-4406-a066-047f3333088f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b529c538-f1db-4c57-9697-50e878eb9ac5"
        },
        "item": {
          "id": "582e9300-87e9-4405-8c16-e372c01d8c85",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fd158662-69ed-44c8-8a11-6d2a515a21f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd17a6f-0a4a-480c-aef2-60651b121ff7",
        "cursor": {
          "ref": "d43c8947-eb3c-4be2-b6ee-aec75d7f2a5e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0e337002-67cf-4e64-a246-019fe5f14368"
        },
        "item": {
          "id": "3cd17a6f-0a4a-480c-aef2-60651b121ff7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9e6c0901-fba3-4cd7-8b3d-c4cfdcf640c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3cec88-630a-4edd-82d2-f9208997f630",
        "cursor": {
          "ref": "1acf1319-58eb-4398-8bd6-cede9bfd541a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "06754661-3431-4e91-9d7e-d550e7256977"
        },
        "item": {
          "id": "4a3cec88-630a-4edd-82d2-f9208997f630",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ea4a5b84-31c9-4dad-b10d-48d8d27f46e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6adb6b-6f64-498b-9f78-cb6698dcafb7",
        "cursor": {
          "ref": "ea992e46-77d5-42dc-9920-9474a7015454",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1de48341-a56f-4ed1-a1ce-1d8b67170ee0"
        },
        "item": {
          "id": "bc6adb6b-6f64-498b-9f78-cb6698dcafb7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "83473927-080f-47e3-bb54-a52d77bdc814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a110f2a-f8c7-49b6-abcf-c1d16fadc0f6",
        "cursor": {
          "ref": "153619e3-ce4b-4704-bd25-0bf7e9c3dc5d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "31bf3421-3775-42eb-8d4a-c6c297cf1b95"
        },
        "item": {
          "id": "7a110f2a-f8c7-49b6-abcf-c1d16fadc0f6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1e78235a-cecd-4ea7-9adb-697ae4320389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8733210-759d-4077-ad5a-157115e8bd4b",
        "cursor": {
          "ref": "d34ac105-66a0-4713-add5-73bc581ab0fd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "15084577-5167-45b8-bf5d-bae5c9971f35"
        },
        "item": {
          "id": "a8733210-759d-4077-ad5a-157115e8bd4b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "757b0088-864c-4cb5-8679-2ded1284cc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4616dce-a948-4b57-bc73-5c3c55d452be",
        "cursor": {
          "ref": "db2fc2f4-f236-4f8c-8fbe-27abb736ecfd",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "54c78518-75b1-4d4c-8bdf-8f1ca0073750"
        },
        "item": {
          "id": "a4616dce-a948-4b57-bc73-5c3c55d452be",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7c7585be-329b-4a1a-b26e-fafe9d5abce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937e5fd8-0903-4a55-82ef-213732662439",
        "cursor": {
          "ref": "aaffcb63-6139-4ea0-9c02-53ad463142db",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1f13b8f0-c07f-410a-9056-f7f624b894a6"
        },
        "item": {
          "id": "937e5fd8-0903-4a55-82ef-213732662439",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6944d7ee-6e75-41c3-9276-86e1f2156b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a61439-3ed9-47a7-a02c-640ad0d7c02c",
        "cursor": {
          "ref": "a00f55b5-d7b6-418c-bf79-130d1fea9ba3",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7f1d8116-09a2-4481-9fd1-8162c0f619e4"
        },
        "item": {
          "id": "87a61439-3ed9-47a7-a02c-640ad0d7c02c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1a048d28-5db8-444e-9095-e0dc692624a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f3882-31f5-4569-85fe-f59cdd1dd925",
        "cursor": {
          "ref": "7bd5cb5b-a7f4-442e-915e-68e620ae14c2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "05626bb5-ceff-4b72-a3dc-5ac20d218325"
        },
        "item": {
          "id": "319f3882-31f5-4569-85fe-f59cdd1dd925",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3b889187-7bfe-4e52-9cf0-e267ea20e4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7ed961-8bee-4795-8c9b-2c4257caa399",
        "cursor": {
          "ref": "a5233988-a0e7-4c37-998e-04b1c085d963",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d960e787-8477-4823-b4e7-29390e12eb2a"
        },
        "item": {
          "id": "9d7ed961-8bee-4795-8c9b-2c4257caa399",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fce06c6b-17b0-4fa4-ade0-bea78f4d6037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08424255-9692-421b-a47c-b5941186a569",
        "cursor": {
          "ref": "3fba41c0-cd84-4ff4-8c91-8517b0bc3740",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "80aa155a-d4b8-41a2-8c5e-631986ec9e58"
        },
        "item": {
          "id": "08424255-9692-421b-a47c-b5941186a569",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fad9a5ea-9400-4d5b-833b-02794eecda67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aeb604-d87a-4209-b794-06f7b3ba1583",
        "cursor": {
          "ref": "186e5275-3bd7-40cb-a230-78cb1e0b4a50",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ca4b2b77-2884-47ef-a17a-eb323a7124a2"
        },
        "item": {
          "id": "b9aeb604-d87a-4209-b794-06f7b3ba1583",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "99aeb901-7c13-4bb3-b0ca-d68d98baa83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fdfafb-3272-4759-9688-a184b6b77ba2",
        "cursor": {
          "ref": "f753261d-3d1e-4aa1-a4a6-3f6c9535cd08",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "379884b4-af3b-490b-82b8-cebf49e6c019"
        },
        "item": {
          "id": "e2fdfafb-3272-4759-9688-a184b6b77ba2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5036ca4e-2647-4cd0-ad80-718e50f4fb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493ec76c-f1da-4184-ae0d-67b69db6bc46",
        "cursor": {
          "ref": "c87439d7-2309-4bce-876e-d39296b18b74",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "63bc0985-9232-4d8f-8a98-1b3a69f1e583"
        },
        "item": {
          "id": "493ec76c-f1da-4184-ae0d-67b69db6bc46",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "685f8587-97ca-4835-9729-fe3a772cb1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653daafb-8818-4aa6-aa64-91aa626b74a8",
        "cursor": {
          "ref": "4fdfdcea-bd0c-4cc5-8df7-f1755ace5cc8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ebcd7a5f-568f-4852-8ea7-843a71893650"
        },
        "item": {
          "id": "653daafb-8818-4aa6-aa64-91aa626b74a8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e7eee485-4a00-4d33-80c2-66e9f7a72a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14c80e1-b88d-4ebf-a915-b093cb5417eb",
        "cursor": {
          "ref": "ddec9d18-3c71-417b-bd95-3486ef4df596",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "955116ac-2a7a-49f2-8f5d-18a02a4832b9"
        },
        "item": {
          "id": "a14c80e1-b88d-4ebf-a915-b093cb5417eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d53d836-310c-4016-8be2-306666c8054c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00adf530-20fe-467f-8fbe-fb731b3375ba",
        "cursor": {
          "ref": "e2570381-ec6c-4b51-a0ab-7486a3b60555",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "39ce4d48-9836-45b4-b5ba-9768a1f51f64"
        },
        "item": {
          "id": "00adf530-20fe-467f-8fbe-fb731b3375ba",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6f2aefe4-bdad-44c4-b6f7-2c75952386c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbf539b-6ea8-4ccd-b764-2fbc1086c78d",
        "cursor": {
          "ref": "edd532b2-848c-496c-8a3a-bb19fe93e59c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e2d1905f-cac0-419a-9d82-09e556f6ceec"
        },
        "item": {
          "id": "7fbf539b-6ea8-4ccd-b764-2fbc1086c78d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "62990ee2-35c2-4a1b-827d-9f0c93fa0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3d7b63-fa0a-463b-b956-3a90f01df32f",
        "cursor": {
          "ref": "88685c37-c791-4525-a7ce-3e66f0049506",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "783ea0bd-8411-45b7-a395-86ee1b9620c2"
        },
        "item": {
          "id": "3f3d7b63-fa0a-463b-b956-3a90f01df32f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d4b687c2-eaa9-45ae-8e63-ff977587e3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9013a2-9712-417d-a1ef-323168f17577",
        "cursor": {
          "ref": "c07ccc3a-0c74-43b7-b93c-f92b5250102f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1872139f-3d25-4338-a46b-c81b5dbc93a7"
        },
        "item": {
          "id": "fd9013a2-9712-417d-a1ef-323168f17577",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "331cf02d-fe6b-42fe-a949-2709e012a41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb168258-518d-446c-9f90-7c831e05bc76",
        "cursor": {
          "ref": "ce04da09-d579-4c80-bdcb-9a8ce0cae2b9",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2600eb64-5071-4e26-a319-602c50a643e9"
        },
        "item": {
          "id": "bb168258-518d-446c-9f90-7c831e05bc76",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a740434f-560e-4842-bbfb-737a88398b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d742a25-03db-4241-887f-1c0677c1bba4",
        "cursor": {
          "ref": "6f382e47-795b-4151-b94e-68846538d23c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "695125ee-9979-4586-b810-9d8ceb523761"
        },
        "item": {
          "id": "8d742a25-03db-4241-887f-1c0677c1bba4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "47c555d1-797f-471f-ade7-3204d490725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae67e9-c61e-47b4-8ebb-ab6fb33012b7",
        "cursor": {
          "ref": "b3faf7b7-fa34-483b-9540-eb8f7c76c271",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c1853e0e-1189-4d25-a270-17b00e7c5d6f"
        },
        "item": {
          "id": "92ae67e9-c61e-47b4-8ebb-ab6fb33012b7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "409492bc-834d-4a4f-829a-f2dbdde2bf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad58f16-2702-4ae7-9eab-d72798e69f12",
        "cursor": {
          "ref": "38160dd7-6117-411b-b558-4b095ca02721",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b045a7b1-60d5-4c76-b2c8-5efe0f644fec"
        },
        "item": {
          "id": "1ad58f16-2702-4ae7-9eab-d72798e69f12",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9e94128f-93b7-4db3-90fb-e0bca8992f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78be464c-3e2c-455b-bb26-2bd7d21225bc",
        "cursor": {
          "ref": "5c1e6812-4108-49e8-929c-195b5ac39aff",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "66ebe113-5e86-407a-8874-14f1c6c506f1"
        },
        "item": {
          "id": "78be464c-3e2c-455b-bb26-2bd7d21225bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d415ef89-799e-478c-873f-0bc3a8805f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2be7311-2a87-4aa0-be9d-10c4adce34b5",
        "cursor": {
          "ref": "0961ad8c-c268-4f98-857d-53b90aac5166",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "84f6621e-db2b-4bbf-baf5-448e3e4136fe"
        },
        "item": {
          "id": "e2be7311-2a87-4aa0-be9d-10c4adce34b5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fb401293-3b5f-49ce-a3d5-79276950fc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a88340-7737-4dd0-ba8e-5e5967472161",
        "cursor": {
          "ref": "4b8deb00-7711-4a5e-b705-297bc09c0130",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "59052d3f-7c11-4f9a-9e68-8d469d104f9c"
        },
        "item": {
          "id": "43a88340-7737-4dd0-ba8e-5e5967472161",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6e3739c9-e286-4842-8c18-d7339d6b34ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e8caa3-3d52-429c-b7d1-284a7f2bd887",
        "cursor": {
          "ref": "4badd4b9-39ca-4433-b48d-9b64d60e253e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d0692be8-6768-409d-86b8-0d41fe214fcc"
        },
        "item": {
          "id": "17e8caa3-3d52-429c-b7d1-284a7f2bd887",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4033efe7-216a-41c9-b52b-6d10385a4559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068969f8-f688-430b-b362-35eaf1c0191c",
        "cursor": {
          "ref": "8231ea82-9daf-4fb0-b053-9fc689ade260",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "30c930a5-809c-4f8b-8b23-6261084c9fa5"
        },
        "item": {
          "id": "068969f8-f688-430b-b362-35eaf1c0191c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf1b008b-88be-49bb-a806-d283f726cd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cf951a-d457-45c6-b2ac-bc7eca963460",
        "cursor": {
          "ref": "0256a8cd-c9b8-4b84-9320-3fd80cc41207",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "227dcab1-dacd-432e-83d9-d2b8071c50d9"
        },
        "item": {
          "id": "18cf951a-d457-45c6-b2ac-bc7eca963460",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88f24b37-b4cd-45aa-95fc-0230c45cf3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a698359-75a9-457a-bb07-9c3d020aff4a",
        "cursor": {
          "ref": "db95b7ff-a0d8-444c-9d29-7d3d919cc3cf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "03f8d80b-1804-4347-9121-1b64f5b99e53"
        },
        "item": {
          "id": "8a698359-75a9-457a-bb07-9c3d020aff4a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aa5d1a2b-dad5-4245-8dc7-68f9d386af6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0cfb0f-ff53-4272-bccc-7cbaa856666f",
        "cursor": {
          "ref": "19702be2-0eca-4908-aad8-bd95fd79f264",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b1fb6bb1-905f-4bf3-aa18-762b1dcf3c27"
        },
        "item": {
          "id": "0f0cfb0f-ff53-4272-bccc-7cbaa856666f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "80e633b7-93e9-417c-85e0-b0406c0f2320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d68d020-ec1e-4891-a147-195820f9a9ce",
        "cursor": {
          "ref": "bf3f7574-354a-423b-a238-8e5d3f43d326",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f84548f1-3a6c-4672-943c-49451c269e97"
        },
        "item": {
          "id": "1d68d020-ec1e-4891-a147-195820f9a9ce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5e2fa766-7a70-47cc-9e01-7299b194176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe5de76-2ff4-4984-940f-194d21474f4e",
        "cursor": {
          "ref": "619de230-90d8-4487-a869-e551e1d35b59",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e36563f3-831c-4603-8458-c74709eeb8cf"
        },
        "item": {
          "id": "bbe5de76-2ff4-4984-940f-194d21474f4e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad7b4168-f23d-478c-9b50-b165807db977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654ac41b-b3bc-47e8-baad-4ec08c50e22d",
        "cursor": {
          "ref": "ea3c6f47-3ead-4d98-8fd8-8151d0d4f00e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "50feca1a-92b6-45bd-9922-ac88321a0890"
        },
        "item": {
          "id": "654ac41b-b3bc-47e8-baad-4ec08c50e22d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a5c593fc-de11-407a-ab3e-1fd258d5215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf889681-577f-4d0a-98db-50a0190d93ca",
        "cursor": {
          "ref": "d02f118a-d890-4941-829a-8c52319ac695",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "115f00d0-e289-49b8-a7d2-023c68204142"
        },
        "item": {
          "id": "cf889681-577f-4d0a-98db-50a0190d93ca",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4146d8f3-c4cd-4871-a9f8-b1062b3edbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa022e1-032c-426d-b5cf-8aed643a0848",
        "cursor": {
          "ref": "36703dee-c125-4b12-8469-0fefa9354816",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3934d9ca-414d-44d0-bb26-e9ff38ad1d6c"
        },
        "item": {
          "id": "0fa022e1-032c-426d-b5cf-8aed643a0848",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c104c8c0-bd9f-4392-a0a3-549aa5f0c860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe1e73a-57a8-4b6d-a92c-a9db4d025518",
        "cursor": {
          "ref": "258ec222-3d9d-4485-90a4-c5e5339f88f0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "759b0a10-3ca9-42a2-9b1e-8f65cafad0e2"
        },
        "item": {
          "id": "8fe1e73a-57a8-4b6d-a92c-a9db4d025518",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "65772c3d-9270-487a-aecc-972c12a0238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b5d27-a186-4d1a-9ccb-f589e28d308d",
        "cursor": {
          "ref": "d73acb29-a485-459c-a2a7-1a60c8ace318",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4bbfe3aa-8f56-42d6-93f6-11481d915765"
        },
        "item": {
          "id": "e25b5d27-a186-4d1a-9ccb-f589e28d308d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e5e79994-9fba-462c-a845-01221c56f759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac780807-d903-4b0d-940b-af29db146554",
        "cursor": {
          "ref": "944bfae6-9a11-4aac-a02b-70faf6f7f635",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "590c4ba6-7ca9-4c94-adf5-a6344b9473e5"
        },
        "item": {
          "id": "ac780807-d903-4b0d-940b-af29db146554",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "773694f6-d324-4a63-a58e-e1924ea73a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa224024-e111-43dd-b3fd-2763506734cf",
        "cursor": {
          "ref": "26ce3458-1e41-44ce-a55c-ec738d2d9afb",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3e2febf5-82c9-426c-8a38-3bded60e625d"
        },
        "item": {
          "id": "aa224024-e111-43dd-b3fd-2763506734cf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "278f9a0c-4feb-419b-bdab-c981ab7b7d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3861e082-8484-4632-9797-5fc49539ee92",
        "cursor": {
          "ref": "eeb7d9f2-0718-4fd3-b8fa-5c4e84bbe7ac",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b2846ba-9abd-4c82-bd43-0c4b81cace04"
        },
        "item": {
          "id": "3861e082-8484-4632-9797-5fc49539ee92",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb6f17cf-d717-48ae-8476-d06300b1d269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f9af8f-6014-4ad5-bdfa-134b42c71272",
        "cursor": {
          "ref": "730f6dbb-8db6-43fe-8bdb-54603cbaa4f6",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6e3beee3-55fb-44cd-8486-3f5d17c7131e"
        },
        "item": {
          "id": "81f9af8f-6014-4ad5-bdfa-134b42c71272",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "77c54cce-d085-4f43-a14b-0124b840513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35d2d74-24f6-4d72-b8ef-791d2b7d64e8",
        "cursor": {
          "ref": "8bce2aa4-cccc-46e4-88c8-fcd2cca6581e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "071e06a8-4558-4e72-9ea4-b81584fe8d29"
        },
        "item": {
          "id": "d35d2d74-24f6-4d72-b8ef-791d2b7d64e8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "af0f06f2-64a7-43e0-b870-f234da0b841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f6f95a-1cbf-4853-964a-77bb2440e613",
        "cursor": {
          "ref": "e5b1b41f-e8a6-41d4-bd70-06f6c38a4034",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "74ef7556-654e-4536-b703-29379ae79693"
        },
        "item": {
          "id": "88f6f95a-1cbf-4853-964a-77bb2440e613",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9a2e9dce-e72a-47f6-8300-4120d414047c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e026959-090c-4f50-b0cb-2a3b1c8d0c07",
        "cursor": {
          "ref": "68ab70f8-e158-40ae-9a2e-ad823fb69ad1",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8922cacc-bc24-4f32-be73-b7109ce08416"
        },
        "item": {
          "id": "4e026959-090c-4f50-b0cb-2a3b1c8d0c07",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5d010363-ed17-40c1-8d54-170b97ff0683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1afdbc-3b11-4580-8568-c6bf1b932eb6",
        "cursor": {
          "ref": "dd2d7e46-b0f6-44ac-97d6-76082a59e92d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b764723d-05f6-4b31-8d6c-41a0e5df9eea"
        },
        "item": {
          "id": "fb1afdbc-3b11-4580-8568-c6bf1b932eb6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "13986964-1c93-4043-be54-113f378165cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7744ea-26a3-4aa9-9c09-742b232b9b09",
        "cursor": {
          "ref": "48b8ab8e-fbf4-4997-8070-5560208bf573",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "847e741e-fb18-4b2d-9b6e-e731bb32571c"
        },
        "item": {
          "id": "cd7744ea-26a3-4aa9-9c09-742b232b9b09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2114a2b0-3ebc-4828-8843-922d57d1e9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1776f28-9c3c-4af4-b49b-f2238d60ffcb",
        "cursor": {
          "ref": "2137c859-545e-402f-a44b-a5642f8f5731",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4214667c-be81-4852-a70e-a6c763df4f06"
        },
        "item": {
          "id": "d1776f28-9c3c-4af4-b49b-f2238d60ffcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8dd62a5e-7c4a-4260-9aae-8274c5304f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fad6272-38e7-461c-bdd7-5f0d9d2b7331",
        "cursor": {
          "ref": "8896d159-012e-44ca-b61b-8aaa88f6a09c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0b264707-31de-48b9-b7a9-e3a307f22f26"
        },
        "item": {
          "id": "1fad6272-38e7-461c-bdd7-5f0d9d2b7331",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2f028035-aff8-4804-8dd8-0a76f5aec2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d344c4e3-d79d-489e-89db-7ebbe9152d70",
        "cursor": {
          "ref": "a5313b35-094d-41ba-ade3-e411ba487b2b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c1d06a8c-0c99-445c-9c5e-c03f3b167420"
        },
        "item": {
          "id": "d344c4e3-d79d-489e-89db-7ebbe9152d70",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2b0b7a67-a11f-422c-819d-a9494600481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576fce55-252b-497b-ac80-c521b766275b",
        "cursor": {
          "ref": "4cb75090-845a-4b63-9ec0-2e2f88421ade",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c4af3764-f481-40ef-b2e7-019e51669ff4"
        },
        "item": {
          "id": "576fce55-252b-497b-ac80-c521b766275b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3412fe18-1251-4312-9bff-99551847505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f06202-4fbe-4c54-ab1b-8037adaf76a0",
        "cursor": {
          "ref": "4722d9c4-6c1c-425d-ad20-3ff96f2791ec",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "db981ee3-0f05-4da4-bc3a-522049487110"
        },
        "item": {
          "id": "09f06202-4fbe-4c54-ab1b-8037adaf76a0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d84f5756-6333-451d-9305-a07309a9a068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8025da24-5e8f-4dee-b049-7593dfdf8638",
        "cursor": {
          "ref": "82508610-ca93-4b92-acc6-402e394ffca1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1694e269-3edd-415c-b0d5-afb617ff6be3"
        },
        "item": {
          "id": "8025da24-5e8f-4dee-b049-7593dfdf8638",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3a835ab1-1316-4fda-be18-9c7842d9b3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1286ec72-c05b-4c91-9725-3a4b69be6897",
        "cursor": {
          "ref": "f0a3c81a-fa68-44a7-9214-e6d7264668f1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fe89c086-cc3b-442f-9679-9f183804c639"
        },
        "item": {
          "id": "1286ec72-c05b-4c91-9725-3a4b69be6897",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e2bb08b-9037-4f7f-badd-904d01326556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e3669-cd04-4ddf-86b4-0d6daba6d48d",
        "cursor": {
          "ref": "df88296a-f806-4b90-a5d5-9bb83dd27e87",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d8f7fdd5-ba86-4763-b6ed-45eae499b106"
        },
        "item": {
          "id": "595e3669-cd04-4ddf-86b4-0d6daba6d48d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e744d5b1-835b-4ab1-84d1-e24d1e4ed955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4823bb-2a45-4918-b1e1-754f9e072638",
        "cursor": {
          "ref": "357b5e8c-887a-4c2e-99e0-57d322723404",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "24e1fe73-cdc3-4dc6-9b58-be8e03607682"
        },
        "item": {
          "id": "ac4823bb-2a45-4918-b1e1-754f9e072638",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a89dfa8b-91b9-4ff4-8866-7953ea25b23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99373780-5179-4ebe-a658-b3a7a6b6deef",
        "cursor": {
          "ref": "3da07683-1e8f-4eb3-acd5-08eaf930420e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "516be7c2-5250-4bb9-a6d8-0dfde40a48f4"
        },
        "item": {
          "id": "99373780-5179-4ebe-a658-b3a7a6b6deef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0a17abc2-04ff-47ed-9667-647ebd27674c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f40011-786f-4d65-8238-eeb1944dcc39",
        "cursor": {
          "ref": "708ec25d-fa1c-4cf6-8629-ac8d21c62a57",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2dd7a6be-749f-4d2f-8f10-a63bf3e0d6a2"
        },
        "item": {
          "id": "f8f40011-786f-4d65-8238-eeb1944dcc39",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6a5123f9-5594-4520-b727-820e7174b95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945da74-9224-4054-b01c-6de186888ad3",
        "cursor": {
          "ref": "523bd265-7b39-4541-afcc-7fe0fb3a0b92",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b29e673d-cf7e-4fe5-97d1-accfae24f459"
        },
        "item": {
          "id": "7945da74-9224-4054-b01c-6de186888ad3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f2c221c9-c252-41b6-9a8e-0510681c8e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c632c4-e7e3-48f9-86f1-1799649a660b",
        "cursor": {
          "ref": "805b0bbd-cdad-4386-b436-440d1374218d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8b1f4728-e46f-4e70-b7f5-db4bcf0e080a"
        },
        "item": {
          "id": "61c632c4-e7e3-48f9-86f1-1799649a660b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d3fa6a0b-22c9-4994-b60b-7ffbcd3e03d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f400922-3f61-481a-8a20-b2f5be069395",
        "cursor": {
          "ref": "68703507-d840-4b33-b50a-202ec17a7570",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bf8f9baa-89a4-4175-82e1-e85d4c0a0468"
        },
        "item": {
          "id": "4f400922-3f61-481a-8a20-b2f5be069395",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "310342df-e6a3-41dd-96b9-269e5b98d5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18ebc96-887d-4abe-a1f9-d8fc329efba4",
        "cursor": {
          "ref": "3d345c51-cf76-4dc5-a872-c850c3f250c8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "58c270c3-a5ec-439c-8b74-81a02a86e382"
        },
        "item": {
          "id": "d18ebc96-887d-4abe-a1f9-d8fc329efba4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "58078915-0444-47a5-a7df-7cde22ca4a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6625c3-9b05-4043-8a5e-7661a10373db",
        "cursor": {
          "ref": "28d697ee-1788-443e-a93d-76e920648cb7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b36df7e-a051-421f-9fae-ef327bf1de48"
        },
        "item": {
          "id": "2a6625c3-9b05-4043-8a5e-7661a10373db",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1b59ba6e-daea-40b7-9c18-28f38fa07879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36b25cd-acda-4c45-8318-2276e71f270d",
        "cursor": {
          "ref": "b479e713-493d-4b36-ac9e-a9e1068ed661",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "509b9049-5c15-4bc8-bb38-6ad90f3bf569"
        },
        "item": {
          "id": "b36b25cd-acda-4c45-8318-2276e71f270d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e90a9273-a713-4040-9f62-f379dc8dd11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28b2575-8abf-4fba-b0ce-17e1f2b9b401",
        "cursor": {
          "ref": "a436736c-9412-4734-9f9b-83d6edfd0ff9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "74b6a332-dc98-4f33-b54b-b49ce18a78ab"
        },
        "item": {
          "id": "c28b2575-8abf-4fba-b0ce-17e1f2b9b401",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "44043a7a-a9c1-4e90-be60-57b1c0ffcaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68a39a4-e597-417b-a85c-1c7993c75b05",
        "cursor": {
          "ref": "797afb5a-0a72-4fb2-9b77-2fe4ade1a6a4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ab05651d-3d4a-4cc8-a6b5-400619c0f074"
        },
        "item": {
          "id": "e68a39a4-e597-417b-a85c-1c7993c75b05",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7146673f-9ef5-4d07-9911-1d46fa203f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ac7d1e-c491-44fb-8d98-53d6fbdf7c03",
        "cursor": {
          "ref": "07bbf0f5-a057-42c8-8bbf-773a46371bb2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4f78b5e6-c1f3-498d-be45-b1d622b71f75"
        },
        "item": {
          "id": "04ac7d1e-c491-44fb-8d98-53d6fbdf7c03",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b6eb6d03-61f7-45d3-a5d5-a23ba0562d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ec7046-371c-43f7-bf39-e40c9637b944",
        "cursor": {
          "ref": "6e656b2f-3bd4-4d60-bd92-8d21bf85e7f0",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "21a73b05-8642-4011-8fab-638493e37d64"
        },
        "item": {
          "id": "76ec7046-371c-43f7-bf39-e40c9637b944",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4f40317f-b3e0-4381-9c07-ff005bb806bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee82b759-f040-4450-8e07-f9ee606193bb",
        "cursor": {
          "ref": "3aa0667e-b642-4c34-8b0d-a663430113b6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0e5fd387-8a82-48da-a892-a4262a3e011c"
        },
        "item": {
          "id": "ee82b759-f040-4450-8e07-f9ee606193bb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db19e69c-1efa-4875-a07a-1c827010be44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7467a0ee-9034-4552-876e-cf888c3a7fef",
        "cursor": {
          "ref": "3ccd850b-1dff-4a09-98f2-9339d817307a",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c9d8d9b0-bb4c-440f-b9ff-e687c229da9b"
        },
        "item": {
          "id": "7467a0ee-9034-4552-876e-cf888c3a7fef",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0cf06a33-5526-4af8-8270-46fdd76ce0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5afa3b-af91-4efe-98b4-fc6b2e2c1696",
        "cursor": {
          "ref": "8e22f926-f8a3-4960-87d6-b4fd876e76c1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "51da3433-bfef-4c01-a2a0-596ba8f7b588"
        },
        "item": {
          "id": "8a5afa3b-af91-4efe-98b4-fc6b2e2c1696",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8d1ba64b-ee9f-48b3-9753-33c9ac4e5b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27651ed-cfb5-406c-a2bb-ecf8b58350f4",
        "cursor": {
          "ref": "5596182f-7c87-4955-be37-9b96dfef2c15",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4472d2de-640d-4b50-ba14-a8ade0a67c9a"
        },
        "item": {
          "id": "b27651ed-cfb5-406c-a2bb-ecf8b58350f4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "da0b220f-864b-4cee-aab4-08a649c7d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9450e15-454f-4076-85b4-d3bf88148c9d",
        "cursor": {
          "ref": "fdcdbb73-d2b8-4fdb-a010-d3b3c3adaddc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c9741581-58a9-4843-a815-96853ddbbe52"
        },
        "item": {
          "id": "f9450e15-454f-4076-85b4-d3bf88148c9d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cf27b03e-8305-457f-baf5-876a1049a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ffd2ad-a807-4996-8458-c96a36bbc223",
        "cursor": {
          "ref": "2e4deedf-3d05-4193-9a3e-c9bf57de718b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "001016ef-7a56-4c87-92bc-84c2b7c63443"
        },
        "item": {
          "id": "a5ffd2ad-a807-4996-8458-c96a36bbc223",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "934048fe-31f0-482a-a186-3b22c0cfed41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c588d91c-57cb-405a-862a-39c76e7e9e22",
        "cursor": {
          "ref": "a9bb5933-39fe-4eb7-8682-a7ce1044be39",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5c28c3a4-8fe4-46fa-bd12-7944fe7dff74"
        },
        "item": {
          "id": "c588d91c-57cb-405a-862a-39c76e7e9e22",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9550e2d9-4047-41e0-8eb3-3cec3e71cd8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8af9f66-486e-45f6-bb29-030614b60cdf",
        "cursor": {
          "ref": "e621505e-b4c6-4055-afff-5174c280b118",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "421c3ab0-60a3-4bd1-8c15-0b56207e95f6"
        },
        "item": {
          "id": "c8af9f66-486e-45f6-bb29-030614b60cdf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "00044feb-9965-42b4-b589-7acc879bde51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0059cd-99ed-483e-afe9-b8bbcab2f2ea",
        "cursor": {
          "ref": "33bc2fcd-ae75-4052-8e24-4e14f79f305e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "df15e357-31c8-47d8-bd45-39758d1fec6b"
        },
        "item": {
          "id": "5b0059cd-99ed-483e-afe9-b8bbcab2f2ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d5a76c6-c166-4730-bba9-25df452a60fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c228f9d4-0de0-44a1-a0d3-573d3121673b",
        "cursor": {
          "ref": "7cd48697-4ca0-4e14-bdc8-36139446929d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e6fbcad5-49ca-4097-bc87-73e516828c53"
        },
        "item": {
          "id": "c228f9d4-0de0-44a1-a0d3-573d3121673b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "15155a13-9b65-4155-8bb5-f6d7f05c2cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4a0d39-e07d-43b2-8d1f-f871a09ef789",
        "cursor": {
          "ref": "5e92a742-169f-4345-b0ca-54f0e88b2f81",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "49b8fc57-1992-4616-b39a-a6a7e6c896b0"
        },
        "item": {
          "id": "3b4a0d39-e07d-43b2-8d1f-f871a09ef789",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ccae37f1-8c50-446e-8178-c0f03bcc86d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b85a42-8caf-4021-ae15-b3b48f27342f",
        "cursor": {
          "ref": "9d258484-1975-4447-8d15-c538ff02b9e8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "21bea9f1-ece0-4d11-a353-96d8f46a9e8b"
        },
        "item": {
          "id": "70b85a42-8caf-4021-ae15-b3b48f27342f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1f477d01-265b-4215-b182-d7a1cb7ef9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58921883-bd28-4213-bd67-a1627af083f7",
        "cursor": {
          "ref": "c329180b-9549-429d-b700-3499576c3c87",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8577d30f-a1f3-441b-bfd4-2411a8b026db"
        },
        "item": {
          "id": "58921883-bd28-4213-bd67-a1627af083f7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "54b8685c-8fef-4a83-92cb-9669b8fb1ec8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c00d0d-2134-47c7-bbfa-209b3615b0dc",
        "cursor": {
          "ref": "c55af145-7069-4e1b-8f84-2866e09c696b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a500e552-23f5-4fe9-bb3e-8fc8e9294f96"
        },
        "item": {
          "id": "53c00d0d-2134-47c7-bbfa-209b3615b0dc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1f624fb3-5d0b-4f25-8128-050d30ab6227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b3549d20-7aab-4856-b2cb-882075a34396",
        "cursor": {
          "ref": "a675beaa-cd51-485b-a9f6-ffca1f23f12b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "31729cd4-5222-45ae-853c-eb0e6b42e8c4"
        },
        "item": {
          "id": "b3549d20-7aab-4856-b2cb-882075a34396",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8cdf2a09-ba33-445e-9395-a1d02eb36f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a2a7bcad-65dd-4d61-b69f-b78f7fa76066",
        "cursor": {
          "ref": "e33fc401-c347-4b45-924a-014c5ecb9239",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eb72525c-f7dc-4f9b-93b1-48647931e40e"
        },
        "item": {
          "id": "a2a7bcad-65dd-4d61-b69f-b78f7fa76066",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "44d8b214-f019-4737-9e80-2b27efd888f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9f4c786c-3bb4-4e98-920f-fbbf2dc45b2f",
        "cursor": {
          "ref": "5789ca2f-125d-4160-b0ac-bf2af6f49518",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "67b89636-3288-4961-9a48-31aa0bd945ea"
        },
        "item": {
          "id": "9f4c786c-3bb4-4e98-920f-fbbf2dc45b2f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a2abfc48-742f-43a8-852a-1cccd82ec49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9141d97c-5e8f-4da8-b9d9-406e4cbfed33",
        "cursor": {
          "ref": "aa29a2eb-6367-46a0-ba0d-bba310e38a55",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0634bf86-3870-48b4-bb11-6396dc651d2b"
        },
        "item": {
          "id": "9141d97c-5e8f-4da8-b9d9-406e4cbfed33",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "69f91b57-be9e-4629-a335-153c8eadf383",
          "status": "Created",
          "code": 201,
          "responseTime": 10029,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6878d6b6-aac1-4b0a-8c40-462fda9a49f9",
        "cursor": {
          "ref": "98d76d2d-87d4-4ffe-9189-45311e23b19e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "134fb621-59ef-4c68-97b3-8e26c9e06069"
        },
        "item": {
          "id": "6878d6b6-aac1-4b0a-8c40-462fda9a49f9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "32bce536-af00-4949-a977-eee6a6b484a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0bb5e5e8-150d-492e-b881-9d317acf2e1a",
        "cursor": {
          "ref": "ff0a1769-e6fd-4aad-82bc-52a05eff4ba3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "555426e5-b1ea-4b61-a23f-9d2b6d04c0a1"
        },
        "item": {
          "id": "0bb5e5e8-150d-492e-b881-9d317acf2e1a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "77544a08-6b99-4a39-9b47-1307b86907b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "491777f9-e46a-4c60-b574-fd9923de2ca0",
        "cursor": {
          "ref": "b4c64c55-1f63-4303-afdb-e5c7abf24692",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c02a7eb0-73ac-4fe4-b36e-6540faec2a6c"
        },
        "item": {
          "id": "491777f9-e46a-4c60-b574-fd9923de2ca0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "049397e9-566d-424b-b052-d54c82184b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3291eb3-bfd8-4623-8970-258213828002",
        "cursor": {
          "ref": "fb7b66e1-94a3-49b7-a94c-25f488f914e7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a9603c5d-dafa-4d4a-b3d1-ef4560b848fe"
        },
        "item": {
          "id": "f3291eb3-bfd8-4623-8970-258213828002",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e567cfea-9e27-4521-aa49-5f226438618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a29ece-7cdd-42a0-a09b-cd14f82523dd",
        "cursor": {
          "ref": "3a98555f-6037-455d-ab1a-e7a96ca47d25",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "65626367-f891-4644-a890-c01ea69163ab"
        },
        "item": {
          "id": "33a29ece-7cdd-42a0-a09b-cd14f82523dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03784f90-e59e-428e-bc8f-5dd46d6ca4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1198ac4f-0f2b-479d-871d-e3fa1d58f6e0",
        "cursor": {
          "ref": "bf4df230-42df-4102-80db-b29d23b0065d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "83a5b1f0-ad42-4557-b9cd-218b1f8b1840"
        },
        "item": {
          "id": "1198ac4f-0f2b-479d-871d-e3fa1d58f6e0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "07e4d774-1da3-4043-a98c-894fb692b885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae283ac6-f045-44ce-902f-04662cb791b2",
        "cursor": {
          "ref": "70e98826-8314-49ac-979d-8ba6755e91fa",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0cca4743-fad9-4ef2-b8a4-fbc3b3ddf247"
        },
        "item": {
          "id": "ae283ac6-f045-44ce-902f-04662cb791b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b04548c4-02e8-436d-89d4-9c8035100191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf393706-5216-4a9b-a8c1-4669a024d1d1",
        "cursor": {
          "ref": "ff725a56-f36e-4f28-b24e-1f4fd9247364",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6ab146f4-6c84-4af5-87c4-c893d53fd757"
        },
        "item": {
          "id": "bf393706-5216-4a9b-a8c1-4669a024d1d1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "57da9e03-1c03-4c9c-8caa-751e54172541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2948709-02cf-4fb6-a00a-902d9a40ac88",
        "cursor": {
          "ref": "7db40a34-9527-4c76-87fe-ca0e6dc6baff",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b51fe90b-5542-40a1-a19e-76ba0e00f637"
        },
        "item": {
          "id": "b2948709-02cf-4fb6-a00a-902d9a40ac88",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d48d451-91e5-4c6c-a213-76aa9ac90f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c343fcba-2eb9-4528-9d79-581f29e28e86",
        "cursor": {
          "ref": "c61afd24-fdd3-481a-9abe-63cfaa74b826",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c1b3adc4-cc15-499e-9568-104a9b04f496"
        },
        "item": {
          "id": "c343fcba-2eb9-4528-9d79-581f29e28e86",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e421d3d3-9a73-48d9-b3d0-05649a81f005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7452ebc5-2405-4659-9176-ceb0305075b6",
        "cursor": {
          "ref": "3b766009-3da7-495f-91b2-9c7617262ed1",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5342ef2e-9863-4dda-bfe8-a623db34c47a"
        },
        "item": {
          "id": "7452ebc5-2405-4659-9176-ceb0305075b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "00eb9e58-f3ea-4c0b-a92d-ded26990c057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dca6aa-f0f6-4138-a683-b174a55284d4",
        "cursor": {
          "ref": "3a4e77a4-d3e4-4cef-afcd-92a1088e958c",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5dba6cf9-0f3b-4de7-9597-1ea89b568f17"
        },
        "item": {
          "id": "17dca6aa-f0f6-4138-a683-b174a55284d4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9f049d55-0410-45f2-8e8c-71abc1a8e46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4549f6b-0c68-40a9-b65a-8ce5db435cb9",
        "cursor": {
          "ref": "69ef1b5e-8f49-4bc5-b532-d53ff42aac4f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8a85f28c-810b-4040-b13a-7158fb7442cb"
        },
        "item": {
          "id": "d4549f6b-0c68-40a9-b65a-8ce5db435cb9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "74c74e4f-690b-40f3-8600-72434291494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec02e944-0645-473c-aa08-da77510c2b1f",
        "cursor": {
          "ref": "bf4c4f64-8c26-4ac9-a122-3edc74cbd3ad",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "07393c5e-cf4b-4267-b5fd-dc1366934de6"
        },
        "item": {
          "id": "ec02e944-0645-473c-aa08-da77510c2b1f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "529e556b-03c2-4671-8701-3e83ec6aeb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16db2d64-50c9-43a4-8ead-6918638d8113",
        "cursor": {
          "ref": "8b3ed7da-2e69-4819-a34f-3e7c335e9d9c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "82315bb7-e672-470e-bbda-4113797d7a14"
        },
        "item": {
          "id": "16db2d64-50c9-43a4-8ead-6918638d8113",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "789e6a5e-8ed8-4d77-90cd-355f377338c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3549d3-9109-484f-9260-1f6787d28b67",
        "cursor": {
          "ref": "ae2781f9-1fff-4f12-ad76-c7208a323878",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3356ed6b-7d8b-42d1-b657-84aab18b3de5"
        },
        "item": {
          "id": "5d3549d3-9109-484f-9260-1f6787d28b67",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7bea3605-f10e-4a20-b259-c63a07e50614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8263786-b741-4c06-aca4-3d1d4eec4054",
        "cursor": {
          "ref": "85c16bb9-a7a0-4449-b2c9-03f4b43f51c4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "abfc1a1e-3402-4830-8a3e-a907faaf63c5"
        },
        "item": {
          "id": "a8263786-b741-4c06-aca4-3d1d4eec4054",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2b48d48e-038c-49b5-a795-9b38b27d8aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a7db65-7695-43d8-a9cf-37b5546e2c4c",
        "cursor": {
          "ref": "079371ab-4a0a-4dba-8a3c-394910ea2e29",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "426be94c-2fda-481a-a161-944ad360fc39"
        },
        "item": {
          "id": "a2a7db65-7695-43d8-a9cf-37b5546e2c4c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c33ea2c6-8786-4b05-be37-b2b2fadb4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebb86a8-7ffd-41a9-8295-9efcbc34596c",
        "cursor": {
          "ref": "8ef26628-1b4c-4e82-89b5-430b3ba7dd9d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "061ac1c2-6fe3-4dd9-916e-120d29643967"
        },
        "item": {
          "id": "aebb86a8-7ffd-41a9-8295-9efcbc34596c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f6063759-96d9-4e01-b63c-870e322e1df9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "04759ac7-6dee-4476-bfd8-0b5e395515df",
        "cursor": {
          "ref": "a57c46cd-713a-42e0-a82f-152ec1c449ad",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b481d021-0f48-412e-b4de-0adaf09f0aba"
        },
        "item": {
          "id": "04759ac7-6dee-4476-bfd8-0b5e395515df",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd99e8f6-2887-4813-9e5b-601531674dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674734a-9d70-4c15-b51e-746b0cabcaab",
        "cursor": {
          "ref": "c992300e-7c16-464e-8d9d-669f44de7494",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34a03a28-8dde-428e-a43f-0df46a6fe338"
        },
        "item": {
          "id": "c674734a-9d70-4c15-b51e-746b0cabcaab",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7f44122f-e973-421f-b8d0-6ad0ec5bdaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebcfb30-c932-4acf-8d76-535c019f4649",
        "cursor": {
          "ref": "bad64365-b4a7-4431-a065-76e5edc83b7c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b134194b-88eb-4e1c-a35f-abb7aec87bba"
        },
        "item": {
          "id": "bebcfb30-c932-4acf-8d76-535c019f4649",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "51394c47-719c-4f12-8bff-4d48c1aeff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bcce08-5f6c-484a-8a6d-c3f78c6b28f6",
        "cursor": {
          "ref": "8c7c605e-9caf-4e50-9c42-da5cd8613973",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a50bc6e4-34b1-4319-8f96-58affedf0b36"
        },
        "item": {
          "id": "90bcce08-5f6c-484a-8a6d-c3f78c6b28f6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7a69bcaf-8fea-4167-b68f-c394f203da38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cdcf02-0482-4603-b38c-6df035b2f0d2",
        "cursor": {
          "ref": "ad4d51ef-2b79-4dfb-98f0-d8549835e38d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fdf0825a-1731-4eac-ac58-82d6b43834ea"
        },
        "item": {
          "id": "31cdcf02-0482-4603-b38c-6df035b2f0d2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76a29be9-3808-44ed-bfca-f68925be2892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c162b57c-2c62-401c-bb9d-8ce331957780",
        "cursor": {
          "ref": "81583b9b-3376-48dd-b7d3-faeff66bdc9f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "647099b1-bf30-4a08-bd98-1c3d5f4bb7ff"
        },
        "item": {
          "id": "c162b57c-2c62-401c-bb9d-8ce331957780",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "41899507-2145-4525-bbc3-1bdcf4faeb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8d9964-f535-42c2-a5ff-a9e05d385549",
        "cursor": {
          "ref": "09007324-fdac-4496-8d25-37496afebfdc",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d168b0a-acc3-4e2b-9846-45fe6be71fd6"
        },
        "item": {
          "id": "3b8d9964-f535-42c2-a5ff-a9e05d385549",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e68c4f1e-ef91-41cf-8db2-6668bcb69a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d7b74d-66d7-4fd3-bff5-732f8f9e23d7",
        "cursor": {
          "ref": "99300ae8-022e-4e88-af8c-83b38a081bd8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "186d404e-8d2e-444d-bef8-10218375df6c"
        },
        "item": {
          "id": "72d7b74d-66d7-4fd3-bff5-732f8f9e23d7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1a7d4841-4310-4787-8943-f39e23955cd3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 79,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e485cf37-02da-4224-b19d-5ee6271854af",
        "cursor": {
          "ref": "9af3273e-1070-481f-900d-2e5dcbc7771a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d79d2ec5-9ff5-4c97-acca-4fdb0222b6b1"
        },
        "item": {
          "id": "e485cf37-02da-4224-b19d-5ee6271854af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d5eaee28-b87c-4ece-add6-882b024acbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5ba523-83a7-455f-9f35-60dc8dc635a5",
        "cursor": {
          "ref": "ab771cd5-d388-42e1-a767-e1af984193ea",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ebecb49-6738-4b92-8103-4fa419a52175"
        },
        "item": {
          "id": "fb5ba523-83a7-455f-9f35-60dc8dc635a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "669cf39f-fd24-4370-aed6-8cf2442b5e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532b81d3-6e81-4f43-afd5-faae1abe5d55",
        "cursor": {
          "ref": "b1b80bca-149b-4905-8e59-fbf1e3f75e95",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9945447e-8bea-4e8f-a1be-ce96b1b5f99b"
        },
        "item": {
          "id": "532b81d3-6e81-4f43-afd5-faae1abe5d55",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "548ec537-011c-4b3e-bbf8-a3b0d0822e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7ae814-8d8e-46de-8696-fa61e9d2490b",
        "cursor": {
          "ref": "87c6a7b6-8d65-4b18-a47a-28e3c8d68dfe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c4f66060-3e82-4419-81f1-128a1aa2470a"
        },
        "item": {
          "id": "2d7ae814-8d8e-46de-8696-fa61e9d2490b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1adfcf1e-b4cb-4c59-89f1-9d7f3f8edc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b7f003-2528-49b3-a209-8eb720b5756b",
        "cursor": {
          "ref": "b88a489d-b2b8-4d40-be48-a0e1a5aa446e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a6b4ec2b-bc3f-476b-bc58-2ac798abc49f"
        },
        "item": {
          "id": "b5b7f003-2528-49b3-a209-8eb720b5756b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d2953d5f-5006-41d3-a644-f7fd098488ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c029fb8-5714-4ddf-a3e9-63c5de0c4907",
        "cursor": {
          "ref": "a6c156e7-f747-4ff6-b4c5-8144b049beab",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dc96f200-1b49-4825-84e6-db4dd959cff8"
        },
        "item": {
          "id": "2c029fb8-5714-4ddf-a3e9-63c5de0c4907",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6ff14951-221e-4b6a-8dab-e1ec03b7f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ff679c-f271-4fd3-be5a-ee1f6ccfae55",
        "cursor": {
          "ref": "b9bf2f71-eb35-44c6-be0c-dc7e10d09084",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f4f312ad-2524-41d0-b913-ce14551aef44"
        },
        "item": {
          "id": "03ff679c-f271-4fd3-be5a-ee1f6ccfae55",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7386dbcf-fd22-448a-b9e4-e2c879e6ca2f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 134,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c386dd59-0af6-4735-aaaf-f22eb3d59d23",
        "cursor": {
          "ref": "78bf7778-0254-4518-a129-7882461ab688",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4cbccf1b-eaac-43c8-8eae-ff05b3e3c0b8"
        },
        "item": {
          "id": "c386dd59-0af6-4735-aaaf-f22eb3d59d23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "55158b4a-4241-4000-991b-a3bf305dbf38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a066e00-b643-4745-ad59-5e421835c096",
        "cursor": {
          "ref": "977fc428-6228-41d5-9b32-31e247a1f84e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2162c5fb-9676-4fbc-8226-32f872617c19"
        },
        "item": {
          "id": "4a066e00-b643-4745-ad59-5e421835c096",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e58d0c19-74c2-4a05-95e5-b099f6cfd695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3405e93-67d9-4112-b0f6-730e1c626318",
        "cursor": {
          "ref": "7137e601-753f-47ae-afb2-85fb3d2e37e2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6602fd24-f140-49df-bb1c-5eea898f5b58"
        },
        "item": {
          "id": "c3405e93-67d9-4112-b0f6-730e1c626318",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "84c6621c-2662-4a64-afe2-fb48549d482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da31e2e8-8fd5-42bf-a1b2-3dfce4ac93fc",
        "cursor": {
          "ref": "d1a4e770-2eba-4b26-b943-5a33e1adb494",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cef933cc-11ac-495f-8251-51a3f0d2180e"
        },
        "item": {
          "id": "da31e2e8-8fd5-42bf-a1b2-3dfce4ac93fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "61f4439c-fdc9-47b9-a647-23ae68d69064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1e7443-8457-435e-bce5-027bacb32a15",
        "cursor": {
          "ref": "9394007a-3e73-4289-bfbf-3f759fb36e6f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bf3c25c5-9508-4ea5-af2c-52a10dba4bea"
        },
        "item": {
          "id": "3a1e7443-8457-435e-bce5-027bacb32a15",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8a541864-27fb-4b62-a32f-24c632de5502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a22c27-c768-4997-a1a4-32fdd8b71edf",
        "cursor": {
          "ref": "412f3d53-8e5a-4e81-9eb9-32c7d2bafd5a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "80d462f3-0aae-4d28-869d-f50a94854635"
        },
        "item": {
          "id": "20a22c27-c768-4997-a1a4-32fdd8b71edf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f8d6b06-f55f-43a1-8768-7e13b9e1e446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431b782d-9f31-4d9d-aab0-b60093ab07f5",
        "cursor": {
          "ref": "b4569736-9b08-4111-8e18-0a2a111aba4d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ca604bfc-c216-448f-9cf0-ca86d8a16ebd"
        },
        "item": {
          "id": "431b782d-9f31-4d9d-aab0-b60093ab07f5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c1305ae-a800-4a48-a6f2-dfcda39c507a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803a04ca-d54e-463d-9942-46800ea13ef2",
        "cursor": {
          "ref": "c0c3f46e-2cc1-488d-9406-56d6664715cc",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bf5cc51a-7d93-4054-85ce-7f6402ed2c6a"
        },
        "item": {
          "id": "803a04ca-d54e-463d-9942-46800ea13ef2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8166747b-da58-44af-bd95-b3d70778dea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bfb129-cfae-45ee-9e73-5f6e552169b7",
        "cursor": {
          "ref": "5c347798-a576-4a02-acdc-71ed30d43151",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "12764540-26e6-4244-9053-1da69ae83a7c"
        },
        "item": {
          "id": "66bfb129-cfae-45ee-9e73-5f6e552169b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d1822e6b-d820-41f5-ab29-acf1a26c3aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a29c3f-a354-485b-a1ca-05b87e36b523",
        "cursor": {
          "ref": "3e57e16d-1b44-447b-998d-0443ed9bd21f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b1c837a3-5eef-42bc-805e-5fc384893b32"
        },
        "item": {
          "id": "68a29c3f-a354-485b-a1ca-05b87e36b523",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4140adc9-8b51-4564-a803-4bf1cf6ca5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c7cad8-002e-49f8-a155-21521218b4bc",
        "cursor": {
          "ref": "356e13ed-c49a-4993-8961-6331bc132003",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9ac35c23-9fea-4c86-a621-c2a42c670fdd"
        },
        "item": {
          "id": "e2c7cad8-002e-49f8-a155-21521218b4bc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "09666aae-13b9-4ffb-b1b0-8f36d5c18244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871129be-ec3f-49fe-a4dd-068b7591266c",
        "cursor": {
          "ref": "81bbf7ab-0a5f-4323-ac31-5d1d20a7a944",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2c097039-0035-4bd5-af34-8235e533f53f"
        },
        "item": {
          "id": "871129be-ec3f-49fe-a4dd-068b7591266c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "06cbe628-ddca-4899-a7a4-bf258331ded0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a87c5-e64e-4be5-b5bc-1bdfd06e2ffc",
        "cursor": {
          "ref": "3e04eb6c-81f2-462d-8282-1dd94eedacbb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f170b193-f17c-4aff-b2cf-cab7da7242f4"
        },
        "item": {
          "id": "fc9a87c5-e64e-4be5-b5bc-1bdfd06e2ffc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4deec809-d218-496b-a9ef-cb10da4fdd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050adef6-67f0-4517-bc57-a2c1dd09cd45",
        "cursor": {
          "ref": "24a58e8e-5d00-4ac0-aac6-fcb5a5f6f5f8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dd63f326-3a0c-4423-ac0a-79c6618b9646"
        },
        "item": {
          "id": "050adef6-67f0-4517-bc57-a2c1dd09cd45",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1457a704-50a6-4848-ae82-cb4a6acc4969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7481cc0-c5f9-480f-83d7-ebae583f6d06",
        "cursor": {
          "ref": "ed12ed74-ab16-4410-83b5-65dfe7990057",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "43b97744-a51c-466c-9344-7ae956675138"
        },
        "item": {
          "id": "d7481cc0-c5f9-480f-83d7-ebae583f6d06",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ee1b811b-d45b-44e0-9c97-76532127cae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d47205f-6c50-4747-a561-eba2ad10b14d",
        "cursor": {
          "ref": "da4d22bd-b9a8-4986-b3e2-e228432f6f64",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b662f387-8f0c-4336-9894-96962af99f50"
        },
        "item": {
          "id": "0d47205f-6c50-4747-a561-eba2ad10b14d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "42bf9989-8575-48be-8ac6-5461cbbc5e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b95542c-4da7-486b-b2f1-e9d038e64d27",
        "cursor": {
          "ref": "b9eac3f2-02f4-4579-be64-67f0d39c190f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9e37e96e-f392-4bd6-8800-c923f6c5f07c"
        },
        "item": {
          "id": "8b95542c-4da7-486b-b2f1-e9d038e64d27",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3242ebf0-6422-4be8-a344-a672e87306d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ec1073-1ba4-4a08-8002-020a90c609fe",
        "cursor": {
          "ref": "4f2d643b-14a4-41ad-a82c-ac6be65371e7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6d560602-a1fb-4d6d-9449-e02a5b499be2"
        },
        "item": {
          "id": "d4ec1073-1ba4-4a08-8002-020a90c609fe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "360fc9be-6c22-4792-8ced-41e0d13d27c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 90,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "da12cf58-40d8-4a8c-a67a-ed8e56b920c0",
        "cursor": {
          "ref": "7ab07abb-9f67-4165-9fff-24d11630e523",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "595f314d-21d2-47cc-a3e7-fd0f9c8b579c"
        },
        "item": {
          "id": "da12cf58-40d8-4a8c-a67a-ed8e56b920c0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ca31fbc-e14f-4f6f-8916-b1b16eb57f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3e08ab-61e1-4de3-a9c2-9fd85ba93c08",
        "cursor": {
          "ref": "b40581b0-0371-4b78-8cda-9d4deb0ff5ab",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c3c42cd5-b9da-4234-99d8-40c89b1775d6"
        },
        "item": {
          "id": "8f3e08ab-61e1-4de3-a9c2-9fd85ba93c08",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "89a3f8d3-9c66-49d6-809d-e6075f9f7519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20863885-a5a7-49d3-939a-1cd745399a54",
        "cursor": {
          "ref": "e2785ab8-6a34-4dce-a5cb-fce39eba4eb3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1982bfc7-7e0f-485d-9c3c-0c71ba2f1da7"
        },
        "item": {
          "id": "20863885-a5a7-49d3-939a-1cd745399a54",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e55be553-237c-4dc6-929e-75c70fca40f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ae0e55-42e7-4c31-9417-9e9b301c241c",
        "cursor": {
          "ref": "bca5a313-c7e7-4268-a591-ab9aa91abfad",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "827faf61-0f39-4c45-b3fc-7b42c21da6bb"
        },
        "item": {
          "id": "e2ae0e55-42e7-4c31-9417-9e9b301c241c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df081830-d4a1-4b21-b153-82208e6c1486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d964eaf-3f70-4970-b849-cabe800d8f55",
        "cursor": {
          "ref": "d5c0d3b7-48d2-42cd-9f91-d1829ca01460",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bc5ea5c5-2f16-4fa0-b739-9d11bf46247a"
        },
        "item": {
          "id": "7d964eaf-3f70-4970-b849-cabe800d8f55",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "17075719-a631-4791-80ff-7329000f95c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a369db0-5bd0-4bf1-b926-ead5dfa8b7d3",
        "cursor": {
          "ref": "4252fbe2-2bfd-46ca-bff2-28946b7714f7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be44215d-5348-48fe-b4d2-69453570c057"
        },
        "item": {
          "id": "8a369db0-5bd0-4bf1-b926-ead5dfa8b7d3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c55ab125-2dfd-4197-819d-6f8b1b5717a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e3ac74-f1a0-4283-a86e-e3fa0823d6eb",
        "cursor": {
          "ref": "7d8ad3b9-1543-48e8-aa6a-eadf3cfdb581",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e87c7cc8-531d-4500-9dc0-93d769555826"
        },
        "item": {
          "id": "e5e3ac74-f1a0-4283-a86e-e3fa0823d6eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "254e8b88-03c7-49de-8dc0-5aabeda7695c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86123718-e93b-4d25-96c1-0940a383f6ca",
        "cursor": {
          "ref": "ac5a192e-f3e0-4ac0-8107-be58abb79e49",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d7398278-e73b-4b89-a0cf-2155ba8d3905"
        },
        "item": {
          "id": "86123718-e93b-4d25-96c1-0940a383f6ca",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cdbf5c15-1774-4aee-aaa8-6bb6f1fe8fda",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "41f54187-8c11-42f7-b3f7-33ee71ce40b0",
        "cursor": {
          "ref": "bd46c080-8d8e-4c7a-ae96-80462a645a3d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5e95c2eb-1e7a-484e-945e-8f945921decf"
        },
        "item": {
          "id": "41f54187-8c11-42f7-b3f7-33ee71ce40b0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "88bca793-d7f8-46b7-9dd7-18c7a1b7d0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c795f6-bb04-4f4e-b987-38f1dd6a615e",
        "cursor": {
          "ref": "ecdcad13-f460-40e7-8219-754b6c6822ba",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c9ec1eb7-9353-4d25-947e-7b4c423d28b2"
        },
        "item": {
          "id": "35c795f6-bb04-4f4e-b987-38f1dd6a615e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "129f5798-e8b1-46cc-a6f4-0173e56ab9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fa09b1-48bd-4354-9c7d-2dab876c2a05",
        "cursor": {
          "ref": "493755c9-0066-4f51-9ad3-08ba0bfaafa5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ec9e635e-feae-4255-9ee9-51fd223f0b8e"
        },
        "item": {
          "id": "e7fa09b1-48bd-4354-9c7d-2dab876c2a05",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ebc677f6-9109-4c6d-8634-f36ab88f91ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95d9d99-68ac-4371-9744-beb962670149",
        "cursor": {
          "ref": "2e8d7e6a-c48c-47b7-b6c6-19202fd9379e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2b9ee33f-ae7a-4531-ac28-8762cbc41206"
        },
        "item": {
          "id": "a95d9d99-68ac-4371-9744-beb962670149",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66413316-8401-4ac9-92f1-775f6a911165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eb9843-960a-464b-a0e9-940707d9a057",
        "cursor": {
          "ref": "766d738c-355d-462c-9a62-2fa3085c3d1a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3234a281-0568-4ebf-8478-16f7e8952f35"
        },
        "item": {
          "id": "17eb9843-960a-464b-a0e9-940707d9a057",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b8ae90b-b4bf-4407-94b6-37d467a0154c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bc3912-17f5-4fc7-8d41-bc617da49dda",
        "cursor": {
          "ref": "659a904f-a96b-42da-8580-d2a14dda9bfa",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fd1b83b7-3a4b-4f23-9a56-4f6dad2f0c96"
        },
        "item": {
          "id": "87bc3912-17f5-4fc7-8d41-bc617da49dda",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b0b8a9f5-10b4-46f2-b7b0-5e1bae582865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2015086c-10a8-4be0-a604-0e63d0e88adb",
        "cursor": {
          "ref": "35297612-5681-4f25-bc8d-19f64ba59f31",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5ff604e7-ab2b-4e97-a909-d0d8773dba57"
        },
        "item": {
          "id": "2015086c-10a8-4be0-a604-0e63d0e88adb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2497cba6-f55e-4530-8d77-def99d8ba57f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 95,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "2aa763a8-1756-4279-bfa7-e6068220dd37",
        "cursor": {
          "ref": "cfa50f51-86c0-4522-babd-4b4217e83e2a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd35bd75-6198-4009-b326-9f25f2e393a0"
        },
        "item": {
          "id": "2aa763a8-1756-4279-bfa7-e6068220dd37",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "933b65e7-9022-4501-b42a-361391aa2433",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "535b6307-afca-4599-8bc9-48505d9bc9c0",
        "cursor": {
          "ref": "3723528d-4590-4ea4-8354-325aa17f7f11",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "504c13d6-c23f-4782-9cad-b0f796d498e3"
        },
        "item": {
          "id": "535b6307-afca-4599-8bc9-48505d9bc9c0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5b158d68-a864-46f0-9b4d-77920243b400",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 86,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "bee3fa70-c175-47f5-b913-1f72f69ceeb7",
        "cursor": {
          "ref": "3f4b2b12-23b1-43b2-9940-3c305a5a4620",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5c28eca5-bc56-4a1b-9922-462669996d11"
        },
        "item": {
          "id": "bee3fa70-c175-47f5-b913-1f72f69ceeb7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "678c10a1-5cea-4dbc-afb1-bb7b8f1b063d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "72918819-60d6-4b7d-b635-a3d6e4ffc9fb",
        "cursor": {
          "ref": "38d0284c-9a9d-44dd-bdd9-d896ed779709",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0217e1c3-0596-44b3-a929-c10bb665d715"
        },
        "item": {
          "id": "72918819-60d6-4b7d-b635-a3d6e4ffc9fb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "26daf084-b46c-42e1-ae9a-a69436ef704c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "a1bff52b-e429-49fc-ad53-ac27450108ac",
        "cursor": {
          "ref": "15210318-66a9-439e-aa58-d2cda5ce44a7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "43978a50-be18-43ec-a8a4-f67ae390b9e7"
        },
        "item": {
          "id": "a1bff52b-e429-49fc-ad53-ac27450108ac",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bcad5695-aca7-468d-a2f0-b34cf8e1ba8e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 80,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "c5ef3357-8d46-4960-ac92-f4c03049131c",
        "cursor": {
          "ref": "805f31a0-87e6-4fc1-a459-83841e603416",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "38f0d4c9-20f4-42f8-a901-78272c97f07d"
        },
        "item": {
          "id": "c5ef3357-8d46-4960-ac92-f4c03049131c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c53fc57f-d79f-4399-9a45-592f1d7d8eee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f45257d-c6a9-464a-85e0-cc2861b99a75",
        "cursor": {
          "ref": "338c1a79-9794-45e2-84ad-50523bc0c5a6",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4112b3a0-3e7d-4dac-bd06-911f91121324"
        },
        "item": {
          "id": "9f45257d-c6a9-464a-85e0-cc2861b99a75",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "262dfeb7-feac-448a-ad82-8d32dec21c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43e2572-6fcc-4cca-95f3-f142c1a89bb9",
        "cursor": {
          "ref": "e12502f8-5f9e-4f47-967f-80c9e9d26a9f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "979819b5-ea7d-4741-8288-85efcc492087"
        },
        "item": {
          "id": "d43e2572-6fcc-4cca-95f3-f142c1a89bb9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4345ab74-055e-469b-bb3b-7ad0d7360174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effbe12d-4be1-41a8-a75f-264011595df9",
        "cursor": {
          "ref": "806c59b4-962c-40ae-9fd8-2f30c858e367",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d3b2d698-f032-4010-94f1-db8c7189a175"
        },
        "item": {
          "id": "effbe12d-4be1-41a8-a75f-264011595df9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "515f4bd5-3b63-421f-b0a3-f0d3b1da71b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90ea6ed-403e-4e35-80b8-5e3836bb3b86",
        "cursor": {
          "ref": "7e4f18cd-6478-4649-a1e2-c57cac4bb99d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e435d47f-3b25-4fa9-af1c-a3f9dbe40355"
        },
        "item": {
          "id": "a90ea6ed-403e-4e35-80b8-5e3836bb3b86",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "70766dc8-10d1-4243-9243-46efa764d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27715c2-3cfa-4f2b-97ed-4e98aed1df53",
        "cursor": {
          "ref": "cf66bf91-1217-4458-b50d-d21d2effd641",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "35ec5641-b33a-4e5e-9fb5-158d5593cc75"
        },
        "item": {
          "id": "b27715c2-3cfa-4f2b-97ed-4e98aed1df53",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "977189e9-2bae-4367-be8d-8dd4e5cb24ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1b702b-13da-418d-b992-ad95c56a5557",
        "cursor": {
          "ref": "363a6e10-6d98-433c-bec3-ec06f2a67be2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3b049b0a-2276-4c7e-80b3-263557ddcb8d"
        },
        "item": {
          "id": "ca1b702b-13da-418d-b992-ad95c56a5557",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43d1ab16-f229-4eea-a4ef-7e24510d72bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951a07d5-6a66-4ced-b7a2-f5c85ed8dd2a",
        "cursor": {
          "ref": "544301c3-1026-4117-af72-f96f863a53eb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3bedcf3d-c3a9-414d-bfb6-a744fa9d15c8"
        },
        "item": {
          "id": "951a07d5-6a66-4ced-b7a2-f5c85ed8dd2a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dfc3564d-1fb4-4f52-a743-95fb905463dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22244f85-5cff-4c1a-b301-caa7a90c81f1",
        "cursor": {
          "ref": "46a51c49-2b8a-41f8-91e5-a366f5ab245c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "caeb1eb0-301c-4da5-aa64-1bfb7dbc8222"
        },
        "item": {
          "id": "22244f85-5cff-4c1a-b301-caa7a90c81f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "becd07af-585e-402c-9e4d-7c8a3f7b2091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9659de-42ae-44fe-8e8e-accdbb178205",
        "cursor": {
          "ref": "32b31278-0b85-40e6-b52e-db8f34fcffdf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9659c6f9-9cc1-4806-b582-29276f01c8f4"
        },
        "item": {
          "id": "cc9659de-42ae-44fe-8e8e-accdbb178205",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f896fc95-4e5c-47ce-9dc6-5f0a18c1a151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd7f14-47b7-45b9-90b7-7d9c80c7fd97",
        "cursor": {
          "ref": "301cab25-a856-46fe-93fd-578680c1a889",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f89862e-6590-4c86-a719-ccc388ea3edf"
        },
        "item": {
          "id": "b9cd7f14-47b7-45b9-90b7-7d9c80c7fd97",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5b327682-6e20-4812-b86a-27b634ee990c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6878f1-4cdd-48a4-9888-d603f8e96acc",
        "cursor": {
          "ref": "a7abd14a-660d-44b6-bed0-4af5b5782e48",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cdf1e984-3161-43c9-8f8c-8023f2722307"
        },
        "item": {
          "id": "7e6878f1-4cdd-48a4-9888-d603f8e96acc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b2ade1a9-7f80-469b-91c5-7f59caacd997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505dafd2-cac0-4422-aca6-f9cb5ba252a4",
        "cursor": {
          "ref": "701f28be-5997-4663-8195-f92502f71d16",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b5ed97cc-8d48-4fe7-8719-f285f4c42f6c"
        },
        "item": {
          "id": "505dafd2-cac0-4422-aca6-f9cb5ba252a4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a2e4c917-15fe-472a-94d2-4bc9ed78bd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a0b316-c3d3-4ef8-9deb-99753173eaa3",
        "cursor": {
          "ref": "fe26df31-3c31-441b-ba8d-67b185ec74dd",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6963f4d5-3885-4c4e-be64-685bb1918b99"
        },
        "item": {
          "id": "65a0b316-c3d3-4ef8-9deb-99753173eaa3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "14d1b7bf-3ba6-4c44-b1c9-61c90eaf33da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19314db8-f044-4c88-b9fd-f730c3e4d30f",
        "cursor": {
          "ref": "117ccbf7-c2aa-4b4a-8252-3c90162759a6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "18bfc264-65bb-4062-86ce-7c63ab4a33d4"
        },
        "item": {
          "id": "19314db8-f044-4c88-b9fd-f730c3e4d30f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5e80b371-03b0-426c-a652-ad78d5d4ffc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89eb3d68-9e82-404f-b4f0-52eee8bd9445",
        "cursor": {
          "ref": "8a6be02c-65c7-4a98-a54c-b546729417d0",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dad98286-359b-400c-ad28-ffb71b9031a5"
        },
        "item": {
          "id": "89eb3d68-9e82-404f-b4f0-52eee8bd9445",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "98ba9306-9dcc-4baf-9c25-d771b1d836fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb2e906-0468-4206-b152-f82f9fcd3d03",
        "cursor": {
          "ref": "fdaac355-39ef-40ba-b9e7-23436b53885b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d5cd7e50-d9b8-41fc-a4e1-5232f88621d6"
        },
        "item": {
          "id": "ccb2e906-0468-4206-b152-f82f9fcd3d03",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3846ff7c-4cd5-4fe2-b7f3-56ab8315fbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a5482d-b52e-4918-9bb9-7e584fa219c1",
        "cursor": {
          "ref": "51245587-d38d-4cfb-80bd-813b9374815d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "25489c1d-dfed-4726-a3a0-218d327e5568"
        },
        "item": {
          "id": "a9a5482d-b52e-4918-9bb9-7e584fa219c1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "faef60d8-624a-4c6d-a69d-ccce4b03db76",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "e68bb2b5-56fe-4c75-8e0c-9948634b3677",
        "cursor": {
          "ref": "cf53478d-2a58-4a41-8e79-be0ae4864cef",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2fc03485-bb97-4dc6-aca2-5f00afa26280"
        },
        "item": {
          "id": "e68bb2b5-56fe-4c75-8e0c-9948634b3677",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "694fa8f2-81c5-4341-9e7f-4fa5ea28aeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f035b6c-7dd0-468f-9a16-711baf6de0e8",
        "cursor": {
          "ref": "01f671aa-c028-4a6f-9887-7561ba9c7d1c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3feb3700-6466-4c63-92f4-ccc5117d66f6"
        },
        "item": {
          "id": "4f035b6c-7dd0-468f-9a16-711baf6de0e8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "117e7a27-401d-420c-93b8-496079270a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc8c6b9-f7fc-4b01-9ecc-a692f548eba4",
        "cursor": {
          "ref": "c633c590-3eff-4bed-a0c7-3481a200f7aa",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b6c35ced-59f2-47db-9fa2-02bbc88deec8"
        },
        "item": {
          "id": "8dc8c6b9-f7fc-4b01-9ecc-a692f548eba4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "707f33c2-c102-4f95-897c-58248c445918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf417dc-a50a-41c8-9b9b-d8c470743d3f",
        "cursor": {
          "ref": "2974abe0-f91d-4a27-b151-c2f9647d7609",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c41f9934-5772-4ab1-a0d5-f9fd0b7553e7"
        },
        "item": {
          "id": "6cf417dc-a50a-41c8-9b9b-d8c470743d3f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "391d1c17-e3bf-452f-9485-1e6c87dc902d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f891d1e-8689-4583-ba04-bba5df472ffd",
        "cursor": {
          "ref": "34f7f8c3-1abe-4ffe-bb13-7e197fd36653",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "93efda1a-2d84-4f46-9998-b748217ff47f"
        },
        "item": {
          "id": "4f891d1e-8689-4583-ba04-bba5df472ffd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e95dbf33-02f9-4829-9621-796656fe9c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa8d735-1aa0-428b-bca1-36410f1b32f6",
        "cursor": {
          "ref": "94365c89-dd98-44a7-ab95-a6c4ba1e1260",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ce3da3f4-afbc-4799-bdf4-7ced74886221"
        },
        "item": {
          "id": "caa8d735-1aa0-428b-bca1-36410f1b32f6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "967d9b54-d109-4c8c-90f8-077d861d8d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243f8263-1acb-4af1-9f48-00357074de3e",
        "cursor": {
          "ref": "d04ea749-dafa-4d21-8bc8-6f4f7e9ca1b8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5cf454dc-b44f-42d1-b731-ad4557c4dc9e"
        },
        "item": {
          "id": "243f8263-1acb-4af1-9f48-00357074de3e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "69264480-cd67-44df-bf91-b1c7f6714971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5326d-3f83-46ce-a1a1-0d6a41ee5b3f",
        "cursor": {
          "ref": "85d2a84c-50f6-45f1-963f-c8378f332eb8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "72af2f69-badd-4701-8d83-7dbd146a80dc"
        },
        "item": {
          "id": "bbc5326d-3f83-46ce-a1a1-0d6a41ee5b3f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0c65c544-6d0a-4a99-91aa-de85c5563dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866d06c4-d976-42a7-97e9-fd2e88ab4d9f",
        "cursor": {
          "ref": "3ce8fca1-6e47-4344-b03e-f8884098623f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c7bd9882-c3a6-4f49-a0b5-e2515c3854b1"
        },
        "item": {
          "id": "866d06c4-d976-42a7-97e9-fd2e88ab4d9f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba665c34-5d18-4dba-9e05-a0b27477d4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fd99a3-b691-4df1-a0ac-a13ded2139ea",
        "cursor": {
          "ref": "1fc96e92-7fbb-4f05-982f-b0dc163f592c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6cb673f0-85a6-4146-9a76-f0a16d7ceb09"
        },
        "item": {
          "id": "35fd99a3-b691-4df1-a0ac-a13ded2139ea",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5140a94b-e830-42a0-91ae-574935a55806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0f373d-8a3b-4c39-83e3-9424f64eacdc",
        "cursor": {
          "ref": "0952982b-5f75-43b1-8590-95523a1fa770",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "00b52a40-38e4-45dd-b724-9de5acd1e88b"
        },
        "item": {
          "id": "5d0f373d-8a3b-4c39-83e3-9424f64eacdc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "52c06d59-12e7-4188-ab2c-43f5bf8133b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec162ab-8804-453a-af9e-ce946c849c40",
        "cursor": {
          "ref": "bb62e357-c5a9-4d17-9d88-bad70a7e7bb9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "319c65f0-1384-4e31-8deb-da9700590be9"
        },
        "item": {
          "id": "6ec162ab-8804-453a-af9e-ce946c849c40",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "23c15326-5a58-40a4-8bfe-89be998b51aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e669d-005f-493d-9f13-e44a7c2bed3f",
        "cursor": {
          "ref": "e28fa406-b83b-4b0f-ac64-f606922671c7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8c510dfa-df74-4cd6-a82f-d73f8efe2a08"
        },
        "item": {
          "id": "414e669d-005f-493d-9f13-e44a7c2bed3f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7332a506-f17e-4257-9322-21a6ceeff9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ceaad0-e1ba-46d3-abe4-c804d26203dc",
        "cursor": {
          "ref": "988f15ec-dda9-4741-ade7-c4903e64a606",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c9ffe452-0676-4efb-bec1-73ce35445f6b"
        },
        "item": {
          "id": "82ceaad0-e1ba-46d3-abe4-c804d26203dc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bd5535b6-80da-4539-887e-79ae8d2ff4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c44d57-ac51-455a-b184-6ab827dc408b",
        "cursor": {
          "ref": "29edffff-53b1-485b-b3d4-bcad5e42f57a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b815c24b-b4e8-43de-9428-77bb98644657"
        },
        "item": {
          "id": "f9c44d57-ac51-455a-b184-6ab827dc408b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cdb25c43-ba6c-4ecc-ad98-0b9e1aef6805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7496c71-9eb8-4f28-a95f-fa63cf64c32a",
        "cursor": {
          "ref": "74561ccd-c2ad-445d-be78-fc24e4ee5930",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cfd2d463-bf38-445b-afab-b1853a9d773e"
        },
        "item": {
          "id": "d7496c71-9eb8-4f28-a95f-fa63cf64c32a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e600b839-cdcf-42e3-994e-a6c880d9608a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4a2671-6da9-488c-9119-a524763814fa",
        "cursor": {
          "ref": "421ad719-9b53-4c3e-9de5-949b0fe6d964",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "da47010b-7845-4637-a6f8-908ded48802b"
        },
        "item": {
          "id": "6e4a2671-6da9-488c-9119-a524763814fa",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "785f587a-a876-4c70-9c38-ab771a10cd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13742006-b993-43ba-8dca-807247b40c06",
        "cursor": {
          "ref": "2649d6b1-e057-4908-9f33-83d8695d88f8",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "91a3254c-6921-437b-8afb-c31b7de587bb"
        },
        "item": {
          "id": "13742006-b993-43ba-8dca-807247b40c06",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b3c5b7d-2151-4825-b366-e543074af66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20d7e0b-a0c8-4c59-9b4f-a357c05bb47d",
        "cursor": {
          "ref": "087592fb-390e-443f-8ea0-1585588f6cb7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "409b899b-2b29-41ce-a588-f26c8c55662e"
        },
        "item": {
          "id": "e20d7e0b-a0c8-4c59-9b4f-a357c05bb47d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "120685d5-6cd8-4873-9779-4cdf065e1a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f27595a-3e47-4445-9a50-0a9536427923",
        "cursor": {
          "ref": "2a741a24-17a5-4715-9b58-5df547798d8d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "12c79fff-ced2-407a-9d53-2b7550c6bc6b"
        },
        "item": {
          "id": "6f27595a-3e47-4445-9a50-0a9536427923",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ec9b9b76-be2b-4e78-8e4d-778b22936c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0665b5-81a8-4389-83b6-8e0d897d2aa2",
        "cursor": {
          "ref": "d3068500-3dec-414c-be65-6d041762e92f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bac052b5-8e4e-4886-a532-6b1e5a363d85"
        },
        "item": {
          "id": "bc0665b5-81a8-4389-83b6-8e0d897d2aa2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "36582f3a-0016-4ba3-b819-610b85ed7acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2cd9fb-fd69-491b-b7bb-586d06feb062",
        "cursor": {
          "ref": "c809f149-3ec6-4924-8931-ec47f8dfcd4c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4712ed72-9fe0-4847-ad14-058b5af4b831"
        },
        "item": {
          "id": "5a2cd9fb-fd69-491b-b7bb-586d06feb062",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d780c04d-57ef-48fa-8d17-79a4fd1089ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b795cb-06ea-44ab-bb10-28f44a24197a",
        "cursor": {
          "ref": "2404e199-e417-444c-833b-05b5ca634c64",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "13ff7928-a1dd-4c45-be50-89dd498a01ff"
        },
        "item": {
          "id": "81b795cb-06ea-44ab-bb10-28f44a24197a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d4a3460c-cf7c-404b-b855-aab90a8a74ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ac0c06-407e-47ac-9624-f26aa60589a9",
        "cursor": {
          "ref": "a283f466-9d40-4ce6-bf1b-7e3662576f1f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "30b8292f-1853-406b-b0ab-5fdf0bf53494"
        },
        "item": {
          "id": "63ac0c06-407e-47ac-9624-f26aa60589a9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c7ef9f12-88a0-403d-865f-ad1b71fd52e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed6deaa-9a7e-4cb8-b3ac-7222a9481b82",
        "cursor": {
          "ref": "f95342ec-8895-49ba-b30f-ff5f865dc969",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "00342367-a463-4771-af91-17565c8220dd"
        },
        "item": {
          "id": "aed6deaa-9a7e-4cb8-b3ac-7222a9481b82",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "19734740-c67e-4365-8688-64dbd6b072e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5babeb2-02ab-4884-9f5f-c7e21bec194b",
        "cursor": {
          "ref": "b2da13c7-201c-46e9-961b-5e5d9fc232df",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "20a7cb55-68f2-4bf0-b50f-a63da6ecad96"
        },
        "item": {
          "id": "d5babeb2-02ab-4884-9f5f-c7e21bec194b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a5ba712b-09af-40e1-b3c0-89d16bade0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa188a4d-4ff4-4bed-89d0-7ed4598d934d",
        "cursor": {
          "ref": "196835cc-e711-4fba-835e-32a18adf799b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e8349e77-115d-4243-b526-c7ab191c8884"
        },
        "item": {
          "id": "fa188a4d-4ff4-4bed-89d0-7ed4598d934d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9f15a639-8e79-4ab1-b367-87ba2b4211fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a2a898-e9e4-4148-a81e-02e68c07047c",
        "cursor": {
          "ref": "8ce98896-bcc0-45a8-9519-3f4023dda002",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a813caef-52d7-4246-b690-0e486bd56b40"
        },
        "item": {
          "id": "91a2a898-e9e4-4148-a81e-02e68c07047c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6aec1809-1f3e-408f-a9e0-90f1c225079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f49ba85-bec0-46d6-822b-1e02b02f79c9",
        "cursor": {
          "ref": "ecc8b077-44df-4bd5-8461-16a9d592540a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8faefe7f-abf0-4e63-a71a-401166fd06b7"
        },
        "item": {
          "id": "7f49ba85-bec0-46d6-822b-1e02b02f79c9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4b8dd802-79de-45ed-a120-3c86a6d119b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268b0ea0-b92e-4ff9-9cb0-0a33e928ef09",
        "cursor": {
          "ref": "102b0718-1205-444e-9fde-81399d3694ac",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "17924369-d0be-455d-a9be-e7e272690ab8"
        },
        "item": {
          "id": "268b0ea0-b92e-4ff9-9cb0-0a33e928ef09",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c1b8aaa5-b3b2-4aba-a6de-899c9935fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d686f2bb-d653-4034-a9f2-6fb8485e1066",
        "cursor": {
          "ref": "ddaf9a76-958e-4a57-a282-bb39a3745dc5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c14ca164-b871-4dd3-b0d0-bc44813d9534"
        },
        "item": {
          "id": "d686f2bb-d653-4034-a9f2-6fb8485e1066",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f5ec0f08-9dc6-4c5d-afa8-8802a1d01272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6f776d-3b54-412e-b066-cb1840b90a06",
        "cursor": {
          "ref": "51642006-7aab-457d-9d10-4b041cfc5cd4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "974a3f38-b1b1-4bc8-bb29-0c27de9e82c9"
        },
        "item": {
          "id": "5b6f776d-3b54-412e-b066-cb1840b90a06",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d8b7f87d-4454-4ea1-8d96-7d22b772ec50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c44bf7e-ff06-4758-9daf-bf788da39c55",
        "cursor": {
          "ref": "b3340526-b129-4602-88ab-d8a74b341288",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "889fe6d2-72b4-475e-b580-b5bda585d301"
        },
        "item": {
          "id": "3c44bf7e-ff06-4758-9daf-bf788da39c55",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "16108df6-8648-432e-bcd3-44c8eea55f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2164f53b-fde8-4109-b2f1-0ed5346c5a4d",
        "cursor": {
          "ref": "542a49f9-ce5b-40c0-b738-254371f4c8f6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b99eead1-21c1-485a-bd6f-43000dcaec47"
        },
        "item": {
          "id": "2164f53b-fde8-4109-b2f1-0ed5346c5a4d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "945081f9-9380-44ff-ba99-fcb2fb5f03e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8deefe2-85d3-4c8a-bf5e-1faf985bb0fd",
        "cursor": {
          "ref": "fac22794-7f06-4b1e-9bc1-8cd3aae8ec34",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a9ec1ab-2735-4cb5-9132-09bcf1f4ecc3"
        },
        "item": {
          "id": "b8deefe2-85d3-4c8a-bf5e-1faf985bb0fd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "86f01ace-8055-4fb6-a061-40cfb451d93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adef39b8-ff43-4995-963c-f0f7a3862ce4",
        "cursor": {
          "ref": "cfbc7179-b0d7-47bf-9c3e-0235891673e7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "67667291-7569-4e68-b0f4-aae45beba34d"
        },
        "item": {
          "id": "adef39b8-ff43-4995-963c-f0f7a3862ce4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0481051e-d060-42ca-be1c-4d511eeb8b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c70746d-2dac-431a-9c04-f2fe1921a48f",
        "cursor": {
          "ref": "3d28e1b0-6459-4c64-b8f1-d0524ad403a1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "879c0edd-732c-460c-8615-531a9665c627"
        },
        "item": {
          "id": "1c70746d-2dac-431a-9c04-f2fe1921a48f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9475f05d-f47a-487b-9f10-a20b7cf3eb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607a790a-53fe-4865-9ed4-a7f809a5354f",
        "cursor": {
          "ref": "be2ae0ee-9d08-42ef-81aa-93fc782d4b9c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "58b511b3-529a-4d9b-b1e7-e20c2acb4352"
        },
        "item": {
          "id": "607a790a-53fe-4865-9ed4-a7f809a5354f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9c957880-bb23-471e-8dbf-5b162fd9d95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bdc86b-10c4-44cf-8e7f-17ad9b032f8c",
        "cursor": {
          "ref": "31ec70cc-26d5-4ed5-b486-53d8cbaefc23",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d928a470-9a27-485f-84b2-344d23257054"
        },
        "item": {
          "id": "35bdc86b-10c4-44cf-8e7f-17ad9b032f8c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "861c2d1f-93c6-4e73-a3b6-535965748034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4114cf07-e9a7-4728-905d-893cb419dc5c",
        "cursor": {
          "ref": "ae3278b0-7164-48d2-9c64-0791c9cb773d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "12748d6f-1d68-4188-b614-8a5038016e8b"
        },
        "item": {
          "id": "4114cf07-e9a7-4728-905d-893cb419dc5c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8d8ec3e6-e862-476d-9f0c-071e59c64037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8812bd-f4a7-4348-952d-15aa936806bb",
        "cursor": {
          "ref": "4a9a24c0-3064-410d-bd77-2f6b7ac27f13",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9e4a4dba-df72-447d-8b63-d5e9d4e7639e"
        },
        "item": {
          "id": "bc8812bd-f4a7-4348-952d-15aa936806bb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c2946f8c-0eca-428d-b5f7-cbff8b8f9cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f177a04f-2682-46cd-ae79-ad7e5889fa4e",
        "cursor": {
          "ref": "c77263d9-323a-4867-a16f-11a473e44c4f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eb70819f-5512-4cb8-a5d9-08ba4e56c62a"
        },
        "item": {
          "id": "f177a04f-2682-46cd-ae79-ad7e5889fa4e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b277d5e1-8742-4bb6-a791-e09536d94cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e39cf5a-a64e-40b8-ba3f-2f07e7217c97",
        "cursor": {
          "ref": "c0fdc076-e115-4360-a43b-dd00202bcafd",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a2092b53-7327-424e-bd8a-d74f401b83e2"
        },
        "item": {
          "id": "8e39cf5a-a64e-40b8-ba3f-2f07e7217c97",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c73d5f7-ea8c-453b-bfac-8566d52615d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146a3526-f6d9-45ec-93a5-908f01a8664b",
        "cursor": {
          "ref": "9aa9acef-bcd2-41eb-8338-c2996f401286",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bcc1f3c8-dd5c-4cdf-b295-d84bac58a035"
        },
        "item": {
          "id": "146a3526-f6d9-45ec-93a5-908f01a8664b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8c245e04-d4f6-4075-8a31-063a31a03df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128e4e30-5271-4e9a-b8d5-a09317d184ea",
        "cursor": {
          "ref": "d81a7085-8b3e-4423-8518-3ba043baa376",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3a99acf6-0800-4bcd-af4a-71becdf20371"
        },
        "item": {
          "id": "128e4e30-5271-4e9a-b8d5-a09317d184ea",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fd13d31b-5af1-4d80-9b8e-7243fe073e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb837d-d60d-4730-8839-89e3f36eef57",
        "cursor": {
          "ref": "359b5e73-54de-434d-b46e-38bece667061",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9c3dd30a-cd10-4c22-b0bf-b9ab8420daef"
        },
        "item": {
          "id": "6bfb837d-d60d-4730-8839-89e3f36eef57",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b3cffe92-bfda-4eb4-bdd2-859f08419e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064f798d-3566-4e7c-8c90-b5beae849ca5",
        "cursor": {
          "ref": "73d22696-b4ca-4dd3-844d-31c6f51f0fab",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bfe31509-0aa0-4d5b-ae43-a945d7b94dbc"
        },
        "item": {
          "id": "064f798d-3566-4e7c-8c90-b5beae849ca5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "283abeba-b7c3-4746-8902-d45989d915c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de69364c-a28d-49f9-84df-e9c608d2ac2a",
        "cursor": {
          "ref": "03448d9a-f506-431c-a579-cfd7637e2907",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0254da26-c52a-4af4-b41e-4060a3566804"
        },
        "item": {
          "id": "de69364c-a28d-49f9-84df-e9c608d2ac2a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a82e7de0-ab5d-4c59-b6b6-7a34e16e3e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9a1fa-1e4b-48a2-8ef1-98c4c6f5e525",
        "cursor": {
          "ref": "59bfac53-f47b-4368-b8e5-96c18287eb90",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c8d82f84-c7ab-408b-b63c-99ce383c3757"
        },
        "item": {
          "id": "82c9a1fa-1e4b-48a2-8ef1-98c4c6f5e525",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7154c5b6-0d45-4347-b4f7-2d330e3a405d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ca660c-cf7d-4b4a-9db9-3bed360d5641",
        "cursor": {
          "ref": "1a88d55d-dcd7-43fe-96f1-0c80051fe507",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4662eb98-38ec-4ba8-90fc-334c1e284b11"
        },
        "item": {
          "id": "a1ca660c-cf7d-4b4a-9db9-3bed360d5641",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7f958920-94c7-480a-9a9c-1dd081ba8e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492cfd00-4e81-49ca-ae20-1e5e0a0643ad",
        "cursor": {
          "ref": "12fef84d-abd9-4906-b0ad-01ceb272bfda",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ab1b7d51-c78c-4d14-8ad5-4cfb9f046fc0"
        },
        "item": {
          "id": "492cfd00-4e81-49ca-ae20-1e5e0a0643ad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "92aee6a7-ded5-4ed1-892e-dcb52c75c1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9afb90d-dfc9-4a69-ac52-490b328772fc",
        "cursor": {
          "ref": "342904bf-b536-4105-8a6b-cdf606f22ea4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75595086-0f62-4779-89bd-be128792ce5c"
        },
        "item": {
          "id": "e9afb90d-dfc9-4a69-ac52-490b328772fc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ee28af04-82fe-497d-80bd-b7b8f89f7caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7ebc20-f099-402f-9d85-fa24aaf0f1c4",
        "cursor": {
          "ref": "95ecb5ce-a33b-4333-aa69-19433e26c7db",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4c8ba400-5556-4798-9f2e-0fc9d61f4204"
        },
        "item": {
          "id": "2b7ebc20-f099-402f-9d85-fa24aaf0f1c4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "10a7e5b9-fea2-464b-81cc-f90304229a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3074817-184a-4bcf-b983-ccb9c4bf657a",
        "cursor": {
          "ref": "a02a4e94-237a-4a5a-a3e1-f2598ebf7ca9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "870303ff-69d5-4ba2-b896-247067f62cc6"
        },
        "item": {
          "id": "b3074817-184a-4bcf-b983-ccb9c4bf657a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d97cac01-b664-4b24-ac60-32c04f5f30e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697b7b29-5c55-407c-b93d-27afad8ef8de",
        "cursor": {
          "ref": "6fa1c093-34ad-469f-be6a-e673a97f34c8",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1c01aeca-3528-461e-994a-5d153942ac32"
        },
        "item": {
          "id": "697b7b29-5c55-407c-b93d-27afad8ef8de",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f2a919d7-543c-437c-919f-0d493913d93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b98d49-095d-4733-8488-e8bcc525ffd1",
        "cursor": {
          "ref": "d9186224-5607-48f7-9246-dd6587541627",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f00113a5-fb0a-48c3-9b44-faf78e901060"
        },
        "item": {
          "id": "34b98d49-095d-4733-8488-e8bcc525ffd1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f49c8315-ad1d-486f-80f4-45edccd12729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861c0a70-c075-41a8-9819-a73bcc4ffdad",
        "cursor": {
          "ref": "938277fc-605b-41ec-b507-0a60d320008e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e360b5ba-f28c-4162-af28-96a5730cdd0e"
        },
        "item": {
          "id": "861c0a70-c075-41a8-9819-a73bcc4ffdad",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6a76bd2d-a81c-447d-b499-f67fc5f3331a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7b9619-019f-4b4f-ad55-7a8c617cc5d1",
        "cursor": {
          "ref": "46c4302d-bfb0-425a-8b1d-de5e7e2688cb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fd6b4774-aaee-417a-9389-3578913ed3e5"
        },
        "item": {
          "id": "ff7b9619-019f-4b4f-ad55-7a8c617cc5d1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "59a6ba60-f92b-4d06-b081-c816b76c6bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8422fd6-dde8-45dd-a851-48e2ecd86f4a",
        "cursor": {
          "ref": "54203f0c-a472-4d53-9e22-693d7a89c3d3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "028cf3e4-85b7-4b92-89e8-871c7436c3d1"
        },
        "item": {
          "id": "c8422fd6-dde8-45dd-a851-48e2ecd86f4a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "55969d19-f0f6-460e-af9b-3c03efdcbe39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a731d012-042a-4ce4-b995-aba1aa162522",
        "cursor": {
          "ref": "9a025f15-b48e-4b0e-aa5a-f67fde8aef53",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "955a5485-e807-439b-a1a0-d75736106a7a"
        },
        "item": {
          "id": "a731d012-042a-4ce4-b995-aba1aa162522",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d4d9f4bc-5a51-4733-8ffb-01c26e609cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9010bf-6386-4bb9-9764-6bb32c2cf9ae",
        "cursor": {
          "ref": "540e8918-a57f-419c-a4d1-7fd393675868",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "717e16bc-d6ab-4156-8114-dd2343340e19"
        },
        "item": {
          "id": "dd9010bf-6386-4bb9-9764-6bb32c2cf9ae",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c7984832-6070-4d50-8493-175f88bf5220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcc75f4-c0d9-4f55-bee6-c208b2e63841",
        "cursor": {
          "ref": "660edb61-98c1-433c-b2db-4347035d628e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bfdc9177-a4a8-4212-b9b7-a0355f44d158"
        },
        "item": {
          "id": "edcc75f4-c0d9-4f55-bee6-c208b2e63841",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a75da403-3ce9-4a64-986d-243b10497f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42656d7-a87d-4b44-a4f6-9fae41b31d3c",
        "cursor": {
          "ref": "7da988d8-71c5-4817-ab04-a1a37ae85b89",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "44edcf96-7459-49ae-ad07-da84cd07c1c7"
        },
        "item": {
          "id": "e42656d7-a87d-4b44-a4f6-9fae41b31d3c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e4322aa0-d753-4182-93cf-7c09e24449d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f505c0-2c6d-4880-987f-8e92053feed1",
        "cursor": {
          "ref": "97249bc0-546b-4d0a-8731-5e7ceb200562",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0183ee0f-84d7-4135-9854-33848d2a2130"
        },
        "item": {
          "id": "a4f505c0-2c6d-4880-987f-8e92053feed1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a9048b7a-2d9f-4201-9c89-b5b5655a9f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182e3b48-fb99-45b2-8f55-63ed03a28100",
        "cursor": {
          "ref": "efe77b65-c4da-4a56-b5cd-8a7aa5450a55",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2c1506d8-b1d1-46f1-947c-b2a75115a79b"
        },
        "item": {
          "id": "182e3b48-fb99-45b2-8f55-63ed03a28100",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "10c18dd2-8783-4be1-bae7-63c7c6cc8964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e237c3-ca70-43f3-8154-5cd61de70a12",
        "cursor": {
          "ref": "7ff854e9-6cbb-4a27-a7ee-7e8c1804bd14",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8693d60a-bf05-4031-b257-200b3b5710bd"
        },
        "item": {
          "id": "a1e237c3-ca70-43f3-8154-5cd61de70a12",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be23ba43-7352-4d25-a8af-1d5c5cafe8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ddb7ec-5caa-4225-b098-5130294941d7",
        "cursor": {
          "ref": "aa254299-f08f-4e77-966c-8a46f72074b4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "644ed39b-41fc-4478-ac99-189369299c6d"
        },
        "item": {
          "id": "68ddb7ec-5caa-4225-b098-5130294941d7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f4d53b52-28ad-4ee7-8c75-2fef908b4661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9417bae8-de5b-4909-9bc7-48ebec5ac51f",
        "cursor": {
          "ref": "c0e49c2f-8946-4fc9-a27d-f8f0376b10b5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "82b5a87b-f591-47cf-a4c8-c7d58d670958"
        },
        "item": {
          "id": "9417bae8-de5b-4909-9bc7-48ebec5ac51f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "292e517f-1708-4aae-88cb-cfcd4baf91ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a2964b-a8ce-4076-8820-c2e436ed2fa4",
        "cursor": {
          "ref": "19deef36-8900-411e-82da-bf3c2f13e711",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ab873f79-df2f-4f85-95a5-48fe71cd198f"
        },
        "item": {
          "id": "f5a2964b-a8ce-4076-8820-c2e436ed2fa4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "87b05f67-68c0-4cc4-9b94-9c4277591d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdbbf7b-0f5e-41d1-a1d6-03802913b302",
        "cursor": {
          "ref": "8a78fe72-2bfa-400c-b178-709d7a34dbcf",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "622115b2-68a6-43f5-adba-1b4ea1feefad"
        },
        "item": {
          "id": "ffdbbf7b-0f5e-41d1-a1d6-03802913b302",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08536ec1-8f32-4390-8036-0b4a84ce5d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c988ec-28d9-4797-a6b6-4641b54a8160",
        "cursor": {
          "ref": "5bbb61e1-f55e-4f91-a4a8-0c9ffd2bea9a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "38d1ea93-be85-4683-bf8e-33c44185ddd0"
        },
        "item": {
          "id": "c2c988ec-28d9-4797-a6b6-4641b54a8160",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "74490563-2a21-4c97-9956-75e46c097ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1f85d0-7c31-4986-9911-80b8e611657d",
        "cursor": {
          "ref": "0b2f56bb-98b0-443d-8fb0-cada9d8214e1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3fad9c1f-471d-404a-be1d-02f90a72bbfe"
        },
        "item": {
          "id": "5c1f85d0-7c31-4986-9911-80b8e611657d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ecf165ce-694e-4233-9da7-fc670fa3cefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00f0876-1f8e-4cd3-957a-a60092e01657",
        "cursor": {
          "ref": "bb7932d2-2481-41e9-a4fd-11c6ded016c9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "19868d02-b50c-4ffc-87ca-c33d692a393a"
        },
        "item": {
          "id": "d00f0876-1f8e-4cd3-957a-a60092e01657",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "76764489-7f8a-4e1e-8396-5196c83972d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6502b189-4f01-496b-b0d7-77ecb387677f",
        "cursor": {
          "ref": "ec438655-0a23-4652-a1a8-87f489d167dd",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "074de848-8332-47ad-800d-be8248916e0a"
        },
        "item": {
          "id": "6502b189-4f01-496b-b0d7-77ecb387677f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "334d9701-1574-4217-831e-6fc699e17225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b240981b-6407-4f72-91e2-ad7f6c658735",
        "cursor": {
          "ref": "d1caead9-e352-4fab-8672-30e2965a9806",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3b71cf9f-e393-46fe-ba4e-0555409abcbc"
        },
        "item": {
          "id": "b240981b-6407-4f72-91e2-ad7f6c658735",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "08f94fa9-ec69-4bc4-8dd9-a87771299648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6f1588-ef28-44eb-a1a2-94643b6cb8ca",
        "cursor": {
          "ref": "6438291d-7f99-42d8-826e-08e14cf62798",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a6b3b91e-8aaa-463e-8bf9-9ce5c92a4fe5"
        },
        "item": {
          "id": "2d6f1588-ef28-44eb-a1a2-94643b6cb8ca",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b9f1818b-d6bd-4007-ad11-dc787736c200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7ef5da-9a92-48ab-a087-f039f9f15578",
        "cursor": {
          "ref": "92d8e526-5f29-4932-8ddc-36f11f90be4f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a626e263-c983-4f50-966e-8eefdeeacfa9"
        },
        "item": {
          "id": "3a7ef5da-9a92-48ab-a087-f039f9f15578",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "487d42ee-59ba-4225-9972-94429ccc4af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51ee86e-4b19-4654-af84-f7697e5513c1",
        "cursor": {
          "ref": "e29bccbb-5dea-4df4-b6dc-e6976d854feb",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5b9c2e06-b805-46d0-8e4f-4861837815cb"
        },
        "item": {
          "id": "d51ee86e-4b19-4654-af84-f7697e5513c1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a7b93c87-6f6e-4996-8197-92c1ba05d314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999a4076-103d-49dd-805b-6f3f782561ed",
        "cursor": {
          "ref": "3c02c6f4-4277-4637-968d-787542d5a398",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4912086c-116f-4a74-b0cc-46ba97076982"
        },
        "item": {
          "id": "999a4076-103d-49dd-805b-6f3f782561ed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "85efd469-a4a8-4613-a160-f394d0a306e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a2181f-c14b-4dfe-afae-6df887eb122b",
        "cursor": {
          "ref": "13cfeed2-3fd3-4144-9493-55dda0e17b59",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d97269ad-88c5-46c4-a9bb-c90b52b71902"
        },
        "item": {
          "id": "36a2181f-c14b-4dfe-afae-6df887eb122b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "abec5b0d-3e2d-434d-a873-1dfd334318bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85cf29b-094f-4e5d-98e6-d86c513a1c1a",
        "cursor": {
          "ref": "6649eda8-e3aa-47ea-8864-ac1c514e8d2b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "70809c1c-590c-4a2e-b054-fa94c5748ac6"
        },
        "item": {
          "id": "f85cf29b-094f-4e5d-98e6-d86c513a1c1a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "eae4dd8b-5ccb-42b8-839f-60efb6c3950b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99466ccd-cf09-4d58-9ba1-8aeb4403bbbf",
        "cursor": {
          "ref": "7348b1bc-d6e0-4d57-85de-8066356d53d7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "43d0e735-2d49-4c31-8f6a-94483d807b11"
        },
        "item": {
          "id": "99466ccd-cf09-4d58-9ba1-8aeb4403bbbf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "71071f35-c75b-4b00-9c4b-eaead0a290bf",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e894eb75-56cd-44be-8cb4-7660cfc77208",
        "cursor": {
          "ref": "61d7b66b-4412-4597-9a28-ce2c37074f7a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d8f6e69b-cba6-4ff2-94c2-428e340944dc"
        },
        "item": {
          "id": "e894eb75-56cd-44be-8cb4-7660cfc77208",
          "name": "credentials_verify"
        },
        "response": {
          "id": "99aea3ce-6e90-41af-b700-b6257cc412ba",
          "status": "OK",
          "code": 200,
          "responseTime": 2856,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bf902f-a99a-44db-bf0e-70a15232db3a",
        "cursor": {
          "ref": "ee64014f-7f9d-4434-bd1a-30b103db28f2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f91bfae1-cd33-4670-989f-925e10243ce9"
        },
        "item": {
          "id": "f4bf902f-a99a-44db-bf0e-70a15232db3a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6be32ca0-9a6f-4e6c-9cf0-75a5ac56f140",
          "status": "OK",
          "code": 200,
          "responseTime": 2708,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e2a452-b95a-4aec-805a-e979cc706aed",
        "cursor": {
          "ref": "809430cf-e75c-496f-9fa5-c2a71405dec5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f09a0e74-f3d3-456f-bfc9-fbbdad638935"
        },
        "item": {
          "id": "55e2a452-b95a-4aec-805a-e979cc706aed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec5d2f7-ae3a-4d33-b6ad-4a5802ec72ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e2a452-b95a-4aec-805a-e979cc706aed",
        "cursor": {
          "ref": "809430cf-e75c-496f-9fa5-c2a71405dec5",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f09a0e74-f3d3-456f-bfc9-fbbdad638935"
        },
        "item": {
          "id": "55e2a452-b95a-4aec-805a-e979cc706aed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ec5d2f7-ae3a-4d33-b6ad-4a5802ec72ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573550c6-bdd6-45ec-92ec-a08861434801",
        "cursor": {
          "ref": "1a7c8f49-5c77-4ddc-8720-526f2173a6c3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2dc12e0c-8114-4fd2-b8c9-17b53936db7a"
        },
        "item": {
          "id": "573550c6-bdd6-45ec-92ec-a08861434801",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0522ebde-f1f8-40d0-91c9-602d126b661a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c5569d-6046-4d87-a1c4-c6626b0c0457",
        "cursor": {
          "ref": "f6b09c7d-6bdd-45fe-aaee-23662223a983",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1b93a68c-54af-424e-b8c6-cca725a27fea"
        },
        "item": {
          "id": "c4c5569d-6046-4d87-a1c4-c6626b0c0457",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2f648e69-079d-4229-9418-aa19dc1236b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}