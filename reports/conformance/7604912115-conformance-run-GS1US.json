{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3642c3d9-a29a-4811-ace5-c083b7fdb8ef",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e16455e8-6ae3-428c-b475-495a28608546",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52071e01-a312-41be-b261-8bed06354f7d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "964221e6-40a9-4efc-b821-f7c94fecca9e"
                }
              }
            ]
          },
          {
            "id": "228d3a88-668f-45e1-8184-34f396afcc7c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b734111-92ad-4553-86bf-60d46bdf5e4d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "926680d4-4362-44ff-92f0-2ffc7b1010bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d2b06321-cf39-4273-8ac6-616ac70c9330",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d24e3aa2-2892-47a2-b314-e431d146f6d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "56f46bdb-f7af-4c14-a595-f2478327dc50",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82629482-23cd-4efd-9eca-21f3712a2e93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "635eaa14-e3c6-4faa-a2d2-1c3e26e10207"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b128c8ba-933d-4f11-81b0-267c1dc5b6f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b83ea877-59ae-45ac-a991-a5359fa0d526"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "920dc63d-8d02-472a-b840-da5422340b4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e62a3fe8-7024-49dc-b7f4-4b0c21e01b6f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4a04a0d-9cc4-4114-b360-f7bc9176e59e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d25e70f3-a4d1-4aa7-8a52-4ff16ccd1bd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8def0164-6d25-43b0-9a81-f6969b651da1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6e95a63-1f16-4cf9-b4b0-141d20eb78ea"
            }
          }
        ]
      },
      {
        "id": "57fceaf2-c99d-4fd6-b38b-26f499870fbc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5cda122e-209e-4e7b-9d1a-2560bc4844db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0125422-c870-43e6-aadf-60ec947d2e30",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5e7893e-9ef1-4bce-8d35-317380ece02e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef955146-47f8-4e1f-a292-ec1125dc7726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64ff1632-0af8-4ca7-b22d-081037bb036d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dc4a66-6f3c-466b-a220-306c76ed8ff1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ba3595-54e8-447e-9087-be6d5bff44e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1817cec6-349c-4c37-a68e-4debf7580250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8635a8-aa33-41e6-9222-ac4ff33c153e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4327c7-be23-4bef-a812-6cc8f73dc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d14fefd1-c070-430b-8503-31ea4335dcac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e2b4f2c-cf67-497f-9b8e-1f0e24834989",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1a628eb-65cc-415f-a5d5-3394b2e7ffd5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb322f4f-1602-456c-99df-97f8b358ff82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f50debc4-a631-407e-9647-2ff79b004c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e3bb30-db11-4045-aad7-92943b105f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d9dc94-c55c-4a4a-af80-d8255aeacfe9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8c1c59f8-c4cd-4cdc-be2e-0a656dddcb7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a632861-6493-4657-a7a1-71ff25448092",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cb9170d-03c3-4027-a881-592cc9b89cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "985c6086-6749-4b3d-86c1-7d8c13f5b257"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a38ddb92-f3e5-4d9a-b129-4349bd21d1a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e2d687be-f6bd-44a8-a736-ec3970092f70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33f43fc2-52eb-41ce-9ab2-21529540509b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df86afd5-ede6-4749-91b5-3a79b8d4551a"
            }
          }
        ]
      },
      {
        "id": "18e65299-3378-4d1b-a479-14e181bbd66f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8c99b6fb-5330-46f3-aa42-c8ee25780748",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39c8875c-2a26-43e8-86ef-380a32edcf80",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6175b3ba-e66c-42b6-922e-5779ac5a1202",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b64971-f88f-49dd-be75-e6a30158a1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a342e4-5d14-4e98-b3ef-5de0ab3c7140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99487915-1354-46c8-bd7a-27be0b153e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d5c6d22-e60f-4d6f-af6b-9fa3fcc6fcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc604f06-5ba1-445f-9867-e03854e30ec8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f9ec25-976f-4c39-a925-bf8db16a78e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f685c3-bd59-4f79-a773-35202f34c44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdba26b-f1d1-434e-afd2-d2408b14db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8052c02-f28d-4dd3-b346-adf39ae0f278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a687da9-220e-4352-8c35-299bc6e35189",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765d0b85-7e35-47d4-97aa-0c6c7a9afeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a5a3d0-f5b5-4ea0-9b20-0e555223e488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7ec81d-6c1a-4b8f-9a1f-9148c1dc363d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4ffb4e-9925-4e21-ab9e-b78151691e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d57719-bb4c-4722-8030-837df10e7fb5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b5e4e4-4252-44e5-8daa-be0a70317c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21265fac-cf98-4487-acd3-f55fbd3cf930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59964d9-1091-492d-b92f-549dc8c8385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d82f52b-8540-418c-bb04-e41f9015904b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a549fbe2-3fe7-465c-acb8-784b5d6bc5ea",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8932987-bd6c-4b1f-8af4-8be58f69ddbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f5124b-0bdf-4c59-bb34-708fa8ef11ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b2b804-d38c-46aa-9379-4aa1dbfc3d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9886e04b-f342-4ef9-be19-68560b044827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea78001f-1928-4b48-8faf-20f02f0ef328",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c97602-3398-4e98-ba96-721d210860e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee7cd6a-575e-4ab6-849c-8d165d398622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1b4f0d-5d35-42a0-a0aa-c3176dc5f019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "164fa13a-6bd0-4de2-8d4e-2ad5d90751b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbca108-28ca-4b29-a206-6aa2d73a5701",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9ec7a8-db4a-4256-93b7-7d8f5613e088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209e361f-f765-4261-b7c5-2ae91dd28a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c74a80-3972-4c02-835a-2b9f4785e506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad7b651f-f598-4bf9-bf87-f6c4e57a25c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9e2300-993e-4d06-b3e0-0b95ce7f1322",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571454f7-c8ea-42e1-9a9a-934d502286d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bf7c62-aba7-4e38-9afc-277435b2a007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83384a8e-2e12-4a30-b0b0-3355ba135306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0ad3d64-abb0-4307-88c4-510035779ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0943f9-a34c-4455-95d5-4b98e8260e74",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd54083-9313-40b4-ab19-2f9de8338326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de0df78-a24e-412b-90a5-c51d55fdeea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8dcac4-9eda-4965-98e0-1f7e63d81c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a941d07-89b3-4908-a80c-b0d5ca315f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe136278-659f-4a8d-91dc-c60f63b6b34b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd3b381-d1b3-4d65-89e0-4fc74e3891aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827d3e18-f95d-4a39-b45f-f4687eff3c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22296676-24c2-4459-9553-18fa14e71d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbc5e92c-29e6-4f5d-87bf-86e2a256cd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55d9cdb-b20c-4092-95e5-b90410bc8c77",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5ca072-ea2f-4f24-93b4-d035891faefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf1a7e6-8f9c-433d-8fdf-227d3265ed1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b688aa6f-ac71-47be-8710-35bde5eea15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b4357a-45d8-4364-a6c5-534985253342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fcf2f7-a716-40cf-ba63-4dee81528abe",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4158d512-923a-4db1-ba7b-4aa4d86674a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a613b963-3993-4058-8ed9-04ef4f8badc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb0372c-44cb-4941-a55a-c929016cf6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db66d552-f609-4882-a94d-d23cdc6e16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f843df-707f-4377-bbe0-dbb00a1ceafd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22c4c8d-18e4-48f4-aab6-ef374c83d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708df0ac-47da-4d0f-9438-b163811f9b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce8809d-d308-4473-8aee-b42da0a58cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20928d55-9b15-4ffa-a1ff-42d987e68785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9339b6-19f1-4a0f-9101-433f3cadf28e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a86f7c9-b402-46b2-b2d6-bad143a4a9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de86ad3a-45a0-479c-b9c4-6930f2675038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2a6c67-8e97-41b0-b811-2ffb76861c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6d7e017-a417-474e-814d-505c0c86e652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63e01df-b5de-4cf2-aeb7-708dd5bfdb05",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb57210-e1ad-4fe7-9e2a-ad2ecd1f7afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628736d6-3a80-4f1e-a9f5-6873207ea0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e3e2b9-4cbd-4139-91d8-ed42d7c1c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c45324a8-f358-4e7f-a75a-43316166113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5103f5-0a4a-4942-976d-bd74918cf12d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b48571f-a5f1-43a0-bec6-774f7ab06e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84cae69-d89e-4c31-b822-ab29ea07bea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71bfe2b-72f0-43ac-bb64-6bd0a3405dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc241802-f150-48b2-aa08-44b59be79d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503719e6-95c5-4be6-b5a5-dea8c63c32f0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd12bd01-3c8d-4c48-9c3a-e5c42f1ba8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e9be7e-4ec4-44ce-bf25-dfbf529be069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec1f43f-ab20-4648-a3f2-a50ea585b86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee6149c4-f364-412c-ad6f-70089e9026e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361854e9-be75-4a05-b333-52ba4950530b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6090ea96-f3a6-4f7a-afc7-9c2f434e40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2dfd76-f9b9-42a0-a7c1-911ed1d0c737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5797718c-038f-4100-aa1d-390dbcce9baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0300d015-adbd-4524-bdb0-bfd985e37614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cff81de-b129-497f-944c-33f2ef580e48",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36158651-7703-411f-b305-40cf1e43e1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a926a9-994c-4e4c-86b2-074579c0e20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc0a256-b91f-4bcc-8047-9b2e6d6bb5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc02ea57-9872-4538-85e1-cb73ad780e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c57fb2d-8b36-4a3f-81f8-6602f7bc48d7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ee5114-f272-40e5-ab88-2e71fdb862e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804370bf-4281-44bd-801f-fdf3749d1253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3501be-5188-4697-879e-8811f5e09eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a563940c-a573-4fac-9a2e-f6d26237fe85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d82eca-5125-479f-b161-910d22da5771",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc99f6cf-8379-44b8-a45c-e76bf243b167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7b734b-48f0-4c3b-9713-d4c84645ec16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e456f44-9b96-475c-996e-8d5f7f201445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9cb17b-1878-4b17-a5c4-5a2d3f9df161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1754875-ddb7-445c-aadb-da7e007af99f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6405e41-ce15-4cb4-8f5f-ddb53bf19670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacb475a-b0e3-4b93-8fc2-3547006cc7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e9c54e-1a91-4964-b3d2-ccf2fe2842a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74aefd1b-0c95-427a-831f-6379e3d06127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b288cc3d-c87f-4096-9cb0-58aa91adcb35",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe9ab79-4b7d-4035-8987-c813cd511d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891e2a99-d82c-4503-9b5c-c2dc54ad01ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee68144-540b-4d4a-9a2b-a8a2cab83731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae057640-6a06-467f-9a41-7574e2abb933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25961d98-4b47-4fd7-a658-19abf1da4d4b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811f144f-84fe-472f-84c9-77e8bfc676ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa01b03e-5bc1-40f8-a61d-6ac2bdcdb3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd1d5c4-6447-4080-a40d-601a857e7234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "775eb03b-082f-4548-8a3b-3c6a5ba074a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6006723-8f01-415b-b149-55a70a6a5967",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b86b5a-e5eb-4378-a801-d04c3469da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71380aa-4ca8-4af6-bf57-fe6d29875fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1c44fa-cb44-48c4-a8c7-ed7defb5d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf1a9b5-cbd6-4985-a8b7-f54115fcd36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592dc60c-982e-44d3-9018-512731ec076f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbd8ec1-7da2-46d3-a40e-31a3870ffeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78d2015-112b-46f2-9bfc-5658925dce82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f36644-8906-462b-9559-189c05e04580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffc2d30-47b4-4102-8e3f-f08438b8da54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99639fce-416a-429b-8ec9-c713bdfcffa2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84afd57b-dc01-4138-a264-72e6ff53190a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fc7872-3e2d-40f1-b31b-5f17b56bdaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1944596-20ad-4f5e-8fe4-80bfabafc35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a108661-aca6-4c54-85d2-9a0d65d30ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e082ecc-9d53-4f51-a9ac-a66ea3b925fe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d223e802-4241-42e0-a2ca-c75f11881858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff75753a-06cc-4aa5-ab5d-31fd9bee9228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c81d5de-6ef7-413c-b7da-a5fe6e2c79c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a813e3e0-dd60-4478-9673-d4db6cf48831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a25015f-d93b-4881-bc25-640f721ca447",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28fe80e-c1c2-4894-934c-e6e262f7753b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320ac582-0cdc-4675-8508-e2527152f677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d32f57-5f5c-4f60-b353-ae3c72545e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e009cc48-4d49-4c2b-b1e6-63493c49ae39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e762c51e-7480-4bfe-92c5-1f7d1fc39426",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7f25e9-e66c-4551-942b-e2d15d305520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8619f02-a1bb-49f2-b1e4-18c750724ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e7c14d-4647-4841-b946-0b20e0f8abc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "792abc48-a943-4ea9-9f1b-ea9157459575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb13f16d-e55c-4c19-80d2-9574fc6b2f29",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710db48a-d5ec-4ecf-acaa-2e5f79cf5aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8cc4e2-1c2f-41a4-b29a-a0c956d4e490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f2ed06-81ee-4e38-85fd-9d7055eb108f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8b72d3-18c4-431d-aa4c-beb96114a81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bebf1f7-aaa8-40ff-aa45-538462830b77",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a277b96-f882-4371-9ca8-82a6f923c1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7495de39-274a-4ce9-9fa1-e9bd23c00c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a004746-9f69-4c9c-976b-858f3ef16f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "284b8fd5-6fdd-4838-9e02-2f1f646fbd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4efdc4b-0d79-496f-86fc-974bbe9cb411",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541babe8-7065-44fb-bc88-b19030ff91b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038fd8eb-4b2b-44de-aa7f-7d3c9ae50365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a53b08-589b-49d1-ae94-496e92cf16f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7a8d61-fd64-466c-8495-c9595b4dbc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3359eb1-e25e-4c0a-8015-1f6bceeb3390",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef4bbfa-71ff-453c-9ff9-b26583fc40e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4aee1de-e1a8-4324-bc1e-67bfa0b30693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3095ce9c-9ebf-40d5-b98c-eee12566e7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b48c448d-1d88-4c73-8f0a-5701a9a061ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b68aadb-949f-439a-920c-f744432dc2fd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81f777f-0a5c-46cc-8897-88a00dd57b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1b5bfe-7362-4008-abc8-176ab366fc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b17a28b-a746-4484-bf4c-aac41a1e3b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "130e917f-9455-4220-960c-35d9160759b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8755cb6c-7ab9-4fb9-b14e-450a0627a3f3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0613bd3-3cda-4f59-9310-ff6976996fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c432a1f-4ca6-4d98-98bd-598709a1dd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cdbc09-642a-4080-962c-30f215c4f808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec77299e-3d3f-4752-a78a-f32f64dd00ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e6a149-768a-4091-8d96-8140167d2de7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58154c8-75b1-4b07-95c6-a7fb1077cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfece90c-5269-4d11-831a-b942b22cebe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6904996b-a964-44d7-9e6c-e604aa7a8f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79fdaa5e-24d0-43b5-b6c9-b57b2885d649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f869f15-c20c-41eb-b526-c0469add2207",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa3bc0-4b28-47e4-a644-75f292a884a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83b79ad-da4c-4997-ac45-df1da34b28e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d06903-caae-45f8-a1b8-025225846e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e6fb78-7adf-47ff-9975-c9c70daa2d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11166dd7-db7f-494b-afd6-7780a1e239e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1134a0ff-2abb-46a7-9d95-79de4a839506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2345bde-63e7-478d-a1cd-678777468178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70dc514-1578-4ac3-8aa2-2ed78687d307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30c5d1b0-bc41-4edf-9533-2c39dcd43414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaf7aa3-dff3-40e4-bcfa-4e5f8d174dc2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d62dd45-eae7-44e6-bff4-5820e4f8a3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8f958a-fa14-4328-a780-39bfd5bef2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426fc89e-29ec-4538-aa3d-d2f54c79c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2580d897-a445-4383-98e0-63c9f599bc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931bd80f-6193-42a1-9a8e-34995690f206",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85c1802-d1bb-4274-a397-ac309c4074e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d600f68b-a5ef-40ad-b82f-4f8e58eb8289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd34cffa-ab2a-4e53-abe0-fb4002339d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "50b78b31-4623-4fb7-9226-b1052d67297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8f00d8-05cc-4a48-9b05-33ff49eb82f5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3181dda4-5a70-429b-8197-8ce3f3b95c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677f762b-31e0-4eda-9b85-745f242adacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad2e5d8-df6a-4060-aff3-5b2b31f97311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6e2d13-dce3-4647-941d-ead5f2535861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f7dd37-cb53-4207-b127-ad763ff837d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a50b8-8ca6-47d2-ba3a-f4061510f0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4541b5-221b-4bda-b151-850b1177c350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290444f6-86cc-4361-9416-b71472304929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1de2dd85-6146-4162-aade-ecfd8c77781a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2456ff3d-bdc5-4e1d-95d4-bb31afd00d1d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ba8079-6a9a-43b4-8cdb-8f3293a1a9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837b9804-13cf-4822-a288-ae825a1aa430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d371d265-94c8-4303-a8c7-b8b21d7f798f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb13e2b-196c-4308-9161-bb8c05d24cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea95b137-48ae-4392-a743-fec5cc0ff1a3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56d875f-dcc3-4d58-ace8-a85f3b5239ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810f881b-0c47-4b98-9fde-9573ec46a0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2e0dcd-a71f-47ee-ba5f-f256411e31ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e220ae-ff78-4421-8211-d4608633d199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21910e8-0a6b-48e8-9096-e5c0454ec88a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f2791d-4437-452f-a63d-32477f38f766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cc8c30-9e05-4968-af9b-1f35f0f788a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5c1c17-7c1b-4974-9c89-3da055eb9944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa78ec4-7bb9-46f1-811f-d957cea3eb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ff0235-f1cb-4487-804a-90b2243d1b00",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57cd7da-421b-49ff-af0f-0ae1bf1fcfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55095eb9-3f74-4c45-943c-8c758e0d19ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfc274a-5877-4b77-ab33-8c27689edec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe570575-91bc-4de2-a81b-ddee7d49f4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ae72d3-d674-4954-8e35-5006afe5e18d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f40b49e-8055-4d81-bf87-c56efbf58dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc35f77-b6e5-4a0c-ae54-d182b28b0786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cec7d99-85be-4f3f-9af9-ffe54834a857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db4d035-bb56-4f2b-b7db-5017b6555548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe700aa6-17a1-4dea-800f-450c63b1e088",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9802280f-5be1-4e40-b309-3b4e670a006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137255b2-629d-4584-88cf-668699544783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af988e2-d766-4b8f-9dff-71ef2b59a0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd61787-33dc-4f04-87c7-ceb65af0c1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e6160f-ac79-472f-a585-f56e0e1c483f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d2549a-ce63-4524-95ae-da0621f9a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1636eac0-fff3-48a3-8c6f-3d333154ea32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce3be0c-7bdc-46e6-853a-83d939b80b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee61a61e-c151-4ced-8a0b-baecde659ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c95df2-f1a8-4dc7-9f40-54e3c73f6d53",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4862a47a-bb48-4cce-a37a-a0ea3f6ad230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2337a104-ee8c-42a4-b29d-6db5ba3baa0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa007f9-2b01-426c-b5a7-e96074ceb032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8572e088-b365-42b2-87a4-781e2141c684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdcdfa2-2c7c-466b-8840-c9ea07464bd3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05445d0-f962-4dcf-a006-f8b008ea9eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5093e1c1-6878-4b03-999d-8a469adc042f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0bfff7-b091-46f3-9a7c-724af0387ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b178b49c-c409-470e-9965-305156496218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cd73ce-357e-4bdb-990b-6ee11172ac6a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bb7649-866f-49ba-b370-8dfaa8da5ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7131cc48-1dc0-42e5-9a4f-a7324303e439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e86f110-370f-48af-8f6b-67d0d6599ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb7aded-e9b9-4702-bc2f-ce53abfaa053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d88241f-243a-4523-9c1b-8f6ca6b3a8ba",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab58f3c8-fce4-465d-b269-1abd4240b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aac6e9-4876-4954-a523-a38d5945d045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c338dfd1-d36e-4451-894b-4e6edf47601e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f56355-116f-4072-aa5a-a7431c1ed6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33570649-0d1b-4944-98f1-cb98db040e41",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da0e554-fe3b-46e9-b1d8-6d5280b646aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bf3030-f4df-4701-b62f-66881695d586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d15ce4-47ea-45ff-9eaa-6c3145944ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c56ac1-10fb-4598-8471-1651161f2bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baee2d58-b9bb-4166-9023-5e051a5a9c0a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc236a9-5a40-4b54-91e3-abc461e9af98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1484242-c575-4e87-b69b-223ed56cf979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc03b8b-c1f7-444b-ba85-c95591a85a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "94666863-6b2d-4afc-9eb6-49e95d5ea68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764d05d2-31d2-4194-8c00-dcde1b1647b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b46a7-df8d-4fdb-8a2d-18927442fae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94172c1-2b9d-40aa-b2ca-b0b5d637d9aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079dd9aa-c2aa-4988-8101-5e40c474e32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e32e7e7-33b3-4699-ba50-c9620f07f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8544fc-6d44-4884-ad7e-e612f7c60a81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96eccd4-ca18-47e9-b351-64e400db37df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ad464c-22b0-4bb5-8238-62bf32672455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab936f5-daa5-4513-9ac8-8938a47d88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b4e6b8-57e3-42f4-9fbe-0a63e0aff83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de929878-d591-4194-9831-bdbb603d5a21",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc3cb1d-b61a-419c-9031-46af9e942335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5ff264-0603-4b3c-ac70-49c7907290fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a574170-3c47-4c4e-bc95-a032bcaf0459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07e00413-6820-4efd-b289-b59c517b4a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb86b5ae-cf12-487e-8dfd-11dda5546b25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11576f8-5a29-4fde-9104-9ed800180eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc574530-ba8d-4e62-87fd-3e4dbed5d44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621912c2-ba31-4fe4-b576-28461b41cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b598b47-2793-499d-8545-8556e203897f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed2e913-891c-4b9c-8b25-6c7f71cff865",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c61ea6-659f-4afb-97ab-af8a57a4df7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e82a937-708b-4799-9556-568cca4c14f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b352143b-a8d5-498f-ac07-3f93c29cad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d3575f-581b-49fc-b31f-3f43e5fc1831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9fff2d-f25c-46d5-851e-de893fa68e33",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83a887d-4109-4f8f-bb52-5a14d509d4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979ebaec-4187-442f-afcd-e31cbdbea2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c3520b-09ca-4617-a9f2-23cc6daaac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "04542b7d-339f-4921-99bb-df10a280a41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbf7bbe-8b1b-454f-84b0-9eb47362ed50",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461ef617-4740-4ae7-a44a-2573e34b9fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686372e5-cfaa-489d-8f90-44ae4076f2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bdadd5-54d4-4383-b258-c6526df6fe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5094b46-b161-4f69-a171-aab83c306e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8cbe7b-d816-4c48-9249-6363234fbaf9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cf9c44-29f4-479f-ae44-d9448b03c130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c43634-aa83-40e5-b21a-11acc6889410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2efe5d-9493-483d-a0d4-dcd18ff21126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "698e88fc-ab46-43ed-ba7c-e98521d1d026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4a94ca-58c9-4abd-8a3c-9787f1b46afa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f10ba0-4ad3-438f-8827-dfd47e1301f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0def88-2cff-47af-aac9-b979481b9162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4ae049-434a-49a7-9608-b612dac10b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "168c3024-3ee1-46ee-9d18-879cda4f0dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415f1b8a-4d47-4b07-bed7-03420517cb28",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a10ba64-82a9-46c5-a227-2d000d4f256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf67660-5192-4b53-a165-19d2224ad404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cea0f79-2f80-4539-b0df-7c817793e113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3f1830-c8da-44c6-98fb-1a29dc1fa58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5253f3b5-f46d-4e69-b48a-e55d4bf337d9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e53608-0542-4529-9d88-fb958ee24d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ede6e8-57f7-4133-b9a5-ece919b8bbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d547cd5e-1862-4ef2-9b62-b53b01001a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "beb7b24c-1bda-438b-93a3-a505179a1513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cc3a6c-01d8-4ed1-a99c-b0013fb354fc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e8b56c-b20e-4e51-ab22-1535c736fda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28798845-ba1e-4a01-8fb9-d0f7fa4e6894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c959557-c142-410a-9bd6-bd4f433d8a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "895a9e0e-e905-4495-9573-8e39d0b4296c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb0cd1-95d4-420b-b648-759881ea6d96",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe55a0ed-269c-4ed2-b752-7e91501d83c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba4cc3-348f-40bb-b6f6-6ac5a95d7539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952e6f7-e870-47db-b41f-f00ca2963d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bf7be5-a497-4cd1-a4ee-77e68b529b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1d2557-f10f-47a1-baf4-13d7c1fac215",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1454bf57-c681-49cd-aff4-7f8796c2d47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f2e7de-9d94-4653-9966-7de581b62c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe2231f-02d5-406c-894a-3b635e50f51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7e8b4c-0494-4b9b-a62c-3afabc336d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7109eadf-934b-40c6-82ab-5203075e1b03",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9423929c-8a1d-4af0-bca8-3b17f659aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b07694-96d0-4e43-85dc-2000a7fd1d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a033d620-aba7-4330-99c6-59aaa8d2926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1aed8e-0b19-4955-b8c1-d97ea20e4877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d2cb22-9dc7-4e79-a424-937f0913d7b8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e548eef0-09b3-442e-9d33-6e77c5d668a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad42b609-c3df-4922-99cd-fd14a6eec543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef542a66-6d23-4af5-952c-a7e3c594ba83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47343f9f-e99c-4981-87ac-a95579d9eab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6a6fc2-b93b-4169-a068-82ace27a3bf6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947b5e99-f494-44ec-bd71-35c7c3ef468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4269646-2843-48a3-bf62-071cfbfdd450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3596cf3-fcc5-432b-85c3-7602e3ecb242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68174ad5-d512-4b71-80b3-ab3ef949f44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fbd25e-729f-43e0-99ec-f2ce17afc241",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e85c97-6bf8-4c66-b2f6-bba2b40e60b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f207e351-62bb-4743-95f8-aeafd198e001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8564f860-9288-45ae-b4e8-011ab019f28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75cd98d4-b7e8-4913-a4d4-f371b1cd26e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a730fb1-c088-40fb-9f96-8f062899e5f9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefb62d9-d6ec-4f8a-ab64-6cee25544a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35412ec-3d54-4e56-b318-bb7c63f04260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d87366-d1e9-4195-9f45-61b3d7712827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32cc067f-8c4d-43b3-9dac-5cb8643ff1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88270831-0269-43fd-83ad-bf7ff81836dc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581fe94-433d-45bd-ba94-9fdc60797bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb531355-b471-48b6-83a4-90c5a907cfd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e4ae6f-908a-42b0-a3f9-0641e800a7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21749093-ff59-4d10-9b32-30a78cbdb742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e11dbd-e01a-4071-b274-daa45540d6c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91605a30-3320-4e1d-bfac-82768c5ec6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf2d43d-ad83-4058-b6af-5e288b27fa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b3166d-a38d-4b5f-94fd-fe8ecda61696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a2af54-f4e5-44d4-a071-9d1abd060640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8020e5-d56d-4f7f-a157-113a36db5c4f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f17878-fbdd-429c-b08d-3b04875274d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c4a874-aead-41df-b147-662e60794e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da5be6e-8f9f-4476-ade2-4d6d8a8c0add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8435f722-bf19-4276-a093-c23164710bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c727e40-34e5-47c8-883d-de163eae7346",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58a2663-501f-40be-8b60-0aacb43fc1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7b69e6-da35-44d4-bf03-6f329819ad59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cf787b-cd7d-48be-822e-3840314dca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "193a368b-7345-4f97-87af-80f8de10be8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c241c7-6c78-4c9c-8d48-fc3d85e72c1e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba587b43-1e07-4577-b0e3-a2b0326f2e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b52a654-5f4d-4460-ab78-06fc1dfe2d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801f6350-42a7-49ed-b5c8-c1e50e37b370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7777635b-4e58-4b4e-b977-d0fb1b0a8752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe36f64b-476b-445e-abd5-75f6c8983453",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1319111-1a65-4401-9e5d-c64805e58ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a189c9ef-df84-469f-8943-b97da9c9b14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3764fc7d-1a6c-4c9c-9b50-7650491c0f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "808cca07-f8e3-4ab3-b83c-25a124220946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce51c42-a895-4f7e-ba3a-e41e6aabe0ca",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64bf3bc-81ef-488b-9398-69c6b1c6f71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97530270-e48a-44e0-bf7a-2c96d4d02d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0473ab1-5a61-4672-b51f-e90abcb028e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b402c0-0d60-4735-9c73-75d625c16bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949b98bf-b4ad-4633-ba8c-d7c5ab27df46",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c04b31-0015-4472-ae58-fdea202c9b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b0e5b1-3809-4d47-8843-2b61e9817e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fa6f79-88e5-4553-aade-ddc146471b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90dd0699-0a87-47bd-89c3-076b8e345318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a76e650-1f08-4267-bf1b-750ec729a273",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8cef67-5514-4ad9-8580-f9b846d8b837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dc8c2d-517d-47c0-8ae6-bc90b9665460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aac023b-a59c-46cb-9cb4-ff7058f10b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3ef869-2b83-4a86-b227-dfd6108c4640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79d63b7-6dd8-4a9a-94cf-105de86ad241",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d19a36-096c-419c-92b6-ab5eaea7548b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bbb0c8-8617-44fe-8781-95031b7a182a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a099eaaa-8b5e-4a9a-9959-65d88319859a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4fcaea-fbe5-4608-93b1-0f0fddf5eacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d137504-91d7-4cec-8df3-b568031930bd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494314a3-c50e-415f-9890-d3001f017540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5628776-82dd-4c64-a22f-ca00cb39f7d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95d4a12-cb83-47a3-820b-77e5f1292f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f60d003-10f9-47d5-8579-704c51630104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650dcd8b-f6f4-43be-b9ec-7459d860bc20",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf0eb8c-880d-4e87-879c-acbd514f4e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd59d8a7-38f3-40e3-9cee-e87e4ba98563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398e7263-c6dd-49e4-a996-11dac8a7e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3628dc-fc8e-4f05-8688-f79c195ac484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf6d526-84b6-4ae6-84ac-b8e5e0881c41",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57634345-6a1e-4c28-9fc4-6a58efbae6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ab051b-4158-4e76-82f8-add099691d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf8764-3a60-4588-9cfe-325491873b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3f5a5e-4ff5-43c5-a474-c0cedb3104ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2c6128-daad-4b60-ac76-0feb295feeab",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a291498-d27e-4833-92d5-8307f36fa349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c70b55-1912-4488-aef3-4b44e76ede05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7918ccf-9228-406b-bc8e-abd8d3316c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d1b362-8f06-408a-9813-7466974a739d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50320b37-b3cc-4ea8-aa86-583ff7c2c7e6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b04229-f84f-456c-9fc1-6f20c2b62e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdbaa3f-03c3-4fd8-9182-1e0731d98d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c6173-46ff-4c1c-9905-4474640b87b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "379b0f30-1a6a-4658-9414-073e28a15a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba3c287-63bb-4a4f-bd55-d6ec3824fb98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f4eb90-b484-420f-8663-b9ad1596a0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bf9fad-c2ce-46c6-a78e-eff6a407418f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2ac21f-3161-4e10-9748-7f0fe32c8482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbdb46b-e46c-4136-944d-7714b5994d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522287cf-8321-43a3-9581-04f68b1a765f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d2106-9e02-4d57-8830-ce7278333656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3afcd8ae-960b-46f0-a970-c79fae608fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fee5fe-8474-4133-b0c8-331f4bd0a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b09756-03d1-4bd2-8662-ed9e328e1544"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1d8f565-a672-4916-9697-f6a91a3fd3b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d891ea5-417c-4703-93a3-7a65d88ab030",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb39766b-1b06-4588-917f-e9baf95af76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "078cd379-d3ce-4a35-ac46-8d7a29b17e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080343de-c91f-421f-8286-02bc2d850fcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f7881f1-d591-4398-a061-0f884710bc9b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d2cd34-096e-4d1c-b5a2-b2bcd6d11985",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "974867e4-679b-46e4-a02c-d6f72154a7ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1082a555-be7d-4dcd-9f2e-312fc204d527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5733973-9d1c-443e-8093-8433af7a0fec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7918363a-e3a9-44c3-97ad-c4c7a74e52c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9530c72d-d54e-402e-940b-d9561d9754d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5f48ca7-89a9-4d31-8391-09499d24f546",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b82721d5-c4a0-4a73-8832-3717daf688f6"
                }
              }
            ]
          },
          {
            "id": "1555bd09-237d-4cbc-a6e9-1199d78aad5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83ef6691-0888-4f8b-a432-24d2f0764de7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a0ac0b14-578f-48e3-8821-a1f8b0b6a05d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41312d8-1e9f-497c-bf76-ce17b582586f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e2a31f76-5822-41f0-9be8-4700a6107174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97a70a2-1124-4f04-b73d-2c80a5af68eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6ac292-8788-4c79-bb60-948bda0f0c7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ada5b3a1-1bfb-4511-a9ca-ab7791ed86e2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e6167f8-38c2-45e0-8b05-ba859dc66800",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8ce1263-86e6-4f70-abb2-457bd4ee3e17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8bd6aab-7f06-44f9-b348-2226c157aebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b6cacabb-9549-417b-9e82-84a8e0f30670"
                    }
                  }
                ]
              },
              {
                "id": "4648156c-d604-475a-9f5f-27e0df209f2d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7facaf3-d1f6-4e46-b321-f71825a6aedf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2503a98f-808d-4166-a9ba-3d8d24a35ea3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67e7b63d-10bf-48c1-aef3-8d0043ab010c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3fc9bd05-6144-414c-bb14-9e39e5d9f975"
                    }
                  }
                ]
              },
              {
                "id": "593ae65d-dd26-4ebc-ae8f-5fb8ebf4626e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "213e1fbc-6628-4d1f-a9ff-1d05f0abd04d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "001f927f-5d5c-4abd-9772-ea1baa9603af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6784173-afd3-4379-87da-626caa12016a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d16c02b-6500-4dac-92f0-0120d8762608"
                    }
                  }
                ]
              },
              {
                "id": "2bfd578c-b888-4c0d-8e10-9c1b988bacd8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0f861ed-f9a2-4eff-a2cb-2ef30411623c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22840a1a-1009-4a4a-9f90-83f880f5fb1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99bc4414-7bd8-4411-9d03-00698392641b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c652e0ca-34c6-423e-97bd-a8e1bef64b9d"
                    }
                  }
                ]
              },
              {
                "id": "0eb04b1e-4699-48b2-992e-98ced58d8d48",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee7cae64-0df9-417d-a1f7-d57eff217e70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19ce512d-773b-473b-999d-64a901863e8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b1e58fd-71ec-4ea1-a6a0-5dbc0cda0216",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5615801-6e83-4060-9591-2237f70ba85c"
                    }
                  }
                ]
              },
              {
                "id": "de55b81a-9747-4a96-947a-bca53be1ebe2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1994ea4-2635-401c-b7e0-ee46a6480613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d96ace9f-92cf-45b8-a76b-ec61c87e3022"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a7986b7-7a79-4726-a6a1-a6d3666d1b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "129fdbd1-08d4-44ed-9e65-8f00969c69aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47611ede-9c2f-4ed8-9b04-2d3342f3fb52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "217bc51e-b2ae-4342-b594-5d9e51c04744"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61d7e505-b3a1-41bb-8789-c50f394748d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d38c1b13-8af6-44b2-b405-f67768793789"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b29281cb-0646-4886-b251-f69ba605440b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5c126e41-69b4-4bed-bbc4-37db65001136"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda77113-bedf-4195-b5ef-54b46cf745e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "442be70e-ceeb-4f14-ba8b-c0f60234000c"
            }
          }
        ]
      },
      {
        "id": "76cdcbce-c0c0-4716-9fcc-68d61dbc30cc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "975e0c66-4ea7-48aa-b398-68a88a844313",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e386e3b-1772-49a2-b0f7-b0243f8ceda8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b67b999-e686-4258-b6e1-3963fa18c8d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c58fea-4337-49b0-b7e3-def54c744944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3551d2-ab2e-4181-8547-94e2545d89cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f398972-b2a0-4b20-8a47-f0f5ff9c183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d9e35f-3b42-420f-a5eb-4a118c79aa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f0214e-925a-4547-8044-1c291d320905",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b680b3e-5874-4013-bb07-516140a964a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da76266c-640b-480b-a5ee-8638a61cf9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800893a3-8b87-42e9-bfc0-7e4729a9813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da8ce6f-c520-4130-a24b-b1636c95a53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899df052-d8df-410f-afc2-22feeef5f8b0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad0ce0c-1c05-484e-b05f-b995f5d14ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45f0787-fa66-4a45-bc3d-c5c5df2907e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ec2570-fe86-46df-9eb9-2222fbcf3011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eba0c30-bc09-4094-a901-f71a069af8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b2e3f4-b322-4e49-bdc3-40ee854c651b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bb491c-b72f-41c5-8841-c422006ec2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ca2b95-71d7-40cc-b3ba-da35a57f8441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100f6678-51a7-4eee-98d5-67f44dfb0a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35bdf0e1-5e9d-4503-b8a0-aa59b640fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c66ef5-29c3-4287-82a6-5b8811aa27fd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226e7f86-ce46-45a9-92ee-11974f206a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a6c8f6-9679-4297-889d-0ba832bd0447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3342c31f-42b3-4d96-a04d-bc513f0acd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60e8d2cd-2b29-42fa-8d87-d03023bd6c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5861935-58ba-4ec3-b78c-9ebc78134a69",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbedaf9-d3ba-4208-9598-7b9ebe4fc8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35415cdf-1b8e-49e4-8cd7-8735507df6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bde0d0-70d2-42fd-bbc7-e33723ad52b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1d7625-3e34-4bb1-9fe8-16a57d032a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1f7ce9-f229-4f69-9e7a-6e744bb0e862",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7967f9-9830-4ca4-a42c-5ceec2e25435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3e2622-da39-4c20-ac93-450c92407f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592579ef-9c8b-4fc9-918c-ea69a5b7282a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6143ac-e204-4594-b965-fac2a695182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e958e28-55e0-4a55-976b-db83b708e09a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0889a94-1373-480e-8f13-df15b81b21ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764cc134-3667-424f-9867-a93fb156ca24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed4f4d-8ec4-44e8-8e78-2a220a7f5b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "730508f2-c98c-47de-933e-4eea6235fb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b36cd1-a86b-429f-b728-08eb0a552bcd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e1c21-2c22-498c-8c61-086465164296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027bf66b-dc5f-4bd6-b8c7-8acdbdc253b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a196cb-32d4-479e-9873-2d1d93ce722e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7e2ec7-83d7-405a-98de-02e5019e2962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3657dd4a-9764-4f31-b5cc-2f6aae20d39c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296d641b-87f3-4e65-ade9-63679f5ac21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f9c30e-0ddd-4f52-9176-b1660753eee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d28512-ae55-4a3c-af49-b381030ab0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "830707ca-e622-41e8-b67b-f4d2735be700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c6a3fb-61a1-43a7-9d4a-232f40ac1bdb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19dcb5b-aa6d-41c5-b38c-8505e0617d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6654ce5f-4095-474f-8e70-8a7119147e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800a136f-0bb4-42fd-ae0f-d341e442452f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37519204-a175-4c3d-93c5-e3e55b4a31a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae66b47b-f8bd-4fd6-a587-f8c6c019f46e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562463a2-4a03-44c5-a3a2-b0c14c52567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedaff2c-a0f5-47c9-8aa7-b25d5329211b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1cdc37-5ec6-44ee-b618-ca8ec00da13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46da5e46-691b-4dfb-9ed1-424747e8f960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f54187-0f2a-4208-9dde-a00f634322e6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246bc3c4-a8c1-4d80-bf02-01c90edfd8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fba62c5-a00b-43c0-bf49-90e4ba726f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1c2a8c-2985-41fa-a972-79deb8e2a406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29519f50-b982-4748-9748-fefe40eb2d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4d5ecd-4175-4a89-817c-7ed418a4a2d7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cac155-d6ec-46b6-85c4-fb0f413bd825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e036f372-d09f-4802-9eee-956354cd2463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f07ebd-7bb3-4a0b-bd23-75ef33bb581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "188920e9-4d2d-4cf4-9823-3544610c6af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60374c7c-79ee-4eb8-84fd-2d4c56661600",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5619a15-0254-487a-8b6a-b4a3c7e9c6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0eef762-9e70-4d59-b024-3ef7509b50f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f68e5f-46f8-4b87-b5e4-67f6856aa463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "692c8477-8141-4e36-88f8-9454f0c32fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03066fdc-c1af-4848-9b19-7aff179942de",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176ea0b2-5441-4970-8119-9a09d99de392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ee644a-5d3a-432a-ab3f-c300356f36ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c3e54c-e85b-4a03-8cca-18b8485e5ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "53dee05c-6c41-452e-905f-8550e8839f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b098c4-46b0-4c80-8e4a-d100a8e79c41",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b3e3a0-8806-436f-9a73-57c7aef91190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f147d45-93cf-4cb9-8c34-e8ef4337d1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3c87d2-6886-472f-af8a-8257aeed41f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc5149f-878c-4a26-9e4d-21840dd154e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6224fb25-5333-4647-be57-a63a17131003",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d25085-c1a2-4462-a467-5fcb93c97be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bf4d0b-1f45-462c-8b71-c30df0577758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ee6ff9-d05e-47a2-9f5e-99205e6457ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3244a1c-e53e-414c-94fa-7cc726b936f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684e8bc0-c4af-4b56-8215-d413d3260ff6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf9dcc9-2cec-4493-911d-854e605a5ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19687ed1-6a48-48bf-9e9d-769503b1d5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ff2bef-5f4e-4b0d-a891-a18021398453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60f2e92a-7e0a-4e5f-8aee-eb8a4c7f1e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795f5b92-95ee-4c55-85a9-22b8e54d3340",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41943fc-f1e8-452c-b596-2c103a4e8fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0da51e-14d6-4c40-afb1-38d44892fc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5749bd70-f8a5-422a-97a7-f385872aa309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c0719d-e9ac-4df4-b256-221454abcc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb65280-c99b-4af1-ad76-2c9ab3b2dd44",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db199ce5-4b9e-467f-900f-022c116e9465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e1a23a-715e-4b51-a2b9-c1d4e1df1923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d91b9f-0631-46e9-bcce-345ac6a13850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30bbb65d-21ed-4596-89ed-35d1800c871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd5022c-e8b8-444d-b0fa-cbe4527bd89d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b897c115-a108-4134-b681-fc74ec5b5640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508f6e68-8a7d-4529-a83c-31d2d967f0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dedea0-9fae-4158-b254-ca5274902da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78f76c2d-86b0-449d-be8d-5df20e5d18a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca8dc0d-b87c-453d-b291-147eee0f206c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5133cb64-f119-47ab-be0d-6f73176ba1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597d0cfd-b60f-452e-a644-fee2f74456aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406f7aa2-4284-4444-bb3b-183742b12313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "680b2f53-5457-422f-a2e0-0c8f5f0ce8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d772322-fc81-4f46-9ca4-242d5609ae1b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e58c530-6d98-48ad-9015-10f40a7fd420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38800ca-b82b-43fd-b448-b50000bb06f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dc054a-aaa5-4046-b818-f84ef2dc9bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3b47b5-9356-4fdb-919a-4c21615fa84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fb666e-6984-4b83-9f08-f762d91f913e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ddb55e-e963-48c0-95c8-048aa29094cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02051320-1ca9-48a3-938d-66779b9fa5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164f64be-7d2a-4d3a-b4fc-243d5666b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0fa6da-fcf8-4a4e-a9b0-7b75c9fe6760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7294a10-3145-41f6-8f85-7ff55c6d2f1a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e89bd-dc83-49f7-8c60-4d6aa7a839c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa87701-4cc0-4fd0-875b-6254f9dea315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e875fc0a-c6a8-486f-b2f7-f50760e334eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d954afef-f244-47fd-9157-d4843190d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eeba3a-507b-46c5-9bf3-c0a3702bd306",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0390cc40-352c-4838-8e88-a6f63fa2dbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9abd8e1-9736-4f4a-978b-aab7b7e2e1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1452d89a-32a5-42a3-b881-fbabcbd1da2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45262d70-846b-458e-98ed-f445969c6ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd82e6e-d70a-44cb-bb37-8ff08ee24416",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf015cd-1932-4d7d-8eb7-282d87f960fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b71e3b0-8c04-4c02-a384-db00ea00e25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24263326-e77b-4864-a904-bed99ce40d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36acc05-76df-46fd-a2d7-2e11f2722631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8581fb24-3a86-4b2f-90d3-463fa7d289e5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7c0b91-28a4-4b1b-b2aa-5956716d0178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f02d4a8-ba82-43a8-80f8-d723338ecbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958fb3b6-0117-49bc-a6f8-7a9f0879996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be0d6c0-1146-419d-b390-cb2232db5fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd11f44-2c08-4c7d-87bb-0c6b6370a84b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56c3906-4a2e-4ddc-8f99-7129a22d5982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b05f33-4ce6-4797-948a-59bd203dfa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b94c4e-4f8f-47c7-944c-378c48eba19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6482c11-eaf2-4d51-a155-a104ba1ba721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a37e5e-8d35-4fd8-878c-e329ae0e29f0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cda84c7-4d38-4c3b-b324-26135b51ce3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad52af1-5fa2-4566-8c88-6268642d6919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afcafb4-41c9-4e0a-a186-4212a8dfe95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6746ee39-7a5c-44bb-807f-59f53f72b893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6419d7d2-4917-45f0-999b-fd4cdddc0952",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b052973b-a820-453a-bdd1-06c78f713cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e101a5d-d114-4d09-b5f2-873a0188e3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dfbef4-0e3c-4e84-8145-675150c2ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6c7025-c61c-4080-87e0-2d945326463d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d19734f-66da-407b-bb3c-1cb5fe051b15",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75f741f2-9165-4c21-9d39-4e3589943209",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b5b7b1-1515-4620-a130-45c9e8c2202e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0152d912-ec29-4ae8-ae7a-3f61752b7f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69610a86-063b-48d1-9da3-3159c2673152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6694195b-9259-480f-a298-b9c06318bae9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49fbea42-c91c-4d3b-9be2-00099be46b65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "387631c3-df04-4a65-af63-c57388b0371f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7fc7f37-f153-4636-a9b9-96769bbd6ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbe75bef-6f54-4458-ae9a-a44b549457f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15570ec8-077f-49ac-af54-387d4116bf31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8c1bab1-291d-48fd-a350-a3b92d29dde9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30593b67-5f5c-4983-bff6-e1ced0707d1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4778a28-8246-4c1e-ae66-f25587ce739f"
            }
          }
        ]
      },
      {
        "id": "d7b7dc0d-042d-4238-9b79-5dbb223eb26e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b520afc6-759b-459d-a78a-8d9f5779445c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47ef65ad-fea1-4f60-aac8-318335dff09d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc9b357e-049a-4e1c-85ac-2757df0c8d09",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b838acb6-9ebc-4d1f-8232-0e276e668200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c905ede-407d-4dda-bc5c-1bd7a9e17144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83faa61-0372-4d7b-a551-a2303fb696e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f689fc-3e8b-46f2-8a51-a4c961a82258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1e1eb1-1402-4ca9-907d-6f3b4d4d34c3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d86866-6c41-46d4-a040-4dd0a63ae77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58cd6f9-ef10-46a2-b378-5c35847ec481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e56b3ee-9cfd-4bbb-b6aa-bae6d823a204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "875d6063-e178-4ebf-a128-fdbb8206110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e21cb2-b7b5-44bf-baa1-383fa7c50380",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be04502d-7db9-418b-84d6-8f8dd5b755b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd91c321-8f47-4125-8b7e-e316d7ab7662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acd7dbb-d81f-48de-9c96-27da54c4ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8e75f5-23cc-458b-ab64-d3b0d9cf6a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb31e8dc-dd6c-44e8-85d1-3e6ad8466dcf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622ca99a-7e43-419b-92ad-c8f747bd59f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd042cfc-fbda-4916-8d72-e010908848f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a563e54-86d0-4bf4-b1d2-4ebbe8769daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c32fec2-3f77-43a9-864f-e2c3afe27dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763e8765-9cac-426d-a318-5f171522d969",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a348f63e-517f-4b9b-ac80-e36df675cab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5766245-b695-49c8-b541-94ccfc8d91d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbb7bc0-8799-454c-aab4-96054f10cfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aec4730-dd3e-4786-8e66-b7d97e83e664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac5a21-4ecd-4959-9ea6-a195abd177bc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa9ff45-d4d0-4f0e-870a-bd69549564fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901654da-c74c-40df-bdf1-caa6c3d48ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81584888-b2c2-4d08-b512-c09a4af0158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "259883fa-af76-43fd-8b84-cb2c958eda1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd4365e-919a-49a8-bc52-9689d948666c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6828e38e-7278-4e9d-a5a0-8a8599f527ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bffa67f-0783-4360-9cf5-91c7a4d2171e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2118c434-a050-4627-9d6a-9cc65741904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be62c542-e97b-4b35-9214-c7b9ffd8f257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a700ff1-86f1-47a0-afb6-539cffbee9aa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8099159c-e42d-474c-9e14-06c01a6f88c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f905692-043e-4d72-ae78-76ea317c945e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301518a0-9f4c-4a2f-a64e-011a7e58d525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9104796f-85ce-4911-b9dc-36b437946be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e36db5-d2b0-4dad-b1d3-d1167957ae06",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9174753b-5c62-42c2-9dac-aae7efeda934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f28861-ef56-438c-bd16-50d76e73023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c4006c-0197-48b0-ad94-1c4325bba1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b595c321-551f-4fca-a3bb-de2e4160ffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f05a2a1-d905-40f9-9d8b-c40d11d7af8e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6905caa-6e76-4c59-8e2d-04609fefe9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0364ccda-4d36-4152-a4a8-956792519aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa90685-78ac-4fa8-9e7f-84a4a639c75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cde6d62-dda1-4b51-89da-fba28b0d23e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6a2b7d-1a75-44cb-aece-5b84c028fd8f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09d2e9e-b41f-42fa-b797-8c47fb6f727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b694472-6709-48d4-8b5a-935219de44ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3356a45-e77f-43a0-b084-b57be1c74bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "350a09a0-26d1-44f5-81af-dc3972cf2ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a60990f-10f5-4323-bed0-4986adafefb5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4494945-affb-478f-bc65-28a7f1bc92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5082b49f-358b-402a-b674-64b927e06000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1af7d9c-ae7b-4078-9f7e-ad4094d6253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52610072-bc1a-4835-a34d-507c424ba5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7822c80b-ddf1-4735-a90e-03d8d8b4f988",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d898d185-8468-4bd7-ae66-00cf4f74d4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5175d33b-381e-43ae-ad5f-4fd36a76773f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dc55e1-9a46-4ea8-9a60-394bf1b29ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e528dcb3-6142-41bd-a015-b706fbc5bdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed90fd1-8dde-4bd8-8706-863923017ec0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b459188b-ab34-4e0d-b6a3-6d409b254455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201ee741-4136-4133-8a87-0ca8aca48fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e978eb-25f8-4a4c-9903-792b00259304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "185aab8d-106d-4e6c-968a-9943531cb546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bd50b2-6a51-4144-a3ed-82ac01c464a4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62825e0-df69-40c7-9c15-16898b186153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28a7fc3-8107-4bc8-bd8a-ed43c89732f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835ae5b0-ede3-4c93-942f-4d829767476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b1a80f-406c-4e1b-8233-9429141aa50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf56efa8-06e4-401f-b702-072189d6934c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b3a997-38df-4cac-a7f1-ca26b4714983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43dda0f-4a98-4400-8270-f1375eb3a820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567c7676-5a25-4fab-a416-e29826cb53b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eb19a2-8d43-4e2c-a897-3f65c015d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15f8159-9251-453d-98fe-55832da2b7a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc518eb-bcd8-4be3-9460-6fe72c9b5f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2fb43b-1d31-4ec9-ac9a-4ed7216cd8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac90f339-35e3-4777-ba2e-d85b8fcfecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8561ba1d-45f8-4c92-bb62-1990b06d199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41713458-8816-4c51-831b-e6ea6c55f6b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395d42d-a7a6-42ec-9639-90db6dd431b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e4dbc3-e83b-41ad-84e7-db99a25fa1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31034c01-f680-4a98-9518-cf66d9ec58c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bff504a-81c7-4b15-90ca-dc98440dfb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95fd372-56e9-4c3d-b4f0-ef95d9f926c6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aae4e6-2781-4b13-9375-54ca69d76cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d1c1ad-2da9-4eb3-80ff-6acefde08c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e41874-cd36-431d-b788-f0d1c2775817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc67a0cf-51a4-45bf-bd45-07f394906f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8645e20b-20a3-47b0-b09f-9a27317d1c6d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88649efa-7b45-4df6-9086-70b4a29dd974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff6610c-c483-475c-91b1-7645c31670e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95141bec-2f6c-476e-a886-94ea78daf90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "848af3fa-c4cf-4e8c-b82c-f6f886c84b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a692317-3152-414b-8139-bd0a542c562d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a4fb3b-d187-4c83-b77d-5a24a9a03d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75baaa9-b2ae-4590-98f9-0168b0323955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93972ff-36c9-461f-afa2-6269ae28f0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a335b4-8176-4462-8778-9b3803a55660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc13c36-5d6b-4ef8-8b2b-0b22563b64c2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b19f209-7e3f-4e4d-badd-9d703b24a852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a521eb2-dc0b-4705-95a7-ee7ac7b14117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9a1ed4-6663-4b5a-8f37-191a384373ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d13570-eb50-465b-871c-200832005d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5aee2e-96c1-4f5e-9047-13999c047fe8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce42836d-49b0-491a-b1ad-d17912e846b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3446ab-7739-4588-aad3-5d906680809a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4dc5ed-e34d-400a-add9-264b7543e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90f04a5-4523-49eb-93da-f9a73a9006f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e402dc-1b68-4868-8a87-45898edf3142",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd30e95-bae6-4f3f-ac3b-07bc42b960be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a5fedf-d98c-4743-aa2d-6ba80ab8c9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e02ae-b3a9-4cc5-966b-1841f1c8b00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba17be5-ba1a-4b81-9a0d-9cf7f4742f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d36a8b-7a74-4e21-8795-f345072a250b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d595847-ba56-49bb-9aec-d9c2fb5d5aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba60979-e3e3-4cc9-b18f-262f1ed810c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969bca34-bc4b-409e-bc89-3a10de110a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c68859f-9f08-4919-84b1-a9670190431c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42dae8b-85ec-4e97-a9c3-a1707dfccc9f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17a5877-543b-4ca1-966d-3209b796d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f7a3e5-5b66-4548-9023-28e2516d9262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec3fcf6-a101-4230-ace6-6cf334a46de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f719b855-4ada-438c-b483-5116ac869ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5fb1bd-3685-4c9e-bd22-daa8d2687ee7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e85668-2115-4b32-82a7-73c49c580c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b96fcc-cc58-4ab1-8e4f-12e03d10809e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bf7196-bba1-461b-be8b-fc1dc3323d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "195545d8-df9f-4fac-ad55-1181567c24f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b757391-c36b-40fc-a992-4c313d01faae",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5248a4d-1b68-4dcd-9ab2-d00c3cc26920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3811621-4e44-4cf7-818c-2c75842b641a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8474ced-0416-4b65-b3ab-44063a3ccf7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2ded4a-a16a-48af-8bec-5c8255f29ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b6d569-f4f7-4670-a8c6-6dcaf7138057",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f91038c-19bd-45dc-99c7-5e47a8e5449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239b66e4-ac2b-4745-9f04-afa56dbabff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0b366c-ef6d-41b0-a759-27b946d65c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5964d0db-a16e-467c-aae2-3aa18e1f215a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f1f7cb-aaa2-4d6d-9834-c67ab190184f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9f1924-ee85-4179-8ab2-18196ddf233d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e93108-9dab-4f9c-bbf5-437754cab344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b87cd44-88c3-45ae-a6d0-da69bcf5bcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f3124e-4237-4649-9130-d5dbac8576b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4854222c-470d-44b9-aa10-7be607d8b7b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dc8fe8-0c55-4e9b-9551-a3a06882fcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64039089-8b7b-4195-a1e0-a81fac8021f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130130f6-d2c6-4790-8ac6-8d547cb2eef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078bf1ef-f141-4ee1-b08c-28587f5ae8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c83e8b-6a66-4c30-be4a-856ea44e9604",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2992264-ed30-45ab-b4f6-9ebb5f93f629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3811e244-fe30-4a4a-aab0-4866fba2841c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33651c33-be34-4be3-b7bf-493e5579a7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bf5016-9a68-4fc2-bcdb-5a8e97509c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570a4ef7-6bd7-48af-8995-fbefa56e7eba",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0e6348-cf55-4f3a-81e4-e762aa79a8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd26a04-b614-4683-8f91-21bcea5f6222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7605659-ed2e-46c9-852c-d41e661a40d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a6fb8b-923a-4784-8a60-f16179faa2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a48783-f676-4315-a0a5-af681ce874c6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8588ea22-1ed6-4adb-875a-7be362a5420e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52543ff6-e0c6-46c2-9254-d1d20694a182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052ea163-4ab5-4c42-9380-d1acfc453dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f6ffb5-8d0c-480c-9acc-62edcb3288cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac7d36d-9c1d-4ff3-be8a-137882395246",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4d3e71-ce9e-4bba-bf42-64757e2e8950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c72186f-2d32-4eae-9339-d4719d874ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb0d848-c954-4c19-b598-b1d0af082c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f21ac47-b891-4730-82d7-b7c25bd2bce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec3b775-bae0-43af-a4a6-eadb688655a9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb47d06f-942f-4c13-9bbf-59e5f67d4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb26446-dd77-455c-a088-e027b5e99a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a08412d-8eed-4bf2-8bca-c7e4d17224b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aec6f3d-5191-4a53-bd55-a5938c4af61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8bc008-6ce8-40ee-8773-ddc9929373e0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3a6fd9-8367-41bc-be89-ce6e36564b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707ef2f4-a504-4d6a-b187-6d27689ba53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cb0d14-f605-4181-b8c4-7333364c2e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5537ae4e-17ec-4dec-8eac-2827a73ac245"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95e85b70-2e51-449c-83c6-d455b927937f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dec0723-4607-4f19-8e2f-069499bc0fb5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b61f85e-8a2d-4ee3-b074-6aa43b6b5846",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e21ef6aa-4e48-4bbf-b292-cb761fe2016d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4484ec7-5c67-499f-8e78-776bf22b1231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc92f38e-6275-425f-a8b5-38ccf0f9d434"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baf0b9bd-8160-42da-9f11-81ce42baf76e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1aa5b729-9d1f-4112-ba63-486366d7b48b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69f437e8-9fca-4816-b11a-8b312b68dbb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aefa0a57-60c9-4e94-bb92-a01611f915ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e60a306b-7c8d-474e-8585-1f8bef4a1caf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e8a893d3-581a-4e29-a2e8-d503a0237d6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a7f3121-245b-4278-a550-b9381e517b20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1670eff0-20e5-47fa-a4a0-5ebfe0b3b072"
            }
          }
        ]
      },
      {
        "id": "3567479f-1926-47e2-a69c-626c52803610",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5b06d80f-9699-4545-b640-84bb8f25e2e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55892b53-dff1-41d2-8541-3126ca12e7d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9fd9793-8061-4e21-8086-feb392371feb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9022ffb-9ee1-4e87-8468-c62e5b5f830f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844b5fc7-a243-4f66-96d0-4bdf7b8e1f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468dc454-c87f-4153-befb-517098f82713",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d334d8-da0c-4ef8-9574-5d8fdca1579d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817ea5ee-4fb5-499a-8cbb-4f97aca6b2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2dd935-ae31-427d-9990-0bc5c14f6134",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a937f0d0-6a7d-4273-8d3a-03b1f5724bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a55c9330-42eb-494c-a7aa-3c24a975e050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cc4c21-673f-45ef-9e2e-ab2d108f7eb5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff86bf0-9c86-4cd8-b6a4-a9f8faa1df62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7330b7-3179-409d-b0db-f7dae7efc5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f105e584-c85d-4abf-97fb-0ecd3437ebc6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27870090-e82e-4dfd-bb24-f4bb236c7ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adbcc88-db3a-44a4-8183-91b562d300c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37feedab-872c-4dde-ad0c-f18bfe9c5586",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74a9a98-cc66-47f7-bcae-26f2147e4108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4183c16c-c2e5-4b4b-9694-71cc2c2c9089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3df3c6-3de8-4001-972f-95e7a0feb66b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c60ca-8617-468d-bd0f-078c00849e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b0087d-b58f-48c9-81c1-5569ade5656c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7d6429-ca0d-4bda-8c8c-06af790b089a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73ce32d-3c0d-473c-9b70-819a61aea722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3d9cc0-ad4f-4fa5-ae9b-2a836d5fe9e5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c5193-eff8-4933-aa87-ddf514effedb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb5cac7f-a62d-4adc-9934-cf3786bd816d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc63f99e-1f10-4d1e-b80e-f0e6f306394a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b88f8e-58c5-4388-8bc8-4efedc4c6582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fb4f6c-4c22-4aeb-b573-45933723eb21",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61b1a8b-b4ed-4a0b-ad72-598a7c128b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2a258e-5528-4d20-ac0c-6794af121476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0eb68c-ab91-4ab7-8d8a-467cda86ca88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96860c1c-440b-4b6a-8aae-ce30fd09ed7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecc4ad7-4d85-45c9-87a6-7fd3d4babbe3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aba04a5-31e7-4a7a-afb9-190e5b69565e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac75722-1ddd-4b8f-8ecf-cb45694aca30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca907f-5ab2-40c6-bd52-33ae5a1478a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbffb88d-ef83-4134-9edf-4f6461c71d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846b1aeb-7160-4315-8033-dcaf7cc09a61",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f630d5c1-fc47-4ad3-bbe8-821e19856864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeed7ab4-d8fe-429f-9dad-7b5d05deae27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce57905e-ecaa-4e76-b6dd-45990d6bbfce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84c8c8f-4f4f-4f91-bbbe-845f403809bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a420f05-8c76-48fe-8a82-51dd05d16b42",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68520c75-f00d-4b7a-887a-faf84189b3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca60e271-1ca3-44d5-bd89-435fa13423c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0453c78a-17bc-4c0e-9460-78c63cab1933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cf5d79-1d32-4434-9915-6445bf810dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d751c3-cae1-4088-99db-55e2746a3414",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9b0884-9473-4801-9cee-e88d78970ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118ee2c0-c191-4e42-8e25-8de499ca0b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b01e85-9538-4483-8792-4b6a1a75463c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4466935-1a82-4233-9e7e-ee3fb8cb5ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5a40ca-e557-4a63-b561-d467b19e718e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef72010-11b2-4971-8f2b-3cc4fcdf6085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec22b9f0-c078-477d-807d-46db23d9526a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c8e032-887a-45e7-a71d-e24f001573f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1d838a-b38b-4950-a3e6-2b97ebec7ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75c2643-ba19-4ab1-88b3-c764bea97b3e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86be2b9-29e8-48fb-9e60-51c705cba833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "580c2b8b-96d0-4e95-a16f-2bde21c7cfbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8427b28-1ccf-41b7-9208-2e19700b375a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1fd05c-433a-43dc-8842-de2da3369f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea5f6c8-a9b4-46d9-8385-8e641b10a8f8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b24757-b545-4edd-aefe-411cd15c1531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12137cf0-b95b-42e8-bc11-53c0e6d2e44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e352ec9-e6a6-4e9a-9383-6e13fe04d3c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bff5eb-fc2e-4b71-94f4-bb6e30479d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2420563-0aa4-41c9-a3ab-bc15c756a9c3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada4825a-7718-4430-946b-f7502c75ebe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c912672f-ba68-4ea0-afaa-7c660496cb02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d39b27fd-c4fa-4f7e-8493-3fc0b6c8af2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1084dd34-5f59-4ab9-8971-a5db3d7764a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5942e7-8d55-44d8-846b-1e7af4b08ae4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd4f6c0-8405-4a1f-90c3-3f9e38c62da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d088712f-2614-460c-bb4b-9ced24d1da4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9c346b-8f05-462e-82b0-bba436f014d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f754f9b-f4cf-4181-b5cf-c92a30e9f716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08e5d7d-ee8c-471c-98ba-1d11844c7952",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710d04fb-8423-4b06-a2ef-23b40431a685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facf858f-2424-4066-90fc-d7d511278896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39291d3-e0e8-4112-b147-fa56aefdaf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba689750-4091-4cc1-8ceb-1f9e129d58d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a670a6e6-8445-4de6-ba4f-df3411001697",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504c8b0a-948d-4784-858a-4a7655c5e98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303823d1-3b4b-4d05-833f-8a5d37dd599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac394a2-a607-49bf-8b03-84777e72350d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4ccf09-5853-4885-b743-6c46ea475b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217ad0d1-1d9e-4842-8c1d-64c2a3a5ad21",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e40ccb-4680-44ca-ab21-357b201bf322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60c59a7-1971-49b9-8f7d-0be871027ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9810097b-86ba-4828-bf07-1a82bc3bea59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694ff820-a77c-4472-bde1-208ccb3abdb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ff0e27-f57f-4c60-8aad-d7a926c0001c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412df38b-138e-44da-931f-75a2b48e6234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bff081f-8825-482b-bf93-b4ea5f373557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0827089-cb78-445a-98ef-96353584b85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebfdc07-3d1f-4e26-ae15-688d88a2c5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4700137f-3e25-45c6-992c-10332c9e6eae",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b52816-f60f-48ff-90eb-c32657963cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c468707-ff89-4b77-a2fe-c5e70c6be80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe4916-0e16-4728-848b-c48721e8a289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6ee7e1-ab28-4b3b-aa9e-c28d817c0a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c63e44-df20-4f93-8ed5-03ecab0f5161",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fdb54e-165c-4cfb-a9c6-f8fce597da11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409de7d2-ba74-4cac-8b4e-497a8ec28011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1c8912-da97-4f41-a635-e28f7842a25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34d044a-1e03-45c6-8340-eaf36c3d3075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a34e92-f44c-4af3-b318-05c472016afc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbfcd9a-9375-4750-a023-42f1b745eb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501ed62e-2a95-46d6-824c-823faa2687c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a874370-16e5-4832-8fce-323397572f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0028488e-61ce-4b25-aeef-b5fcce055386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9e2ad5-bd29-4534-8089-2c86b23b6183",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da1cf11-bc02-4f82-a52f-46f50552f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60765b9-066d-4dc5-9281-6edc7af2be6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf5b21a-2c39-4df5-a9fe-f1abcb84b82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59207bf3-8345-4c0f-b1ef-276ab475aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65676517-7013-471c-9a0c-d71d72dc7040",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d64dc7-47f8-49e4-aacb-ae0532bfad1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080aeee0-7f4c-4d5c-9c8b-743f01af73f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f00bd08-30c6-4822-8421-c6cfbe47960c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721541a3-d99a-414e-8b3a-c6613b92a9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a881574-2b36-4a59-bf93-c5cbe3f11a06",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bd05a1-1f22-4997-a586-b14052c2a6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a04c41-0ca1-497a-bd16-ab35bf01a6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc23e8e-530f-4cba-828f-eb36746319a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f085b387-5bee-461e-b6ad-f399f64da3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8f603d-f391-4a1d-8722-e387a0b90f4a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03828fc3-2b58-4ead-ae6b-86e4e9601b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15cfb64-2a1f-4362-bbf4-dfd041c98365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f02dde9-de22-42f1-8750-448363ec7328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0c141c-5940-4a36-8309-f96993477806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302682bb-e474-48f9-b726-258395d3c5fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f311dd3-1fc6-4cce-8c30-836ac4aa5929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b036d5cb-c6ae-4704-9efc-de7f71a3991c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a69a6de-956d-4d88-b3c7-5fe11556287a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1eeae6f-8b63-4e01-97b1-e0ac36022334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8070ab39-9251-447f-a84e-ba135b09b30f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936421e8-2d43-44cf-b079-e2be60961918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5080b7-7adf-4741-bbb0-6321f141c851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36be515-7120-4764-a1bc-ea1a3dede310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8099d58b-3bfc-4f9d-88b2-fac08aba6065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad852e34-b3d0-4a37-bbfb-b5ce47bc9a8f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca45245-c96d-4f14-b407-6b5708f066ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7f0c1b-e977-4d4a-88d8-0059414f6256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b37ec8-6512-4675-bd2f-c05932739447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3a9e98-f8b4-4196-852b-582afde87e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeb0e17-ddf9-4bc9-84b9-59616c73acf6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5acf656-1eeb-4dee-847c-fa4a23e6a2e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29bd9f8d-0014-428f-a57b-7f6f11302163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6796930-6257-4d69-8771-9e5c7899e9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6716a3e1-e705-49fc-aa41-6df4f1399d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da4f0f0-3513-4f3b-a1cc-e26c86f67c19",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513328cf-57c6-4c2e-b878-168264eb8e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71bbc31e-a039-4876-ad2b-fa89ecfe599e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091fbef1-e9e7-4608-b77a-45157142686d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f83b982-8a07-4693-9c8d-4f7d665cf7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a34f9d4-f79c-4fbf-b9dc-679c59a8bafe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b57c43-1394-4043-a264-3529c5b212f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26456746-6aee-4881-a3f0-bcafa9f0f527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6caa471-d846-4bdd-a799-17c8b1f55d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204e655e-cf54-4ba7-a0f9-3f2cc414a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089300f0-b181-4f83-bdfa-ce2adb40bb6d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7f24a8-28cd-421c-a6ed-a0f5c6577210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd40f0f-1e48-4919-891c-08a654cf8688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682a04c-3345-4209-b798-aafa13179651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a687ae39-fb31-4923-9d41-ce89bdfe54c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe8f7cf-1931-47be-ad82-923bbe49e794",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367b74c7-8892-4a66-abcf-51a8a34d421a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8991cf42-3413-43b2-8d11-585f3a275702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c979fd-a451-4b20-acfa-bd930364ccde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b355a20-66d8-4824-8758-836e25e9573b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fc3dec-1b38-431f-a952-171211c4208d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df74ef3c-35f5-4249-8d80-9908c84f84cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399d68bd-10e5-40d0-af36-4f5d57890532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f38c9e7-d5b0-44f2-9e2e-66bb4297ef70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27540789-91aa-4adb-9b4e-d8f3d0cc9890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc07adf-aa1b-42da-b0a3-6f29af97149f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96df3bc-7461-41b2-8fb9-3574c6bc6d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc8741c-6002-44d8-b8f4-2519d1178e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44fc5b9-35ba-4a6a-ac56-d0d33b9d53cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766ce8c7-2fda-4547-961c-8348077ecafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56a372f-e387-4fae-b140-2ae16f5a89ca",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5496a219-7ab4-4274-82d5-0847f21ab399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77226a1c-a9f3-40c2-8890-7a29c8e94663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024c9ba3-35fe-4e32-a788-378bbc7320cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2d35d0-5cf1-4115-93d1-55e01d082a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb33f9b7-60a5-4f05-8491-6e125428295e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c5b0c5-82bc-41a1-9342-7f8a4e7afa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762126c0-1f93-47d7-9db0-80330bd69b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e83dec3-9067-40fc-b6c7-c767d044a591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b505b73-e7cb-4ea6-acba-c3205ca9fde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e586686-9853-4de8-b37b-9f614e7625c3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad4f087-3d45-4b1d-8ee5-64a6ecd891a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262dbbca-1589-464b-91ea-85780fc19d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128bba54-ecd9-464c-a06c-62c88dd04927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44578a5-c600-491a-9199-9ea97d7ead03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f51440b-d36a-4c91-a468-dd2ed1e1ba24",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d030ead-264f-49f7-8782-44b8a7b20af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d74cd5b-f68f-44e8-8719-0f0dea700bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b69d462-c60e-4f31-b87e-aef71a70e6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ff463a-8b25-480f-9d48-96acf5077a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3c1ce3-354c-4815-8888-95cb8cbd178d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1704fc69-6c27-4c39-b118-854dfa11f17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4376e98-e1f9-4af0-8f7d-27a3974128b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa98379-0dc7-40a3-945a-ec9af07f0e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821e1697-7811-4a31-9285-12ad4750a191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657de417-a4fc-4f2b-978d-da12ac7f8174",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7524ad-9510-4694-b628-4a3d69314451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89a959a-5fb9-45bb-97b0-397c9f8db88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a539ac6-69da-4f0d-bdae-bec58ac73c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0458369-5d23-48b1-96bc-42311469663f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfbcd8e-a1f0-4d4b-bf39-1f594c4c5300",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f3645d-d57b-4f66-88c6-22b8ffe0cd86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82acbdcd-1bb9-4d49-9397-7ff10fcaa7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e503c408-b8ad-49d9-9dab-7c26c9c5981c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce6f188-fdc6-4ce8-a97f-71e86131de3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e747d2c-3dd1-49b7-b230-647df2fbdf47",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339c764e-435c-4fa6-ac7b-cb617d6f92cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708bb7ad-0a3a-4e5c-8896-46ef3fad5675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebc6335-d433-4fa5-89c5-93dc863025d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1497a1e-2b8b-46eb-ad21-3261e5901406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c118cabf-4bf0-4064-abac-f61369a72c68",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c00d97-1c1e-4b50-97d3-0a276a13f005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657129f1-bfca-4959-b8ec-b24bba07db3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d9ad31-49b5-43de-b6ce-94dde6328cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7277ddd-4311-408c-9276-66cc1967e172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17391520-0488-4642-9f85-cf60b255899b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c48c08-c216-4148-9559-1563a3bb770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0114aa91-e0a0-440b-ad5f-65e56c9af15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96aa6a0-ba00-4340-906e-ae286cb20dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab79293-aac4-4a55-b784-ee88d174a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57541648-f14a-4ff5-a0c1-b394dd6ddb8b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f77cdfb-c150-43fd-8ff3-6fea5748b4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1bcc7f-dfb0-42f8-9bc4-a93710ec11d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263b190d-3c8b-4ffe-9faf-0c6247323b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f87d00-e4f0-4f74-bed2-3a735db32174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dadf542-c2b4-4a6d-90fa-b21aaf3aa67e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9870e559-a73c-4bdf-92c9-5fb8a745cca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbe85df-f732-443a-b472-c5a9c0e695c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5e69f2-537d-4e18-8947-4534d51387c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76754cf2-b474-4619-8582-4aa492269683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79912f31-319b-4990-8f47-bf7fa2f5c6cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc43f779-16b9-41a1-872e-57252a824e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d67d3e8-28a7-45fe-8322-306f9545a2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f9c22d-fb0c-430a-921f-cefd70708e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366acee2-5014-4402-865a-337d4619085f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb2accd-176b-43a5-a7a9-8d2e65f4bc19",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aa4b5c-22f4-442d-974f-8a37c90e74f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b486596b-ec96-48aa-bd60-8484134ad29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64f0512-e868-4046-b898-d8b6dc8d860c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1176690-86ab-44f4-890a-7e97a35e3d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1574f02-4994-40c3-b4f0-0c2933266cb4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff291ef-b0ba-4b56-9136-01ec921bd5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10f3b65-1735-40f6-9960-6769cd06a0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8ca883-ca08-4ca7-9d1b-06ffc71a672b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbeb3093-0546-4961-b810-eb4663d3b23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b09666e-740f-4259-abc5-142350e4a387",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d348ba92-3437-41f7-9f97-b4e22f7f843d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8facdb35-98c2-4025-b0be-9a8ae594baa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a9f20b-3b4d-4c08-9e18-9dd4d3809527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9939dbcd-adbb-4ac0-9cba-5c29cd811d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd2ce98-0029-4790-9d1d-0f6847e6866e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c22ad33-789d-44ba-9f25-c89ae7552c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a89829-05a4-46c3-b58a-3fa3a4338161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f234bc-0124-4d23-93e5-604d75e38f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d9f503-4ca6-48f6-9410-3a909e5d3aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be49d43-538a-47bc-b96f-288ac87b2679",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f9ce12-3815-4221-ae61-3741e61f916f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec583628-ad48-4e3f-b910-535d112f2f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609fa6dc-3b84-4a12-b9dd-b16c21a45c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a9a570-7637-49b4-bee9-7fb011005d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f49391a-8eaf-4b3b-b044-eca5661e13f1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568725d1-1ad1-4d7c-8f42-7440d0a05234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251c0be0-7b1e-4208-b217-8119db3512d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb4c71-040c-4cc8-becf-2f185e10c995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4b31e8-05d1-4f9c-a5de-c1f3d3b86a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2705e0e-6cdb-49ad-aa6d-612d06fbba4d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec03c7c-05d7-4231-94a8-7b08f296dec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df536aff-2bc6-4dd9-a291-3ef946fe4c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2bdb62-5df3-4c97-b44a-9019750d4db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdb13ec-a113-49b5-b952-9477b1c8b58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a8acc-f775-4dc4-99ec-6dedc40502f3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfd1172-c8de-476c-b143-3b2a2479ba87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cab3f91-5117-4dc4-bd51-3443998e374e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51274189-ecdd-4c79-8e97-0137d30d7768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b230885-e078-4509-be10-457f584cdf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76f20b8-2e7c-419e-9192-9b061137fa9f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe7effc-f9fa-4c31-bf07-03a0f1ddbf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ab6b15-d221-485f-b863-9996ca088fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6fd715-db07-408d-919e-e944b55dc7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15ead1b-15dc-4dc4-9a5a-4b551f43a61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be97b36d-6895-4169-a212-b92552107091",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eb7081-8c00-4734-9859-86257e3d47ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac2d5e4-49f5-4d9f-ab15-40be90e551a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c63df6-3cf5-4ff6-b970-c3c609f20485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5403b610-52fb-4920-810f-a351ad34437c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3f02ad-6422-4ab1-8b78-df4af414ca8c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951ac831-1a84-4559-ae40-4a1884d3a221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f4f272-255d-4c2e-afa0-961d9a42374f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f10b11-a688-4434-8260-9322a9fbf5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb0c063-65c4-40c7-867a-dd35a184c475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c4f8aa-bb47-4e19-ac1a-0628ad39ab6a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbffd375-f623-4a36-8497-59c2898aa444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f12600-11be-4921-9754-f1d5267aba4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c83a1-a14a-41dc-8db2-cb958954cba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7addb74b-b614-4e15-9ea9-b362e9eb4d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329e9106-4a3a-4064-9c5c-3602f4103bc8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00de1d7-f54e-4dea-aeb5-fe525b9ba495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c983c0-5c22-4563-a8f3-1c75613bd38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2ae29c-5cf3-4dab-851b-c4f2b808839f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a41b3f82-c9c2-4332-97b8-d34a7a4110af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e5495e-3421-4931-b5b2-509c39ef8a6e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb73043-8e7a-4a54-a3b9-b2ec2df7826e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51d5fb0-9bcc-41bd-aed3-b971f54021ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04cf914-139a-4175-ab1b-b415d7b6c5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13dfcf0-b793-4de4-9690-e5cd52947062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb3da45-7179-4685-a50e-3b4b85bdb2e2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4370ae82-1f8e-4d09-b2ce-ac95a3a09012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432a6929-70c2-480f-ad71-d258e65c308a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef163bb-2d71-4266-b411-7dd873ebc74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cf7a0d-d213-4b46-9a35-c555cb7af543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5689403c-972b-455a-92bd-15b47f4ffeb7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a7d069-1904-469b-8dbd-a12c4c891d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8811f0c4-1b8e-4157-9e4f-6b6ae75e22a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef3e209-0077-43ac-affe-a3869c6f662c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44083d3e-3e00-4ea5-8bc6-9b5d6f9f9c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7270d343-076c-4d1a-b704-b0f8a33cf911",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062a9274-df48-4b4f-a810-bf6cc04d9c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a025a2-db28-4dcf-aad0-6c584e0c50ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e37ffd-300e-4d26-86a6-f267e7ed5ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250f7219-bab5-4177-9554-d650491a8168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abd9545-53e7-4390-b86f-e940cd36c3c6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0f56e6-1b92-453e-bdca-ac519089c4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "949cd1cb-8bd3-40d2-9de7-a0aba6797ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b62d088-310d-43c3-98c5-ff91f14321c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96351142-db1d-45be-a2b8-93d2f96998ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121a387e-1bc5-44db-8d1c-f87ffac5a92a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104064f9-8714-4a87-971e-b7e5055d61ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5a96a61-8388-4180-bdac-3dac8910ca0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e87aa7b-c7a5-4447-a335-14a80fb15a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c34d1c-f5a6-4745-9a92-c65093302e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38d4b75-281d-4df6-a1a9-a23b70c9de28",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919e0c6d-1e89-4a1d-bab0-35857ace61f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9d6876-3f88-4b1f-8daa-a7ebe07369e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6156856d-e0b6-4d85-996a-7876118be948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0940257-fe15-4e2d-a664-21d4bb4751aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48417be0-461c-424a-8382-4fd201f99679",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd75db6a-5feb-48de-80c0-8968ca85d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae79dc0-f28a-4277-8b0f-7eab2f2052ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b89b43-6655-4381-bd41-af6593696778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefd8163-40bb-4aee-b70e-3f5e4945416d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aabce14-0cbd-4c6d-8ee7-c15fd8c6816e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed7f41c-c450-4930-a2c1-133bcc98d2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f0284a5-2768-4c79-81c9-a5bc14104dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f6e94-5ace-4827-a82f-02e9d7329394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a91fbc3-f11b-49c7-8bab-1ca31fbb81de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a111d14-8b25-43ec-be31-ac17e0dcc078",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f1daa5-f79a-443c-a286-12814acd7462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2195c6-b27f-4234-a202-70475c67f60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa514cec-d6c4-4a19-ba9f-a0b573391559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5ccaf0-d40b-4109-a03e-542f0fa4d2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7646045-b3bd-4a11-b8ed-85872fff2373",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e75dba4-b583-4f34-add6-20eb8a3c8909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8973730-3c39-488f-9573-34330155a37a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3649dd5c-04c0-4a26-8f95-f088ab02e610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2435d163-702a-4d51-8dc3-26a00e6da479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c88f0d-b2c0-4cb3-8fc2-5d3f5cca08a7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced47502-0245-4ad9-9739-48a8f13be228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f41aa85f-da1c-4d71-a24c-058220387474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61488af7-ba0e-4fdd-84e0-a1beccdfe233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280ce92e-9abc-4289-83d6-b7d03eec6491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50324207-223b-46f8-86ee-6ad51d1524ee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75e03cb-e54a-43d0-bf36-1db6a03bdd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e8fd544-f87c-4919-ab82-5723db2fd42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450437b3-3952-4159-b689-6fb7e1025da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d83886e-7b0b-43f3-86cf-b284434bcc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc635bd3-b250-4a3c-b5b4-ced0f0368bb5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37696073-8615-47e4-8a2d-6bc3b0493219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3112c972-abb0-49b7-a639-d794df69daa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47046534-40b6-4f83-8689-5fc1ea545c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9968ede8-592c-4d16-b391-4f326a5865a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a7607d-5ef9-41c5-80f5-7772e092e0c4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae5d96f-6901-495a-a6c8-90a5803311b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d738970-8066-4a4d-9769-ec6e9afa63a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1444375-8858-43d1-8f57-cca20122c871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a8ce5c-16a0-47cf-91f5-da9a98a8ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3738d1e1-e08a-444d-a95e-41b1ebc8880a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9367193f-f55c-4579-856d-10f7cf4dd9eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f10b55-73cf-4dae-ab04-1d58c7ca1b18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cbda9f-1584-49d1-a648-554f70523a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff0053b-ff42-4216-89ff-3660d68bec83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcaa21b-204f-433d-a6fd-ec469d580362",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a782a0-6080-4c62-98db-6a3da216814f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "710d5ef2-093b-4b8c-8dc2-4e5c364cfd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddfe0e7-074e-4ef7-ba5f-dca814c99497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc015ef-8797-4370-b54e-43cfc6335e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea63cbdd-dca4-455f-9231-7b9e284ff0d4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5b3227-7ed5-49d7-850c-92e8f2f908b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545bbbba-61c0-449c-bb8d-1edbe3aa40b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa32e64f-960d-4ba3-88de-9639acca796f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ce4d50-d490-4118-a7d5-7074ec4e38c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586b57fb-4875-4b44-9ac5-7d37728418b2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bca2a80-d069-4fb8-8b55-562836c30429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a1d2a69-78c6-4f72-a6c0-a4c381701e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6be6a57-d155-4985-855c-52e252bd49b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1593436-95e3-44ff-9475-7f62b6ffd14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5012c35-1027-4fd0-986e-7d66a876ce5f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcad6c1-6311-4eaf-a8f2-3b820099d798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959a646c-83c7-4c81-887d-9b7673d72de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448af3c8-e5a2-42b5-afb7-65b67c467d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4f0333-47ea-4ca7-bce8-47376853308c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e0152-3194-4c5a-9f5f-a4d9fd4a9191",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bb7afe-ee85-442f-a2e4-d6498462d3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11d934ed-910b-481d-a384-f6e5ff9b381e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1808e2-6d67-44e7-90fc-bec6e92c838b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de25f6fe-ee17-4202-a082-e6f358f5bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9cb360-a53f-4994-b6a5-7dcaa110db1b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891ee63e-7214-45ef-910b-b28e16b2438b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4505302-3a32-49fc-9af6-73ef10c424c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf88787-44ba-4f2b-863b-f3d11ccaf709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6732d2a2-73e9-4f34-be61-3859c0dc73b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20f1ef6-b0f3-40b9-86db-3ec1e76f32b0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b7c2d0-99be-465b-8005-40bc19a29733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788b50cc-0c35-4b0f-b9ac-f3735c0c63dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36ad6a1-03c3-4cbd-9eb4-26c5568d6a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2274de42-1a5d-4bc4-9111-0ce7d6b07bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1f557a-f181-427a-b41f-b438f8c4ea18",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa47228-e965-427d-92ca-f0dfa66b3c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2667422a-981b-420b-aa16-879e62ec3e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f65aa2-8c30-456e-9f38-cf864fc4d116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa59caa-544b-4049-8622-7b3aa043b8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baa2b47-b962-45d3-bd8e-865fee637789",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29db3a7b-909f-4de5-a8de-6a1e5add282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac6f847b-901e-4c70-93a4-3a2837cd7052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a42dec3-6e5a-4fe6-a81c-276ed32898be",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb1b54a-eb43-4355-88e0-e98880271f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc7b574-d6ab-4fd3-a20f-8c701d4de1a6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577059fe-25f6-4e32-9b5b-5d0f5e3b0a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be43499c-5f0a-4adb-a786-3588534cc52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b3bf45-f626-43f6-a779-f28555299650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affa4322-9b9d-46e8-a877-f6f614096605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c272046f-56f1-43bf-b431-ce1393eaa492",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f813468-4987-4c8d-92c3-c8bb1635c88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171f0514-e185-4de1-acc4-ad5bccb1f1e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3af9698-8ff0-4a1f-9ac3-095ebb0b372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2431159-fc22-4f64-a224-26df5710194c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ae117b-4b13-4c34-b2ac-9f76c88c04e7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131ce7d2-4bb3-4a04-ba33-a134f6d02e8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3ea92d-4334-4bfc-85ba-80a55828348a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536feace-0220-4012-ba15-0dc72fb3723c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68de9c41-562a-46bd-8f37-ceb1abdec136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a161d72-4756-421a-9db8-e427c79f169c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e43db3-2fa0-49a1-bf9e-137bee934092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "808722ba-23a8-4246-be1d-b42c0273ae21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d70dc-a439-413b-ac3d-537a4f7d4d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fe536c-470c-468f-b229-8fdeba2047c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd7c99b-9fff-467d-8b57-3f181bac055d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e7615a-5244-4726-a098-ab255f33d99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47619b81-ca26-434a-b975-a371c91b70a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "715800b2-acf4-41d1-b475-57edf6a3f080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6afa29-3577-49df-8957-8aeb42e9252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d067f36-5126-4cae-9c98-39d64cef3595",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dee2850-17ff-490c-a649-0151cab7595c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203de1e0-c361-4b2a-9cad-747c2067cf88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506d0a53-c5de-4888-bf97-0753e638ceb4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c0e0e2-26c5-464b-9c62-f9852d43fcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fdc659-89b3-4a7a-b208-ffbde00a3ecd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28e301c-180c-4add-bb96-d245699a3f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5225fc7-14b9-4a8d-ae06-fec6ed4a32ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9b5d76-8536-480d-aef8-9b4d645516a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fed0a8-0e9d-49f6-b5ec-287b28cc39fd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e267f7fa-0202-4c40-855f-2ace790f5e52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "263d83b3-e8b7-4f95-a627-5df1a18e87fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d06bb60f-96e5-44cd-96a4-3ffefa739045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fb7d0e4-721a-46c3-a34d-f800a2a2b1c8"
                    }
                  }
                ]
              },
              {
                "id": "067ab0ba-5d6d-4045-80b5-0f5229f1b42c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1336fab-8e95-4386-9ab7-9243cd0945b8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa1ff4c-4679-4baf-bdd4-3a878265712e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b533f281-3888-4232-bf0b-f3ff93c4180a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7e26bb-7d38-4cbc-a968-40a7d4d9cc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81c4e60b-5e37-4d39-be7a-b36a9d56bf99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4d27d71-f667-48ca-9e82-bf438d95b8f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a461d208-df9a-447d-97b7-6389e8584b0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0cc1d98-2c6b-4183-a7ad-3deac9863015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35c5039d-c34b-4df7-9089-501752730c44"
                    }
                  }
                ]
              },
              {
                "id": "daf13db1-715f-4166-a609-f841c8858c7a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c7015292-5da7-4e58-bf75-fe21c6a575f2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8658fdfb-9193-4bbf-baa6-74f16163a08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e00ba026-3114-40fc-ab5e-882798ff3d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542a244f-55ce-4713-b5f2-92a653852803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef1c9ba-45a9-4b4f-90e9-4f0789c248ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a67f220-1731-493d-a33a-396e44cf575b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "736a2490-4c7f-4a54-978b-ec661fc4c356",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dfdc666-cd96-4ff3-84d8-216bf848f8d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "952ec3cf-717d-4aac-863b-5bf8a577e7bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9872c7c-75b6-4daa-9427-53190b90935e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75c863ce-73f9-4e5d-a5f4-d5662941d85a"
                    }
                  }
                ]
              },
              {
                "id": "a0458846-a7a4-4651-a298-0b0ebb4b94a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1ac8eac-ebc5-41e4-85ff-c28f0a2079af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "358b0d02-ba39-46e5-831e-0b059ce6fe39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cacb4ec7-f575-46d2-9233-97cecf075a50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cd41d01-7250-4805-b680-7bc8b66ac181"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "443800f6-6d85-40b6-859c-33d91010bf72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d9b9af72-2b8c-4c6c-9f64-4be542ed04f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7509d26e-5a7a-4456-8fc1-0d4e9bb32ebb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20a7df51-5add-46ed-bf92-5b50d79cef00"
            }
          }
        ]
      },
      {
        "id": "45224782-3105-4b1c-a168-e90ddc1d25d0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dc210684-e7cb-4687-b688-36042b79c821",
            "name": "Negative Testing",
            "item": [
              {
                "id": "291fb8e2-93f9-4af5-8c9f-aac4900d438e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21cf8562-370b-4cee-8de6-25358bb00755",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2710fd42-def2-47ee-b6bb-9a6621de3a12",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ca3fc83-762a-40ab-8d90-f950a6baf26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83a122f-9427-4d2a-b9ee-2bd5c39f99a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb9ad267-bdbd-4387-b430-333eac03fde0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07bd589f-0104-4525-8081-60a63b6dfd26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9276b42-cc22-4bb4-95dd-a642fc4c53e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9387e0a-1605-488c-973a-804e888710a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "331b2bad-19c7-48d7-aa8c-37986d3b1a04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a4c9186-656f-49d6-83fc-9944fd1a054e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e7eeae47-0cf4-46d3-be5b-00f83a7e5636"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df3bcd26-0597-458d-8433-826ac406403e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebaddfdf-3e57-43fe-87eb-aabb751ec0ff"
            }
          }
        ]
      },
      {
        "id": "1d419898-4b58-477c-bd0e-3542ce55f812",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eb01564e-1d27-4d57-a43b-bc86614712de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0046339b-ee35-429b-9c13-05eedb325bac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6064d914-4d28-4287-ab45-dcb5b6e21da2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cfca23-f9ef-4ff2-978a-71068190227a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c12a2ddb-d9a3-4d28-938f-b3a56292cb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1109f23-cbbd-4274-8097-c7e868d4020c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e9d98c2-36b5-4a99-8415-fe16fe5792bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0e8a0d8-5bda-43c5-b3da-359d837ed0c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a99b2007-cadf-4be2-ae07-914194b77fd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfa6e1b3-3874-4fc1-84d8-2c8f673e6e3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "530c5a29-8e56-4d34-b494-159dbb40a96a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d5a05fe-a4d8-4963-9d5e-7b01bbeb5a28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87ffc226-0e1b-46d7-a9d7-8c4754e41254"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f746c1d8-b9e6-402d-9bb8-445f70df2528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e9029bf-75a8-46c6-8558-d98f17b4ebe9"
            }
          }
        ]
      },
      {
        "id": "34a8f543-fb1a-4ee2-ad09-4ac1c8af442b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b36143a5-1c99-4921-a116-a0b914e3cb85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ed62357-cb8f-4a6e-aabf-309b0d60adc9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b9cd160-8b1e-4865-b1d3-f39bf638b2fa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc7da61-34d0-48eb-a246-037785a56a6f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68fea13f-ad35-4721-9568-69f8d10740fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ac2a27-2195-4470-8c49-7d5c7714b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7e5cb3c-f71a-4342-b035-7d96c47df05c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb323ee1-fdd3-4618-92a5-fc419e2785a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "370b4ca9-0273-46fa-b776-9c09f63669a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8fb9f5d-0990-4c46-b123-bbf2dcec9116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94b58a46-b990-40d2-8a67-0052ca667256"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0f61f80-3c62-41fb-a416-cb8c8f14da1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72fea0f8-ed47-4618-bdaf-fa13587602ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94cbe3d4-bb79-4c87-9988-2e432ac35c19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d3c8a12-5c4d-41e7-ac3a-21fd50f3bb35"
            }
          }
        ]
      },
      {
        "id": "01bdb7ab-3c48-405d-84a7-688de7f69e0b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d6c350b-bee6-450c-9027-d87191098a4c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "096ddb0d-ead8-4a41-9ac4-84ab3e899f12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f55b00e1-c0d0-49f1-8213-3ddef6f5ee9f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0980757f-c8a9-4e59-aa91-26b9f132d37b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee0de6b8-967c-4375-b249-3c2e71ecf310",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.11578947368422,
      "responseMin": 4,
      "responseMax": 5153,
      "responseSd": 404.82580693579666,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705883908417,
      "completed": 1705883951312
    },
    "executions": [
      {
        "id": "e16455e8-6ae3-428c-b475-495a28608546",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9428437a-c223-4e64-b9cd-22a935d9cf56",
          "httpRequestId": "a5ec2a38-98ab-40f0-a484-e3cee5b01a72"
        },
        "item": {
          "id": "e16455e8-6ae3-428c-b475-495a28608546",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66a96d26-9301-4131-b7c3-ff4d1ce93f69",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "228d3a88-668f-45e1-8184-34f396afcc7c",
        "cursor": {
          "ref": "255e72ae-a90d-4ee6-806f-080879040c5f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e21e4085-fb6c-415c-8ee3-fcc672647223"
        },
        "item": {
          "id": "228d3a88-668f-45e1-8184-34f396afcc7c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea3deff0-a548-408b-9096-1dd1c5fe26ca",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 0
        }
      },
      {
        "id": "56f46bdb-f7af-4c14-a595-f2478327dc50",
        "cursor": {
          "ref": "3b78313e-9383-4700-b653-c172a4871d16",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "298ef4ea-1b15-4d1b-ba89-ded7b8081ab6"
        },
        "item": {
          "id": "56f46bdb-f7af-4c14-a595-f2478327dc50",
          "name": "did_json"
        },
        "response": {
          "id": "ebf9fd81-8492-41e2-9606-6b4c36ae9b10",
          "status": "OK",
          "code": 200,
          "responseTime": 484,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e7893e-9ef1-4bce-8d35-317380ece02e",
        "cursor": {
          "ref": "b3dd88dd-3af3-4e2a-a430-81bbe3dba6b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1874687c-0647-4183-b51a-ad8a07459ebc"
        },
        "item": {
          "id": "e5e7893e-9ef1-4bce-8d35-317380ece02e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bc67c65-cdeb-4202-8f3e-be09d6b60133",
          "status": "Not Found",
          "code": 404,
          "responseTime": 954,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e7893e-9ef1-4bce-8d35-317380ece02e",
        "cursor": {
          "ref": "b3dd88dd-3af3-4e2a-a430-81bbe3dba6b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1874687c-0647-4183-b51a-ad8a07459ebc"
        },
        "item": {
          "id": "e5e7893e-9ef1-4bce-8d35-317380ece02e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bc67c65-cdeb-4202-8f3e-be09d6b60133",
          "status": "Not Found",
          "code": 404,
          "responseTime": 954,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dc4a66-6f3c-466b-a220-306c76ed8ff1",
        "cursor": {
          "ref": "3e70c104-9c74-4122-ba0c-b881b04b568f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c1656ea1-6d4a-4037-b484-de99d1e6bbd4"
        },
        "item": {
          "id": "55dc4a66-6f3c-466b-a220-306c76ed8ff1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c4e7ccc7-7778-40d8-be4d-cbb541307601",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8635a8-aa33-41e6-9222-ac4ff33c153e",
        "cursor": {
          "ref": "ad0de2c6-2b39-4f99-8164-5128756682c8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b522b207-c4bd-4a11-b8b2-70faf64770d6"
        },
        "item": {
          "id": "be8635a8-aa33-41e6-9222-ac4ff33c153e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e8f3138e-864e-49d2-8f71-5769da376230",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a628eb-65cc-415f-a5d5-3394b2e7ffd5",
        "cursor": {
          "ref": "30fb4359-5620-4cdf-b104-51ccd290734d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6a8b2d6f-782f-4008-9044-6d7ecb390ef4"
        },
        "item": {
          "id": "c1a628eb-65cc-415f-a5d5-3394b2e7ffd5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c27fdbe4-1ba8-46e9-9347-aaa98650aba3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a632861-6493-4657-a7a1-71ff25448092",
        "cursor": {
          "ref": "4ba537cb-8394-4cc8-84fb-05f96a983e7e",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5678d13f-5d86-47ed-a631-c462fc0122f2"
        },
        "item": {
          "id": "9a632861-6493-4657-a7a1-71ff25448092",
          "name": "identifiers"
        },
        "response": {
          "id": "e7d86c53-7571-4cec-834f-36ae36569a42",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6175b3ba-e66c-42b6-922e-5779ac5a1202",
        "cursor": {
          "ref": "e81884ad-c3ba-4e1c-89e2-9bdf9e8e218c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d45deb6e-273d-401e-a951-9f8704b62ef3"
        },
        "item": {
          "id": "6175b3ba-e66c-42b6-922e-5779ac5a1202",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0559678f-bef9-4427-b8cf-eacb1b273905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc604f06-5ba1-445f-9867-e03854e30ec8",
        "cursor": {
          "ref": "8c17ac58-8f7f-4b14-9156-6c4ac72669fa",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "88b1676b-f099-4089-a007-b429e61d12a5"
        },
        "item": {
          "id": "cc604f06-5ba1-445f-9867-e03854e30ec8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0921b8a1-692e-474e-9bdb-4552b5ba185a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a687da9-220e-4352-8c35-299bc6e35189",
        "cursor": {
          "ref": "31d6cd53-266f-4db6-900e-57896fdadc8e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a13d5d03-197e-4502-8f82-a2aeb1e60b67"
        },
        "item": {
          "id": "9a687da9-220e-4352-8c35-299bc6e35189",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "afdb84ad-6a6e-40e3-b6cc-5b4287d4e089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d57719-bb4c-4722-8030-837df10e7fb5",
        "cursor": {
          "ref": "3f2516ff-5a2d-4b33-80b2-9cf28b4ecfda",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "34886eb4-570c-44a0-9307-9323da6cf42d"
        },
        "item": {
          "id": "92d57719-bb4c-4722-8030-837df10e7fb5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8d93affc-934d-4b33-9ecc-7dcd4fe1300a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a549fbe2-3fe7-465c-acb8-784b5d6bc5ea",
        "cursor": {
          "ref": "4bf4d9fd-7618-4e98-9d1f-2647bbc7032a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "80eace54-a916-4f59-809d-36e4536ffce2"
        },
        "item": {
          "id": "a549fbe2-3fe7-465c-acb8-784b5d6bc5ea",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f528bcb5-5e00-4ef5-a06d-c2e3b5d0d809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea78001f-1928-4b48-8faf-20f02f0ef328",
        "cursor": {
          "ref": "e0643198-a8a7-4e26-bb5e-e782f5f3e069",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "19cbebf3-08c6-4a8c-9b93-ed9102deeb44"
        },
        "item": {
          "id": "ea78001f-1928-4b48-8faf-20f02f0ef328",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "45b3f4e7-fe24-4c4c-918d-2c0c9e748a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbca108-28ca-4b29-a206-6aa2d73a5701",
        "cursor": {
          "ref": "80fe7e7b-2da1-471f-983f-dfdad4ac2e5d",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b9bbe4df-efa7-475d-bdfc-0e11025af742"
        },
        "item": {
          "id": "7fbca108-28ca-4b29-a206-6aa2d73a5701",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6241805a-b316-43e8-8287-11bc84e3b5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9e2300-993e-4d06-b3e0-0b95ce7f1322",
        "cursor": {
          "ref": "c395c6ac-32db-40f4-b47b-c4d9c0e6327e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0e2b4c17-5fb1-4747-9ecd-899e220140ea"
        },
        "item": {
          "id": "ea9e2300-993e-4d06-b3e0-0b95ce7f1322",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ae41855e-15c2-45d0-b3d7-8ec4265e03f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0943f9-a34c-4455-95d5-4b98e8260e74",
        "cursor": {
          "ref": "f8df5244-f011-4db9-8e55-cf59f2a64a8e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1046a197-f980-4ee9-8889-17ac5626fdc8"
        },
        "item": {
          "id": "2c0943f9-a34c-4455-95d5-4b98e8260e74",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ebd79a28-3d54-4afe-b9e3-00951ce16354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe136278-659f-4a8d-91dc-c60f63b6b34b",
        "cursor": {
          "ref": "74505f6a-9c48-4f2c-a457-982615d2a13d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7b44b980-05fc-4ba5-b4a2-0f3795cb380b"
        },
        "item": {
          "id": "fe136278-659f-4a8d-91dc-c60f63b6b34b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9f48a901-7788-4c83-ab1e-0527f6364bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55d9cdb-b20c-4092-95e5-b90410bc8c77",
        "cursor": {
          "ref": "96dddc21-f4db-4eaf-9129-2f6ab5cd1fc0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae1224ba-9bb0-4ce1-ba77-c45b1298566a"
        },
        "item": {
          "id": "e55d9cdb-b20c-4092-95e5-b90410bc8c77",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ff7a8010-91a3-4684-ba5f-8cc9a3d992b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fcf2f7-a716-40cf-ba63-4dee81528abe",
        "cursor": {
          "ref": "d23698d4-04b9-4052-8fc9-c7d786e872ae",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8a4bfede-28a9-42d8-aaa6-8fcff17fff96"
        },
        "item": {
          "id": "f1fcf2f7-a716-40cf-ba63-4dee81528abe",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9505bd88-d532-414c-bf26-78df7fc46711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f843df-707f-4377-bbe0-dbb00a1ceafd",
        "cursor": {
          "ref": "b04bfab7-640d-49d5-b87e-04e3a3f7fd5b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6ba8ec95-a47d-4a4c-818e-43be21dbdd0c"
        },
        "item": {
          "id": "30f843df-707f-4377-bbe0-dbb00a1ceafd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0085a95e-953f-4d8d-a4ad-ccadf09dfcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9339b6-19f1-4a0f-9101-433f3cadf28e",
        "cursor": {
          "ref": "7832dfc1-4c53-45a8-a671-e3ced802b02d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "256c97e0-8866-4912-81ed-58fbd67edb96"
        },
        "item": {
          "id": "2c9339b6-19f1-4a0f-9101-433f3cadf28e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c24ca60f-69a4-4774-b9e0-a9f63774fa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63e01df-b5de-4cf2-aeb7-708dd5bfdb05",
        "cursor": {
          "ref": "5262cd79-ee1a-41b5-8790-39bbc754d673",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f869b42f-36b7-4e82-aed1-17c18b628afb"
        },
        "item": {
          "id": "e63e01df-b5de-4cf2-aeb7-708dd5bfdb05",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4179b52b-3b12-4d38-9316-2f842c19c638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5103f5-0a4a-4942-976d-bd74918cf12d",
        "cursor": {
          "ref": "f7a5d8b7-c450-45bc-bddb-05cc8ded98c0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f82c62a2-7bb0-407e-8efc-60c93830b7ec"
        },
        "item": {
          "id": "fc5103f5-0a4a-4942-976d-bd74918cf12d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1c6c2f26-60e3-4d96-af73-00b8bd4e6a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503719e6-95c5-4be6-b5a5-dea8c63c32f0",
        "cursor": {
          "ref": "f22e7ee8-d441-41dd-b8bf-430b96622f8a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "56593d64-29a1-4473-becc-cbac8edc9432"
        },
        "item": {
          "id": "503719e6-95c5-4be6-b5a5-dea8c63c32f0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aa809258-77ed-437c-83f7-532ac11e8bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361854e9-be75-4a05-b333-52ba4950530b",
        "cursor": {
          "ref": "802b6b81-ec91-4c86-8504-8d22716189be",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9b3c0a50-323f-494a-9a64-30c333bb7787"
        },
        "item": {
          "id": "361854e9-be75-4a05-b333-52ba4950530b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "db45f465-cd50-4a56-9733-92458d1c712a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cff81de-b129-497f-944c-33f2ef580e48",
        "cursor": {
          "ref": "cded154c-be4d-4bdc-a699-62ac177e390a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9501e4ca-6547-492b-87d5-5cf221eee258"
        },
        "item": {
          "id": "4cff81de-b129-497f-944c-33f2ef580e48",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36fc2ae0-ff90-46f5-bf1d-8609ca984f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c57fb2d-8b36-4a3f-81f8-6602f7bc48d7",
        "cursor": {
          "ref": "d07c9dec-9c39-496d-83bd-6f9e8ee89669",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5754a0a0-04b6-4915-9929-bc26ad993fe3"
        },
        "item": {
          "id": "0c57fb2d-8b36-4a3f-81f8-6602f7bc48d7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "508d10a0-c69c-4df0-bd0f-bce811814997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d82eca-5125-479f-b161-910d22da5771",
        "cursor": {
          "ref": "29bd7bdf-1b44-4510-8925-f288792dc44f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f75db609-3425-4117-b4ae-f67891e76057"
        },
        "item": {
          "id": "50d82eca-5125-479f-b161-910d22da5771",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5af008b8-2dbf-4b16-943d-c684f54bc114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1754875-ddb7-445c-aadb-da7e007af99f",
        "cursor": {
          "ref": "19ea63a6-674b-4817-b7b3-2c013f3f9ba2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "51ae0e74-4539-47cf-917b-2e6e947a1cec"
        },
        "item": {
          "id": "d1754875-ddb7-445c-aadb-da7e007af99f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "82842edb-6a43-4254-b0af-5ddf1c2581b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b288cc3d-c87f-4096-9cb0-58aa91adcb35",
        "cursor": {
          "ref": "a864224b-e37b-4983-bd33-72923b19aae6",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7ed1b5ba-9bc0-49c4-9a3c-b4ce953eeb02"
        },
        "item": {
          "id": "b288cc3d-c87f-4096-9cb0-58aa91adcb35",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fb60e89e-0220-4e39-87e8-68c962df0bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25961d98-4b47-4fd7-a658-19abf1da4d4b",
        "cursor": {
          "ref": "b7343571-e485-4704-b640-1fe3992ea77a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1788fc82-d39e-4063-bd95-f5c4de8a6c6d"
        },
        "item": {
          "id": "25961d98-4b47-4fd7-a658-19abf1da4d4b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "65214cba-d43f-461c-8ab9-89cf763e58de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6006723-8f01-415b-b149-55a70a6a5967",
        "cursor": {
          "ref": "f151f6a1-e0d9-4c4f-adfa-227bc622012a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a53fad1a-ac6c-4430-82aa-d998d7327763"
        },
        "item": {
          "id": "c6006723-8f01-415b-b149-55a70a6a5967",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2418da61-6cd6-4958-96bc-b66807b75946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592dc60c-982e-44d3-9018-512731ec076f",
        "cursor": {
          "ref": "38350ec9-29a0-4811-8b0a-0fdf068001ea",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a1317df5-aae2-4da7-bcc0-44134dd7cfaf"
        },
        "item": {
          "id": "592dc60c-982e-44d3-9018-512731ec076f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a0a92ada-1180-4b6a-8b35-9e4f6f589b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99639fce-416a-429b-8ec9-c713bdfcffa2",
        "cursor": {
          "ref": "7ba109b4-ece2-4686-b575-cace25601e9f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6d19a78d-fa14-4eef-9dd9-ca46f0cc22dc"
        },
        "item": {
          "id": "99639fce-416a-429b-8ec9-c713bdfcffa2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0430852e-a580-486b-8e35-b2229ab7241a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e082ecc-9d53-4f51-a9ac-a66ea3b925fe",
        "cursor": {
          "ref": "6d30971e-888a-4be3-8aac-aefed5642005",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c20753ae-7de5-44d6-912b-29ce5492ce6d"
        },
        "item": {
          "id": "0e082ecc-9d53-4f51-a9ac-a66ea3b925fe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "47b83928-0839-4227-9456-ad72265c1f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a25015f-d93b-4881-bc25-640f721ca447",
        "cursor": {
          "ref": "d4db4945-f335-40fb-8edb-8e51922cfda3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "55519386-29c1-4955-adc2-cf8f8ca315ca"
        },
        "item": {
          "id": "6a25015f-d93b-4881-bc25-640f721ca447",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "76dab4e8-e654-4ac4-b98c-f1ab719ac4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e762c51e-7480-4bfe-92c5-1f7d1fc39426",
        "cursor": {
          "ref": "73c0714f-4455-4b36-afad-29846b77d948",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0f40b901-edcc-487c-9c1c-dbc9c97e7caf"
        },
        "item": {
          "id": "e762c51e-7480-4bfe-92c5-1f7d1fc39426",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "48edd449-667f-41de-8297-8846b13c2f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb13f16d-e55c-4c19-80d2-9574fc6b2f29",
        "cursor": {
          "ref": "edd967b3-6478-4725-89fb-f234c3530d7e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a59ad19f-1f7b-402b-bf59-491eaed3cd47"
        },
        "item": {
          "id": "bb13f16d-e55c-4c19-80d2-9574fc6b2f29",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "27c3f350-9955-484d-86b1-fade75062324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bebf1f7-aaa8-40ff-aa45-538462830b77",
        "cursor": {
          "ref": "2866730a-c2d2-4611-a1d3-519807346ba4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8dee13e6-72eb-4926-bf41-a70819d38ded"
        },
        "item": {
          "id": "1bebf1f7-aaa8-40ff-aa45-538462830b77",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b2d9cd9f-bbab-4c5e-948b-15122dcdb08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4efdc4b-0d79-496f-86fc-974bbe9cb411",
        "cursor": {
          "ref": "63b185d9-a5ed-40a1-9bec-eccf103c83d3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c8081652-fada-4a6f-b648-cc64c04c4fc4"
        },
        "item": {
          "id": "e4efdc4b-0d79-496f-86fc-974bbe9cb411",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "474c844f-081f-4ba2-abe6-8c1ff8490294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3359eb1-e25e-4c0a-8015-1f6bceeb3390",
        "cursor": {
          "ref": "2a2c9dff-1345-49a8-8d36-6b47bc8c7b67",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f3e75b12-2e28-4ee2-b0fa-007f04a477cb"
        },
        "item": {
          "id": "f3359eb1-e25e-4c0a-8015-1f6bceeb3390",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ede3c2a7-57c7-4a8e-820c-bc5812b65a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b68aadb-949f-439a-920c-f744432dc2fd",
        "cursor": {
          "ref": "7e4b864d-6932-41bd-9c01-452eb1b401ef",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c500366a-8bf7-45d7-9ebb-4fe547fa8b2b"
        },
        "item": {
          "id": "3b68aadb-949f-439a-920c-f744432dc2fd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "565be99c-a545-4cea-8f02-b66d6ec7979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8755cb6c-7ab9-4fb9-b14e-450a0627a3f3",
        "cursor": {
          "ref": "450a8824-49fc-4907-9b63-3dbed8319d21",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "76b9a95b-9170-44ae-9818-f2d8d896bb63"
        },
        "item": {
          "id": "8755cb6c-7ab9-4fb9-b14e-450a0627a3f3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "451e454e-c685-4467-8249-1aa2a45c7159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e6a149-768a-4091-8d96-8140167d2de7",
        "cursor": {
          "ref": "d4b986d4-e622-4488-983d-37041a8e7531",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc3de9f5-6ed4-4617-9312-e7452a482382"
        },
        "item": {
          "id": "54e6a149-768a-4091-8d96-8140167d2de7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4851db3e-e4be-4e9f-94a0-e3076d636d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f869f15-c20c-41eb-b526-c0469add2207",
        "cursor": {
          "ref": "5039cf47-5068-4824-9b97-804a1aa51d16",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "340c1416-40b0-4cac-bc81-d6206caf7d73"
        },
        "item": {
          "id": "0f869f15-c20c-41eb-b526-c0469add2207",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "79612d07-ffbc-463b-bf79-3d5ab6a255b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11166dd7-db7f-494b-afd6-7780a1e239e5",
        "cursor": {
          "ref": "96dcb6ea-47ca-4a70-9874-5e73071e34c4",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "910d78fe-2478-46de-8227-705572ee51b5"
        },
        "item": {
          "id": "11166dd7-db7f-494b-afd6-7780a1e239e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1c3d7bcf-0d86-44e9-8cc7-f7a79568526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaf7aa3-dff3-40e4-bcfa-4e5f8d174dc2",
        "cursor": {
          "ref": "da30d50d-92e3-465a-8865-6839035db77e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "680d6ed7-4ab3-499d-8e6e-6ab94e2e95e1"
        },
        "item": {
          "id": "efaf7aa3-dff3-40e4-bcfa-4e5f8d174dc2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9f265876-42b9-476d-9401-a4c85fd47f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931bd80f-6193-42a1-9a8e-34995690f206",
        "cursor": {
          "ref": "e1d00084-408f-4da9-832f-a1a3aa706f1e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f1721ae6-1ad5-4793-9678-2d0360b7752c"
        },
        "item": {
          "id": "931bd80f-6193-42a1-9a8e-34995690f206",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1493191d-96c8-41b9-b93a-04bea33a6728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8f00d8-05cc-4a48-9b05-33ff49eb82f5",
        "cursor": {
          "ref": "01c8285c-10c1-403a-95cf-cac25a265a9e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "98dcb9a7-cc19-4e2b-9d62-620d8a80ad87"
        },
        "item": {
          "id": "8d8f00d8-05cc-4a48-9b05-33ff49eb82f5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fe2312c6-c73c-40ed-ab67-b1df79118c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f7dd37-cb53-4207-b127-ad763ff837d6",
        "cursor": {
          "ref": "7e8c2c0e-f430-41b8-9018-4ba7ae5d9d7e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "836dff82-8c6e-4870-aac8-545fe2a94761"
        },
        "item": {
          "id": "29f7dd37-cb53-4207-b127-ad763ff837d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a540f179-45fb-41a9-ac14-d6651775ed6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2456ff3d-bdc5-4e1d-95d4-bb31afd00d1d",
        "cursor": {
          "ref": "384412b4-5a83-4616-ad79-532cd1b7b4af",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d1b8e12f-e432-41f8-a5ff-2adae708078e"
        },
        "item": {
          "id": "2456ff3d-bdc5-4e1d-95d4-bb31afd00d1d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "10130edf-9f5b-45c1-82b0-61f390d5ee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea95b137-48ae-4392-a743-fec5cc0ff1a3",
        "cursor": {
          "ref": "379159b2-a968-4306-a78d-6caa1ddfa377",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b442c6fe-612a-45ff-8f9d-44c2f4d4902a"
        },
        "item": {
          "id": "ea95b137-48ae-4392-a743-fec5cc0ff1a3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "96940e22-d7d9-4299-ae6a-7d9e59d12030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21910e8-0a6b-48e8-9096-e5c0454ec88a",
        "cursor": {
          "ref": "397ede9f-3fbf-4f34-8252-4789bd380f9b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "506e270d-f2e2-4bbc-9633-8dfcce00e9f1"
        },
        "item": {
          "id": "a21910e8-0a6b-48e8-9096-e5c0454ec88a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d7567cf9-9191-4b1d-8b86-3f366be6c858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ff0235-f1cb-4487-804a-90b2243d1b00",
        "cursor": {
          "ref": "6ccc8a68-7140-4447-9b33-58b206f3d022",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "14ef7a8e-2dba-4d93-bac6-127fc4c79403"
        },
        "item": {
          "id": "80ff0235-f1cb-4487-804a-90b2243d1b00",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d66ba4f0-4867-4a34-aa07-802ba253d236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ae72d3-d674-4954-8e35-5006afe5e18d",
        "cursor": {
          "ref": "e5bacce4-434c-4224-8dbb-afc4be22406a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "587e76fc-208a-4b91-bd40-8ff161dcffd5"
        },
        "item": {
          "id": "57ae72d3-d674-4954-8e35-5006afe5e18d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5ff2dec5-ce00-4097-b2e3-3305aeea82e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe700aa6-17a1-4dea-800f-450c63b1e088",
        "cursor": {
          "ref": "a4cca857-0368-49ef-990f-7e0cd74cd4ee",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d8b81935-8929-4b67-872b-859f99175810"
        },
        "item": {
          "id": "fe700aa6-17a1-4dea-800f-450c63b1e088",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2dd7e7b7-0e85-45ca-ab47-540eb6513239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e6160f-ac79-472f-a585-f56e0e1c483f",
        "cursor": {
          "ref": "96c1d92f-15d8-4f8d-a240-842a42993595",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a3aef558-149a-480e-b21c-fd18abcc51f0"
        },
        "item": {
          "id": "47e6160f-ac79-472f-a585-f56e0e1c483f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0719036e-ad71-4f68-87b5-0704f4e9138c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c95df2-f1a8-4dc7-9f40-54e3c73f6d53",
        "cursor": {
          "ref": "6247f6b1-8f9a-4981-96e4-c98dbff67522",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "54b065b8-4c09-476e-bd03-deddf0a54f56"
        },
        "item": {
          "id": "73c95df2-f1a8-4dc7-9f40-54e3c73f6d53",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "faed2407-9255-4c21-b509-a178460ed0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdcdfa2-2c7c-466b-8840-c9ea07464bd3",
        "cursor": {
          "ref": "124c3ded-c42f-4d4e-baa6-f51a6a7d243a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2dce9f08-3796-436c-ba95-8dc7846b891f"
        },
        "item": {
          "id": "2cdcdfa2-2c7c-466b-8840-c9ea07464bd3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "43e29994-b9d9-4724-a22e-b4bac5b6f982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cd73ce-357e-4bdb-990b-6ee11172ac6a",
        "cursor": {
          "ref": "444415cd-4f2b-4ff2-acb5-7a1b4639c8ee",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e49461c2-dc5b-421c-833a-00c3da058e8d"
        },
        "item": {
          "id": "16cd73ce-357e-4bdb-990b-6ee11172ac6a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "defc30a2-43e1-4b99-b41a-6a694c56eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d88241f-243a-4523-9c1b-8f6ca6b3a8ba",
        "cursor": {
          "ref": "e72834e4-d184-4e7d-a25c-655fd3f48490",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "acc4ed70-7b3f-4357-970d-b32c57cf282b"
        },
        "item": {
          "id": "4d88241f-243a-4523-9c1b-8f6ca6b3a8ba",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bffccb81-6592-4b94-af1c-894a6e1c4a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33570649-0d1b-4944-98f1-cb98db040e41",
        "cursor": {
          "ref": "1b062472-8f24-4fd3-9037-2f70e8d23548",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e7133b79-ff46-40a8-88d9-43afcdf5feaf"
        },
        "item": {
          "id": "33570649-0d1b-4944-98f1-cb98db040e41",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "03392d71-0722-4bec-8ce4-bb13f2190fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baee2d58-b9bb-4166-9023-5e051a5a9c0a",
        "cursor": {
          "ref": "0cc4a14d-82de-4e62-83d0-4924d9d0c57b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dfa36f83-637d-44b1-9e37-6faa5c3de14e"
        },
        "item": {
          "id": "baee2d58-b9bb-4166-9023-5e051a5a9c0a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f201291-9ac8-4558-9e38-b9c339185d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764d05d2-31d2-4194-8c00-dcde1b1647b0",
        "cursor": {
          "ref": "32aa8afe-2953-492e-910b-65caabf5fea0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "20e6e0fc-fac6-44bc-98a1-ad6e56cc6ad1"
        },
        "item": {
          "id": "764d05d2-31d2-4194-8c00-dcde1b1647b0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "69c85701-9dea-4266-8072-59e213379868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8544fc-6d44-4884-ad7e-e612f7c60a81",
        "cursor": {
          "ref": "e894bcae-0000-46c2-95e1-1ffaf1ffff0c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a336a813-e868-4233-abb3-d65e535449bd"
        },
        "item": {
          "id": "1c8544fc-6d44-4884-ad7e-e612f7c60a81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "df356955-34cf-4d45-909f-0243623fb524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de929878-d591-4194-9831-bdbb603d5a21",
        "cursor": {
          "ref": "0a80247f-6af8-4194-8e3a-870ac7da1a23",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "747b4699-b003-4568-a89f-946213d3c689"
        },
        "item": {
          "id": "de929878-d591-4194-9831-bdbb603d5a21",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4ba2f09f-739b-4f02-af30-4151874b06d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb86b5ae-cf12-487e-8dfd-11dda5546b25",
        "cursor": {
          "ref": "3b560655-5848-4198-b8b6-6ea7a73625f7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2c36b392-4fd5-4e7f-8bbd-7a887a752f24"
        },
        "item": {
          "id": "cb86b5ae-cf12-487e-8dfd-11dda5546b25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f8b1456e-a5e1-41b4-bb6d-35691ba26aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed2e913-891c-4b9c-8b25-6c7f71cff865",
        "cursor": {
          "ref": "5e2d9e34-8278-4c6b-a981-7eeb75c975bd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3f0039c-a19a-46c5-a5b3-9b00af1c3294"
        },
        "item": {
          "id": "3ed2e913-891c-4b9c-8b25-6c7f71cff865",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "47494f6a-7501-40d4-890f-b46de5893dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9fff2d-f25c-46d5-851e-de893fa68e33",
        "cursor": {
          "ref": "2b7ee04e-2025-4def-987c-9356ddefc432",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a627fb8d-0186-4f18-9991-fb2d71552965"
        },
        "item": {
          "id": "6b9fff2d-f25c-46d5-851e-de893fa68e33",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b9f220a4-a1bc-4ebd-abed-390f9a4e5707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbf7bbe-8b1b-454f-84b0-9eb47362ed50",
        "cursor": {
          "ref": "9b0b3e1b-8000-44cb-968b-58f8bccc4f85",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f3d7d5f8-08a6-4f29-95ca-d398806ddd6f"
        },
        "item": {
          "id": "ffbf7bbe-8b1b-454f-84b0-9eb47362ed50",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d30ff3f9-83c1-437b-a2e1-03f35a65651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8cbe7b-d816-4c48-9249-6363234fbaf9",
        "cursor": {
          "ref": "87079aa1-8d6d-4f0a-9b2e-07e600f10f30",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ae5696b5-e001-4d9f-8a00-a34ef4b57671"
        },
        "item": {
          "id": "7d8cbe7b-d816-4c48-9249-6363234fbaf9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3c9e6fcb-5738-4d93-88ee-7b60e4dfe541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4a94ca-58c9-4abd-8a3c-9787f1b46afa",
        "cursor": {
          "ref": "eec378ea-26be-4935-9933-0b30e9cd3777",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "125176da-57df-4ad7-9262-11a010adb97d"
        },
        "item": {
          "id": "ea4a94ca-58c9-4abd-8a3c-9787f1b46afa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3ee424b0-93f3-41cc-94ef-6444546f058f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415f1b8a-4d47-4b07-bed7-03420517cb28",
        "cursor": {
          "ref": "48260256-ee29-405d-9ee6-123fb9571064",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f6e45871-2d3d-4893-8221-ae5d2b98da71"
        },
        "item": {
          "id": "415f1b8a-4d47-4b07-bed7-03420517cb28",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3ac14e29-ec39-4f6b-bd0c-ff7e534194db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5253f3b5-f46d-4e69-b48a-e55d4bf337d9",
        "cursor": {
          "ref": "d21519f7-6b5f-4c27-91f1-c67c72f342ce",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5bc40381-1b18-4943-901d-d70b58f78def"
        },
        "item": {
          "id": "5253f3b5-f46d-4e69-b48a-e55d4bf337d9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "73df48e5-157f-45ff-b75c-927548397240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cc3a6c-01d8-4ed1-a99c-b0013fb354fc",
        "cursor": {
          "ref": "0df76a3a-ab1a-41bd-9be6-be4a80d8c760",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c5410c8-f930-452b-a226-7da3fa781ccc"
        },
        "item": {
          "id": "43cc3a6c-01d8-4ed1-a99c-b0013fb354fc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2008324f-dca2-4017-848c-0349846db1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb0cd1-95d4-420b-b648-759881ea6d96",
        "cursor": {
          "ref": "722fb468-0bff-4590-bd3f-57290a6becda",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dad0c854-7658-4a6a-a1f0-3d7aebd1a8b5"
        },
        "item": {
          "id": "57fb0cd1-95d4-420b-b648-759881ea6d96",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cbfedf65-b2de-4cb4-9fad-a8b50a49eba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1d2557-f10f-47a1-baf4-13d7c1fac215",
        "cursor": {
          "ref": "b8b6fb16-5b5d-4716-afa9-3bd9565fba01",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8379ac72-82b3-4fe9-abc1-e4d87d385f5f"
        },
        "item": {
          "id": "fe1d2557-f10f-47a1-baf4-13d7c1fac215",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83ae24fc-a6cf-424c-8fdc-d42a9e3063d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7109eadf-934b-40c6-82ab-5203075e1b03",
        "cursor": {
          "ref": "2becb6c3-f6dd-437b-946e-7b830f46118d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c61b95e4-0d23-4cb4-9cbf-a8f609849bf7"
        },
        "item": {
          "id": "7109eadf-934b-40c6-82ab-5203075e1b03",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1f7011c2-5511-443e-9e30-a33e55c55b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d2cb22-9dc7-4e79-a424-937f0913d7b8",
        "cursor": {
          "ref": "2c845650-c6bc-4522-8cd6-40d8218038a2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3077c68f-4b98-487d-afee-129d6072b1b7"
        },
        "item": {
          "id": "e3d2cb22-9dc7-4e79-a424-937f0913d7b8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b2cdffaf-bdc3-48e5-abb8-80bff957b125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6a6fc2-b93b-4169-a068-82ace27a3bf6",
        "cursor": {
          "ref": "049b2678-327f-4376-b7db-f4221210a16d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6b907539-4e0d-46b6-9cbe-5fc9c8fd5c75"
        },
        "item": {
          "id": "fa6a6fc2-b93b-4169-a068-82ace27a3bf6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "550852e3-0a7d-443b-82a0-c3042e736ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fbd25e-729f-43e0-99ec-f2ce17afc241",
        "cursor": {
          "ref": "844a939a-c7d1-4889-aa01-edd80d5c85a9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f18a9fda-a436-444b-a2e5-f3485b988660"
        },
        "item": {
          "id": "c0fbd25e-729f-43e0-99ec-f2ce17afc241",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8ff18130-9c1d-4fb7-bcb2-5bf897303664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a730fb1-c088-40fb-9f96-8f062899e5f9",
        "cursor": {
          "ref": "507c1823-2f6c-4045-9779-315b2c23626e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ddc324a4-875d-4e75-bbf0-e7105b865fe4"
        },
        "item": {
          "id": "3a730fb1-c088-40fb-9f96-8f062899e5f9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e2a36e67-a3e5-4b6e-8a17-7b18ca135864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88270831-0269-43fd-83ad-bf7ff81836dc",
        "cursor": {
          "ref": "25ca6710-0a37-4f6b-bc2d-f6bba5ab0c86",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9ab62181-c098-402c-aab0-f977766aa516"
        },
        "item": {
          "id": "88270831-0269-43fd-83ad-bf7ff81836dc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7f510143-4842-4439-ae2b-01f920957775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e11dbd-e01a-4071-b274-daa45540d6c8",
        "cursor": {
          "ref": "6ff6e463-872a-452c-89a2-e316ceb0412d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5fa853f4-4e1c-44be-953c-8964c1747300"
        },
        "item": {
          "id": "91e11dbd-e01a-4071-b274-daa45540d6c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "58e72743-a6bb-4f1d-98a7-51d8d5c515e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8020e5-d56d-4f7f-a157-113a36db5c4f",
        "cursor": {
          "ref": "9b61576e-9c27-4026-ac64-b3bf3b4162e6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d031548f-8dbb-45b3-892b-d993b0c2bd1c"
        },
        "item": {
          "id": "9a8020e5-d56d-4f7f-a157-113a36db5c4f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6670a9de-7c1d-4a6f-b09b-625c776f9d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c727e40-34e5-47c8-883d-de163eae7346",
        "cursor": {
          "ref": "3d1b3456-15b9-4a9a-844f-75b4ac500f6d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6ccfc34d-6d08-48cc-91c4-bbe3ffa28989"
        },
        "item": {
          "id": "7c727e40-34e5-47c8-883d-de163eae7346",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4233efe6-ea37-4e74-a73c-759a9caf3fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c241c7-6c78-4c9c-8d48-fc3d85e72c1e",
        "cursor": {
          "ref": "cca598df-2ae0-4e54-8bc4-fc3bbeb70440",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5e0de264-bb19-4faf-9a71-5ee06be3dbac"
        },
        "item": {
          "id": "21c241c7-6c78-4c9c-8d48-fc3d85e72c1e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c83a7a09-d377-4de2-a08d-a7aff6985ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe36f64b-476b-445e-abd5-75f6c8983453",
        "cursor": {
          "ref": "010fee25-ba93-413c-bb4b-533b3ca67f76",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d892fbaa-ddb0-4942-82de-948f0f6bb1cf"
        },
        "item": {
          "id": "fe36f64b-476b-445e-abd5-75f6c8983453",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ff553489-0a44-43e4-9063-218cf28939cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce51c42-a895-4f7e-ba3a-e41e6aabe0ca",
        "cursor": {
          "ref": "bdf9b68a-2fc7-487f-8718-3127b75b5b2f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0196d38d-2fd9-4e55-9cf3-85fe49ad8838"
        },
        "item": {
          "id": "9ce51c42-a895-4f7e-ba3a-e41e6aabe0ca",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3b8e5ac1-2c4f-4410-8f45-bca2369aa012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949b98bf-b4ad-4633-ba8c-d7c5ab27df46",
        "cursor": {
          "ref": "0e312450-87b9-4a71-93ef-a00d656d5750",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4c2a1330-4f6a-4458-91a3-67f31a2c3666"
        },
        "item": {
          "id": "949b98bf-b4ad-4633-ba8c-d7c5ab27df46",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8e600ab1-1d0d-40ef-9115-f48d7d4d49e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a76e650-1f08-4267-bf1b-750ec729a273",
        "cursor": {
          "ref": "01f6ce38-a18d-48a3-9b7d-ca86d49090f3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e327a58c-94f8-4174-969d-9a08f8847c39"
        },
        "item": {
          "id": "1a76e650-1f08-4267-bf1b-750ec729a273",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "24876cf0-7644-42d3-8152-9db59cb3f5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79d63b7-6dd8-4a9a-94cf-105de86ad241",
        "cursor": {
          "ref": "b1b4e8ac-f320-4ae2-966d-99dd0fd52e5b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d8af1693-79f7-4c15-9a9d-c5511a2afb06"
        },
        "item": {
          "id": "a79d63b7-6dd8-4a9a-94cf-105de86ad241",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "41114587-bf39-407a-a508-bd67a3e51c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d137504-91d7-4cec-8df3-b568031930bd",
        "cursor": {
          "ref": "99ffd27b-cfb7-4311-b8c3-bd8ea515831f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3ff65ed5-f9b1-4602-93bb-77a82ef51887"
        },
        "item": {
          "id": "9d137504-91d7-4cec-8df3-b568031930bd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ac420878-9ee6-4812-aa5d-2c4ccc02824d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650dcd8b-f6f4-43be-b9ec-7459d860bc20",
        "cursor": {
          "ref": "128d6c56-ff72-4554-8e8a-122fd74143cb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "876c864e-0e6e-457f-afe7-aebce2572f8e"
        },
        "item": {
          "id": "650dcd8b-f6f4-43be-b9ec-7459d860bc20",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e6d01138-a931-4a9e-902d-d6d708b0e8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf6d526-84b6-4ae6-84ac-b8e5e0881c41",
        "cursor": {
          "ref": "85555a78-ac06-4c58-99f8-994bd2206e90",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c6b5242d-4b5e-4559-bd18-21fe2499f525"
        },
        "item": {
          "id": "fbf6d526-84b6-4ae6-84ac-b8e5e0881c41",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cf9f56cd-deb0-4558-82b9-61cbd6b04bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2c6128-daad-4b60-ac76-0feb295feeab",
        "cursor": {
          "ref": "16290eeb-a08a-4b30-95d8-bb9b758a57d7",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6a2f5be3-2268-42ef-a3ff-33fb8fe29508"
        },
        "item": {
          "id": "ff2c6128-daad-4b60-ac76-0feb295feeab",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b3e61b6c-9e3e-4c35-976e-9771fdac30c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50320b37-b3cc-4ea8-aa86-583ff7c2c7e6",
        "cursor": {
          "ref": "b6a81886-2ec1-4ba6-8e15-e45a79d47707",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7afdfa49-6e49-4d82-a881-4baa2b9b72e4"
        },
        "item": {
          "id": "50320b37-b3cc-4ea8-aa86-583ff7c2c7e6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7e27ec41-f3b7-47c5-a238-3e6db130257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba3c287-63bb-4a4f-bd55-d6ec3824fb98",
        "cursor": {
          "ref": "6881b95f-06a0-43d0-8196-b2736c149607",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "976b9f32-a92e-4ed4-a710-10632a927be3"
        },
        "item": {
          "id": "9ba3c287-63bb-4a4f-bd55-d6ec3824fb98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d8769906-24bc-4891-bd4b-d1f8df0a191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522287cf-8321-43a3-9581-04f68b1a765f",
        "cursor": {
          "ref": "b48cffbe-ebf0-4514-89ff-f6f8be0fda16",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "acad59c3-36d2-432a-9306-b1d9244f7a22"
        },
        "item": {
          "id": "522287cf-8321-43a3-9581-04f68b1a765f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd8dc6d5-2057-486b-b603-f98b66f21c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d891ea5-417c-4703-93a3-7a65d88ab030",
        "cursor": {
          "ref": "6a43f588-4cf5-447f-aacc-71ddc8649dbf",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d388c764-e354-43b2-a278-1bad4f75bf4f"
        },
        "item": {
          "id": "4d891ea5-417c-4703-93a3-7a65d88ab030",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "81aed025-9e2f-491b-b50e-a1970f4c05cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ac0b14-578f-48e3-8821-a1f8b0b6a05d",
        "cursor": {
          "ref": "614a28e6-1956-42d3-a8d4-0f7b566a8c7c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2f8d0347-df08-4a92-ae79-aa9ebb994c76"
        },
        "item": {
          "id": "a0ac0b14-578f-48e3-8821-a1f8b0b6a05d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "56e19db9-4b55-4a3e-8086-214c4c44aba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ada5b3a1-1bfb-4511-a9ca-ab7791ed86e2",
        "cursor": {
          "ref": "78180e13-1eff-4941-b5aa-83e02f89fbd1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06bc6582-bcd5-4565-9bb5-338abbe0b406"
        },
        "item": {
          "id": "ada5b3a1-1bfb-4511-a9ca-ab7791ed86e2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3431562c-296d-4813-b55c-a953693d3662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "4648156c-d604-475a-9f5f-27e0df209f2d",
        "cursor": {
          "ref": "fc013a56-658a-4946-9928-b2e25550cc99",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9ff57e3f-ec83-4266-9955-b7f1b598bfa8"
        },
        "item": {
          "id": "4648156c-d604-475a-9f5f-27e0df209f2d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9617832c-c2b9-4eff-8cd1-a71ee619a973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "593ae65d-dd26-4ebc-ae8f-5fb8ebf4626e",
        "cursor": {
          "ref": "96f2cdfb-8d8d-485c-9fb9-d0a61f7563d5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d14c6471-0fcc-42b0-b719-0a37b9355d6f"
        },
        "item": {
          "id": "593ae65d-dd26-4ebc-ae8f-5fb8ebf4626e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "53b4ae85-c732-4daf-a69a-c7fd15c33634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2bfd578c-b888-4c0d-8e10-9c1b988bacd8",
        "cursor": {
          "ref": "4f8074af-039a-442d-ab6f-be9e14311f1d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "69c48668-4b9c-401f-ba03-372a210697ed"
        },
        "item": {
          "id": "2bfd578c-b888-4c0d-8e10-9c1b988bacd8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "94ef0a3c-feec-47ab-914a-04ae8b66b639",
          "status": "Created",
          "code": 201,
          "responseTime": 5153,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb04b1e-4699-48b2-992e-98ced58d8d48",
        "cursor": {
          "ref": "fd82b767-d940-4da5-bfe5-160333e64603",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "91ed4d79-fd80-4538-8be2-f26b6502fc7d"
        },
        "item": {
          "id": "0eb04b1e-4699-48b2-992e-98ced58d8d48",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "77b4140a-1c77-44ca-8d1b-e0f0220af032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "de55b81a-9747-4a96-947a-bca53be1ebe2",
        "cursor": {
          "ref": "157f100d-4c71-44ce-8145-cebfdf38816e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1de7245f-c355-4d22-afd1-a8ce3b51351a"
        },
        "item": {
          "id": "de55b81a-9747-4a96-947a-bca53be1ebe2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb4aa02a-b963-4e28-941a-8d8bd90825f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1b67b999-e686-4258-b6e1-3963fa18c8d9",
        "cursor": {
          "ref": "9c7ec79a-41aa-4142-a70b-6a714a4116e2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3c6db57e-ddeb-4b81-b833-0c98dbf18dc7"
        },
        "item": {
          "id": "1b67b999-e686-4258-b6e1-3963fa18c8d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bcbf3caa-7333-4a49-b927-f98615461b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f0214e-925a-4547-8044-1c291d320905",
        "cursor": {
          "ref": "73da5a74-e54c-4f5e-bcde-ecf1f5df20d4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "37d908eb-5efd-4cc4-8b75-2307a600a871"
        },
        "item": {
          "id": "b3f0214e-925a-4547-8044-1c291d320905",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cd089955-88d0-4bd4-b7de-5091f6521fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899df052-d8df-410f-afc2-22feeef5f8b0",
        "cursor": {
          "ref": "5fbb5bb9-1926-48f5-8751-196517695439",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "716293f8-964e-432d-b62a-14d73b471570"
        },
        "item": {
          "id": "899df052-d8df-410f-afc2-22feeef5f8b0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5b1a881d-55e2-43a4-b9c7-e26eaeb01ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b2e3f4-b322-4e49-bdc3-40ee854c651b",
        "cursor": {
          "ref": "777e5ad8-0a56-430e-85f3-c79aad1338a5",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "31776211-7064-4c8f-9843-f5ed9d6576fe"
        },
        "item": {
          "id": "d8b2e3f4-b322-4e49-bdc3-40ee854c651b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "77e4dd39-cc77-49f6-ac52-9ceafc75f094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c66ef5-29c3-4287-82a6-5b8811aa27fd",
        "cursor": {
          "ref": "26311d76-508b-42ca-ad66-af4110ff16d4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b658da8c-ad8a-4d7d-8f89-d6b2298b9440"
        },
        "item": {
          "id": "22c66ef5-29c3-4287-82a6-5b8811aa27fd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68286687-4a03-4c09-a3bd-7960df534db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5861935-58ba-4ec3-b78c-9ebc78134a69",
        "cursor": {
          "ref": "d03315ca-5da1-49a5-af19-bfa99401ed9e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "df37016e-13d6-47bc-8b54-3b4a29dfff06"
        },
        "item": {
          "id": "a5861935-58ba-4ec3-b78c-9ebc78134a69",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "79790b03-d4bd-4f3c-873f-992d7240a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1f7ce9-f229-4f69-9e7a-6e744bb0e862",
        "cursor": {
          "ref": "fb8d7a03-0317-42ff-87a2-349fdf334f2b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6a151fa4-8907-4e7c-9b8d-3e005519ba76"
        },
        "item": {
          "id": "8d1f7ce9-f229-4f69-9e7a-6e744bb0e862",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "aa1abf6d-6d61-4c55-a93c-79e61201a633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e958e28-55e0-4a55-976b-db83b708e09a",
        "cursor": {
          "ref": "f6705c26-7124-4932-8dc2-4f4166778f9d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7bf993e6-cae8-4926-b46a-5205aa0887e5"
        },
        "item": {
          "id": "2e958e28-55e0-4a55-976b-db83b708e09a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a2845e80-a187-4121-841d-7e195e895c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b36cd1-a86b-429f-b728-08eb0a552bcd",
        "cursor": {
          "ref": "545e6c08-fb79-4452-bec0-9fb9246fbadc",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "62aeb5ce-a3b9-4f34-9aca-fd8743e49fbc"
        },
        "item": {
          "id": "45b36cd1-a86b-429f-b728-08eb0a552bcd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ff5c6860-d542-4deb-8ab8-bb4e7e10d7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3657dd4a-9764-4f31-b5cc-2f6aae20d39c",
        "cursor": {
          "ref": "b92ae3d6-06a0-4970-bf8c-15696152e35b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "827e9fc7-0fe1-4959-bec1-72db2424548d"
        },
        "item": {
          "id": "3657dd4a-9764-4f31-b5cc-2f6aae20d39c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14c25aa0-68a2-49ce-be1f-98a7e0c1e9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c6a3fb-61a1-43a7-9d4a-232f40ac1bdb",
        "cursor": {
          "ref": "70a0b23b-c380-4be3-8be2-297de5fcda03",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1c03b113-307e-4a2b-a3d4-b37503a7b7fe"
        },
        "item": {
          "id": "01c6a3fb-61a1-43a7-9d4a-232f40ac1bdb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c591a7b-8f2c-45c1-9a9b-2874cd5c46eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae66b47b-f8bd-4fd6-a587-f8c6c019f46e",
        "cursor": {
          "ref": "d8fcc83e-e414-4514-a08e-954de4112acd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8c338a18-f0b8-4380-a6bd-1c82f0e18a80"
        },
        "item": {
          "id": "ae66b47b-f8bd-4fd6-a587-f8c6c019f46e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fe28bce3-debc-4b5b-a9ef-9c388a0d2a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f54187-0f2a-4208-9dde-a00f634322e6",
        "cursor": {
          "ref": "cd249ef3-d686-4273-9fe9-ba775b6063db",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3f6a59ea-a1cc-43c3-ba0b-8949aecea14f"
        },
        "item": {
          "id": "22f54187-0f2a-4208-9dde-a00f634322e6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dcf9af67-8dc6-428b-b457-16a7d617ced7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4d5ecd-4175-4a89-817c-7ed418a4a2d7",
        "cursor": {
          "ref": "2bc262a9-52ec-4cff-8d5f-3ba6e2ba44a6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37a5999b-ff3e-4b64-997f-4a586e24c731"
        },
        "item": {
          "id": "2b4d5ecd-4175-4a89-817c-7ed418a4a2d7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10ec83af-565a-4c00-9c21-d57589012c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60374c7c-79ee-4eb8-84fd-2d4c56661600",
        "cursor": {
          "ref": "966d68fe-e0b8-4cce-8398-dd592fcb5e7b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "74598618-0f0f-4274-b4fc-c4836d54d77e"
        },
        "item": {
          "id": "60374c7c-79ee-4eb8-84fd-2d4c56661600",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c3cf1923-7c0c-43c2-9d6c-abf16a03aea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03066fdc-c1af-4848-9b19-7aff179942de",
        "cursor": {
          "ref": "a9823c44-6c68-4b53-a0bd-2b2c28253f1f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8477f329-2ffc-41b7-9506-2c19e798346e"
        },
        "item": {
          "id": "03066fdc-c1af-4848-9b19-7aff179942de",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7aef107b-737e-4e3c-9e04-6ca200a22f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b098c4-46b0-4c80-8e4a-d100a8e79c41",
        "cursor": {
          "ref": "48829b5f-afe1-4535-a612-2962c3509108",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d7d99780-3b90-4094-bef3-0333f91ebb2d"
        },
        "item": {
          "id": "a0b098c4-46b0-4c80-8e4a-d100a8e79c41",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e8880e48-fec7-4ac9-93bd-108b645a191c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6224fb25-5333-4647-be57-a63a17131003",
        "cursor": {
          "ref": "1b117874-e7b2-4278-861a-d6a942dbde1e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "688de76e-ed59-481f-ba3d-908b80133f81"
        },
        "item": {
          "id": "6224fb25-5333-4647-be57-a63a17131003",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4149dd9e-8ae3-4c1e-a197-0ecc42dc94d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684e8bc0-c4af-4b56-8215-d413d3260ff6",
        "cursor": {
          "ref": "eb221da7-526e-41c0-8bc0-88ba8cd8ba74",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3cb0e325-5d52-4163-b7fa-cb18715cb344"
        },
        "item": {
          "id": "684e8bc0-c4af-4b56-8215-d413d3260ff6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1bd73491-4622-499d-a94d-c255b4e5db45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795f5b92-95ee-4c55-85a9-22b8e54d3340",
        "cursor": {
          "ref": "abfad0d1-0f4c-45b3-9ebb-f180f79ea10a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bbdb6445-b9cb-4909-8b4e-0d88caf5ef46"
        },
        "item": {
          "id": "795f5b92-95ee-4c55-85a9-22b8e54d3340",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8712a51c-8e75-4726-8791-b5578996b297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb65280-c99b-4af1-ad76-2c9ab3b2dd44",
        "cursor": {
          "ref": "5aabc83c-69ec-45cf-93cf-5b64252feecc",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bd6cbff6-6b99-43e5-a089-2ffbb00c2e64"
        },
        "item": {
          "id": "8cb65280-c99b-4af1-ad76-2c9ab3b2dd44",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4226aee1-0c16-4b15-94d8-32b09a1301ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd5022c-e8b8-444d-b0fa-cbe4527bd89d",
        "cursor": {
          "ref": "de98270c-c265-4127-8ac9-63c0035d7b48",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e669346-8e2a-4635-b543-b347293c5e2c"
        },
        "item": {
          "id": "2cd5022c-e8b8-444d-b0fa-cbe4527bd89d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12f779f9-3bd8-45a2-8fad-869111dddb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca8dc0d-b87c-453d-b291-147eee0f206c",
        "cursor": {
          "ref": "9fda210b-db27-44fb-85f9-2b1a57eee7ff",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e2e91c3e-8a07-4a9d-83a4-b94ddc17189c"
        },
        "item": {
          "id": "aca8dc0d-b87c-453d-b291-147eee0f206c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ffc1244-126d-4316-b7e0-c8a2063819b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d772322-fc81-4f46-9ca4-242d5609ae1b",
        "cursor": {
          "ref": "1f488618-9758-4b4a-bcfd-2e4b93ba3a45",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "834d2aec-0748-4fc4-b8ef-3d0a9ce923f2"
        },
        "item": {
          "id": "5d772322-fc81-4f46-9ca4-242d5609ae1b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3cb351c8-08a5-4dc2-a8c9-8324535f5100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fb666e-6984-4b83-9f08-f762d91f913e",
        "cursor": {
          "ref": "4467bbb7-01a1-438f-85f4-49a020aaa039",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b822097f-a399-485b-be40-4c3c2a8a7d39"
        },
        "item": {
          "id": "97fb666e-6984-4b83-9f08-f762d91f913e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ba50e510-18a9-4810-bd3d-abd5c3481571",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e7294a10-3145-41f6-8f85-7ff55c6d2f1a",
        "cursor": {
          "ref": "9624d898-6ea9-43a8-8eb1-41328dd22e72",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8dc9ae7c-729d-480f-9b4c-dc95f96f9d90"
        },
        "item": {
          "id": "e7294a10-3145-41f6-8f85-7ff55c6d2f1a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9443328a-1fd7-460a-9327-552dd1a8b6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eeba3a-507b-46c5-9bf3-c0a3702bd306",
        "cursor": {
          "ref": "fbb63f1a-ba13-42f9-8abd-53069d562f84",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "749b2171-0dc4-4bca-9588-9ba0bc52c94b"
        },
        "item": {
          "id": "77eeba3a-507b-46c5-9bf3-c0a3702bd306",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "771d4a56-2adf-49a7-80e3-d04f4cbee132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd82e6e-d70a-44cb-bb37-8ff08ee24416",
        "cursor": {
          "ref": "66bc22bf-b7a0-403b-9d42-f6f0c5a8bd78",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c61c89f8-7a43-4a36-ba86-dd98860b0c4b"
        },
        "item": {
          "id": "cbd82e6e-d70a-44cb-bb37-8ff08ee24416",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c558e1b3-8ada-418b-885f-bbed61106b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8581fb24-3a86-4b2f-90d3-463fa7d289e5",
        "cursor": {
          "ref": "1fdef734-185b-4797-8c93-e84d9a45348c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fa7dc989-a556-4053-ab01-be1485daef22"
        },
        "item": {
          "id": "8581fb24-3a86-4b2f-90d3-463fa7d289e5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f93d6f98-ec8b-4400-9f70-0561c0fe8d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd11f44-2c08-4c7d-87bb-0c6b6370a84b",
        "cursor": {
          "ref": "7d8e03c5-c1f2-4792-8725-198181a7ff2b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "17095204-749b-4768-befa-023e87f5c05c"
        },
        "item": {
          "id": "dfd11f44-2c08-4c7d-87bb-0c6b6370a84b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "42e34454-a032-4c89-ad90-508941d653d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a37e5e-8d35-4fd8-878c-e329ae0e29f0",
        "cursor": {
          "ref": "c63b425c-e9da-4d29-b262-f3e43f2453d0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6e117133-8c93-42a8-8419-de3dfb72ec87"
        },
        "item": {
          "id": "a0a37e5e-8d35-4fd8-878c-e329ae0e29f0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de3da792-2a01-498d-9362-bf99074616fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6419d7d2-4917-45f0-999b-fd4cdddc0952",
        "cursor": {
          "ref": "05bef351-56be-46fa-abb8-7f33fe7ea200",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "34bf4fe8-16f9-42d8-a39e-2d389df87b27"
        },
        "item": {
          "id": "6419d7d2-4917-45f0-999b-fd4cdddc0952",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f25178f8-7efe-42f4-8d92-92ba35b2d5c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 155,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "75f741f2-9165-4c21-9d39-4e3589943209",
        "cursor": {
          "ref": "f5e48dbb-37d2-415d-8171-1121abead6c6",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7d6ddff8-ff21-4b0e-b03b-7ddbaa1e661c"
        },
        "item": {
          "id": "75f741f2-9165-4c21-9d39-4e3589943209",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "632e1606-ba39-48f6-86c7-811059ea619c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b357e-049a-4e1c-85ac-2757df0c8d09",
        "cursor": {
          "ref": "e6a573a4-5c76-4e88-b79d-737a27a9e5a1",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ebccc1b9-5812-4686-83b7-4510140f2e0e"
        },
        "item": {
          "id": "bc9b357e-049a-4e1c-85ac-2757df0c8d09",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f2dedb03-36cb-4d0e-8e75-65d1fa94d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1e1eb1-1402-4ca9-907d-6f3b4d4d34c3",
        "cursor": {
          "ref": "89d1c2b0-1441-4eaf-b57f-f4f1931a990e",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ba1c499c-71c5-4040-8b89-6e91503f3e30"
        },
        "item": {
          "id": "be1e1eb1-1402-4ca9-907d-6f3b4d4d34c3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cfbee499-26f3-4733-9990-4f5bbdde4763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e21cb2-b7b5-44bf-baa1-383fa7c50380",
        "cursor": {
          "ref": "935c5d1e-ad93-451c-b70e-82937a82ae7b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6f4e6080-fdf0-4b11-b0b7-951b760e96ac"
        },
        "item": {
          "id": "42e21cb2-b7b5-44bf-baa1-383fa7c50380",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3448344e-08a1-487c-a6ce-98bcd0f78d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb31e8dc-dd6c-44e8-85d1-3e6ad8466dcf",
        "cursor": {
          "ref": "8224f5a3-5d18-4a53-9370-fc0914c80fa1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3bc0ccc8-1587-4867-8594-81af47c460c1"
        },
        "item": {
          "id": "eb31e8dc-dd6c-44e8-85d1-3e6ad8466dcf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9af74911-5897-4735-bf78-2113b2f85a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763e8765-9cac-426d-a318-5f171522d969",
        "cursor": {
          "ref": "5fe74a8f-93ed-41a0-bda6-8e77d5ae47ea",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8d25394d-2c8c-4ef2-8c58-02c02d6789f3"
        },
        "item": {
          "id": "763e8765-9cac-426d-a318-5f171522d969",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f58d6e05-7bd8-4d44-87ab-8a47aa5369d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac5a21-4ecd-4959-9ea6-a195abd177bc",
        "cursor": {
          "ref": "c6fce9cf-2461-43c6-a0c6-3e1371a73c8e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8a4b1bd7-3a3d-4f5f-a0f6-ba050e69a5c7"
        },
        "item": {
          "id": "cbac5a21-4ecd-4959-9ea6-a195abd177bc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f3ea4577-b535-47fd-81fb-e57a62e87b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd4365e-919a-49a8-bc52-9689d948666c",
        "cursor": {
          "ref": "0faed9be-e8d5-4baf-a0bc-b7f1a6f88d94",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f0c0560c-6d57-41bc-8f80-1cb952da1f9d"
        },
        "item": {
          "id": "5dd4365e-919a-49a8-bc52-9689d948666c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb155322-c5b8-450e-b76a-216f15c77426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a700ff1-86f1-47a0-afb6-539cffbee9aa",
        "cursor": {
          "ref": "67f75303-2743-4904-8c3b-2d9363ec7036",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "653724d3-9246-4824-ac4d-5b031671aee8"
        },
        "item": {
          "id": "1a700ff1-86f1-47a0-afb6-539cffbee9aa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "84589fb7-6e91-49fa-ae0c-b685612cda35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e36db5-d2b0-4dad-b1d3-d1167957ae06",
        "cursor": {
          "ref": "9622c54c-b8e5-434c-95da-510d00b19bf5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aca5c588-a401-4f43-8a15-34f11f0a35a2"
        },
        "item": {
          "id": "72e36db5-d2b0-4dad-b1d3-d1167957ae06",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2429fe7c-e828-4ab0-97c2-dba333a8173c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f05a2a1-d905-40f9-9d8b-c40d11d7af8e",
        "cursor": {
          "ref": "8ae51df2-bc51-4db9-867f-d1cdc87c8592",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fc660982-2354-47f3-be48-cd55c7e1915a"
        },
        "item": {
          "id": "5f05a2a1-d905-40f9-9d8b-c40d11d7af8e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b110b0a-7e86-4f66-bde6-0f46862faf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6a2b7d-1a75-44cb-aece-5b84c028fd8f",
        "cursor": {
          "ref": "87e3131e-06cf-41b1-92ed-bab59783f9cd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bcff4594-a0bb-4cee-a035-631bf85b5a17"
        },
        "item": {
          "id": "fe6a2b7d-1a75-44cb-aece-5b84c028fd8f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0886a2c7-837b-4b17-95c0-6cb579e5717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a60990f-10f5-4323-bed0-4986adafefb5",
        "cursor": {
          "ref": "5ee22675-900c-4ecd-88ea-130572dcad34",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ba0abf2-18cd-424e-95e5-9d06ec7590f7"
        },
        "item": {
          "id": "3a60990f-10f5-4323-bed0-4986adafefb5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e38b9e82-8ad6-4d68-ba3a-a3401e1cee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822c80b-ddf1-4735-a90e-03d8d8b4f988",
        "cursor": {
          "ref": "b93ee25c-374a-4982-8654-08cb01809e0d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bcc93853-9ed4-4a91-8c06-a02ef94bb4f4"
        },
        "item": {
          "id": "7822c80b-ddf1-4735-a90e-03d8d8b4f988",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0a702d0-02a4-40fa-95e6-ed07e01fe9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed90fd1-8dde-4bd8-8706-863923017ec0",
        "cursor": {
          "ref": "f7d32328-0961-4d97-a67d-99fcd0752d4c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "215ebd9b-1715-4bee-9757-70b6c3f4b38f"
        },
        "item": {
          "id": "aed90fd1-8dde-4bd8-8706-863923017ec0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10b8560e-c861-4ec4-9913-339d96f72bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bd50b2-6a51-4144-a3ed-82ac01c464a4",
        "cursor": {
          "ref": "8116606e-c845-473a-b566-68f2d9095b55",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "08cdc8c0-fe1b-4b14-b08d-899dc196ed7c"
        },
        "item": {
          "id": "47bd50b2-6a51-4144-a3ed-82ac01c464a4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "baf64146-00dc-42b3-b79e-d129fc10b0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf56efa8-06e4-401f-b702-072189d6934c",
        "cursor": {
          "ref": "5df887eb-ec55-4c78-b26c-303b04addade",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "634641d2-fc95-43a0-a123-6f0b07caf8f4"
        },
        "item": {
          "id": "cf56efa8-06e4-401f-b702-072189d6934c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "226e4740-24cc-442a-adff-d48aebc4c1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15f8159-9251-453d-98fe-55832da2b7a7",
        "cursor": {
          "ref": "18eec61b-8a33-4557-a89a-a77053526e49",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f07ec3d0-8a96-40f1-b787-99276da1e4e4"
        },
        "item": {
          "id": "b15f8159-9251-453d-98fe-55832da2b7a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "21e5b089-3307-4345-920c-11919794d7ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 145,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "41713458-8816-4c51-831b-e6ea6c55f6b3",
        "cursor": {
          "ref": "735f14a2-6568-4744-bfc3-aa2b973fac1e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5cad2f60-5a7d-49f0-90e2-52dacc52f647"
        },
        "item": {
          "id": "41713458-8816-4c51-831b-e6ea6c55f6b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "212b18d6-9951-49cd-94cf-90f6ef9ff2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95fd372-56e9-4c3d-b4f0-ef95d9f926c6",
        "cursor": {
          "ref": "15d1e6db-faa6-47f6-9c78-deb1a1d73214",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c6bf6f70-f984-4c7a-bde9-095c21e59ac9"
        },
        "item": {
          "id": "e95fd372-56e9-4c3d-b4f0-ef95d9f926c6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e686837-1a4f-4e9f-bc9e-3d3edab75a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8645e20b-20a3-47b0-b09f-9a27317d1c6d",
        "cursor": {
          "ref": "b947944a-4076-4119-8289-d442a2291901",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f73cebb2-a5f2-4828-92b4-cae3de957e5f"
        },
        "item": {
          "id": "8645e20b-20a3-47b0-b09f-9a27317d1c6d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d717580-f4b8-4f79-ba3e-1de1221afa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a692317-3152-414b-8139-bd0a542c562d",
        "cursor": {
          "ref": "1c038ff0-5311-4d26-b0bc-b94456940359",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8ccc7138-3c67-4340-9a84-d625bfd1875e"
        },
        "item": {
          "id": "7a692317-3152-414b-8139-bd0a542c562d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ce85567d-e7c9-4925-b8c5-631a0063304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc13c36-5d6b-4ef8-8b2b-0b22563b64c2",
        "cursor": {
          "ref": "6d8fc6b2-32a9-4748-88f6-742d5bd2fbf3",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "74e16744-2765-44a1-aad3-59234a5501c9"
        },
        "item": {
          "id": "bfc13c36-5d6b-4ef8-8b2b-0b22563b64c2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "42c39ea5-a9a2-40e0-a301-992e4885eb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5aee2e-96c1-4f5e-9047-13999c047fe8",
        "cursor": {
          "ref": "0056c8d9-5a9f-47c3-837f-2a5d3bbaf80e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e1b81f2b-f620-442f-947c-35bcb9d07b6a"
        },
        "item": {
          "id": "ec5aee2e-96c1-4f5e-9047-13999c047fe8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04c3954d-9dd0-4136-8b7b-e26ac8676086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e402dc-1b68-4868-8a87-45898edf3142",
        "cursor": {
          "ref": "9bc44d7d-9d67-4465-93d5-0fbc4752edf6",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e9e26d0c-174c-4c24-abc8-919feb88b6a2"
        },
        "item": {
          "id": "00e402dc-1b68-4868-8a87-45898edf3142",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a298ecf-43c9-4545-b800-4f9e000d3a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d36a8b-7a74-4e21-8795-f345072a250b",
        "cursor": {
          "ref": "ee8f10ed-d875-4d3c-9b44-9de02892d86a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "87851579-0ef5-463d-974c-7b202473c3b1"
        },
        "item": {
          "id": "12d36a8b-7a74-4e21-8795-f345072a250b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8a79c32c-4bcd-4f35-b0fb-9a7efe991367",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "d42dae8b-85ec-4e97-a9c3-a1707dfccc9f",
        "cursor": {
          "ref": "63f85ec5-0d05-403d-a10f-bd9a4fec6c56",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4b07d980-07eb-4c63-b4e9-91f77efb49a9"
        },
        "item": {
          "id": "d42dae8b-85ec-4e97-a9c3-a1707dfccc9f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b1a028aa-f909-4f40-ac2e-a64bfa9236fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5fb1bd-3685-4c9e-bd22-daa8d2687ee7",
        "cursor": {
          "ref": "82feac34-b46f-4ed2-a236-381f6f27f14c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5f6450b0-65b9-4bc2-9cf8-71f5d54fb8a8"
        },
        "item": {
          "id": "ce5fb1bd-3685-4c9e-bd22-daa8d2687ee7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "14c5b33e-b00c-4e0b-bf8d-d681ed3446b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b757391-c36b-40fc-a992-4c313d01faae",
        "cursor": {
          "ref": "08373c8d-88dc-4184-bf08-fb0d8460c863",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d39875dc-e4e3-4d08-9bf5-ae8f61708b03"
        },
        "item": {
          "id": "3b757391-c36b-40fc-a992-4c313d01faae",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c09e266f-240a-4539-8e77-55f6a0ee1112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b6d569-f4f7-4670-a8c6-6dcaf7138057",
        "cursor": {
          "ref": "68c2c458-59fc-44dc-ac90-02416b07d6af",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f30de1a7-f238-4620-8382-eafde7a69f07"
        },
        "item": {
          "id": "98b6d569-f4f7-4670-a8c6-6dcaf7138057",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "97867734-2804-4d94-be90-10c8ad74d07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f1f7cb-aaa2-4d6d-9834-c67ab190184f",
        "cursor": {
          "ref": "df16266e-f0b7-4905-b2a6-d5011466fbfc",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e9df5113-f309-4e80-ad7b-099ca3f47c56"
        },
        "item": {
          "id": "c7f1f7cb-aaa2-4d6d-9834-c67ab190184f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ab033c01-f9f9-4959-9619-a7aa088c0b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4854222c-470d-44b9-aa10-7be607d8b7b8",
        "cursor": {
          "ref": "074a0991-b9aa-4e5e-bba5-60f2ad2cf696",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9e691ba4-ad84-4a29-8880-ef12ba27be83"
        },
        "item": {
          "id": "4854222c-470d-44b9-aa10-7be607d8b7b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "17d898c3-d06f-4be2-a697-7e12e440bd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c83e8b-6a66-4c30-be4a-856ea44e9604",
        "cursor": {
          "ref": "424ae4b4-6f50-413b-aa61-aaa02b47943c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "da2f3096-a8ac-4d08-8a81-255f9f1167a3"
        },
        "item": {
          "id": "59c83e8b-6a66-4c30-be4a-856ea44e9604",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f226989f-b504-4903-b225-cbd427f9a8dc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "570a4ef7-6bd7-48af-8995-fbefa56e7eba",
        "cursor": {
          "ref": "aacbedd1-6367-4b88-89ce-fbbaa3023577",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "401cf2bc-fe07-4742-b81c-9dbc330b12e1"
        },
        "item": {
          "id": "570a4ef7-6bd7-48af-8995-fbefa56e7eba",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "36a1fe67-3df6-449f-b985-19205a57dda4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "f6a48783-f676-4315-a0a5-af681ce874c6",
        "cursor": {
          "ref": "9bda9439-a3c3-4f01-a26d-c3330d4e4d9f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c7863113-8f61-4e06-9b9e-5416aeb648c0"
        },
        "item": {
          "id": "f6a48783-f676-4315-a0a5-af681ce874c6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0846eb24-2d5e-4b4f-9fbc-bfdc8522e77a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "2ac7d36d-9c1d-4ff3-be8a-137882395246",
        "cursor": {
          "ref": "dcd8e57a-48e6-469c-a449-4ee47916156c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "aed9232a-8641-4380-a98b-fd6d6b830f02"
        },
        "item": {
          "id": "2ac7d36d-9c1d-4ff3-be8a-137882395246",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d9580ea6-50ca-428e-b5f1-8effdcd52b94",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "eec3b775-bae0-43af-a4a6-eadb688655a9",
        "cursor": {
          "ref": "c48849c2-feb6-4d03-9f5c-521de2947f28",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "107a4d4e-5ad8-4da3-aa0a-49a1703cd028"
        },
        "item": {
          "id": "eec3b775-bae0-43af-a4a6-eadb688655a9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "35e5a058-3c95-4cf6-b958-665b2fceacc1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "2e8bc008-6ce8-40ee-8773-ddc9929373e0",
        "cursor": {
          "ref": "49816258-75c1-4c5d-ad21-35b75351e8fa",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7c0ec48f-6a8f-4b89-9f36-ed5096610ae6"
        },
        "item": {
          "id": "2e8bc008-6ce8-40ee-8773-ddc9929373e0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ce29162c-1934-4e0f-8f97-3feb381ba838",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "9dec0723-4607-4f19-8e2f-069499bc0fb5",
        "cursor": {
          "ref": "d835f234-d38f-40b1-ac3d-dc0907049a85",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cd8afde9-0c38-4e52-bfbd-2591980a7f7d"
        },
        "item": {
          "id": "9dec0723-4607-4f19-8e2f-069499bc0fb5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a3f8f545-cb38-45d2-af66-8c09d2197b52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fd9793-8061-4e21-8086-feb392371feb",
        "cursor": {
          "ref": "2bb8858e-3652-4699-a670-611533d93add",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e784cccd-9a4c-46c6-8a85-daebfd8b9c9d"
        },
        "item": {
          "id": "d9fd9793-8061-4e21-8086-feb392371feb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ea47e7df-a00e-4aef-977e-8ae0c896d819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468dc454-c87f-4153-befb-517098f82713",
        "cursor": {
          "ref": "d2aed0c3-278c-44a6-b0c5-ee6b95e07e0b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f77b7494-d270-4d68-8513-da76587d16d2"
        },
        "item": {
          "id": "468dc454-c87f-4153-befb-517098f82713",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a35eb60c-366a-4a3e-b48a-5895b39d6056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2dd935-ae31-427d-9990-0bc5c14f6134",
        "cursor": {
          "ref": "dc6f0fbb-13c3-4945-a58f-de37667278a6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2e53378c-f06b-4f29-8783-7e92f0ab31ee"
        },
        "item": {
          "id": "6a2dd935-ae31-427d-9990-0bc5c14f6134",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6499973a-875b-482b-9215-0f6dc810789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cc4c21-673f-45ef-9e2e-ab2d108f7eb5",
        "cursor": {
          "ref": "29887c50-f14c-4a16-bd65-dbde666eb0a5",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7d29e8b1-a02e-4ac2-a985-e9148ef62cfc"
        },
        "item": {
          "id": "83cc4c21-673f-45ef-9e2e-ab2d108f7eb5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e036370c-d6fc-4992-8c74-c2950eef3e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f105e584-c85d-4abf-97fb-0ecd3437ebc6",
        "cursor": {
          "ref": "81537d5a-4a7b-4276-b3fa-8dbf7030d3b1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c2124dae-a25d-4ea7-a699-4dd6dede35ca"
        },
        "item": {
          "id": "f105e584-c85d-4abf-97fb-0ecd3437ebc6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "708652fb-2044-41f8-8c81-2032d02d3c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37feedab-872c-4dde-ad0c-f18bfe9c5586",
        "cursor": {
          "ref": "873ca8d0-bbeb-454c-8845-8e971c48d28f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "adc62fb4-efed-4fa4-9b01-48e07176db2a"
        },
        "item": {
          "id": "37feedab-872c-4dde-ad0c-f18bfe9c5586",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "70ce864e-3790-4c97-9210-d28d4c3d8ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3df3c6-3de8-4001-972f-95e7a0feb66b",
        "cursor": {
          "ref": "c755cc12-16b5-4c49-a3f2-b9262cd4d10e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "74a4ec0c-8e50-4651-88e6-279b0ce7e6f6"
        },
        "item": {
          "id": "6a3df3c6-3de8-4001-972f-95e7a0feb66b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d983e650-0c44-4720-950d-408db0f25554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3d9cc0-ad4f-4fa5-ae9b-2a836d5fe9e5",
        "cursor": {
          "ref": "b151362e-4421-4f0b-a1fc-60095b3b0d21",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6f83085-0704-498b-82ac-2d331528b0dd"
        },
        "item": {
          "id": "dd3d9cc0-ad4f-4fa5-ae9b-2a836d5fe9e5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8dd53231-d03b-4587-bb96-33e182f9fd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fb4f6c-4c22-4aeb-b573-45933723eb21",
        "cursor": {
          "ref": "f438aa34-e755-49f7-9093-d08c71eaa8ea",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fa129405-a7ed-45a5-8e87-7cef44361d38"
        },
        "item": {
          "id": "05fb4f6c-4c22-4aeb-b573-45933723eb21",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "10d97e55-dbf3-437f-b6e4-4afb217c5786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecc4ad7-4d85-45c9-87a6-7fd3d4babbe3",
        "cursor": {
          "ref": "e9bd0d05-be46-4d99-8f40-f60f6383a302",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9a5c909f-2c49-4ce1-a157-8f0c2e9051fb"
        },
        "item": {
          "id": "1ecc4ad7-4d85-45c9-87a6-7fd3d4babbe3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d7fa9d1d-f033-489a-980a-7bc36f17b9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846b1aeb-7160-4315-8033-dcaf7cc09a61",
        "cursor": {
          "ref": "1adab5f9-6087-48f2-9efa-96bf31462860",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5496d202-1eac-43ca-b97e-2ce4d5dd2937"
        },
        "item": {
          "id": "846b1aeb-7160-4315-8033-dcaf7cc09a61",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c601252e-f9d4-457d-9435-ed4361f45bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a420f05-8c76-48fe-8a82-51dd05d16b42",
        "cursor": {
          "ref": "151a3e2e-0efc-44f8-b4d9-bd0920cc2fbc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "209c901c-b5d0-49d5-b9f5-8fc9117e1756"
        },
        "item": {
          "id": "9a420f05-8c76-48fe-8a82-51dd05d16b42",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cb420356-d8b3-4d86-8ac6-aca1addafd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d751c3-cae1-4088-99db-55e2746a3414",
        "cursor": {
          "ref": "b377d80c-af40-4d5a-ad43-cb34c24501c2",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "309a32de-cd32-4dd8-8319-a5cc2f174bb5"
        },
        "item": {
          "id": "73d751c3-cae1-4088-99db-55e2746a3414",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "58d6efb4-86e2-4a2f-81bd-72b3b5a1049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5a40ca-e557-4a63-b561-d467b19e718e",
        "cursor": {
          "ref": "db1eee48-115c-4049-b17c-087bae115d3a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4fb4411a-0351-49fd-bc8f-448f5112c748"
        },
        "item": {
          "id": "5c5a40ca-e557-4a63-b561-d467b19e718e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "242d26cb-0213-467e-ba27-90da37bb5499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c2643-ba19-4ab1-88b3-c764bea97b3e",
        "cursor": {
          "ref": "a3f6f6cf-03f2-4a69-a08d-d0071d2053fa",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3584bc89-3021-4d38-b3f8-688d2b73caa2"
        },
        "item": {
          "id": "d75c2643-ba19-4ab1-88b3-c764bea97b3e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "18e9b5dc-8fe9-49da-80fc-c35f3070da4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea5f6c8-a9b4-46d9-8385-8e641b10a8f8",
        "cursor": {
          "ref": "0277ac1b-dbe5-4e21-8018-af788757e6b1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5ba58901-197e-4cb6-bed8-5a0851b95562"
        },
        "item": {
          "id": "2ea5f6c8-a9b4-46d9-8385-8e641b10a8f8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3c41e45d-429d-4d23-9238-5c8fe9213d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2420563-0aa4-41c9-a3ab-bc15c756a9c3",
        "cursor": {
          "ref": "ba854ce2-cd36-4951-882e-67ece5a64fcb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1909b3d1-4186-4663-8572-f85079034d51"
        },
        "item": {
          "id": "a2420563-0aa4-41c9-a3ab-bc15c756a9c3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1128ef9f-3f38-4e81-974b-353e239e297b",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "2b5942e7-8d55-44d8-846b-1e7af4b08ae4",
        "cursor": {
          "ref": "765eda94-9e78-4764-81e1-202c5e6b033c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bef9929e-ffe7-4561-a7fd-4926b1217577"
        },
        "item": {
          "id": "2b5942e7-8d55-44d8-846b-1e7af4b08ae4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "97cfae48-8e7a-4efc-9ce8-2bafde0f1723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08e5d7d-ee8c-471c-98ba-1d11844c7952",
        "cursor": {
          "ref": "e3e58b28-7767-4f26-921c-d66dc3600892",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e52bafbe-7891-43da-80cc-10f7fa8b0401"
        },
        "item": {
          "id": "c08e5d7d-ee8c-471c-98ba-1d11844c7952",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "70ab8505-4808-46a7-b89d-bb65483a0dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a670a6e6-8445-4de6-ba4f-df3411001697",
        "cursor": {
          "ref": "76ff2178-32b2-4a38-abe4-1c56e31109ed",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b6fcbb42-674e-4333-829a-328aa30e120d"
        },
        "item": {
          "id": "a670a6e6-8445-4de6-ba4f-df3411001697",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "40211f84-de13-4aa8-8dd1-bcc6ddd156e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217ad0d1-1d9e-4842-8c1d-64c2a3a5ad21",
        "cursor": {
          "ref": "84e4178f-8a2c-42e6-b412-671d67ce31a4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "df0450c6-51f0-4932-b84a-af4108edccef"
        },
        "item": {
          "id": "217ad0d1-1d9e-4842-8c1d-64c2a3a5ad21",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "96d04407-e401-4494-b218-4172fc7eb2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ff0e27-f57f-4c60-8aad-d7a926c0001c",
        "cursor": {
          "ref": "231c0605-8ec2-4e78-bc6d-55559ade127f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "36bb1e49-3d0a-4c5d-ac83-792a3a6e8961"
        },
        "item": {
          "id": "84ff0e27-f57f-4c60-8aad-d7a926c0001c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "31282f9b-6384-4a55-a6aa-a5413235ff51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4700137f-3e25-45c6-992c-10332c9e6eae",
        "cursor": {
          "ref": "84c6d283-3318-4689-a9ac-7d5d90891207",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f5582fbd-e178-4b15-b302-ccc1a9182426"
        },
        "item": {
          "id": "4700137f-3e25-45c6-992c-10332c9e6eae",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ac0254e5-2997-4811-9410-eee4da691a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c63e44-df20-4f93-8ed5-03ecab0f5161",
        "cursor": {
          "ref": "5e00ec90-1b58-45bd-ac69-3f07249df9b6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "263c3ecb-1667-4bb2-a21a-dd11a2ba280c"
        },
        "item": {
          "id": "48c63e44-df20-4f93-8ed5-03ecab0f5161",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "33ec2a2c-39b0-4975-92bc-4dd195a6853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a34e92-f44c-4af3-b318-05c472016afc",
        "cursor": {
          "ref": "9fa8d7ae-215c-455c-9953-b0608a20b4c5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "66d8a4ea-8525-4000-b79d-194b70980dc2"
        },
        "item": {
          "id": "10a34e92-f44c-4af3-b318-05c472016afc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fde0dce4-689d-49fe-981a-1d0185333c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9e2ad5-bd29-4534-8089-2c86b23b6183",
        "cursor": {
          "ref": "55cb588b-aee2-415a-964e-b8a053e46943",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "49ebd4a3-f2b3-4eb0-8fa0-c4fa744fc4de"
        },
        "item": {
          "id": "ca9e2ad5-bd29-4534-8089-2c86b23b6183",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "151a03df-e120-4cc7-baec-06ba4d6dd26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65676517-7013-471c-9a0c-d71d72dc7040",
        "cursor": {
          "ref": "28a604cc-b330-4bc6-aa99-c8b22df049e2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "304e27d7-d2a0-4319-a6ba-edb9a13362b8"
        },
        "item": {
          "id": "65676517-7013-471c-9a0c-d71d72dc7040",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "13546eb4-2508-41a7-87f1-0e5d904c8ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a881574-2b36-4a59-bf93-c5cbe3f11a06",
        "cursor": {
          "ref": "fee03285-8c30-4005-badf-68d8d69889ea",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4cf26374-e226-4b75-8ff5-c5fc68cede90"
        },
        "item": {
          "id": "4a881574-2b36-4a59-bf93-c5cbe3f11a06",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20447f65-b159-4f13-8d90-a66839d20b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8f603d-f391-4a1d-8722-e387a0b90f4a",
        "cursor": {
          "ref": "5fddbfbb-7d55-4a62-90ad-08a96fef84f0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29bce3b8-e41b-4dff-a74c-2ce89983b475"
        },
        "item": {
          "id": "4c8f603d-f391-4a1d-8722-e387a0b90f4a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a83b8c0c-43cb-43e7-8f01-21a6104555ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302682bb-e474-48f9-b726-258395d3c5fa",
        "cursor": {
          "ref": "4b3187f4-6dc0-44ab-a66f-1a41f88cb216",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dacad268-fea4-49c3-b46d-ae5f82c8927b"
        },
        "item": {
          "id": "302682bb-e474-48f9-b726-258395d3c5fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "579f48bc-6a70-45c6-a8ac-af54559a2c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8070ab39-9251-447f-a84e-ba135b09b30f",
        "cursor": {
          "ref": "2c4d9232-8682-4a4c-abb4-81fded25689e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1051bb35-91fa-4eed-9300-fd237b816deb"
        },
        "item": {
          "id": "8070ab39-9251-447f-a84e-ba135b09b30f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "510fe7db-c4cb-4376-8487-2df98928233e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad852e34-b3d0-4a37-bbfb-b5ce47bc9a8f",
        "cursor": {
          "ref": "fd9d48d0-b20a-4c6c-9c6b-22f939e7c7bc",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3fc01108-35d9-4050-aa96-27d20403b433"
        },
        "item": {
          "id": "ad852e34-b3d0-4a37-bbfb-b5ce47bc9a8f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "001e15a7-2812-48ad-b7aa-8dace8c1fd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeb0e17-ddf9-4bc9-84b9-59616c73acf6",
        "cursor": {
          "ref": "bda00973-21a1-4d52-8c66-a4d27e20488f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4c763aff-e740-40e1-acdf-7a9b6beddfcc"
        },
        "item": {
          "id": "7eeb0e17-ddf9-4bc9-84b9-59616c73acf6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fe13ad5b-a10c-41dc-ba89-de57b0282dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da4f0f0-3513-4f3b-a1cc-e26c86f67c19",
        "cursor": {
          "ref": "675dd6ca-c5a4-4d09-b650-6d397c63264c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3576d2d4-8827-4c4e-aa4b-2070acc28d6f"
        },
        "item": {
          "id": "0da4f0f0-3513-4f3b-a1cc-e26c86f67c19",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7d61e0f6-e2f7-4d37-a209-2f05fb748143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a34f9d4-f79c-4fbf-b9dc-679c59a8bafe",
        "cursor": {
          "ref": "a800cfaf-25c5-43df-8e28-0d5153557eaa",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2c043d2f-86a4-4f9e-91e5-5481272b0344"
        },
        "item": {
          "id": "1a34f9d4-f79c-4fbf-b9dc-679c59a8bafe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ba13e618-4a9e-49d3-afd3-b86f4a53233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089300f0-b181-4f83-bdfa-ce2adb40bb6d",
        "cursor": {
          "ref": "07dab850-6e28-426f-9cc7-d6493a4cf5d7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "137a2435-89d4-4c44-9fb4-7c38b5c8a1e8"
        },
        "item": {
          "id": "089300f0-b181-4f83-bdfa-ce2adb40bb6d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "287ce0d6-8e0b-49af-9ce3-2caec9b356a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe8f7cf-1931-47be-ad82-923bbe49e794",
        "cursor": {
          "ref": "0f89da8d-31ec-48b3-b5eb-e3b5fe4fb5ac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "234266b4-348e-44ae-bae5-d2f46b1c6f7e"
        },
        "item": {
          "id": "fbe8f7cf-1931-47be-ad82-923bbe49e794",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b621ee2f-1d5c-4c67-b9f9-a5b316eee647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fc3dec-1b38-431f-a952-171211c4208d",
        "cursor": {
          "ref": "baa2d78e-dbe6-47cb-82d8-1d3c368633fb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6d8713d0-a096-4ab8-91ed-f1f890305364"
        },
        "item": {
          "id": "70fc3dec-1b38-431f-a952-171211c4208d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "848c1140-d5e6-47d9-bf61-2f63e532c6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc07adf-aa1b-42da-b0a3-6f29af97149f",
        "cursor": {
          "ref": "6ac67286-cd0f-43e6-a250-5d34aeca189d",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6b2f4cee-540f-4258-a08d-157982bf63e3"
        },
        "item": {
          "id": "cbc07adf-aa1b-42da-b0a3-6f29af97149f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "37af284b-c9c4-493b-8665-76b8ed932b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56a372f-e387-4fae-b140-2ae16f5a89ca",
        "cursor": {
          "ref": "a614ef61-ce7e-4904-b9b7-5fcd0860e90f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "927d9216-18fd-44ba-b287-d5b5c23f8ef2"
        },
        "item": {
          "id": "f56a372f-e387-4fae-b140-2ae16f5a89ca",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e174b738-1d44-47d5-bb59-5907861f1c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb33f9b7-60a5-4f05-8491-6e125428295e",
        "cursor": {
          "ref": "4f5f50f6-e9b0-4aa4-ac8d-2e3d9b5b7260",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "018bd246-d63a-4096-af32-28157d65f04d"
        },
        "item": {
          "id": "eb33f9b7-60a5-4f05-8491-6e125428295e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2bb64504-cc3c-4898-b5ca-d3f3613361f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e586686-9853-4de8-b37b-9f614e7625c3",
        "cursor": {
          "ref": "adb7ff8f-7aa5-4211-8c9e-66e1e44c3860",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "249b0336-d211-46c0-955e-be00830b5012"
        },
        "item": {
          "id": "6e586686-9853-4de8-b37b-9f614e7625c3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c95ca147-4651-4708-abf9-667e26e94867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f51440b-d36a-4c91-a468-dd2ed1e1ba24",
        "cursor": {
          "ref": "33473d20-d6c1-4baf-aad0-2ec28c28fa76",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "83e1d387-a5be-47a1-88c9-8d359452f4d3"
        },
        "item": {
          "id": "6f51440b-d36a-4c91-a468-dd2ed1e1ba24",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d8476e35-a793-48ea-acff-9e752f50abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3c1ce3-354c-4815-8888-95cb8cbd178d",
        "cursor": {
          "ref": "28883b09-fffd-4b5d-bb48-6c9fc53855ec",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0003c5ce-3dca-4c31-be06-54ae208a0821"
        },
        "item": {
          "id": "bd3c1ce3-354c-4815-8888-95cb8cbd178d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3edea9a-9f4c-4eef-a1cf-61acb0c26cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657de417-a4fc-4f2b-978d-da12ac7f8174",
        "cursor": {
          "ref": "6ce7a30a-db80-4770-892b-dc5f3f6d1a68",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6fee76ac-737f-4ef7-8379-2b3f75957611"
        },
        "item": {
          "id": "657de417-a4fc-4f2b-978d-da12ac7f8174",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8bd07ff4-de75-4508-a5e2-cc99d6dc14f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfbcd8e-a1f0-4d4b-bf39-1f594c4c5300",
        "cursor": {
          "ref": "09bdd1e2-353c-4f87-8074-04ccd9075523",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "47ad2c2c-cd98-4bf6-ac61-c08acfce8ecc"
        },
        "item": {
          "id": "5dfbcd8e-a1f0-4d4b-bf39-1f594c4c5300",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cb03b6c7-2af3-40b1-9d98-33b09e22438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e747d2c-3dd1-49b7-b230-647df2fbdf47",
        "cursor": {
          "ref": "daddabe5-a3e7-4013-84fc-f4be2b9b78aa",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e1741b39-c85c-4a00-8437-eab82c569a48"
        },
        "item": {
          "id": "6e747d2c-3dd1-49b7-b230-647df2fbdf47",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c377f059-bb5f-4f95-bdd5-c584a1f15ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c118cabf-4bf0-4064-abac-f61369a72c68",
        "cursor": {
          "ref": "45f556b0-da0a-4ca5-9f82-387508379be5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a8946a16-f55f-47bc-9876-599d9e30ed16"
        },
        "item": {
          "id": "c118cabf-4bf0-4064-abac-f61369a72c68",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0da4caa9-5488-4e74-9570-72fa52a1c5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17391520-0488-4642-9f85-cf60b255899b",
        "cursor": {
          "ref": "9388ad69-c741-45d0-85c0-467d957986e8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "57db9fe0-13cc-401e-a8cc-0499cc9a099f"
        },
        "item": {
          "id": "17391520-0488-4642-9f85-cf60b255899b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "74a35f89-6790-4186-995c-9825a546e1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57541648-f14a-4ff5-a0c1-b394dd6ddb8b",
        "cursor": {
          "ref": "74c02538-94c7-43df-82b7-60c939c20310",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f039587-22e5-4694-9537-79d94b0b5bc0"
        },
        "item": {
          "id": "57541648-f14a-4ff5-a0c1-b394dd6ddb8b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c69e33d9-d866-4e12-b336-e7d7ca7cac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dadf542-c2b4-4a6d-90fa-b21aaf3aa67e",
        "cursor": {
          "ref": "718ffee7-05ef-4492-a3ee-365969631e6a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bfcf41b6-5ddb-4332-806e-90d1a10ed7e5"
        },
        "item": {
          "id": "6dadf542-c2b4-4a6d-90fa-b21aaf3aa67e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a60b6626-b5cb-407c-8ca8-0b27c4387b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79912f31-319b-4990-8f47-bf7fa2f5c6cd",
        "cursor": {
          "ref": "e3cafabb-a2a4-4fab-837a-afa4c8f80398",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71e8099b-d530-42c2-a491-09ff0c086300"
        },
        "item": {
          "id": "79912f31-319b-4990-8f47-bf7fa2f5c6cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aa9f033a-30cb-42db-9527-89667473fbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb2accd-176b-43a5-a7a9-8d2e65f4bc19",
        "cursor": {
          "ref": "b4cd0eb8-1ac2-4aff-808b-5926253c3dff",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c373915f-498d-42e0-ae39-706ae4460675"
        },
        "item": {
          "id": "afb2accd-176b-43a5-a7a9-8d2e65f4bc19",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ca50e07c-fecb-4a59-ac4f-8bbe4b3fc9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1574f02-4994-40c3-b4f0-0c2933266cb4",
        "cursor": {
          "ref": "aeb049a6-cba7-43c7-a4b6-a04cb641e5d3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2b5eb066-4601-410f-bfcf-f87e629a2345"
        },
        "item": {
          "id": "f1574f02-4994-40c3-b4f0-0c2933266cb4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b195362e-1eb3-45f8-8d52-a86887885957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b09666e-740f-4259-abc5-142350e4a387",
        "cursor": {
          "ref": "757f0c7f-2ff2-40f1-9460-8f605bbe2b74",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e84dcf79-b744-4a46-946a-7cfec73fafa9"
        },
        "item": {
          "id": "6b09666e-740f-4259-abc5-142350e4a387",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6e19b251-b539-4957-b034-86cdaf746933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd2ce98-0029-4790-9d1d-0f6847e6866e",
        "cursor": {
          "ref": "0e44d849-d6a8-409c-b1d8-57f286ab41af",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "212c8a4c-6475-491e-8bec-5ab54888b56b"
        },
        "item": {
          "id": "bcd2ce98-0029-4790-9d1d-0f6847e6866e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "47cd8a50-cc44-4d78-90fe-5fda1e2857f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be49d43-538a-47bc-b96f-288ac87b2679",
        "cursor": {
          "ref": "d6a74e7e-05f4-4aea-b834-a3df1ab7ec40",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0ff96665-0447-4e34-852b-6dc27dd90bbe"
        },
        "item": {
          "id": "9be49d43-538a-47bc-b96f-288ac87b2679",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fc28b2eb-0237-4016-9c2e-cfae8108e269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f49391a-8eaf-4b3b-b044-eca5661e13f1",
        "cursor": {
          "ref": "d7209f92-74e1-4778-abe9-df3fd92a6f97",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "998ceeef-9a69-42f8-b163-ff936bed3df1"
        },
        "item": {
          "id": "8f49391a-8eaf-4b3b-b044-eca5661e13f1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "05ae12c5-c2fe-4403-bf50-7f8f2ed0e3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2705e0e-6cdb-49ad-aa6d-612d06fbba4d",
        "cursor": {
          "ref": "087c6c92-47e8-42da-ad99-1f16ba620a07",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e85b4dcc-c393-41ca-9bf3-8acd66c50389"
        },
        "item": {
          "id": "a2705e0e-6cdb-49ad-aa6d-612d06fbba4d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a9babd2d-0b51-4f90-874d-d8d05e928ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a8acc-f775-4dc4-99ec-6dedc40502f3",
        "cursor": {
          "ref": "76c1ce22-e0fa-4e6a-88a5-a7592ac8895e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "28485e4a-e564-4ecd-886a-998b0c5d13a9"
        },
        "item": {
          "id": "373a8acc-f775-4dc4-99ec-6dedc40502f3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "44c999bb-4282-49fb-adba-208b5414ca31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76f20b8-2e7c-419e-9192-9b061137fa9f",
        "cursor": {
          "ref": "525d71f0-6ee3-4668-83d3-b2cba9c6c391",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "47480f16-99a0-4805-b37a-520966d11148"
        },
        "item": {
          "id": "c76f20b8-2e7c-419e-9192-9b061137fa9f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "40fef4f8-b97a-4308-805b-d77bcacbdb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be97b36d-6895-4169-a212-b92552107091",
        "cursor": {
          "ref": "52e4abb0-0069-4f11-9c4a-ae8b1b0a9053",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "accfea51-c476-4ceb-a916-f8484a643a15"
        },
        "item": {
          "id": "be97b36d-6895-4169-a212-b92552107091",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c9490a6d-a594-402e-a236-5a14f8d0134e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3f02ad-6422-4ab1-8b78-df4af414ca8c",
        "cursor": {
          "ref": "b4d342f3-4d31-48ed-9c6f-327c043053b3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "abdbaef7-a27d-4d3a-a2ee-402fedfd56be"
        },
        "item": {
          "id": "0f3f02ad-6422-4ab1-8b78-df4af414ca8c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "949330a8-c038-491b-8dce-b7733524019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c4f8aa-bb47-4e19-ac1a-0628ad39ab6a",
        "cursor": {
          "ref": "a6eb70d8-54f5-4497-b264-10b21c18f8d0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e946899-9c04-42c7-9158-b2df83ad363a"
        },
        "item": {
          "id": "f8c4f8aa-bb47-4e19-ac1a-0628ad39ab6a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "68c7bce3-457c-49f2-bbc3-c02ed42267af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329e9106-4a3a-4064-9c5c-3602f4103bc8",
        "cursor": {
          "ref": "fa3efeaf-1916-4031-8f55-681c327c0e04",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5d86fd62-0c74-44e0-8755-4d569a5d3482"
        },
        "item": {
          "id": "329e9106-4a3a-4064-9c5c-3602f4103bc8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ca856f6e-0a15-4ed3-bb8b-436d8c280516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e5495e-3421-4931-b5b2-509c39ef8a6e",
        "cursor": {
          "ref": "0c2dfb8a-2617-40f2-b693-f0152119e2ff",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7b20a242-060d-497d-aae5-eeebb4767b83"
        },
        "item": {
          "id": "84e5495e-3421-4931-b5b2-509c39ef8a6e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7bdc50e1-bfd9-4a44-8d03-d7c35d7a0a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb3da45-7179-4685-a50e-3b4b85bdb2e2",
        "cursor": {
          "ref": "082b473f-5dd6-4bfc-988c-e8fe7c0420d4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9e7aebb7-d314-4a0f-9181-0cba88b6f82f"
        },
        "item": {
          "id": "2bb3da45-7179-4685-a50e-3b4b85bdb2e2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3a9bc71c-e526-4bc4-b96b-751707a677f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5689403c-972b-455a-92bd-15b47f4ffeb7",
        "cursor": {
          "ref": "93715419-7e23-453c-a3e4-86e0e9d5c23a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ea6362b6-77a0-4c58-96a5-3fb9babf0016"
        },
        "item": {
          "id": "5689403c-972b-455a-92bd-15b47f4ffeb7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d287c1dc-86b4-4360-99b8-e0a7c1f59945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7270d343-076c-4d1a-b704-b0f8a33cf911",
        "cursor": {
          "ref": "d402c286-9715-4486-9f9e-70beb3a02ac4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "08b9c930-f005-4d7a-b320-83136353e512"
        },
        "item": {
          "id": "7270d343-076c-4d1a-b704-b0f8a33cf911",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ffef0cd5-9271-4cd3-9c2c-6cfa1ab47d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abd9545-53e7-4390-b86f-e940cd36c3c6",
        "cursor": {
          "ref": "a58e787a-f71f-4e00-9610-2b8e652902a2",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7847cafe-81db-463f-95cc-86383566d95c"
        },
        "item": {
          "id": "6abd9545-53e7-4390-b86f-e940cd36c3c6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9b999986-923a-4c12-af21-2122541c2142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121a387e-1bc5-44db-8d1c-f87ffac5a92a",
        "cursor": {
          "ref": "02c4711b-1590-473c-8247-f2977711e274",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b9e9531a-97ed-4a83-8dc1-bd60900add90"
        },
        "item": {
          "id": "121a387e-1bc5-44db-8d1c-f87ffac5a92a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "231007a0-2b84-4fbf-afef-088c7052880b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38d4b75-281d-4df6-a1a9-a23b70c9de28",
        "cursor": {
          "ref": "834faed4-e877-41dd-845d-f7d5f238ac54",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b2e0d068-8f08-4453-9111-b2e1bafd6975"
        },
        "item": {
          "id": "c38d4b75-281d-4df6-a1a9-a23b70c9de28",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d7a809ac-7ede-4c9d-9821-9c696475e337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48417be0-461c-424a-8382-4fd201f99679",
        "cursor": {
          "ref": "441735de-7cde-4ddd-ae14-ee7a79f77b2e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "29aca8ea-96ec-43f1-a15f-a3fe769d5df6"
        },
        "item": {
          "id": "48417be0-461c-424a-8382-4fd201f99679",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4368d049-afaf-4726-9d67-26c45d9a16ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aabce14-0cbd-4c6d-8ee7-c15fd8c6816e",
        "cursor": {
          "ref": "dc5e96b1-bfc4-4159-96e2-01fb7e348d8f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4a98eef5-50fc-43e5-8874-3019b53a98ab"
        },
        "item": {
          "id": "4aabce14-0cbd-4c6d-8ee7-c15fd8c6816e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a659667a-a0a7-4889-b52e-b7993066e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a111d14-8b25-43ec-be31-ac17e0dcc078",
        "cursor": {
          "ref": "22e35276-dd75-4d2b-991b-977ed4270b0f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "32bc8040-d9aa-4991-928a-22d1738b0f65"
        },
        "item": {
          "id": "5a111d14-8b25-43ec-be31-ac17e0dcc078",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "28e23ef2-f0af-4381-b9ea-a0aaed07cc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7646045-b3bd-4a11-b8ed-85872fff2373",
        "cursor": {
          "ref": "8082e196-01d8-49af-af92-6f1438484bb2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3bdd9e02-9b95-43b2-a684-76f5e2418d0d"
        },
        "item": {
          "id": "c7646045-b3bd-4a11-b8ed-85872fff2373",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "63737be6-88b7-4248-a818-bac9b4af9613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c88f0d-b2c0-4cb3-8fc2-5d3f5cca08a7",
        "cursor": {
          "ref": "dfebc748-e261-476b-a7c3-185fd6bf871d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "20236aaa-da74-40a3-b0ef-942704ffd972"
        },
        "item": {
          "id": "b4c88f0d-b2c0-4cb3-8fc2-5d3f5cca08a7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e4f5b9ca-0138-4f50-b672-b1b940672ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50324207-223b-46f8-86ee-6ad51d1524ee",
        "cursor": {
          "ref": "b40134af-54d4-4c17-8514-b6a5cbebdce8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c5899055-5dcf-42ee-a0f4-2c430aabd9ab"
        },
        "item": {
          "id": "50324207-223b-46f8-86ee-6ad51d1524ee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "eb901e49-911c-4029-a2e8-4b05c50a4183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc635bd3-b250-4a3c-b5b4-ced0f0368bb5",
        "cursor": {
          "ref": "527a9ff3-fa8a-420f-9eca-7897c4ca51d7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "09cb0ec5-0681-4d5e-ace5-916bcd8f7163"
        },
        "item": {
          "id": "bc635bd3-b250-4a3c-b5b4-ced0f0368bb5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "659c8428-aa2f-43de-8638-131c8bac5392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a7607d-5ef9-41c5-80f5-7772e092e0c4",
        "cursor": {
          "ref": "afdd01e5-1984-4db7-964f-b7321b240435",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "430b8acf-d106-46fa-98f7-40a0b213e4c8"
        },
        "item": {
          "id": "76a7607d-5ef9-41c5-80f5-7772e092e0c4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "78177f3b-8a58-4f20-b0a3-a288dd03e2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3738d1e1-e08a-444d-a95e-41b1ebc8880a",
        "cursor": {
          "ref": "ee195022-f4e6-436d-b1c9-401d5cbfaf62",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4193b9ff-24d6-423d-b4b8-733bd589bbaa"
        },
        "item": {
          "id": "3738d1e1-e08a-444d-a95e-41b1ebc8880a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c04027da-4e9a-4d55-9f77-046ccc206290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcaa21b-204f-433d-a6fd-ec469d580362",
        "cursor": {
          "ref": "7f681077-44f6-40ee-8f7a-d898d93d26c0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b5dcb44a-04de-428b-b447-923d1dbc5f4c"
        },
        "item": {
          "id": "2fcaa21b-204f-433d-a6fd-ec469d580362",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "622c6589-2fd5-402e-9352-1e09df5ff7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea63cbdd-dca4-455f-9231-7b9e284ff0d4",
        "cursor": {
          "ref": "571f4229-297c-4b1e-a5e5-a0732ce9c01b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "596d0a9f-1772-458d-bfaa-d87b92db31ca"
        },
        "item": {
          "id": "ea63cbdd-dca4-455f-9231-7b9e284ff0d4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7040a624-dbf6-407b-bd35-85da27bc5267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586b57fb-4875-4b44-9ac5-7d37728418b2",
        "cursor": {
          "ref": "978d5a0a-357e-479b-b1ab-e65ac3213080",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d5b8e3fe-c84c-496d-b880-7eafcdd96dc9"
        },
        "item": {
          "id": "586b57fb-4875-4b44-9ac5-7d37728418b2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6c061476-8102-4dd1-af42-41cac463f525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5012c35-1027-4fd0-986e-7d66a876ce5f",
        "cursor": {
          "ref": "5134b264-36c3-4814-812b-ec2a36edaa0e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "86edb110-51cb-48ea-9988-b3c4067bf0c5"
        },
        "item": {
          "id": "c5012c35-1027-4fd0-986e-7d66a876ce5f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cb29157b-9b03-4319-9376-31c16f76520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e0152-3194-4c5a-9f5f-a4d9fd4a9191",
        "cursor": {
          "ref": "9dced29d-22ca-4133-a193-6b8f5b002ab8",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5a49281b-30cf-4ece-854c-ee66ec7a8737"
        },
        "item": {
          "id": "5c0e0152-3194-4c5a-9f5f-a4d9fd4a9191",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2bdc308b-a50a-4561-932b-7bfc1acd992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9cb360-a53f-4994-b6a5-7dcaa110db1b",
        "cursor": {
          "ref": "dcd09de2-2ef3-4e08-8702-1fca27b3e9f3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "059e1b93-9ddd-4b4c-9a67-b2d13e296a7f"
        },
        "item": {
          "id": "2e9cb360-a53f-4994-b6a5-7dcaa110db1b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "62969ab0-1df0-43fb-b778-2687f6b3fc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f1ef6-b0f3-40b9-86db-3ec1e76f32b0",
        "cursor": {
          "ref": "7955a803-6bda-4e68-bad1-f8c007344fad",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7b4b12f7-7dcc-4063-9c3f-bde8cf616fa1"
        },
        "item": {
          "id": "b20f1ef6-b0f3-40b9-86db-3ec1e76f32b0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fbea1b67-0126-4d10-a8b7-9be69cd70cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1f557a-f181-427a-b41f-b438f8c4ea18",
        "cursor": {
          "ref": "5ed85e57-64c2-45f6-8dd5-3997b387a948",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fa3538c3-2dee-4f2d-b363-49d6cebde282"
        },
        "item": {
          "id": "af1f557a-f181-427a-b41f-b438f8c4ea18",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b75105cc-4673-4749-813e-12a61e1e928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baa2b47-b962-45d3-bd8e-865fee637789",
        "cursor": {
          "ref": "f48533d6-b3b0-403d-8451-7602d877f70f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7b509a9c-1bc5-4640-9f06-670d49249a86"
        },
        "item": {
          "id": "1baa2b47-b962-45d3-bd8e-865fee637789",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "96673de0-c925-44ed-b7a9-2d50d71922b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc7b574-d6ab-4fd3-a20f-8c701d4de1a6",
        "cursor": {
          "ref": "5fd4ffd6-0762-49db-8c03-5ac130433c2e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5e31ebe7-71f8-4695-bbad-dc1a43b66033"
        },
        "item": {
          "id": "ebc7b574-d6ab-4fd3-a20f-8c701d4de1a6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e57d65f4-4e9b-44aa-8b66-9cd143749571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c272046f-56f1-43bf-b431-ce1393eaa492",
        "cursor": {
          "ref": "d0bf3de9-77e9-40ed-83c3-8752a42e6463",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "11d87284-b64d-4a2a-8045-c4587026bc5c"
        },
        "item": {
          "id": "c272046f-56f1-43bf-b431-ce1393eaa492",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f75a5f17-8756-41eb-9442-a21904d21bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ae117b-4b13-4c34-b2ac-9f76c88c04e7",
        "cursor": {
          "ref": "c0c2b281-ba3d-4997-82c6-dadf4b2809f5",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e56dc821-1f0f-4eef-a12d-c562dc6d66cf"
        },
        "item": {
          "id": "42ae117b-4b13-4c34-b2ac-9f76c88c04e7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3117e610-9a2a-4711-9b6d-b24efc960898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a161d72-4756-421a-9db8-e427c79f169c",
        "cursor": {
          "ref": "fec64d4a-7da2-43d9-a1f0-b4241de43cf3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e179562d-5a38-47d6-91f9-7291c4a48237"
        },
        "item": {
          "id": "4a161d72-4756-421a-9db8-e427c79f169c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "40df3734-3f66-412e-94b2-3dee0e6c75d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd7c99b-9fff-467d-8b57-3f181bac055d",
        "cursor": {
          "ref": "555fc696-3e28-4ef9-896a-57c3962a9b42",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "37072079-1924-465f-a355-9eabd47c7635"
        },
        "item": {
          "id": "4fd7c99b-9fff-467d-8b57-3f181bac055d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9eacde5e-dfef-4f59-be45-53461682cb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d067f36-5126-4cae-9c98-39d64cef3595",
        "cursor": {
          "ref": "212ab393-9915-4a68-b933-c80c663cacb0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4e2d90a7-122a-48f6-b8c5-a590282f870b"
        },
        "item": {
          "id": "5d067f36-5126-4cae-9c98-39d64cef3595",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c46e4d44-8d3e-4630-864d-50678cadc582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fdc659-89b3-4a7a-b208-ffbde00a3ecd",
        "cursor": {
          "ref": "a6880bec-84a3-4a83-8129-1a0b6584d95c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b9c805dc-7634-45d7-ae31-8c68deb2d5b6"
        },
        "item": {
          "id": "21fdc659-89b3-4a7a-b208-ffbde00a3ecd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "41442624-ab2e-47f2-99f7-e83e84056118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1336fab-8e95-4386-9ab7-9243cd0945b8",
        "cursor": {
          "ref": "1ad056ae-d1f8-4809-b810-6f7bf41c739d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "68a76362-3d86-46f8-ad9c-6e3e375cebd9"
        },
        "item": {
          "id": "e1336fab-8e95-4386-9ab7-9243cd0945b8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "16ee8c49-6a6e-4d69-bf12-32525180ca00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7015292-5da7-4e58-bf75-fe21c6a575f2",
        "cursor": {
          "ref": "00448947-1207-404a-b097-c5cc03dba853",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a12f44be-a3d3-4fc3-bd7c-ff74f5813a7f"
        },
        "item": {
          "id": "c7015292-5da7-4e58-bf75-fe21c6a575f2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7935de49-6d76-423c-a56e-0408a687e97b",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a2490-4c7f-4a54-978b-ec661fc4c356",
        "cursor": {
          "ref": "57f39e85-e99d-449c-a596-8ea0e021410c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "64f45657-5e3d-499d-9c6e-3b546520debc"
        },
        "item": {
          "id": "736a2490-4c7f-4a54-978b-ec661fc4c356",
          "name": "credentials_verify"
        },
        "response": {
          "id": "84e2b0c0-fc15-4c59-b3b8-26f4133936aa",
          "status": "OK",
          "code": 200,
          "responseTime": 3627,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0458846-a7a4-4651-a298-0b0ebb4b94a0",
        "cursor": {
          "ref": "6c405e74-0227-4620-9bc4-4699d880bc9e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cda076b0-3a31-4d04-9550-d6090ec1628d"
        },
        "item": {
          "id": "a0458846-a7a4-4651-a298-0b0ebb4b94a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0b0408ae-4f91-4b2d-818d-7fd16a7bc15f",
          "status": "OK",
          "code": 200,
          "responseTime": 2542,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cf8562-370b-4cee-8de6-25358bb00755",
        "cursor": {
          "ref": "f1141fb2-0601-481d-9c9f-e5a9988b94e6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a1228113-7aa2-41fd-934a-5ae26573f023"
        },
        "item": {
          "id": "21cf8562-370b-4cee-8de6-25358bb00755",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2aa42f68-e177-4f62-a5f1-c3d5add43ddc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cf8562-370b-4cee-8de6-25358bb00755",
        "cursor": {
          "ref": "f1141fb2-0601-481d-9c9f-e5a9988b94e6",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a1228113-7aa2-41fd-934a-5ae26573f023"
        },
        "item": {
          "id": "21cf8562-370b-4cee-8de6-25358bb00755",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2aa42f68-e177-4f62-a5f1-c3d5add43ddc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6064d914-4d28-4287-ab45-dcb5b6e21da2",
        "cursor": {
          "ref": "fcf64cbc-4615-4c30-ba4e-42d24c2b8896",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "db7d08dc-71d5-4722-97c9-fcc0567cc8e2"
        },
        "item": {
          "id": "6064d914-4d28-4287-ab45-dcb5b6e21da2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4c4fb45-7268-4910-9055-7cb0dd6dc742",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9cd160-8b1e-4865-b1d3-f39bf638b2fa",
        "cursor": {
          "ref": "099255cf-c054-4f5c-b562-3fd174e326ce",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f8715099-05fa-4b1c-8b60-824436abf9cd"
        },
        "item": {
          "id": "2b9cd160-8b1e-4865-b1d3-f39bf638b2fa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afacbd32-6636-4cbf-b550-b235166fa18d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}