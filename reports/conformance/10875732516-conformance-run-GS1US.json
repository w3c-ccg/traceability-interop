{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2c0556da-bc58-4bc8-83c8-e00bffb96e16",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e98b9537-9101-4cc6-9e40-8149b0447f23",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb09a050-50ab-47ed-86a5-425a4c0b864b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee67ca0f-8237-42b1-9d39-d6a65445f784"
                }
              }
            ]
          },
          {
            "id": "e81fd0f6-d5bc-4398-bf42-31cdcfe7a17a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e532eec4-d769-4c00-bbd8-36c36813589a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae4d441e-5b15-4d23-8ad9-356890ce12c9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "65877887-413c-4d51-b8f5-5bad395f096e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "31b191a7-1df9-415c-b12f-aeb7ff269050",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46b76845-cdc2-4e76-8cd7-434ed71f6a4d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "012058c4-e8d0-4b76-87e1-10fc053ee3b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80dffcc3-cd99-44db-8a20-7f39a1863aed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac44b660-8e65-4fef-a74d-2fd43344c85b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f3f27e32-c4a0-453f-8ba0-e2a69a049d56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d260813-921b-4e6e-8d47-333769359b83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "daf39f38-7e89-4753-9dec-2ef4269c506f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09223749-f827-4a0c-ac86-d1cf754596d0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "52ba1c4a-6f44-48dc-bca1-ceaf267c88f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b703c7d6-c1b0-4c1b-b977-aaa4d83e2099",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94aecab8-667b-4801-929c-56a126999c62"
            }
          }
        ]
      },
      {
        "id": "8fa8478e-2ee2-45dc-8352-25c11e7ccf53",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a452da7-1cce-4725-a86c-7fe57da1b784",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35619f48-c7a5-4079-8dfa-6bb82da3b710",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ecb438da-9e64-4743-aef0-4af9054fdc67",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e674b7f-7630-4e2f-8d9b-d6a32eed43fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c76f987-6314-493f-8029-d47062f0d4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492bdd21-92a1-4029-aebc-5c468f0a030e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391b1f8e-1501-4bf3-9c76-6d7c682390d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56496a6c-a8dd-4acf-87ba-c08bfbb244eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af411e-9976-4b3a-b5ce-690d19286a7f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bfc2e3-5892-4cc7-81bf-409ad5698de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0145aac4-368e-4f70-90f0-3a5ec6ee0679"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aba05a2e-cf9a-4ab9-98a5-bc7888067cb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57579008-a6aa-4983-9836-5301db57f1d9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef738d63-17ca-4dab-a424-2b471ff2a2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74434b71-d3f9-4dd4-aa00-d12bd72b5eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60351de9-3449-498e-a112-2bfb9af14954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb86e02d-4511-4933-a136-7d314ce3bc0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b7fca45-a15d-4c87-81af-24d441027c3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f11472be-898c-494a-a28b-096fab59044a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c313ccf1-0d75-4f40-b012-2f3d65f4f47a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "011318bc-b3d0-42d1-a350-8ec99c44586a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52b707f1-e88e-4528-8779-314209db44d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ddf43b30-ef23-4896-800a-9e0b2e0d3ad2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d708aa9-13d8-4de3-8d7d-786a73e130e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46d4c7f4-93df-44e3-b958-431ec47224b3"
            }
          }
        ]
      },
      {
        "id": "63c65703-6ee2-479a-9a81-608ebe36e74e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "32d16481-a358-461e-80ac-d6d024e0a0de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a938c870-5001-4123-910a-9cdd5a42d457",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4949dce8-0f6c-4c77-a1bd-673a0800c732",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dcb2cf-44db-4688-b59c-7ffb3912074f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8eb00e7-7c32-4cb7-846f-0ec0f362906d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a05b4a-2c8f-463f-80f2-e8bbdaae1a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e16d95df-c521-4a3c-a0b5-58bc366022a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b03c6-6ca2-4e3c-9336-648ed8781250",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bcbd8e-e0bf-413f-9ca5-4fcec808ff7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555f759f-8357-48a7-bff6-646b2943cc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cf26ad-70b3-47c8-8eff-63b8d5b9b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "704e2963-48ba-40d6-b38f-24808906b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb18f8d3-4b87-4f23-8af0-8e798ebda29a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaecd10-8136-49a8-a606-26754c2aaa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db189518-4ec3-46ef-a572-0a62582866c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f07a38-2db4-40d0-914e-fcb1aec2a496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d443c5b6-afad-45de-87e6-88fe5d24f9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fafe85-4ea4-4683-a638-0f9c104ddf8c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366cf79b-12af-49c8-8797-5c7f15cb1cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380b5601-4ae6-4b82-8277-9501caee1a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0b8f72-6f97-4254-a0af-693752f4e58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a8a1c39-b095-4780-8fa8-75cf20f6cfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77a40f9-9c35-47c8-b1f3-a236e451b893",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b402cab5-4542-4834-b262-b6eed18c5df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f13a0e-de88-4206-9416-0479810c1cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10d0cd5-8605-4821-b7ce-5120c3c736ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f925695-d8fa-4465-bd25-ce46eb7c1697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42720719-fb24-4ecf-9177-0cb7f398b2c3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7900b0d7-a1ed-45fb-956e-f4b319a1ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6857ae38-7299-4535-bdea-2a524b6a1184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee70ed8f-a339-4676-b9a3-bb30e7db5c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "902d77f0-642b-463d-bf9c-895d0c90b55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4eab470-41fa-4712-98da-62e61168b518",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc58c9d-14d1-48cb-a468-0924f186013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f64fb29-2191-4263-993b-f079e8e26f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ce498f-600c-4b2f-8982-0800de11a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab362ce-9e7c-47c5-972c-e1fb54267983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eab659-b71a-4076-8066-3d336b486b2a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a91c0e-94dd-47eb-829b-f580a840685a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2224bb-0841-405a-8bda-c56256dbe9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866b537c-3c66-470c-b756-d4bf0e853293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d89d3767-d03e-4129-8b66-04d4c67e7c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a400690-a948-4a6d-8294-3047bea50bd2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dde2b1d-8df7-4406-a1f1-8e54d0395d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f409101-a3a7-4000-8428-289988a40e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da428e0d-1374-439d-a8a6-f59b87b4cc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e30da95d-1085-451a-8ad2-3c4ba1ee9702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea69de02-1083-4053-8ce4-79ea25a34359",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60777e94-73a6-4681-95c3-5076673630c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06d8df8-4780-49bd-b4d2-eed86f3dcd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293947a3-8884-4e99-ad27-9468febf9f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d51a4a5-b062-4bad-ae23-6c89a730c53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0011f089-b52c-47f2-9ca7-16bd22dea8fb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a7436f-f9d3-44d0-ac4d-a1e53c3c3359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669a7e6f-f397-44e2-865d-9c5b55c606fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4d3c31-7dab-479b-b70e-5a708de0bb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42995fbf-c642-4aaa-9ca5-e4dabe4de601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e818b-a225-4873-b850-5b00a40af095",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce33e4e-e0cd-4637-a5bc-a142f5ef5ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd658f45-6c3e-46b7-9a2c-85d1b9b9713f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6e2763-ae31-4155-a941-ec78bb06c320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f2ce4d5-bbc9-492c-886e-46f16137cf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c99101f-ec9b-4eb3-b709-1cc520a934ee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9403eca2-12f1-4a10-bbb0-c7b3dbb53b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf7d2fa-bfce-4ae2-8697-655755d527e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4bbe82-6a4b-4939-928f-b80849da9a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5720780e-0a25-4544-8bec-6355695fb32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcd81fa-6c3a-44c7-bf7d-170b971f4034",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6946b295-bf53-481f-9109-0b11ae0280e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0810c0-fd62-44a6-a5f2-c66c3bfac420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40f520d-295e-43ec-bed0-c1ecd898ce34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3091780-1e67-4c5f-869f-e189748af75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267f1a0e-d692-4ec7-ab54-46a842009b47",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d551a7fb-05a8-4bc3-a360-9b938d5f6974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d4aa0c-65cf-4680-9e66-d82a9585b352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e18f6ae-e42e-46d4-97ca-13ff7677eaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6e206c5-3610-42d7-ab0c-8e26b03f446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a6bbd5-f773-4606-a854-553263e8fa61",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12de02bc-6e10-41fd-b6ce-cc343d7f9630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c56e881-f120-4ef0-a601-d1e40a91e2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36d9e4b-383e-4b6f-9ed3-ca2640b85c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a237d88-d646-482c-b1cf-a74b23d154df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3e38fa-9aa0-4742-9456-94ab93bb68fd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4122fd2e-0a40-4351-b1ba-761bd404b38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102ba288-3543-4fd9-8dbb-8b2bd9479675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75d76a6-18c2-4adc-8389-377a961e5969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab77dd75-cfab-433d-9cd8-3579b1b803c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0993c778-2386-4f48-bb57-d43c50831d72",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4517c782-30b2-4f10-ae69-75e12863e9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ea0820-c5ce-46c6-a246-335983fd7458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f042c0-a1b9-4a8d-bd0e-22d32544ecfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd33e3d-dfb4-42e7-9a97-5c001f268cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c9b9e-0583-4d67-a9b2-a1a149d3bf34",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbec367-b932-4108-bf76-dd885070a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf30f10-ebe7-44ed-8f98-8f175e1144d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b07243-77a9-4375-b7b6-b18d03341382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7388a9d5-d256-4da0-beee-55a7846ff889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03d2b2d-c26d-4aec-8b36-38ee0c919bb0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f4e364-3fa8-4266-b3bf-a81e4cc8d143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f77c74c-ca59-48c4-b7da-c82000c15e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae46dd5-cefc-4900-a6b5-f2c998eb7bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e998159-98d4-44d7-a6d1-afd26b49c372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8babee62-ce6d-4b39-92fa-90565d74690a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4a9a6b-f7ee-4989-b954-66cc5c90e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7fd8cc-d5ae-43a9-bea7-4687d9d7093e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c319b0d-e598-4362-adf5-52e3279767f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23ef4e2f-31ba-4ba7-ae8e-e3a8024e0471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7942ba7a-d76b-41ee-83dc-779e588bd661",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa860a10-00ac-4e12-b844-aa444f063a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba0ea66-b18f-4b24-ad6e-1ce021d46ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d08ac4f-511c-43dc-8266-472de763c6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "139f6cfb-9c48-47d8-bc8e-a3750f845e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5d19c7-f33d-416b-94f0-403627802657",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4751ba-5d8c-4b2e-a71e-153085006291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bdef49-2eac-4a84-a612-35ae3b188846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f040ae-0066-408e-bb43-811655113712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f716ed1e-782b-44e7-987c-8293d47e9b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26866b79-78b7-4558-bd16-9168c742ec21",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5326582-ec0b-488c-912e-30b08584eee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1bc681-1ef6-4828-915c-a585fb0aec80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6f5638-4f4d-4d43-a014-467b679f6f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b03c6092-05ad-4b39-9478-fe96c9207b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45575194-e473-4507-a8b1-74ae31c62838",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a7300b-61a2-4cd4-9ab9-d4a6cf157515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4c56fa-c53e-4d00-b521-ebc4767d3622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5930d2-7127-49e7-95d4-2b510bb1d5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3cbd26-961b-4712-aed5-9cf82d77c78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1611594f-583f-4291-a377-2be7c02c5234",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88bf8ca-2632-4026-af6b-be8a17298c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2807dac4-37ed-4ed2-9d3f-7d4c0ab0ab45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aeefc5-ac9b-45ca-843d-2a85416c55ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c05f3af-9589-402a-8a2f-9089846cd967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63676abd-28d2-4eab-bfc5-4c41e0da30b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f26c0df-1f4b-45c6-bcf4-70e9fa9fbd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c742f3d5-0a42-4a15-be18-bebf295c00e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed42a39-af28-425c-a6a9-b34795931307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0caab51f-0f6e-4cf9-9d56-3fa3e97862ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8643b77-3305-40d3-9608-7515c84af3d0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29de8168-db8e-4c4a-ae7a-6bd7942df975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2bc09f-a78d-4bbc-8d36-039b5bc5bf73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a4fd77-adda-440a-898f-6a0954ac37f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd361fed-44ac-4686-b23a-0e78d3f1c26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00087d01-7d98-44f9-9a12-ec012aa72263",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa56392b-abd5-4f87-8b43-0f7262f6e4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39911769-e209-4ed8-9da6-e5f25865732f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4adabb-19a6-491e-bcfd-575819823bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d844a4-af20-4ea6-a596-d068df4f8a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0089256-dcad-4404-8d26-1b5e4037caf8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d6a304-3921-49ea-a3d4-42e4d57e0096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a895367-66dd-48ac-be6a-d69d853eed58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ffc192-a839-45ad-a796-70a351266a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e34ca21-4d51-4fe3-8078-89ea37cbf236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac53f5-a16d-4e98-9ef1-90638cd8f644",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e105a8a4-a5b2-43d8-a8c1-7ae37f995d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0f3be7-45a4-4b9f-926b-cfdba07b5eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8bcb00-3adc-421d-9158-b1b3b27c3336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24a5aa04-56f2-4297-bcfa-7eddcb1632fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4242632-e3b1-4adc-a717-04c3e90a0140",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9736f25-51e3-4be8-a7d1-2c20cb31cfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a7c4cb-a049-4730-9092-d8c36ea2e758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4771ae2b-287e-4611-89c8-ee158edb8a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "098bf12d-bf53-43de-88f3-186ca6145aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16e19b7-511c-4527-bcd5-d1a5905933fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9177c5-f34f-4eba-bb6a-3aa2546544fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d93f914-2417-4f5b-bb43-024c702d07c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed70c5cc-89aa-4a00-b4af-ecd32e2af88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fb2535-e188-48b9-b2cd-f9b4e3bcee3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2271b54f-7593-4b8d-acc3-cd728581cb1b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991d32b8-f575-4156-913d-025283b4116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263c6496-52c8-4894-b774-27d6cd402464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2292a51e-79ca-40a3-b7d8-71dd1953e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b57bf3be-d895-4a9e-a0e6-bfb373408a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dae7c32-edae-4166-a841-cd219836fe44",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77f4fde-43d6-4fcb-ab86-1e4ac57256ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f270f18-54f0-4406-a7bb-708336ee1a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41386c4-96d2-459e-9eb3-41342e61d872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "883e7aff-01ba-43ae-a572-7cbd2ce92988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b919ace-0b1d-45a0-9a7f-b9904f63362f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846a755c-4f11-4fb8-b04d-86e4bf6bc66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c34570b-2790-441a-9743-ba0e1694d260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114770c8-6219-4bfc-b8dd-4fa48886290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0beb606-8621-4fec-8ddc-cbc9b103bc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7b175c-2b16-4805-918a-4ae56fc1dec3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33be05a-3d1a-49e6-84ae-7197f07db2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dd6a15-e9ca-4065-a1d6-a1d912d4647b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a75541-5428-4ab2-90fb-1cb0b373c5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa672440-b0d8-4191-8fe7-daaaf943e83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24723ec-1cbe-4319-abc1-a595dc678dfd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc203f6-e682-4d39-a244-69827d7d14ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5234a61-615e-40ae-8aaa-217629b0ee6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15318140-0a2b-4d57-b2a2-783ea4fcc64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fea7bd5b-4f4a-4658-b026-e98df053eecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eaaff1-43c9-43f4-ae6b-3a2ad5f357dc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e9f53a-a8c6-49eb-ba5a-88eeefe7d8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a57b4f5-7e62-4b07-b525-9436f4ca2f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce687850-22ea-4494-b474-e6ebfeb74983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7f53bd-5f33-4176-9302-ababcda2ab4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66b9c52-a742-4837-afea-610b49fbef39",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd6f45d-d284-4721-84c4-6a8e46f446b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71aef57-f7f3-4c51-9c1c-0d112722b0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f588ac-3926-437a-8b43-59ac55958775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "877afd67-c1ef-4da7-9f39-724a421a5d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92663ae8-d1c4-4f3a-8393-ff535a3321a9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b4ab79-f47c-4631-97e5-251baef4bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec75efc-0993-4396-96d9-6f4ac200eab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c30d09-a0a8-4834-a7d1-8ed29951fc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "632ea1c8-8014-478f-814a-6624056cf6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ba8fd2-ecfe-4c99-a79d-730995919768",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe594d29-0074-4ed9-b3de-aca5de58dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b88bba-9bde-41aa-b910-5acbcca7dfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f991d215-4e50-4579-94fa-02d46a3e3c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8871a4ec-89d1-44fb-9f75-fd453804c04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6260a47-822b-48a3-b5a1-fb4b7f7cb42b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2394ac-312d-4cd3-be25-c99ea336a2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af01983f-34fe-4716-8b8e-b7dbd0743d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18b31e4-83c9-4fa5-81fb-f86263fae7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "653a5581-9fe7-408d-b76f-feac3323c659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616ff7be-9bb4-43d8-a039-a05da4a75de9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccfaa3d-46cd-4987-827a-bcf56adf2432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56c9662-dcae-452d-b656-1877ed5a549a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a82beb-d281-4931-8738-6436a534cd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4106144-ae2b-47eb-8148-52b3394851a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e4a08b-b325-4dfa-9866-95e3b5ebda15",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f77c5-fb91-4647-8045-8be06d8435c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62eb83dd-13c8-4baf-a3e6-64513ded9b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f610164-5414-443a-a2a2-9e638ce0472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94f64ad-1b80-49d7-b585-7f2e36a99f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e99ac89-d97f-4d55-b52d-22993e10ec8b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb52b1a9-529d-416e-8ab4-dc59001ceedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a885bf-7c7a-44ef-9439-c713334748c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9994122-a16d-4adc-8e53-09ab8e6e32ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "add4605a-4280-42a8-8e4c-d2c3fe8608d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143df4ed-67cc-416f-911c-ee93b11a0f18",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9300f807-7830-4f06-bfae-5e477f15fea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf71fe-865a-414a-8464-6fb292afd748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3114877-4e32-4b8b-be55-e637ce51edbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0e7cd3-3631-405a-976f-4d6e4dabf7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a997dd31-38b4-4e03-87ff-4fc3ccd26ec3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a39b0-9c9a-48d8-b7c1-1d1f8f90eacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58860e28-c19a-417e-8c89-9b664aea79b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d533586-9c82-448a-ab57-cc2edfe95a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ef4ba4-56cc-4c6d-9144-bb18d4ede097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65acf25-c16e-4f75-92c7-21e20f8bc9ae",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3edf63a-ddc3-40b9-94d4-d3271ab0ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6d4d8d-9133-4dc1-801a-a40f2001d2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ccf743-324f-4800-8c83-0ed521b23f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd70281b-06e1-44db-b5fc-ed7081672149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b120ea3-46ad-447a-a7bd-1dec74e53fca",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeef4e15-715d-4a92-8e31-160567b7d8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a59d77f-5548-43c7-9013-86413651448d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9592e913-574b-46e2-955a-1ee1a5ce63f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f41454-50c5-4a22-9153-07eb3758e29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f927465a-3992-4855-871f-a24dc41a659b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccab9a94-c5e5-4df4-9254-6b533e748e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5fe9ef-854e-4e9e-bbd5-90ed2ea89c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0dcad4-1722-4875-9ae6-575f907a9821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8634c5fe-823f-4a6a-a6fe-bdda09c89ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f293e46-f827-414e-9480-b2f687fa1eb2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3d8d65-149c-42ff-968a-6d0a157dd38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425d4938-9e54-4050-915b-564a6e0cad3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69428564-971c-417a-96f4-cba2dc74d05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33f7939-29cf-4395-97b8-5c6a58bcb3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4460d37a-1c47-426b-9241-2a673eec6cda",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1ab8a-c0ae-4070-9b32-5f4f84f81849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca946ccc-e1ed-4b64-a958-a841f924b62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c010ab-aaf0-4a83-99db-b47545c3f52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecd1c67-92ce-4491-b07b-7f87afa43de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5ea71b-4bfd-442a-9012-3eadbe4b1ab6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a15c493-f3d4-41d0-aa43-c4b9659db7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813d0b3b-68c9-4949-9cc2-175c9803d7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7380944-919d-4069-998d-c7e65568f12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ae1e89-019a-4da9-bb10-34f35bf2595f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231a881d-2a8d-466c-b2bd-17dadba3fd45",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2180a033-2858-49b9-ae2d-42d9c9946074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5991788-4177-4474-8e9a-6582d0ff6d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc852e6-0b10-47ce-a089-5115b81348d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3c7dca-a7d6-4c23-bad8-dec6556c2fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb0a5d2-3e5f-4a27-b937-2ba987a3c7e8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2429a9-1b8c-4da5-b43b-521489efbc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df85794d-72c4-4f69-b913-16c184a6285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e9af29-31b8-4921-8ff6-6c2bd4486896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9468924e-07a1-450d-bd63-44690e317ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df26f416-ec3e-4156-8f2b-38e8fe7439aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db422ec3-636e-4303-b620-f79b2ac426b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22403e1c-d5dd-4102-a1b6-cbd1c3af0595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa95814-0ce2-455d-b017-9bc5f8754543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b81d0879-fa42-4804-95a7-3fda7378ecba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8ede9e-3796-4b33-930a-55bf5df8b529",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50368b3b-ef52-4570-b605-52389b4b5a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c704f5-0e1f-467a-aaca-594d76f4f3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a80e13-a09b-44f8-bb34-265582daa1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9a3fa4-c951-447e-9138-abf6eb9e99c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbd580f-a2f2-405a-a289-cfe7dea906c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9be0f13-8eb9-4946-b146-05d0b0858f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4280fc04-cfa6-4f59-81c4-029aa97493dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5b5f69-0f6f-4c26-97de-7da079bf3ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82179366-48f4-4e6c-b11d-205b0a364954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633c92cb-2e9f-4203-a307-455b68decd92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ced2614-4d2a-42cb-91dc-5b8aaa09909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63319f96-7324-472a-a7ff-1dee6cd96722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a16b8ef-2e17-4ebb-938a-ad89bb87dcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbb5295-7923-4983-9c5c-0e57841a1932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c470e7b9-34fb-44a6-af0d-02a787c3a23c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272f8a07-86b0-4165-92df-351baab3f4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da6651c-1c08-4104-b535-5a7fe5b11887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115373df-838a-44c0-a137-28cf548354e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cc0bcb-1304-4da7-866a-440ce3abd80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf06d59-178e-42d3-93b0-b64bf7ad708a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a576566-745b-415e-b712-4c41397e6a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95880b6-cf85-4951-b4d1-3169341fa079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833e230e-f4f3-47f3-b8c3-91a2d7a0db3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd2a35d-a107-40b5-a904-e8598768df93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7601b4e2-a817-4d58-a1f1-f9ce207deda8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ea4ba-18dc-4767-846f-06f8b06ed3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75082d6a-ddd3-48a3-b558-f4593ff50e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36e4b86-d1d6-4dbb-9bab-75936a9809bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab762a5-7a58-487d-8f52-b0835b64a5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ba7878-67da-4350-809c-ffdc165e83e1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be727b81-882b-4e2b-80f9-661ddc47ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff882933-aaaa-4f1f-aa6e-ae91865ff30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db4e73f-2f24-4163-b03a-aace7da14c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c623c7-455e-4000-9203-9cd679295208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb7f955-bcd8-4e9a-9a64-a44ecffbfa31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2e7354-b198-4cd7-9fcb-2e3e04945278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a2355e-327c-4c21-8c6a-bba0fa4944b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b84536-02b9-4458-a2c4-00d8993d7545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18eed4d-86c2-4edd-9cea-744524d99e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a19dad-23d4-4f37-809c-06236c97fecc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67222948-144c-49d7-9db6-e9f78b4cdfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc16258f-9942-40ad-a60a-2a97b5014756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a53b39-f738-49e4-a361-627c5c770b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f56b1bf-398a-4fe1-b026-7c6ecd5d41fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160e1bb4-d8d8-45ee-8d37-40ab07694091",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c8054a-5328-46cc-ab42-9e54f6369cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90dcc7b9-5841-4a90-a36a-4d124d3e0bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4610eacd-eb7c-48b7-90e7-4b9abec6bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bde0aaf4-901b-4656-9caa-a35a07b23642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd51e558-d8c7-419c-917a-d85dfbbb8d35",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11358a4f-46d3-4e5d-9d99-df41c959c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec23cfb5-b1e6-4d01-be26-da3e421f33e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f8c6d6-0af1-4efb-9b73-14011e2f1964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6988b271-546b-4fea-b7fe-fc6454aff70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa62271-b97f-4caf-8745-556886a24fcd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e254350a-ac76-45f7-a6f8-55ac42fc43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7ed445-d61c-4db7-806e-add7641cfa18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41509510-6e8f-49b9-a797-860d74405c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "559cab65-7ae9-43ec-b331-ab5f342f0c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31822f3-e965-4e35-9e00-f5983741a432",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d6f71b-aea5-4f73-9f98-6b17abf40c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49f000d-5dd3-4dd8-9f73-439ff9037f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4661146-6b91-4f64-b60b-ef93adc58181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1348a13-b9e6-4bb7-8e3e-414b71c78a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9bb383-c8bc-4647-b200-f60509049756",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f7f71d-ec55-4b48-8a94-00a37261325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf33f9b8-ecda-47da-9048-dc5f7d9b9726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51342b68-9e6d-42df-b00b-c29882d63ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32657d27-4e98-44e5-ab24-e23249f084c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc537e5-10d2-43e0-8c28-ee2e5ebafc18",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5b7f9b-00d4-4061-a9d6-6ed1e52722d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48434e41-bdd2-4f07-89c5-5530984a2881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea8e166-8fc1-426a-97cd-fc28a5511237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff86e78a-a80e-48e9-b9db-b2949cf17a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca731be-62fc-4456-a9c9-d4dd63ae3bb7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9093b0-9e77-49d6-98c1-61b50b88de03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fa2338-15c6-4b4f-88b7-39329e730241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a2dd8b-6893-4c17-88b1-e3b81e1aaa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a74293d2-8c1f-4f58-9e6e-635b2054a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4565e339-b875-4fb8-a23f-43ef5de8caea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21135849-f99c-48c2-9cd6-8278e74d5a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c4d230-004e-4efe-a578-96763b64a006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195001b9-a32b-42dd-aabc-8b48d9c0d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25657d62-32e6-4bf0-b33c-3661638d1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4a960c-fd56-4e82-acd1-e660395c1157",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc4dbcd-424a-480f-8565-2d60e3ed4aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bffb23-f2c7-4028-8e7b-352ea503bcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb88cf6-fc5b-4ca0-af85-683a6fda7b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9df010ee-15e7-49fd-828f-0b794dea8663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c22faec-8c1a-44c1-8080-554870aa92de",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf504be6-5758-4d28-8566-c2ffa01312fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1112b0-c116-4452-9826-90917b82d7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adbb002-cf26-41f9-9dd5-108bce3b6e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed7d95d-93ad-4f73-8dd3-04a8cfcaec54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448f074-860f-4adb-9ac4-1a3084401fe4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8196ef-0a57-43ab-ad1d-56cca8fdddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde3f13a-dbca-4f3b-b994-606cfb387215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d42ab-3735-40e0-abb5-5eb34efb0502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1451e48a-2b40-4893-b356-f527948a921c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dec4af-b714-4747-b880-3a1a5559f7a5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fbb06b-9a5a-482f-85f2-deabe8e13bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14d02b0-7680-4ce4-b6c5-d4c0b2d8b3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57213287-fec4-44a2-b0c2-dc5c46394b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ad80b2-fb8f-4f2f-8b99-df9a94e16022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9868e56-a4f1-4a1f-83ae-3d0f6dba805e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1804b117-93a8-4afe-b5a3-a098be4bf2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fe0d1d-6c85-48ef-8d75-6f3d35c3cbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797b2fec-ec48-469d-980b-847ab41437c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ffb51c-b644-44ba-99bd-870591cbfcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8df0c08-e7d7-42c1-a7b1-b07e41252dd5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e41fdc-a86c-44d5-93f2-873fb51d9900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feee537a-959f-4b07-8efc-66caaf165703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3400dc28-88a1-4d22-a1cb-4330237ca1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed9dcc7-0eb6-4e4e-8d58-4e9db8b40a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd281ebb-6596-430d-aef4-39369bf81830",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c605dbf-0e9d-49b7-90a1-eaff3b78fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2c5ab6-4e4b-460a-a801-2a1573aa4369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336c3b3f-9e43-4714-bf4a-05c4e8244162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06891909-1bb8-4925-9386-1aad4e6bb5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6773a9-118c-4648-82cc-65e7d5f330cb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bfd29b-07aa-4a8d-b562-8c38e96db61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8090acc-d567-42e2-83df-0b93626c392f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0f41fa-ee4c-4b9e-86cb-580e88d334f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d89250b-7d8b-4f37-915f-0f17e303b8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec5baa1-ba4d-4fc2-8514-0785a4407ee3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9fb483-250f-4292-9348-fbc03be5c67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9392acb0-d7a4-4da5-9e0e-f48bb0d7b8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501b26df-866b-4a9b-9719-54bb1ee1b6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd29c1a-268f-445f-90cf-ae01a7559368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e2e492-b7d2-45e2-acef-08a3a3f158ea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee64a856-0143-42df-ab0d-a795a56046e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f453081f-635e-4a35-9488-4c9090ffcb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ee69d3-def9-4d00-8b4e-c46ea4d23a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "970305d5-3b38-4e87-b867-badb794d935c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c5246d-e7f1-4540-882c-66b4555b8856",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8613d-2d45-486c-99a2-4a167aff82ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54103faa-cc7b-477c-b7e1-abd5075a3933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bdd79d-1787-4bdd-beff-b1220bed5a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18a3e7d5-4b98-4149-8ed7-28188457600c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7115a367-411a-4b2e-bed5-9c9b1be8658a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e208ba9-4960-49ae-937c-34cb889c8498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78d967a-358d-48de-8a28-2d5037610bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210c3d31-fa65-4962-a1f4-c5c6ca2a93ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "808b816a-d7a0-4cd0-a596-ff29297cbc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2feef7-7c3e-4e95-a3bd-9a1762a14176",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea06d4a-56cf-4455-86cf-e59cdf0c5e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe044ea-c98b-4a1d-a511-b00e68920ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c449dd-d8b7-4a80-bb10-76409e061eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a70dad5e-253f-4f33-8363-93fcb7ed3c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712683db-298c-411f-a178-c959200d0f04",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d2768c-1b6a-4800-ad83-83759b8ce9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e619956-cb57-4cf3-9f64-ed5c84bed050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab1c7af-ef2d-4c1a-969c-b42b13120852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79ccc97b-cf90-47bb-9f14-7fb6b9e6edf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91851078-7b76-489a-a296-52cd532a0505",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d9f610-b9ce-4646-b861-517baf2cbc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8853dafb-244b-457a-b968-443e1ff5d1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550ccbd6-f2ca-499b-8bbc-4318eaeb71fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "984d933f-5902-4fd9-a86f-ad2c64815ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fd5ba5-83b6-4331-ae23-69c34af30bf7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5ca963-1818-4308-8f83-d7b9443e902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c283611e-f467-40b2-a685-20307f96d05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d96646d-69ce-45ea-bb9d-e8e669e4b5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bdc544-9c42-4b1c-ac85-86b7e032c747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa888c-bf07-4b7a-b20b-f0fead92b5e1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88e49b1-0169-4725-95bf-629d87e880e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ad82c6-971a-4ce4-8c72-49a44ea020cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a7ce6c-1c24-46d8-bde5-c215680f934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf7b60e-910c-47da-975e-42e8027020e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c62790-9472-4a92-96bf-b920405f7839",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49da305e-2e08-4523-8b13-1c7688e86777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a94edca3-711f-4df3-9182-b24ce5e21cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5402c2ce-746f-4ac6-aaa9-19a1f642db9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5d6a2a-eba4-4f21-963d-96e4ddffa97d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d4e2f3b-9d97-43cd-8252-fe8ba814121b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1023a8ce-555e-4886-826a-6c18a078ab1f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11b0727-f9ad-48a9-ab56-8f73129367d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48584d8a-94c7-430e-81d1-9a33e8b90398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb799ee-e7c9-4c4e-b0de-f0c2c73178d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a617b60-d510-4de5-968c-64745750478f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fd99dde-17ca-43b9-9232-8a3258829991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4dd1317-7937-4981-945e-2c1084814416"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "054de3d9-11a8-48e0-9f44-fd7d51b2bc66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52168629-bae5-4029-8c15-bbc5fdcdf38f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c0a4cf4-8af4-444e-b7e0-28ea36d381bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7efa71d0-7844-4aa4-a72d-c2c9cf758494"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ff61e7b3-34f9-495a-94d1-67558015368c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6084514c-8f73-431d-a987-bcbb0cb1e5cd"
                }
              }
            ]
          },
          {
            "id": "14194ec4-7d92-4f36-b237-ddf2bf162899",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d808148d-e719-4798-b9ce-212df958529e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "393fba8e-8f67-471b-bbc1-9f876fda90cf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d706ed4-037f-4a73-b36c-eb35f594072e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "956737b2-6d77-400c-b433-d51c8b05a995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4b24c4-c900-4f18-88bc-b99d8a3ec220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4406f8-6961-44f4-8170-76450c4f8128"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e1d85d4-e7cc-4448-825b-34df84d7d8dd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81932751-d155-45ef-9da4-4dd60fdbe261",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c601696-0687-45ba-80ba-6d76f3fe0316"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ce09df7-5146-439a-b86c-74b6f48f7614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c6dcfd6-92bf-46ec-bdc7-5da0db99a8d0"
                    }
                  }
                ]
              },
              {
                "id": "6d500b53-42af-4dea-9aca-2fc2a5c31085",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ab02286-eb71-4c71-9999-5e528bbb4e28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4bf9ba6-224c-478c-afdb-de283e8629cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "504fe143-501a-4249-82f5-c6c65132e4b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f7b5a24-748b-4059-9107-d39e19e194b2"
                    }
                  }
                ]
              },
              {
                "id": "fe4f78ae-7231-4952-a578-304875c03c6b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20b47ea8-0b04-4ec2-ae15-e0a25c26edb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd71e016-db8f-4c9a-8546-50bd77255c30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51c00f09-aea2-44e0-ab70-c106b7477133",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36361f36-9059-4571-9d9d-6139f0da5a0f"
                    }
                  }
                ]
              },
              {
                "id": "425ca28c-30df-433e-a61c-a06f487489c2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bf34543-3a21-4f94-ba80-37c2cc58aba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6796384-9af3-4874-bc4f-5521a8c64578"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c62dead3-cf76-4cc1-9a89-a2e22aa031b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0d641e04-2ed2-488e-b1ad-f3504b4eb9b2"
                    }
                  }
                ]
              },
              {
                "id": "6a48d266-c310-4950-aad1-a272dfb451ac",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e6b31f-f5e4-494d-bfab-432954729f38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "efced8f4-275c-46ec-9cec-dfe1fde49358"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "debd9092-8d1e-426d-a0b4-7dca5221575f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5837e37-7998-41e0-a69e-a9d277233018"
                    }
                  }
                ]
              },
              {
                "id": "5c50ca71-0899-4ad4-8331-6e1bb73a62c1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db6154f7-b495-4524-9e61-32fb4622f0a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "96895b26-2c51-4edc-85ca-b1da203cd69a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cae605ef-2f0e-430c-858c-467dd9a8a5ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10307047-41d7-40f5-bf1b-5cf023319338"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "065a24b0-fb99-497c-be20-0ed28ba1735f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbd5db2e-2d2b-4e1e-928c-39a70bfd2eae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "68b9cd49-2216-4818-819f-d3803a187ad3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a19da709-6826-492a-802b-2363ce4b9c83"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "236d76ad-31b1-456f-9541-90df0264dc46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2c829d68-7627-4f61-bd79-b357a55f8527"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fbc6f0bf-44e2-4f52-b3da-7bbbdb69924d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e95fe42e-9722-49c4-b514-02619a010a6e"
            }
          }
        ]
      },
      {
        "id": "4f22c165-7efd-45fd-86f7-47b84b01f153",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9e27e54a-b9b9-417a-8d84-cabe6c01bf90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "881e3162-1f20-4820-ae74-0c188fecb446",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec67679d-5a14-4da7-b224-87224383c21f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e374d452-4cfa-4946-9ba3-8728348705c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585e6e69-cec9-4568-a286-9e1a596f96b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b758dfe-cc9a-4f30-981e-435746113eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e59db2c2-f5a7-4640-8e84-8a389d3cda1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8054a1eb-3821-4a31-978f-2360ba79d602",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4612ef1c-4518-42a6-b654-bd8ab450360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7482468-4ac7-4e4e-b6a9-cdf763cccffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627b4665-2f10-48e0-837f-32251e3b87f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d72d6e1-6698-40be-a65a-7eae4588dce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7306a851-7d55-4845-882a-69504ddb3388",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b977d50-6ac4-4808-aece-fef8f45be26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0be0782-3886-4d1c-89a8-fc984aa0a588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0227d22-d48b-4ea8-afc5-f6dcc196cd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86824228-a3c7-452b-a4ee-7780e09a0482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba930f7b-b24b-4e2f-a181-e3cdb51d145e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87116e72-ac78-4200-acd2-769248b83502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9136dd35-29a6-44e5-8abb-2fe991a83e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed83095-a4bd-4565-890f-291cef5886d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa7b050-f665-4d7f-b9e8-997445b64018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fbda50-ee7d-4cab-8036-eeeaaf585e17",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4315d1f-2c65-4ec8-96e1-29953bda4ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ca9e9c-a24a-4198-8dc1-dcfc77312d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2918beb7-f04d-4fe4-ab5d-1c28a38bdb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f695f2-b7f3-4933-ae48-6b102458bd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eb2740-fcd1-438d-8f17-eb2d98c114ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7927b62-6830-4dde-aed7-c1d9bce551f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fc9db5-0f50-431e-9b9d-94ec925409c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55661ab4-a1db-449c-9ac1-4ed1aa761e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aab37ce0-c9b8-4551-a00d-dd730fea3caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e04747a-3d10-43c6-9321-9e6f59c8a1ab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbe29ef-a12b-4e16-a261-945879413559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc37c26-5a03-4ddb-afa1-2f9970cfd247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410916f3-38e8-4dfb-a6e1-7807322116a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57c9d3d-95a9-42db-803f-f49e160047ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a7fc0e-183a-4bb5-82d9-8fcc3908b7d9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43e07d5-4d0a-4760-bfad-be1be64c6b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec95cab0-0074-480c-b67f-2e2b827c206a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f992250-cacd-4459-bd23-09f737f74068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d6dfbc-8de1-413f-8b70-5a2130e21c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2835d15b-6df1-435d-b34b-c738b05d16dc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7404aa-a400-459e-b14a-956c0c0ee27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5681a0b-791c-41bb-ad79-6ce642c9c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2e96a0-2a8e-4fad-8072-ff12eaf62ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e12ccbf-7bea-414d-9e74-4976ff416e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9837409e-b038-4d04-aaca-8dcbee51831d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff39e94b-b6cb-4277-af2d-0d0d673aceb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd31d03-48a9-4eb6-b70c-7c3aa9135d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8b8653-33be-4765-999a-a0c8146a26b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3225a1b-a2bd-4aef-9da6-c887f6f1b937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db3f5dd-dde7-45a1-92af-72c00dd04ccb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db410555-32e7-4b47-b49e-1083405b4abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1510673-cfe9-4dba-9607-2986a357b249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0459b0-7afd-4623-8813-b5b8520c0d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "468dd069-5886-4b42-acde-9a3bd4a8b8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f5eb1d-7fb4-468e-9eea-7814c079a52a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13de1a59-b101-48e3-baea-3ad885ba60db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2767fa61-6ee7-4aaa-ac44-c000f58200cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08ff995-4617-4f51-b93f-44eef67d8a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1037a67-9c84-4e4b-887e-000889f3b401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f04537-77f8-42e4-bdcd-d6e4daaa23a7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282cb99b-06de-4e53-965d-09df448e201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ff8352-5bce-4473-956c-eeb571b056e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbd6c9c-2ffe-4ce2-803e-05185c15fe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1acb60de-7391-4729-8ec7-7463c4418b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b50939f-ec26-4f4d-b2fb-a909d5c9be9d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d04a02b-2da1-4a6b-b4c6-8f983f0ebc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda6bc43-3875-4949-b5ce-adf6241b2760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead0ec69-c40b-41e0-94b2-ff1dfb03873b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8951ebfc-1709-41d8-896d-4aa841cda2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdd41c5-335d-488f-b8fe-195387401051",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a8441-b1fa-4273-9ab3-acd15ddc9ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a66f07-edf7-42db-b3c2-129b813d2220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4489757-160f-4b52-ac65-1901510b9718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec47435-1373-49de-b371-2cc4689044d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c1ea2e-ecd7-4f93-a717-82b4ae7b28f5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af48ef0-d25a-4dde-ae5f-fd359f6ac653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1db1303-3a18-4021-93e5-4d7de0f6614b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f18a83f-f35f-420d-9fed-b9bfb9f77123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "971378eb-e2c5-4f74-80b2-feab3245ae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9b7104-0243-487b-b73c-7b273ad0539a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1cb211-dd92-40b1-9e71-a3329963a8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff69fe8-2fc5-4554-a600-7556902f5d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39f6116-d652-4f3c-b190-f810dba8e051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aef4c1a-5974-49de-b014-f8987b4ad91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ec7ab4-ca4d-4d3a-924a-eeeb214b1fbc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c042e9d1-edec-4ce9-9e52-a4d36f40137b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af147fb-7882-435f-9a91-0152d88cbfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23ce898-ea8b-4781-af31-4354c6429674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54935a8-8c82-4aa1-b32f-fd183a7b573c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cdc23a-46f2-4ae4-bdb8-9b2e44f6fd00",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf58383-0883-4bf8-9854-9dd707d4fab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb25c24-4436-44d4-9045-c4ab2cd5fa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcdc921-0469-4e4d-b1c4-855b1af4edd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69e13bb7-4729-4ac0-93ea-3efbe9d9a0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a6d5a8-0812-47f9-acf8-8938ce564b07",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc1e25c-728d-42f1-a4f4-752059520a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693494d6-bf47-4af8-9888-c6989bc4f809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1777d03-da00-4a46-aba8-ed646569f25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d3aedd-393a-47a1-851b-a6402eae3084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ebebbe-f6e7-4c08-9dee-2bdeb89eea4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0134b37c-f20d-404a-81ee-e3fce9844a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26263e7e-9765-41cf-999f-8b5b7704f559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edb2f6a-7f62-408b-88ad-b56e68238c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df37418-7476-43b9-9334-8bf7d4374164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf87debb-0c66-486d-8ec6-eeaa3b893beb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c300de72-73cd-4290-89ea-31387b868b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebec495c-6d8e-4f96-bbc1-489d971b6668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c864063b-4bc1-4dc5-be64-afd8bb498ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8d0d80-2071-4d5a-8bf5-bfc3cd46f69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc8c433-cf2c-4bd4-965e-0c311700b364",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7067a71f-a1e1-4cd5-a5da-97f48c1fde5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf73094-43e5-4c87-8cd7-a14b9f53611a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b9fe55-6453-45d7-891e-3fa0b8ac0244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff818106-aeb6-43f1-b644-d75dc85ce2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e7644a-d08a-4640-9e94-763f783c4ea3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23889544-8b17-442e-8b8e-ea4f1fce7305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236069f1-c746-4066-a7cc-5b8694d753fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade0b57-07e5-4bf2-8637-db48a07750e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b194cb2a-251a-457b-bc8f-7ee47e3ccc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86523718-41f9-4408-989c-4f494c51d3c2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf146ef-bf42-4be8-a611-bd74e9fbca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3ab20d-73a1-444a-beea-472b3b1d62db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7026a999-27f4-4f25-9ca9-d702da1c571c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e1be97-84a5-4f97-8eaf-3e6aec3b54f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06376bfa-0aab-435c-9208-f934b8adf7d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e08c9d4-0bb9-49d8-9df3-bca096fa07f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f529e0-895f-45e6-912a-ece4906376e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1aa95d-5079-497b-8351-aeee1f368855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3715dfb2-24a4-4094-95bd-356f514de51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2874c6-5534-43b8-a7c0-1020aadabb97",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197508d6-3785-48cb-8336-a524c5c9fa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ee3cdb-2452-475a-9704-04ce30e99557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19976cab-2d77-4542-84ec-1c8651e06300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a6a5e2-f7b5-4f93-9584-26e83493c827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5b4493-7a98-4760-befd-daf6da38305b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7864048d-9e9d-4110-a4ac-b290ea46ec45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1c88d4-2918-4bf5-ac0f-b1aad3c6798c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d98f4a-74bb-4752-8566-3528a87d61e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66412aa4-351b-4d18-b469-63ea3205c5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec181477-1faa-429c-b332-d87418b0b730",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070ec9ac-2913-4e13-866e-94859d5fb9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae362abd-8021-445d-8321-15607518fc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001c4028-37f3-4b96-8206-aa5e8443505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a551120b-0b9e-4d7b-9c73-ed850367590c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6210ea0-68d6-4a13-a46a-1a05d76a5664",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9e123f-3a6d-4f82-92f7-80762dacdf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1ffccc-a794-4f37-b20c-36be61a30bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb5c815-206b-40e9-9b49-6a19e7c0460f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9f5a12-9c22-4d87-9ab4-44deaade5ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12e8391-91f3-4ba0-b205-69d9555a0199",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d5c963-2f4e-4ca9-9b90-f394a02c894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3e409b-66b0-4ebb-b18a-40031be03ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e881be60-d8de-462e-adbf-74b68bd8339c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92693c4c-6224-4f7e-b702-a649e82f1de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc26d5c5-3de0-4741-beb6-f5fddf07ff64",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137992e8-0762-498b-9713-afffa414e8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1eb8eff-73ad-43d7-9e5a-7e036da62188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba88db34-4003-41fc-af5b-7a9f82bcf76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f7a644-9f51-4152-aca0-f8f45cd148a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa59a33-10fa-4f0c-9b1a-58c5f9bf1834",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9141a97-c413-4cd1-aab5-d57b99726d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391fa2e8-13ec-4db5-a802-e926138c2e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cede2d-39d8-482f-849f-92320e5bfc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95f12032-0577-490c-8ce0-631c13778b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f551cfe0-fd91-47b0-9da0-4e91ded37b96",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b741bbc-18b4-420c-8564-ab8471bcb03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba4d97b-02f3-49b5-ae81-9be21bdf5e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c51c58-2720-4bdd-b2fb-5d6446b476bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aeb52da-1d53-419d-8445-ad2dc6115005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5f8430-a95f-46b3-90b9-1622f6f152aa",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb07728-4f6e-4f79-a39b-5f36dfbcfd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cf57f7-0023-459f-ad82-c761267be635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef300751-d4d5-4b85-bd98-6e2bfc56131c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0942b79-b21b-4bbd-9cea-ed59e0ee69e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719219b8-6d27-4ef9-9408-b0256c91ca11",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160743e9-bc18-4eb3-bb17-b01ddc8ad20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d99b0c2-98b4-49da-916b-e4b0f39ec2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdba5b5-203b-4d80-a6eb-1441fede58d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b5e5f2-71b1-4d14-932f-ca1fff2a01a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf404de-12d3-4937-91c6-b423a61fd20b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e9c6b2-da4f-4e59-9a8c-333c343d06e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfc222d-9f97-4674-b9c3-3a356ca3c0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d066dfd1-a6c2-4250-8147-42f813793b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f59a2c8-d339-49b3-81e7-064ad4b7215f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e22a89b-748a-472e-8b97-bfcf01e6983c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4626ed93-2c67-418c-9a5f-27aafb45412e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4f06b9-3ab4-480b-b683-bac81b5b96c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b5173b7b-b2a6-4ada-86f5-40521550fa72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2713ee87-1a03-4e07-87b5-4d78eec44393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b895a5e-fac8-4630-95e6-c9f4adc906ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b3d423-9cb7-4e19-9b0a-13988ecf6378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c495d6b-9fb7-4ac0-9011-042d2ec96af3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99243117-e0be-4040-a97f-99e275eead68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e77ef1b7-f131-4343-b3f9-c250beb92b98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ab31b11-7bdb-4308-b1b0-c604b56c548a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "589b1be2-8321-413d-b44d-8ec8865d72b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a44ccc0-d72f-47f4-970f-d00408313b56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4b8ef57-bf1a-42bb-8b56-cf77fd3adbc2"
            }
          }
        ]
      },
      {
        "id": "9da126b0-020a-4fb3-bdd7-233664561b3d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37078a79-64f3-401a-989d-db0885836ad7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ef50f6a-19c3-4639-ad70-f53263c8dc11",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a28c0089-425d-44ed-a9ef-62a85851326f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5d12bf-26aa-4428-beb1-f56f2ddf36a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89334f5-5b9f-4b1f-870f-815014813e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aae6fd-b0cb-414b-b713-429dee1db9e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59864b29-7873-42c2-9b0b-a77a32088964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cda828c-d5e9-4595-a463-4115417c60c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e27153-dfa4-4768-8087-24c20b0c5a3e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680ffa80-ab2a-4ba3-9269-8da22670553c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdadc49-6204-4ebc-9b5c-81a3fcd78466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329eb9c3-2aa3-4803-a93f-cc860aee0163",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0abfd2-27bb-443f-9e0a-619cac1534a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fba3b7-25ad-4cfa-a27e-7db0682532cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b15c075-5de4-459f-8814-6e0fcded65eb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6396e943-d343-4322-af70-c105ea042ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c652c7be-3ea1-41f3-b1bb-363c73c650f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc41968-25b1-48cb-b2b9-ca49f8233567",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330c28a2-e4a7-4ea8-8231-81906d9c856a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc5d938-baaf-4fbb-8e7c-37291869324d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8ff9a3-119c-4efe-a5f8-bb9b32c42e2c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246d0ec6-bc20-4096-9d0e-efe69f84d5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971c821e-ee1b-43d2-9d71-601f3989089b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bc605c-53b0-406b-bed4-a3a8523a9b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41fa868-8d58-4541-a20b-068a4d00a355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ab6cc5-4da0-444b-b81c-45204f4fe92b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca3a548-9444-4a3b-a220-a1f3d0c3aabd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc19e7c-3e6d-4673-9a96-f93b6a5f53ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d2a906-e6a2-463d-8dca-8f1653b8557e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f697dee9-6d1a-4426-92fa-1474e268ced5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf499ab-0ef9-45cd-9704-e433a939b514",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8e691d-aaad-4605-86ca-434c02a11679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c04b5739-d1ee-4081-8db0-030785be3511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896d40cc-dae0-4fde-9401-09aae0966ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7578a3c5-f248-4f5c-a761-18d637625fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8348d7e0-0b78-491a-b271-ccd9725ed931",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed10a3a0-e522-4761-81a1-2675f906ca44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb389034-27d4-4bed-bd29-ea37e5c124ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ff4e77-17d4-478f-b630-ad33bb14d85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b0497c-3052-4970-a394-a68f627a4f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13601c44-7d7d-4424-a9ff-8ba380921286",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ad3dee-569f-4b74-aa3f-22a519870fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7957a255-212d-4d17-9beb-fe02f90f9f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc31fb3-e5a0-4810-b093-f11e8347a4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd75cb86-e6d3-4aab-84d8-3082534945c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5462e953-6b7b-442c-87f1-fd317fa8df48",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508f2c84-53d1-4222-a73d-27d605384e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f37dede-4af3-4272-8cf1-2f790c84e5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42292f66-fba9-417e-b737-f7e568b6f096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512ea91d-78e9-4673-a80b-dd8a79691801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da6f508-1f8c-4f60-9747-e597a35e25e1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8c7e5e-07c9-4257-92c4-bf1fdd9aaf5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b95b57c-c6c0-4df8-852f-f379f95decc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcdb8da-9a3b-441b-92cb-bb4bfb8d8953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611c0387-4ab5-4434-a845-c12c0662c7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4cf3b7-77fc-46e1-acff-bb614ec77dde",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9a8c59-409a-4304-a407-a044748988b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ef5574-c2ee-43af-b067-266e41a58441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f21047-3782-4195-b252-9c2010dd2a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e45537-1319-4052-a43f-39711ca80c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dbc244-ca86-444a-9057-73d7757995df",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fae65f6-9870-4735-852f-b4fc09d8731c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13ea8c75-1c16-4281-825e-0e5bbbc2faa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09058aa1-3911-4e6c-b450-dc1a351db7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cffb0f-1509-435b-91e2-b8568f495a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb82b233-ed56-4db4-81bf-17c09a847d59",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cea8e8-70fd-4994-a0d2-81ea7508d873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdc8ae66-a381-4563-96b6-09dac2a2283f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9887ee0f-8884-438a-ac5c-4e111274126b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a12704a-782a-410e-a99c-f2a275b923ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95d79c4-9531-4bdd-9f29-094cab119d3d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7339e024-c082-4188-8533-5a4774db1242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658d97b8-dbd3-46c8-ade2-ac67607c52d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6d56cc-7045-44dd-a7a6-e6abb6e3647a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c2381f-b27b-4e6b-b43b-3d1c9b66727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2271b694-ee32-4659-87fd-0d41ee567907",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ec6bb8-c96c-4676-ab0a-94c38c1a255f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33aef2be-57d9-4137-8209-9c5b2784c70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc4afe6-0352-4d89-a538-eb8218bdd500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7a7f2e-8421-4bbe-9c3d-783e04f362a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fedc21-6471-43fd-8e57-82e3a61c8da2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c863e72-b7b7-443d-ad7c-1f541bb76d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78db75f3-1290-4b0b-a8a2-2db070592c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5432ef0d-c087-4d9a-9bc8-9123740b4e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bb9871-46e4-4c61-bd01-6ebeee7e6d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ed612f-1ea6-40aa-a9d5-9a4f51aab52f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714718f1-0dd6-4000-8865-0ece093789e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74476620-0649-4b44-9f7c-5d64c2b914b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dfba6f-1685-4d08-becb-c9bf38bf0d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b38735-3852-44fe-af24-f88e14e80777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2d9334-bef1-4b4a-83c1-4b47c073f1cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977bdb9a-73e8-42a5-8c9e-76425ba0df59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073935f3-564b-4249-8730-6f6df58b8827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64c423e-3cd9-4c95-b6aa-8b710c0e1f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d911514c-8bee-4f41-bb49-b8762a139306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9df0044-89b1-434f-9538-f88379b063f8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc228687-3b27-4261-a8f4-b8cfc13957a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd1b80-235a-44a2-80e7-01af12acaf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace72628-dad5-467a-9c93-6c2bf692c70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c830eceb-8d4b-4837-80b1-4435d2b763c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d38cefc-7989-4ec4-aa1b-599913c404a1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed28cef-e275-448d-9ddc-e7846b2f2aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5e9afa-d72d-459d-a529-2de5c46a049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc55a0d8-6c11-4ee0-98bb-a15c7f82d303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0437f3-9eb5-485e-a5e3-021619086caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905124ea-893d-4a04-ae5f-3986046a8e73",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b365dbcf-4bf0-42c4-93ad-2a11e3f53039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c242799-0e1f-47fa-99f9-d473337336cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d935b92d-e5cf-4a71-941b-098c9f91b1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd6e2e1-9df8-4a2d-9ccf-b8f698afd016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59922c4a-ea6e-4152-80ea-07c896e99076",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b17750-da57-4554-9951-768af085d1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f11d88-6318-4df8-a3da-4405f5c130b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca7fe28-c9dc-4a87-8ec2-96943adec760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f5c5e5-dc83-4ee6-a044-7953bcbc0b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479ab237-d62f-480c-9e6c-da81f5a3971f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4bbec8-369a-4507-8fff-54482fde3486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df7daa2f-11c5-457a-bdaf-75b08a6a9b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f083ec-bc4a-4507-a95e-408e254a3d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a29bb9e-3100-4182-94d1-b41780de1086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790fc6ec-281f-4631-a4d0-5bba72edabcd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61527b59-a838-4cb5-9021-81567ea44b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f123635b-90e0-4567-8d91-e16b01338410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9fcb0d-327a-4449-819c-b6b4ace12586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2eb990-9b4d-4853-bed0-0d78d8e42877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a8cc05-a8b1-4c55-b5ee-335ecd1adba9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0903626-832c-47b6-afe9-4595d1e74841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82503f49-1de8-4267-ba56-7e0c9310d490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decab9f1-4575-4d19-8ce4-4767d0a49bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79a876c-0f4a-4279-95cc-e2fd1a823d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf55d2a-4cf8-4db2-b975-5e915d8682e2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8a613d-93cd-43d5-9581-21326a6f9eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6dc5980-f863-4fd8-bc96-1e0bf7e7b65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c4029-9ba5-45a1-8431-b89422a78258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fbf27a-878d-43cf-8818-a3be85a59b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c44c938-0d36-4c7f-bc52-d2fbda0b9eea",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4455cbd5-3ad0-48ca-9b1e-6c814658e9be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7600a5e2-df1f-4001-9a9b-ac1bd05f62dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f39b755-af83-466a-a11f-bd3418bffc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8ad30c-2d58-4f9a-963d-48030f02078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faa919b-72d8-4304-a0bc-b475008b4f62",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85011ea7-111f-44d3-a12b-06939bc8282b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be7b92a1-cd9a-4533-a171-85dcc873fd9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dbb238-1fe2-41b5-ab79-ed1a40df4121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f16bdb9-3766-493a-b5ee-e11e5ca956a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946ed45a-2afa-4619-81dc-916326cca387",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481ef4dd-01b4-4340-be38-88a36196c154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4087ad7c-689f-4487-8850-a4510bb24d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061be5ba-2cce-4aef-9653-c4ade241898a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ec0185-7617-4a62-951a-3dcc9f96bc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e471be-2357-482f-aa47-468b20cf5738",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6569860-0c46-4f2c-89fc-836c2130baf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3570397f-9a46-49e3-9773-f1d4d96d91eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c91003a-882e-4389-b6f4-c62da5098082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5a34a2-16cd-48f0-95c2-25746dc70b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b424f8-56a9-48df-833c-9b5f39d3399e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f43a14-540e-4574-8747-fd8ecff0c077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169737a2-c73a-4e9b-96ef-39a6c04f5d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a3a445-3274-4ff2-9a31-495792673d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca029b9a-fd0a-4226-947e-a9a2d7558452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c3de60-a5a0-4a6d-a817-8d042ab96220",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5febf8-b0f1-4754-80c3-4a18b54605e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6159a28e-5e82-445d-bba0-cf50f4d8960c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80773ae5-6b07-472d-b5da-cf441cac5b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd599503-9f78-4f11-86f9-7797fffc5ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf59643d-e2ac-4fc9-8991-e9e89dbd4c71",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411499c3-7089-4058-bd74-7be7ea49e3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0850be8-8e17-4b9b-a333-e0c9414d03f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c77a7d8-ee16-4ed5-98af-bb52f7ab139e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c691ef3-48ed-4608-8e39-f71e36d5bdfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57af3f7-0cc8-4702-9501-ab6f768aed3f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d79f64b-337a-420b-8248-f87bea00db7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1f4311-87ee-49e9-ba5c-7cd1a6d18d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b75b0a5-7fc5-4720-8015-c7b4f58a80cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5820ca8f-a779-4246-98fa-911b9b174d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa7bac8-6f34-458f-9dc4-5a67dadbdaa1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0c3ee-2564-4f18-a707-e20eca9922ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8752db16-e916-4d42-8dda-060648a7bb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337908c5-7a42-4999-b1cf-c9189486ab02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a41f3b8-e6ef-484e-8661-7099bca8e6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c7d416-ea38-4eb5-ac74-e87a60b82ce2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dac1a3b-8e6c-4b37-8300-22325799a094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8e725f-d0d3-480b-8533-2eb9c03428a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fc6825-fa71-4959-ac29-0e5e9bf5b160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1072f5d-daaf-451c-a7cb-1856304c6203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663bd4a6-db25-4c14-a7f3-9af0fc86ede5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea01d9a2-9b2a-49e1-aa58-931cb472313c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3ade7c-b29e-4d88-ae21-98e141ece7bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f7f666-2058-47fc-bee3-55b1b2ebfcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0552d17-78e6-42b0-ae0f-769155838a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fc7f96-0318-452c-a048-f33a02c6a21c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0369d795-8bf6-4824-b0c3-eae71d8d2e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805c8c1e-5f80-49c0-a4bc-2157ed7790d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c0cc9-f5e2-45ea-ad40-4da6eb55181f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80128dfc-813f-4753-829f-91b66e1c92b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e21522-f41f-43b6-8034-14169a4162d8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ed3122-f26b-4dae-8185-11654a89dc1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139da99e-9b87-4f0c-9319-4f1d8479c75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f7d4a3-2310-484a-bb5e-4f40bb388233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ccab14-1a29-4db9-b194-d34cf1576372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f01961f-2489-4c37-8c3a-5f7ebc4a1967",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49139cd0-6e3e-4f5c-8f61-c64683994c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ede071-c0a1-4d75-a135-a4960bf2cb09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcc9241-b840-4338-a112-1953d1b0b96d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26e8567-2187-44d0-ac84-4b3b471945c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56245b98-4713-4d8d-98be-20b9b09c0751",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c188a243-c459-44fb-873c-96eae9294e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddd24ff-be3e-41d9-a49b-7541925a8651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdace431-5c4d-4b5c-9db3-97ed8dd0d947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff1d45a-c6da-408a-93e2-5c68c1b7022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f96791d-90d9-4348-9c8f-812c4c909fb0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac966af-c4b5-47a8-9c43-94d095356062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3836ca8f-6a88-43aa-af65-a5288e4498eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "556028c5-ef02-4df4-a5ce-21b352b0808b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398c808d-e53c-47dc-a37e-275c32709bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3ab5f7-5d03-4872-bdbf-17276ffc058b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fab95a6-1452-4ef8-8ebe-838283096bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cd1600-3d8b-4d4f-84d6-dedeb77c1024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee7cd2a-2ee9-461f-91c8-cf5335a66739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71b99d4-c59f-46fb-a27d-800dc4d31146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec57264f-c9e4-4a25-934e-04efb1448869",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a8ee52-6727-4a81-a065-cc510ed4adc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4bab24-aeab-4f25-b418-62c174e2a20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ca8901-5ccf-4539-ba91-19c407533350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639735ae-edcd-41fd-8e5b-1568721dbe42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2404c193-d6e0-4b90-9943-20211dc9ea08",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56fc105-20a3-412a-896b-49510bff2b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a321f853-07bf-491e-968e-cb32d9b72505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47bd36e-1055-4d43-a68d-47e5e8a8777a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67dc169-2ecc-4628-a870-4d57a6753190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d2b62d-ec18-4f7f-ba76-e4f11fa02310",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fc948a-35ae-49ea-a257-ce18e39f28dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b51592-5469-4aaa-81fa-395d1ec93135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dbcb39-36e8-4f1c-8826-918329e8ffd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5818ba6c-f054-4c30-ba75-e16262621000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f83b899-b0a8-458c-8a5f-02c9f92694ed",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce5a459-52c5-43a5-ab4e-684d8cec1845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17de38e6-5f8a-4964-84e5-e622440453e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca7c79e-8e97-4d73-868a-ce6abf2f1b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4380ab-af49-4ff4-a547-635e2ec325d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6753dbe8-f225-4c02-8c13-ac0368ac86a5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd19218-9409-4a93-b18b-3cfdd4ae965f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa678d68-75df-4790-baa8-084ce4321264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548fcad3-d9a1-4063-9160-31661bed3b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3c077c-dc56-40e1-9088-a6601250dcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddecf387-c225-4982-8f11-3bdad03ad0aa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c887ee-0d05-42ab-b4d4-7dee4c7547b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc79fd9-59d8-4e7c-860c-d158547c97e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad0de25-1541-45d3-94fe-3a0d2954f278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a77bef-5b7e-4e02-a675-3188c5b392ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ea3779-7c28-4e4b-adbc-dd019ed2d073",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19eff95-872c-48f2-bce1-a31ddea74a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65948572-e5ad-4ffc-bcca-a6a0b4ef60fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f11d1a-c42d-4d63-9c4e-0ae8edfb590d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021b33c2-a080-4711-b564-1b7cb7ada96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61637d6-c6b6-4c9f-901f-44d6e29924af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dc48a6-b6bf-45de-a332-31b6e0ac7a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f42c0-360d-4c8b-b3e1-3c475913fc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175d6450-6622-45a3-9d7d-655f3e55c9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90b0ca32-2776-46a9-b206-03e3dc0d1c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934bafb9-60fa-4aac-b1fb-2043731c4ac8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80879b42-1ede-4e44-9c14-bd74a5c1c2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97133de9-0c10-4fe9-8a69-5b6f924b39da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac06b7d3-0daa-43e0-b58a-8a59f1005cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabda9dc-e886-4ce6-977e-e6f2234cc432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82787aee-46fa-4a19-8f7e-7f3913122655",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc811d8-476a-488f-bb4d-8a725c9ddf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525ece9d-699d-4f22-8259-a2412119777b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501972d5-2a3c-4fff-8c8d-0215207d438e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb312ac5-f917-4eb7-b89f-708906f06a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d373a0f-9410-4a3f-af00-fe98e5390787",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f13900-ce0c-494d-ae30-ad2c4087d148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9181139-d446-400c-b52b-a2e4a6aedb70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feac8f1-c070-468e-aa37-b9e937159598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d7452d-cc8b-4154-af97-bcaac505f3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96590c26-d8b7-4efb-acad-3c49005a18a3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb73701d-5d59-44c9-a9fe-c96020a50538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913c2193-4f6a-4f5d-a605-25a652271a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d871c9f3-15e4-4dac-8386-57a37edb8b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6186dec7-eb1b-4016-abea-71ee371646c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fbd06f-1e28-4dae-8e5c-40f4fdc32633",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d54576-1ab3-4f6b-b554-4ee3c9dfc99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1fe00d-adec-4027-a88d-b275e17725ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663b96af-a07e-4aca-ba2e-9e5c2246fac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2702e828-4fa9-4761-96d4-4aa52438b001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815c0fb5-dea6-4eb8-a00e-b67041e6aa17",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac47c71f-b533-461b-9d87-bf40c1125843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ea24ea-89c0-4034-bf23-13ee93854ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426e1d32-c5a7-418f-8667-ccead4fc1b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52316878-3ab4-4abe-8249-39f20dc86477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d864a5f2-719b-42fd-ba7a-e159f5df73a9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a84ccf-5419-430f-8b2e-ce4b9b239331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eeb9c71-2897-4414-8934-185e06d61216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d03cb7a-75fe-4fc8-a091-32d5fd83d39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a711c9-d516-4d3b-85c8-e49c0d6ac771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13399a0a-2129-4bf0-a5a2-b2b948640ce2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3620604a-a164-4e3e-92aa-cda2af8e668b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3334ffeb-f748-4960-84d1-c4de3b56dcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7d6a62-c35e-4b9e-ae91-7f2f9db8cb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b34e3ab-a1b6-417e-92b5-49b1049c8d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40963960-e0fd-45d8-a10b-82b1e0380db6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e3dd1-4a7d-4640-9fa9-d69b9763bbab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7c62ea-2613-4f5d-8b9c-53bc4a193501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbe4238-e501-4c57-b669-4fc3c436ce44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69e1224-9b4a-4a0b-bb89-27e893a3aa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25659332-67e0-40fb-a582-6e9c76f3ae0e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ad69d2-cd9f-4fb3-9fe2-f89fba42138d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf000b2-a428-416a-8728-e8ced669f7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745dc85d-daf1-48e0-bfca-f097ff7f71b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96467892-54a2-4e65-96ba-ac22befc6e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab58a019-b792-492b-b173-6a4a1ed10d02",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560a404d-af16-4602-b2bb-57922ba6807c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1701b58-c81d-41eb-9d64-8aba3ec95908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdee999-4192-41f8-83fe-5f449464aad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b769a8b7-4bc4-41bf-b220-59d7c4fe2fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8be9c1-30d0-4196-b625-d34ec037db04",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584aec9a-ddb7-43a1-ac20-b9d3d5a75b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c81ff4-49fc-4a14-9aaf-1f766aba5449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf8d9a8-c0bf-4b2b-9b93-b6faa4587d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f87dfc-a2f3-446d-930f-6350cd70be1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c79043b-88a5-4513-9f46-592a94e08d10",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4c1a12-6680-4e2c-aa60-5ac820d61cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0048b4ac-64a3-47bd-ae24-642a93209a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8941ec86-2861-4753-818c-41e9850cea37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133e1a4a-85f8-44e9-be90-964a7d952a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43d5ac6-bfd7-4d71-bc67-2510853bddcc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc94c923-1c8d-4dd9-b187-5837fd5ad774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "135ec0be-b5e9-4c3a-baea-a7e227c9d37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0629a48-db61-435e-bd76-c857e81e6f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6528ae78-7e80-4ac8-b7b5-f78417c84366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106dddc2-5cb5-4f0b-8ef9-891716fbaafc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3f32a8-75fd-4697-9158-94416720fd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9837048f-aee1-4eb6-a8b0-8ddd839c306f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746f7c57-18d6-41f9-b1bd-3d530f7f78d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c537f9bc-9cbf-46ff-8f04-270495ed0977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3833a1c4-ae3b-4a70-b1bb-868745bb30b1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762cc6e9-640c-49ae-8ad2-38e1831b5e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c6e408-e306-4437-8f7a-04e15af14813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59940ce2-3854-4417-8d98-7ce234400d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f91f44d-18a0-4c56-b81f-36b4ec6517d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56ef6ee-b8a5-4651-a776-ce0281dc1f37",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5e465b-0e5f-4b2c-b6c8-9c85f2252196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b2f07f-58fc-4636-95b7-8ed0c495d042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b9a339-4b60-4b25-b456-3de7b082d215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668961bb-473a-4aaf-8243-e5e7d79392cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2b8c37-a1b5-48e0-ad80-ed45f0129f35",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0d807b-b392-4530-a41b-b32bf49aa516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a8c8ae-2670-49e9-b97b-082d3de4a7a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c90468-ccd8-44ce-a773-5f90178521f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9acdffd-212c-40b8-9085-f87c79a64453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eed87a-a187-49d6-968f-ab5be44c98cc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3746950c-a07f-40e8-bf9d-f17be1f27aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52870bb0-ff3f-45a7-b5d9-57ecd8f7a2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6e5d61-e0a7-4f1c-b778-1de55369e5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0458c58a-141d-47db-b27f-5feda85b5703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bfffd0-ade4-427d-af4a-2d6c8330f6d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2978ef-1c20-498d-ae5e-37cc6e7286cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676d2ee4-eb39-4825-a355-9eb23fbf1674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01228c0c-be8c-4da6-afa4-296416bf12da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79176a8-3bf5-4f5d-ae37-299f4c094423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea847b9-01bd-4528-8554-22cb18981666",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6ae28c-58da-46a6-bb3d-ba010942a4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4a45ea-f3b9-4e19-b736-5f75aab814af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dde66d0-795a-4a3a-8740-74b96aefd8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e9c702-a373-4dfe-88e6-934afea527d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d33df0-784f-46f7-8ed5-bd58bf9f4af7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b915ee9e-350b-4936-8caf-9a3798fa274b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6751f6a8-62eb-4363-89be-548ce0a5cd2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ae993-af5f-41c7-a1cf-267efdc5a07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c93d276-6fbd-406a-b852-f02336a44be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b1acb2-ac64-40f6-98a2-9bd5ec2e03a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab3d3f4-0b74-4ff3-b084-926304f48619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9d4563-971b-4e73-b0b1-ac9d0dcc454c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d846d6f6-8a68-4daa-8afe-291a3ce622c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be3e4c1-7184-4649-9664-8782e263fca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697a94ba-0128-447c-b2d8-fb68deaa7f9c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10486eef-3dfa-4921-ad4a-2c416bef37c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8365be61-dc56-470b-a015-7620c5258172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34f0909-e630-4c09-81d5-1ebb05eddd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c95c60-3a38-43c7-99c8-60bed34788d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c8d7f6-f7b1-4d89-912d-2e851ccc8da3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e6a684-eb30-4f87-ba7d-c0b143d29be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b996b8-c2dc-4348-a7f8-6c1a834d980b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bbb752-2626-4c35-b5c6-f8d8320f1ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79882004-afbb-4d71-8da7-4e44f32143c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878b4ed2-0719-43fa-972e-11859ced0c6e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b865cb-a966-4a1c-b057-a1a2963cedf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ac5648f-221e-4164-912d-8968788a8ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066987e-6475-477f-846d-8a73abc25a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58e3431-d2b0-424e-85bb-a7b64f7539d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fe041e-555c-4165-b803-a3ba7e084757",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b5ebd7-1ff8-49ce-b43a-17978e28ab54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a884feea-88ad-4074-a05e-f919880b551b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72569217-65a4-458a-b3f8-8bfbbc5f9233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415dd76c-69df-4727-90d1-909e529112f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14470ec2-66f4-4a8f-a916-8144a5e90838",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6397b17-ef3a-449a-9fa6-0d1691ae20a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c30b04-c03b-43a6-9c57-7d6a773f8f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52db3e5f-5dab-4e7b-b96d-b5aa3b7b9b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817b7748-9cf0-486d-a600-d6f9f6b8adf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf247cc0-d1ea-4a23-ba0d-5a7c42eb11bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ce6ed0-cbf0-4f52-b7dd-de54355ad61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab030c8-f7f8-4db5-8b0f-005913efedde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a4b78b-a87b-49f2-9c4d-2f1531533229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88345c99-7b8c-438d-b16d-bd554acf4de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61301cc3-3101-41af-a4c0-a6aaeb85c527",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80dcc89-99db-405f-b257-431126e004cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6233edce-b75a-4b6d-abd4-dcc327d38eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900da1f2-b7e2-4011-85e9-25e6b844580f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ef66a3-7fcd-4e81-96dc-f0e6ce7e1cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a94696c-8421-401d-b871-ee2ea9de248f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d616e873-eab4-46fd-97f2-d2ba4a65838c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb2b728-f898-4f60-974e-124087f1fba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32165977-7ab9-4691-b38a-e9c050b9365d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9840918b-c14d-4c73-aad6-beb5530f246b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c4b2dd-c820-4814-83a8-d847b4a97726",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451e12b9-bbd7-416d-88eb-06a4033815b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa84a69-0f21-4975-9321-de5eefb9be69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920b464-9452-4f07-9b8a-fdd571abf9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f75bcac-17ad-41fe-902a-b9a23623bcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7a19cd-5a1e-440b-970b-d6d94a1e08d8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8dd81e-ef73-489f-a9f1-d4dd4758bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b7cbb0-3d0e-4d0d-bc85-5587e66e460b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c34d08-04a8-4607-8ce8-17a080c88dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da79ed35-198d-40e7-aaf3-91863d8d463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0459fdd1-cfc2-4724-b592-26735e16710c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3ebf7f-e7f3-418e-8997-d29df0cd58a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "271fd744-8692-46ac-b341-5fcbca0cac06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976050dd-5eb6-468d-98bd-2ca1f502bd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bb1658-a6ce-4039-aeef-41e5a1cdc3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14688c82-a977-45af-b092-b057a753daa8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de6062c-22cd-494c-8c3c-5df048d6a345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc3af244-a88f-4015-9e13-b77eb3bcaac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8767c1d-7f34-4127-a3b4-91623610d2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555976ec-1967-4139-9ef5-d79122f4b21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113b858d-a395-4c76-9670-cc1cfda96249",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d81c8-5363-43ae-bf8c-82f18f569428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e26956-97c8-46b1-9aac-4138ff599e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e136152-2362-4348-891e-1ffcf1bc1494",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7649f2d2-237c-43ac-9aaf-83689646d957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6592beaa-81ee-4dca-8e33-6a36956931ff",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc9cc54-98f8-4bed-a0a3-b71081689bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707cb30f-58d0-4c08-84c4-adc3c3163a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdc395a-9804-4f68-beb6-924c49211eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971f1913-1f86-401b-9c9a-3ba1dbee85e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e4795f-914b-4260-88c0-31f4853e1b46",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de23ced2-498e-468a-817b-3df774528157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b465be-61fb-4284-9420-9405bd222849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dc312a-7940-4de4-a21e-3a3c18e5d7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42092b3-3764-4c8b-b0fb-d7d68ec4226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c938fcd-9d4a-4d19-b6a0-3456e98eb040",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d72739-6b50-442f-ae11-86184263dcde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8495d72-f7ce-4c26-82f7-40e1013deca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5c823e-b023-4364-9b27-1268e9054f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ae5976-a6c2-4dc4-98c5-f4ab68155bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6e4172-a66c-4a2c-b09f-3c059ab38e62",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a3e72c-1263-4e8b-be7d-ccd9964d8f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6849aa-4060-4808-8cd2-96b01c815f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fbb31d-c286-4208-b7de-f26923db50e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e98e23-14dd-47d7-b2dd-2a9cfdad41e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482fbfeb-cbce-432f-b2a0-59528f034026",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccfd652-1abd-4043-abca-f670982a417a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ec052b-6a90-4fe7-9ca3-4be7cb5e2081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403df71-279f-4ea8-abf2-8b3427f9cb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563d5958-72ff-4161-aaa1-c2e606a72b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6291cfc-a869-4ce3-8db3-93c51e1816db",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7191af5-71a0-41b7-9fe3-0597ec60632e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ab0228-b80b-4602-89d5-5125434c0440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ca5348-8f57-473f-8b4a-fe10b7fb5501",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba91db2-4d7b-4a0e-ac12-811ca63159c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833f30ef-f9ce-4ac4-836c-ad00b5701a5c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637aa773-295a-49f7-8c35-cf8d3c9574e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "275d3ccc-d7ca-4e25-9041-5a048396dc71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557fd80f-a7b5-4180-a671-e2c6b2f85b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c5a1a9-cac9-48c0-bcc9-fd22a99c842d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1d20586-e65b-4945-82e6-71dd89955b85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cb43d55-ee33-4bb3-8fa5-d9212125f633"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca368690-1859-4c6d-8cf8-3e8087f7cd67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a324106-1ce6-4804-8de4-79f721f849c4"
                    }
                  }
                ]
              },
              {
                "id": "06e4b7c8-e852-433c-8de3-87649556bfc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7527007e-f8cc-45be-a30d-739fd0a0d24f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3774b753-7bdc-45fc-bf2b-112f88adabdf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c9b566f6-7856-453d-80b9-5eeb430b5e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1a3d6f-3de2-4a6c-8a01-5f31b8bc37fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37bac991-5dd4-4454-86b2-05f877fd5a5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27de347f-6bd1-4bcf-a820-834e5f50d5f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d09949a0-469c-4b99-b811-50095999e86b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c58eb556-2155-48f9-ab82-a2aadafc0011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82dacfe0-af08-4c0e-8435-83399ac9f638"
                    }
                  }
                ]
              },
              {
                "id": "451ff5c5-d4f2-4915-9553-e6d85d5c2c87",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f59787a5-35a5-45e8-99db-144ecb828db7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0fe5cb-477c-437b-bc73-903f06110980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f932ce25-337e-45ee-9c87-bf10a122710f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b74bf40-9a45-453a-a35b-c4aec7f395aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da4232e-4983-4d7e-8b73-fd9e559e85a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aeb25c51-7438-4cd4-88f7-c89bd33e264b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "98e7489b-75e2-4101-9f62-5cec5814c2e2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33cb6751-0a78-4c2f-ae41-b82940b3010f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b5ef0b4e-012b-4dc7-8e4d-a7b2bb6e47ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12fcb9eb-e7a1-4da2-8e0c-c55095d764d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31ec1364-4c3c-4c6b-bf55-57baab7429aa"
                    }
                  }
                ]
              },
              {
                "id": "5010032b-50b1-4429-bf5e-4e69e27e950b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ba3a7c6-72bc-443c-9fba-1cd02266fbbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "acaa95ff-9bad-4bd8-b914-66793cf6100c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7268dae5-73ee-4144-b070-2c198208f40f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "462ce88b-d16a-491f-98ac-0b2dbbd2b4e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abc6a29e-38d4-4bc7-bcd0-261eff77ee8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7d49fa69-1f93-4f4a-9439-413019116863"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d6791c1-1634-4fb7-b712-6e7420dd9ec7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe8e14a1-a63f-466c-b3da-605d9d6cb438"
            }
          }
        ]
      },
      {
        "id": "a519ae42-9cad-46cb-b67f-2c442359ce57",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e348ff34-3128-4b45-b93b-64a938eed4f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2550890b-67df-4602-b6ea-0f7055d737df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "394c2e64-6bae-4c6d-9578-5d63a8041378",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25788321-f7f9-4338-a3e5-9ecc0fc9702c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0f5bee38-05f1-49bd-a1f2-a23dca8ce1ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b74bfe1-78a2-48cb-a95e-fe73c7ddf1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30f9be13-9381-431b-b2aa-d01674e27989"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6226cee5-70d7-4db6-a649-0ea314a72f09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2977b250-2e7c-44de-babb-c5113b6cdbb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9740020f-4f5a-428a-a3e0-73bf1d612941",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2713d97-bdf6-409d-a78d-55444bd1ad33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa32de7c-c15a-4b4f-8195-0126e4d03baf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "be0736fb-f5e6-475d-9a02-7d156abae5fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e9bc87a-bdfc-4649-8a10-851cb7755f6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f91f857-8271-414e-ac7e-ff0a6b068d79"
            }
          }
        ]
      },
      {
        "id": "2f172a1d-40a3-4e61-97d0-9b3b0a2488c4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "05cf1ff9-5234-4963-af4f-dde487d1040b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce2e8662-cc9b-4664-8a0d-aeeec4d1fc38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28a1ed74-73f2-456a-a6d0-0bdaba0858b0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e514ac75-3846-45a1-af96-601649c9d02e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60b2121a-70ff-4b24-9bc5-bfbe28460b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a003e69-10dc-4007-91a7-488a984338bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "324a447f-e2e9-4169-a506-16db96236520"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d806d06-5ef4-4bd4-87ee-381c6e329a87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fa4dacf-2a49-4820-ab66-39b82409975f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "026d486d-0413-4b2f-95f1-65f48ede3b04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e94f07c6-3e17-4c2c-8993-8e99986362b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aafb314-43b7-4f43-9a74-e6091ae1a840",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5b1614b-9e06-496f-845f-7a20aab0a3d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70b676b4-351f-49a3-a5f4-bc8ddf6ce24a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4b5c827-7521-4909-b0a6-74aa6eeb2f21"
            }
          }
        ]
      },
      {
        "id": "620ad9e4-f6a2-4121-a5c9-ff412da8ce9c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "37d4cb8d-860c-4b5a-bf6d-a422095fdea2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14ceb8d1-0dd8-4721-9884-51ffe1de8a4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f9ea2488-2408-445c-a08d-d018a7c2a4b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d16da1-5970-4d23-b223-770456cac20d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c62552e-574e-47e1-aac5-a7a925a3cf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b236a2ab-0f1c-4e11-ab6f-2b245b9e3dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "055bff31-45c4-49b5-975d-4bffd842d6f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98b4c239-857e-4a49-a405-ce69561bdda7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc229530-cacd-4ff8-99a0-718c7ab4d9bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80ca4cbc-0521-4a46-a0e4-4acb9f72018a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "909cf854-fd64-4fd4-be2f-5a51a46a9c18"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f481430d-1d43-404f-97d7-9b56a431dc11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c299e05-0227-4675-aa93-2b25dd1a5622"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e345684f-8150-41df-ba22-e39ac96e03b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f06e1d-75fc-4f45-b1c2-626d5aa6fff1"
            }
          }
        ]
      },
      {
        "id": "e44e40d2-41cd-49a0-ae12-b4816f8b3cb3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "893e928e-0eea-49af-968d-2e1e6d1fb994",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "682db0ea-7f6f-4621-8ab5-6d4560f991ec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b7ebdb39-3adc-4373-9f61-86bb39667820",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f2265de-8f27-4f5e-8418-d11c7b86960b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "510e86c4-bb2b-4566-a342-5e72e3b1edb1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 169.20634920634924,
      "responseMin": 6,
      "responseMax": 10220,
      "responseSd": 871.9484777761791,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726447595036,
      "completed": 1726447645873
    },
    "executions": [
      {
        "id": "e98b9537-9101-4cc6-9e40-8149b0447f23",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6a413aa3-d943-45b8-a10e-a83c177d2a70",
          "httpRequestId": "9603faa8-564b-44e6-b006-4fb8585889f6"
        },
        "item": {
          "id": "e98b9537-9101-4cc6-9e40-8149b0447f23",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f72b39fb-f1e6-4d0c-a026-f922df338f1f",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "e81fd0f6-d5bc-4398-bf42-31cdcfe7a17a",
        "cursor": {
          "ref": "9d44732e-c6cb-4c76-be9b-7c3e6d55b977",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "473b5b11-e67d-4bcf-b2f7-a372bf9393c1"
        },
        "item": {
          "id": "e81fd0f6-d5bc-4398-bf42-31cdcfe7a17a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fa169b7b-f52b-4154-9c82-388240c734bf",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "46b76845-cdc2-4e76-8cd7-434ed71f6a4d",
        "cursor": {
          "ref": "db71d4ce-cf6d-4948-9c74-68446c7a9762",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "235b2072-3bf5-4c70-b8be-aa913327780f"
        },
        "item": {
          "id": "46b76845-cdc2-4e76-8cd7-434ed71f6a4d",
          "name": "did_json"
        },
        "response": {
          "id": "8fb0996a-ef02-447f-aaf9-14ddb35c3251",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb438da-9e64-4743-aef0-4af9054fdc67",
        "cursor": {
          "ref": "ac99401e-595a-4052-af8e-c84147970a11",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "33708b7e-a7d6-4137-8533-191163ab7767"
        },
        "item": {
          "id": "ecb438da-9e64-4743-aef0-4af9054fdc67",
          "name": "did:invalid"
        },
        "response": {
          "id": "0d2bcf85-88e1-42ec-9a4f-b0cc07a565e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb438da-9e64-4743-aef0-4af9054fdc67",
        "cursor": {
          "ref": "ac99401e-595a-4052-af8e-c84147970a11",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "33708b7e-a7d6-4137-8533-191163ab7767"
        },
        "item": {
          "id": "ecb438da-9e64-4743-aef0-4af9054fdc67",
          "name": "did:invalid"
        },
        "response": {
          "id": "0d2bcf85-88e1-42ec-9a4f-b0cc07a565e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492bdd21-92a1-4029-aebc-5c468f0a030e",
        "cursor": {
          "ref": "a354a5d4-1ee7-403f-bd89-c653742bc6c6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "550d5f47-d9ba-48c2-93a4-649b16de7512"
        },
        "item": {
          "id": "492bdd21-92a1-4029-aebc-5c468f0a030e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "16d2b37b-a0c8-4861-b1ee-d2c4a2d7835b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44af411e-9976-4b3a-b5ce-690d19286a7f",
        "cursor": {
          "ref": "04d475df-0200-48a3-8ee7-35fb51231934",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "442c4c87-1cdb-4093-bf05-d7d25edf4126"
        },
        "item": {
          "id": "44af411e-9976-4b3a-b5ce-690d19286a7f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7f5b3546-c018-431b-a8e0-e683a7689aa9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57579008-a6aa-4983-9836-5301db57f1d9",
        "cursor": {
          "ref": "ee4af00c-b785-4483-bffd-5285d4765f61",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4518ce26-5ba3-41f2-bb6b-950fd2f873b8"
        },
        "item": {
          "id": "57579008-a6aa-4983-9836-5301db57f1d9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6d142d95-1611-466e-9128-f596fd13ab3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11472be-898c-494a-a28b-096fab59044a",
        "cursor": {
          "ref": "8e1855f3-69a5-473d-9961-3081904b616e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7e3bdbd1-d686-46d2-aaa7-a81e407cf83e"
        },
        "item": {
          "id": "f11472be-898c-494a-a28b-096fab59044a",
          "name": "identifiers"
        },
        "response": {
          "id": "96cde8ee-43a9-4d54-8670-de220b5a1200",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4949dce8-0f6c-4c77-a1bd-673a0800c732",
        "cursor": {
          "ref": "cfff294c-c185-471e-aa36-5cc632770cec",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3777cd2f-9ccf-4911-a3ae-0af325a84212"
        },
        "item": {
          "id": "4949dce8-0f6c-4c77-a1bd-673a0800c732",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "040f4a10-9f4a-426b-9d59-f5ada20032b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b03c6-6ca2-4e3c-9336-648ed8781250",
        "cursor": {
          "ref": "3665a9a2-d066-41dc-a553-bc118c6907b1",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "98f8a7cd-4756-4fb2-92c3-445bd49af766"
        },
        "item": {
          "id": "753b03c6-6ca2-4e3c-9336-648ed8781250",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6b61d432-017b-4f50-b0de-bf519dab062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb18f8d3-4b87-4f23-8af0-8e798ebda29a",
        "cursor": {
          "ref": "4909117d-6d97-4c2f-8ec6-c021b3820d3a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0fec6b5f-f946-4089-977e-b5f98c6d9a4c"
        },
        "item": {
          "id": "fb18f8d3-4b87-4f23-8af0-8e798ebda29a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bc677248-d95a-493c-939c-3b37643e4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fafe85-4ea4-4683-a638-0f9c104ddf8c",
        "cursor": {
          "ref": "781ce083-69b9-4aa5-951a-8baba0c7331e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b9dcac05-3d07-41de-9740-41168a03bbaf"
        },
        "item": {
          "id": "c3fafe85-4ea4-4683-a638-0f9c104ddf8c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "36e4c93a-9ad1-4307-9df3-4f98fdf7e9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77a40f9-9c35-47c8-b1f3-a236e451b893",
        "cursor": {
          "ref": "562884f9-d3d6-4d15-8066-8e1eaa9dd31e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "80a981dd-d175-4d79-a316-3401d9ade139"
        },
        "item": {
          "id": "b77a40f9-9c35-47c8-b1f3-a236e451b893",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b2fc60fc-6399-4ca6-8625-8780e66ad75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42720719-fb24-4ecf-9177-0cb7f398b2c3",
        "cursor": {
          "ref": "66a8ae68-d2ba-4b77-ad38-a2a166a75563",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bab049e3-995b-49f3-af03-6766c20ccf86"
        },
        "item": {
          "id": "42720719-fb24-4ecf-9177-0cb7f398b2c3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "27505924-9264-4bfd-9862-38ff29213d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4eab470-41fa-4712-98da-62e61168b518",
        "cursor": {
          "ref": "f0aaf078-9bd8-4481-8aa6-134c139d4278",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "be7035a4-1e9f-438a-8bcd-a462fb8a8888"
        },
        "item": {
          "id": "f4eab470-41fa-4712-98da-62e61168b518",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "35c2d758-35fe-4cfa-8e16-9d1ae0752e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eab659-b71a-4076-8066-3d336b486b2a",
        "cursor": {
          "ref": "fc8b83a3-b8e0-4d11-bbbc-365fbc570195",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8f753fe3-2ed1-4f96-87b6-51d195b8095e"
        },
        "item": {
          "id": "d6eab659-b71a-4076-8066-3d336b486b2a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "67ac1c6e-dede-4dfa-9324-296cbb5a4a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a400690-a948-4a6d-8294-3047bea50bd2",
        "cursor": {
          "ref": "94c016cb-0d0c-4cb5-829d-3a47e8c316e3",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6a4b8dec-219b-42ec-9214-8be9b268deeb"
        },
        "item": {
          "id": "9a400690-a948-4a6d-8294-3047bea50bd2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "59766b34-5bb3-4771-8050-2eb92ad5ae74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea69de02-1083-4053-8ce4-79ea25a34359",
        "cursor": {
          "ref": "673b43dc-648f-4a85-b424-ed8d85b9b512",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f6ac5874-79fb-47a8-9b2c-c205eb77ffa1"
        },
        "item": {
          "id": "ea69de02-1083-4053-8ce4-79ea25a34359",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bd2405d8-30b8-444f-9e9b-2c36d135eaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0011f089-b52c-47f2-9ca7-16bd22dea8fb",
        "cursor": {
          "ref": "85a10d4d-9937-4b5e-ac45-fe09dce292fe",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "00c9a545-6102-4bd2-aa2c-9af93e0459d1"
        },
        "item": {
          "id": "0011f089-b52c-47f2-9ca7-16bd22dea8fb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b466c732-63f9-4bcc-980a-212d8d30e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e818b-a225-4873-b850-5b00a40af095",
        "cursor": {
          "ref": "cfdf866e-a281-4aa3-bb46-5a79a2951e89",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6c01f040-6ffe-4d3e-b49b-435778cec317"
        },
        "item": {
          "id": "418e818b-a225-4873-b850-5b00a40af095",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "980f316d-57f3-421b-a917-4098f6be28ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c99101f-ec9b-4eb3-b709-1cc520a934ee",
        "cursor": {
          "ref": "f9496a77-a810-4953-9559-3995fa675abe",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4676b391-e5de-40f9-b42f-cf6827c8668d"
        },
        "item": {
          "id": "1c99101f-ec9b-4eb3-b709-1cc520a934ee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bb61eb9a-0e42-4ce5-aaeb-738430514d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcd81fa-6c3a-44c7-bf7d-170b971f4034",
        "cursor": {
          "ref": "972e7968-2312-4dd7-8328-848f233d83ab",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be9c23e6-b9dd-4c78-af9f-59c0b12bf10d"
        },
        "item": {
          "id": "9bcd81fa-6c3a-44c7-bf7d-170b971f4034",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8e74b15c-dda5-42ef-9b54-d5f986188bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267f1a0e-d692-4ec7-ab54-46a842009b47",
        "cursor": {
          "ref": "d1042b6b-f88a-4422-a673-1a4516e5bda6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ae279e72-3be8-4bbc-8375-5947c46ef394"
        },
        "item": {
          "id": "267f1a0e-d692-4ec7-ab54-46a842009b47",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6cf4040a-85ea-4295-9c00-e00386b3649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a6bbd5-f773-4606-a854-553263e8fa61",
        "cursor": {
          "ref": "db4cd402-0add-46f2-bcce-2102a7e813aa",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "33d4ead5-a4e4-49e9-9caa-ac4d854d842d"
        },
        "item": {
          "id": "f0a6bbd5-f773-4606-a854-553263e8fa61",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a675cf79-9344-47e5-bf07-99c8f3baeae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3e38fa-9aa0-4742-9456-94ab93bb68fd",
        "cursor": {
          "ref": "1e4d9ca7-d8f2-4948-8e86-cb0e0a282a06",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b9beace3-a19a-4257-8fa6-f88c7a9928b5"
        },
        "item": {
          "id": "eb3e38fa-9aa0-4742-9456-94ab93bb68fd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "810b29b2-c246-4a97-931e-3e6b926fc451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0993c778-2386-4f48-bb57-d43c50831d72",
        "cursor": {
          "ref": "baa00154-8b71-4e81-8f28-cfec4f061a50",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da422a57-50bc-425c-8b03-274cf7aa7575"
        },
        "item": {
          "id": "0993c778-2386-4f48-bb57-d43c50831d72",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2baa0316-4b02-4f99-8d28-293af5d1d284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c9b9e-0583-4d67-a9b2-a1a149d3bf34",
        "cursor": {
          "ref": "9c88ddfd-10ef-47a7-b20c-af39d9229a32",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c4a68565-39d7-4fb0-985b-15493b17496c"
        },
        "item": {
          "id": "5b8c9b9e-0583-4d67-a9b2-a1a149d3bf34",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a238259-76d1-4f29-a663-a80ea8ca35ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03d2b2d-c26d-4aec-8b36-38ee0c919bb0",
        "cursor": {
          "ref": "efff18d4-30bd-48b1-ab79-4b9242db7335",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1aa16eaf-a581-459d-89b7-1a243d7a7fc5"
        },
        "item": {
          "id": "d03d2b2d-c26d-4aec-8b36-38ee0c919bb0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "75fa1231-0a05-4547-bf5e-17ba5627d279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8babee62-ce6d-4b39-92fa-90565d74690a",
        "cursor": {
          "ref": "74870cbf-5164-4b05-94d8-ecb8822f3950",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "31c14490-3e66-4fba-877a-eeca45cb3d16"
        },
        "item": {
          "id": "8babee62-ce6d-4b39-92fa-90565d74690a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "97b33963-af22-45a4-807e-006a1225ce37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7942ba7a-d76b-41ee-83dc-779e588bd661",
        "cursor": {
          "ref": "1e130073-6f37-42a9-91b4-742645c2d5e9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d14b86a1-5be6-4ec8-b8b4-2f50ba16d1ba"
        },
        "item": {
          "id": "7942ba7a-d76b-41ee-83dc-779e588bd661",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "23cac9e4-dcab-4dd9-a87c-c9e3b9e8e913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5d19c7-f33d-416b-94f0-403627802657",
        "cursor": {
          "ref": "7aa09f80-f151-4149-b594-d71d04b412a4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3fd79884-e7ee-4ad2-8d3b-456737b8e74b"
        },
        "item": {
          "id": "ee5d19c7-f33d-416b-94f0-403627802657",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "abb9be50-ae7a-41a7-9458-7cad9a3cc5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26866b79-78b7-4558-bd16-9168c742ec21",
        "cursor": {
          "ref": "a85ce733-8b3d-4f80-a433-f76c0b39cfd1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "29b2174e-07eb-447d-a5e5-8d4d0964efef"
        },
        "item": {
          "id": "26866b79-78b7-4558-bd16-9168c742ec21",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "41356841-441a-4e41-91a3-8e20295ffdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45575194-e473-4507-a8b1-74ae31c62838",
        "cursor": {
          "ref": "b3a0edee-8c15-4381-b76b-8ebdd990698c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e02313eb-524f-4c88-8692-e11cd7062203"
        },
        "item": {
          "id": "45575194-e473-4507-a8b1-74ae31c62838",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "40202b13-b906-40a8-9fe5-dbf178e2e42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1611594f-583f-4291-a377-2be7c02c5234",
        "cursor": {
          "ref": "536e89ce-e8d6-4e1e-8e49-485acba584a2",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a48fa155-22e3-4997-8576-62e7f3881f3a"
        },
        "item": {
          "id": "1611594f-583f-4291-a377-2be7c02c5234",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfb4dc40-b719-4514-9f43-98698df04e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63676abd-28d2-4eab-bfc5-4c41e0da30b3",
        "cursor": {
          "ref": "2da1d31a-62e2-4743-a0aa-8e858c6a276e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d72372a-4106-473c-a4d0-cf944c711dab"
        },
        "item": {
          "id": "63676abd-28d2-4eab-bfc5-4c41e0da30b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "06366e4a-9d78-4773-be9b-68d0fbc702c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8643b77-3305-40d3-9608-7515c84af3d0",
        "cursor": {
          "ref": "9f874adb-c454-4a9a-b810-f5edc602a1e9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "86879dc9-d4e2-4122-960c-612a96aad431"
        },
        "item": {
          "id": "d8643b77-3305-40d3-9608-7515c84af3d0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5da9be7f-9708-4009-9f6a-fb820f9dd484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00087d01-7d98-44f9-9a12-ec012aa72263",
        "cursor": {
          "ref": "6027b865-a7fb-43b5-acde-efe773a81b2d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "93a5c8dc-401d-43d9-bffe-333e6ceeb18a"
        },
        "item": {
          "id": "00087d01-7d98-44f9-9a12-ec012aa72263",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "79497fba-e03f-48d4-a0ff-a9c0cdc6a42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0089256-dcad-4404-8d26-1b5e4037caf8",
        "cursor": {
          "ref": "86a53867-ae03-41f7-b55b-fd001611eed3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6066138a-4cdb-4125-a082-76fa785b6c7b"
        },
        "item": {
          "id": "d0089256-dcad-4404-8d26-1b5e4037caf8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3f8304b2-3c1a-4b32-a669-39ae9516c325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac53f5-a16d-4e98-9ef1-90638cd8f644",
        "cursor": {
          "ref": "08cef785-d7ee-4693-81f8-7887ebfa4299",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3ab24042-035d-480f-8078-66b7b70190e8"
        },
        "item": {
          "id": "5eac53f5-a16d-4e98-9ef1-90638cd8f644",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "27ff13dd-d701-4bbc-9aaa-e88421c19bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4242632-e3b1-4adc-a717-04c3e90a0140",
        "cursor": {
          "ref": "251d8be1-cf9f-489d-b882-4997a2722d26",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "feb10ee9-3a28-4a8e-828f-2e238393d8ed"
        },
        "item": {
          "id": "f4242632-e3b1-4adc-a717-04c3e90a0140",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c48847f5-b92d-49a6-a871-24e358b53eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16e19b7-511c-4527-bcd5-d1a5905933fe",
        "cursor": {
          "ref": "6adb8345-ddd1-4d8b-95c2-809085730731",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5f2b412b-6553-4653-b277-a565894bab69"
        },
        "item": {
          "id": "d16e19b7-511c-4527-bcd5-d1a5905933fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bc568373-0f00-4037-8047-ed7549a32e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2271b54f-7593-4b8d-acc3-cd728581cb1b",
        "cursor": {
          "ref": "f9f457cd-c5ce-4b93-87a9-4568733271e3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fbb62539-35bd-4587-99eb-4b1979564269"
        },
        "item": {
          "id": "2271b54f-7593-4b8d-acc3-cd728581cb1b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "92329133-df28-448f-bade-547d2acec256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dae7c32-edae-4166-a841-cd219836fe44",
        "cursor": {
          "ref": "820dd322-c8c6-422e-8e29-61943fcd02fe",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f0780f28-ff4e-4770-a899-97dd2597a005"
        },
        "item": {
          "id": "4dae7c32-edae-4166-a841-cd219836fe44",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "58495833-4e22-47ab-bf53-6b6ded050ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b919ace-0b1d-45a0-9a7f-b9904f63362f",
        "cursor": {
          "ref": "4dd23047-e349-46f6-ba11-96f581195739",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a8baf8c9-9e2c-457d-8162-5effca144bd7"
        },
        "item": {
          "id": "0b919ace-0b1d-45a0-9a7f-b9904f63362f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0fa32dae-9da3-4b51-b4dc-5daba6c07008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7b175c-2b16-4805-918a-4ae56fc1dec3",
        "cursor": {
          "ref": "2e463c48-d1f1-4e6f-900d-e65ed6800701",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fe09464d-b0b7-4ab4-8906-1e284befdad5"
        },
        "item": {
          "id": "fc7b175c-2b16-4805-918a-4ae56fc1dec3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f3505ef2-0a6d-4280-a6f5-6d87a4a1f528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24723ec-1cbe-4319-abc1-a595dc678dfd",
        "cursor": {
          "ref": "551b6331-0a34-4ea2-98a5-3d8c1f1e0258",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b10da6de-c3a8-4090-ac8e-8a66e1887375"
        },
        "item": {
          "id": "d24723ec-1cbe-4319-abc1-a595dc678dfd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dbdfae94-c2d3-4fd8-8123-e5476ca15ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eaaff1-43c9-43f4-ae6b-3a2ad5f357dc",
        "cursor": {
          "ref": "41745402-ca96-4ded-869a-5d77d8e7e90f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f52617cc-727e-42be-bab4-9a7d7f228be4"
        },
        "item": {
          "id": "d6eaaff1-43c9-43f4-ae6b-3a2ad5f357dc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3bb7bb12-0cbf-444c-9a6e-104b933ca50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66b9c52-a742-4837-afea-610b49fbef39",
        "cursor": {
          "ref": "537344ea-8ab5-4fdc-9399-17263dba1db2",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "37c9c415-7362-4126-996b-2df59e607288"
        },
        "item": {
          "id": "c66b9c52-a742-4837-afea-610b49fbef39",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f0fb1744-f6e1-4b9f-916b-21ca83c14c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92663ae8-d1c4-4f3a-8393-ff535a3321a9",
        "cursor": {
          "ref": "ea67a7dc-2df0-4873-bf1b-f7a0fd1b8cc8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0678b05e-2d25-4547-a66a-61ec0665a7e7"
        },
        "item": {
          "id": "92663ae8-d1c4-4f3a-8393-ff535a3321a9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4de7ff37-52d1-4915-89e7-e8bcf92f8eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ba8fd2-ecfe-4c99-a79d-730995919768",
        "cursor": {
          "ref": "73683e5e-efeb-489f-ba67-6af9cdd5d522",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f460ce38-db9c-4b30-8a27-6f205b733d7b"
        },
        "item": {
          "id": "62ba8fd2-ecfe-4c99-a79d-730995919768",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dc984097-b1ec-4cd1-a3d4-b26c31e23b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6260a47-822b-48a3-b5a1-fb4b7f7cb42b",
        "cursor": {
          "ref": "9b998a61-1c53-4239-995b-0055a7100eb8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f016c7fe-fed9-41a2-9fe4-97393094c85c"
        },
        "item": {
          "id": "c6260a47-822b-48a3-b5a1-fb4b7f7cb42b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "659daf09-0f58-40ec-857b-355bd9419b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616ff7be-9bb4-43d8-a039-a05da4a75de9",
        "cursor": {
          "ref": "275ca2d9-fee3-45fc-a65c-ee46a6871094",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "de90fd2a-1fca-47c9-8cf7-0cc8e2c87fb8"
        },
        "item": {
          "id": "616ff7be-9bb4-43d8-a039-a05da4a75de9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "309c1fff-54c1-443d-ba2a-ca53bb918db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e4a08b-b325-4dfa-9866-95e3b5ebda15",
        "cursor": {
          "ref": "0152fe3a-2a49-4843-b6d4-7406f8086bdb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "509773e3-0c75-48f1-b172-2a395d1a3446"
        },
        "item": {
          "id": "60e4a08b-b325-4dfa-9866-95e3b5ebda15",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7d1859d8-0325-4547-91ed-68d75754a0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e99ac89-d97f-4d55-b52d-22993e10ec8b",
        "cursor": {
          "ref": "c34c2718-ed9f-4366-8fc9-58a62ac8a030",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9f14e02f-cb25-4cc5-ac8f-4246dd11bf70"
        },
        "item": {
          "id": "2e99ac89-d97f-4d55-b52d-22993e10ec8b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6a351bb8-b508-4654-a436-b0e6355346a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143df4ed-67cc-416f-911c-ee93b11a0f18",
        "cursor": {
          "ref": "4d71e355-12de-4a45-b406-29a312a1fa39",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dbf7f256-3a71-49bb-ab46-b60c17589f12"
        },
        "item": {
          "id": "143df4ed-67cc-416f-911c-ee93b11a0f18",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3fa80f9a-9d9a-4b98-85de-88f33e1bfb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a997dd31-38b4-4e03-87ff-4fc3ccd26ec3",
        "cursor": {
          "ref": "a94ed8e0-8846-4fc4-a068-f71728368bdf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e93d2d79-aab3-48ff-abb9-258938d3cd01"
        },
        "item": {
          "id": "a997dd31-38b4-4e03-87ff-4fc3ccd26ec3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e21ba49c-6e87-4300-aa01-a1d4ae763ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65acf25-c16e-4f75-92c7-21e20f8bc9ae",
        "cursor": {
          "ref": "6608e1bc-381f-4965-80c7-2f4a28f1d92a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7c2e5650-1cd5-4d0b-92d0-9a818e457f85"
        },
        "item": {
          "id": "b65acf25-c16e-4f75-92c7-21e20f8bc9ae",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7fe0e71b-7073-487f-80a7-e739eae393c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b120ea3-46ad-447a-a7bd-1dec74e53fca",
        "cursor": {
          "ref": "7640a100-dea5-4919-a3ba-4fb03e68a66d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "531ef74a-5331-47d7-921c-1db1db7897fe"
        },
        "item": {
          "id": "5b120ea3-46ad-447a-a7bd-1dec74e53fca",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b4d1e9da-1f96-4005-83d0-559ede0cb54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f927465a-3992-4855-871f-a24dc41a659b",
        "cursor": {
          "ref": "25ac2243-6e2b-4848-ae01-47c2bd60afea",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f3edd23c-12f2-49a0-a323-2d00ee7c33d4"
        },
        "item": {
          "id": "f927465a-3992-4855-871f-a24dc41a659b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f99abf17-2c04-441a-b507-749c2ebf3c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f293e46-f827-414e-9480-b2f687fa1eb2",
        "cursor": {
          "ref": "4c72ffc9-30c3-41c7-8b7f-3dbae8b59393",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6c6cb3e5-c262-4822-b580-114c06c7887b"
        },
        "item": {
          "id": "5f293e46-f827-414e-9480-b2f687fa1eb2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d866c40e-1a96-4e37-9619-2178e5469478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4460d37a-1c47-426b-9241-2a673eec6cda",
        "cursor": {
          "ref": "c91312a6-7259-4c9b-868d-8648f86fd01a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2b5dcd0a-35d5-4c98-ae3e-4aeb9065622f"
        },
        "item": {
          "id": "4460d37a-1c47-426b-9241-2a673eec6cda",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "79da1afa-080c-4f14-9290-7ccc74202de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5ea71b-4bfd-442a-9012-3eadbe4b1ab6",
        "cursor": {
          "ref": "723d8707-e921-4b00-8a55-ff59b43ffcf3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b6c8aef7-0067-40d5-a2ac-b811517cc027"
        },
        "item": {
          "id": "5c5ea71b-4bfd-442a-9012-3eadbe4b1ab6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "62e28a0c-2da5-4c61-9207-28d11fb529ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231a881d-2a8d-466c-b2bd-17dadba3fd45",
        "cursor": {
          "ref": "eeb6c999-89a7-4350-8d12-d9db1b6ff028",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "77f2f892-8f4c-4412-94f9-9f8a542f771c"
        },
        "item": {
          "id": "231a881d-2a8d-466c-b2bd-17dadba3fd45",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "82ed67c8-f7af-4799-855f-8bd162742c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb0a5d2-3e5f-4a27-b937-2ba987a3c7e8",
        "cursor": {
          "ref": "974bc636-c6bc-4942-bf05-6f7bb7abdbd4",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a46c449-c339-41a6-94de-91a3c5d77477"
        },
        "item": {
          "id": "adb0a5d2-3e5f-4a27-b937-2ba987a3c7e8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "983a94cb-b02f-47ef-8818-603c272a72d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df26f416-ec3e-4156-8f2b-38e8fe7439aa",
        "cursor": {
          "ref": "9113ad28-0f73-4f6b-adda-48a18903fd2c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a14f8d00-7a68-4944-b74a-3ac4e2d54b22"
        },
        "item": {
          "id": "df26f416-ec3e-4156-8f2b-38e8fe7439aa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8cca9acc-8e0c-404f-a66b-93127300cf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8ede9e-3796-4b33-930a-55bf5df8b529",
        "cursor": {
          "ref": "191f83a3-7a52-4adb-860b-5efa692a76af",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c53ec8d4-d95e-45f7-a8a5-c67ec7c40d53"
        },
        "item": {
          "id": "5b8ede9e-3796-4b33-930a-55bf5df8b529",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ea844c46-9e87-4dba-a58b-61ada0a0711f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbd580f-a2f2-405a-a289-cfe7dea906c6",
        "cursor": {
          "ref": "0bcacf17-7670-4e30-8bcf-b12cae98df23",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5f8b3495-eb13-4b85-86fe-324c403a9129"
        },
        "item": {
          "id": "7dbd580f-a2f2-405a-a289-cfe7dea906c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "785db65b-d1dd-47c3-9572-c41a97e6c44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633c92cb-2e9f-4203-a307-455b68decd92",
        "cursor": {
          "ref": "ec24392a-3159-4af0-9e4b-c325c49276eb",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fe7d2c8b-5055-448f-9c85-84f31f584eed"
        },
        "item": {
          "id": "633c92cb-2e9f-4203-a307-455b68decd92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a7c9cfb-a752-40c0-819b-d997cda6804a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c470e7b9-34fb-44a6-af0d-02a787c3a23c",
        "cursor": {
          "ref": "b78ed371-1953-44e8-972d-49b3572f7403",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ae70a2fc-c401-4af0-951b-c280f839a6ee"
        },
        "item": {
          "id": "c470e7b9-34fb-44a6-af0d-02a787c3a23c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b3bebb83-da20-4ab0-8f25-e4e52d35275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf06d59-178e-42d3-93b0-b64bf7ad708a",
        "cursor": {
          "ref": "b852635e-6a59-4466-ac98-ed0df7dcea91",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "49138d35-5cac-4ffd-b2cf-f01c7d9f7d38"
        },
        "item": {
          "id": "faf06d59-178e-42d3-93b0-b64bf7ad708a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "821d10cc-8625-49ad-badc-0a9855819fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7601b4e2-a817-4d58-a1f1-f9ce207deda8",
        "cursor": {
          "ref": "7843d5b7-f45d-4643-858b-887809b35a5c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "50197eee-aaa9-4b13-a1dc-eecf3f7ca12f"
        },
        "item": {
          "id": "7601b4e2-a817-4d58-a1f1-f9ce207deda8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fbb4fa26-3f27-43cd-8619-21fb72d1ce10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ba7878-67da-4350-809c-ffdc165e83e1",
        "cursor": {
          "ref": "53663475-f950-4c04-95ed-28de8fd7cf60",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d360b689-eff5-4001-9d8f-dd62f5b21d52"
        },
        "item": {
          "id": "93ba7878-67da-4350-809c-ffdc165e83e1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a13b36f2-a636-428c-b9c4-3945031fec98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb7f955-bcd8-4e9a-9a64-a44ecffbfa31",
        "cursor": {
          "ref": "9e973b00-6e75-4156-bb34-5179a40db3da",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4a75edfa-314d-49d7-8be8-d710a84fa99a"
        },
        "item": {
          "id": "cfb7f955-bcd8-4e9a-9a64-a44ecffbfa31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "38f5731c-ee0c-4296-9db9-2083a13aff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a19dad-23d4-4f37-809c-06236c97fecc",
        "cursor": {
          "ref": "679f5b08-6016-499f-86db-d02f2f640a5b",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f8d2e309-1f8e-4624-b89d-3a7ab5e15303"
        },
        "item": {
          "id": "94a19dad-23d4-4f37-809c-06236c97fecc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0f53635c-efb6-4999-8fd0-2b0c0af5d400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e1bb4-d8d8-45ee-8d37-40ab07694091",
        "cursor": {
          "ref": "f88c7f82-9707-4b51-bb06-49bb8fb5f647",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "def8b1ad-14cc-4164-97da-c2a4a267f649"
        },
        "item": {
          "id": "160e1bb4-d8d8-45ee-8d37-40ab07694091",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c60f012f-f6c0-4238-b10f-d82204d5ef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd51e558-d8c7-419c-917a-d85dfbbb8d35",
        "cursor": {
          "ref": "fcee177d-f4ca-45a8-8f7e-39712e30c691",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4ce6dc57-2cd4-4f98-abc7-e85f97ff5d73"
        },
        "item": {
          "id": "fd51e558-d8c7-419c-917a-d85dfbbb8d35",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1966238c-9bd8-48ef-b9ae-e1f028d542fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa62271-b97f-4caf-8745-556886a24fcd",
        "cursor": {
          "ref": "abf4dc51-ed3e-4220-a835-bf9479208ba4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "27f686df-b433-4969-9d5b-9022ac0f8448"
        },
        "item": {
          "id": "eaa62271-b97f-4caf-8745-556886a24fcd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f7f8201f-c0e3-449c-a505-5dae6231b5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31822f3-e965-4e35-9e00-f5983741a432",
        "cursor": {
          "ref": "4ea2ff5c-6ee7-41b0-94a9-31d7a20dfb0e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d539a25f-5adc-48c8-ae8c-ad82ee3e1fe0"
        },
        "item": {
          "id": "d31822f3-e965-4e35-9e00-f5983741a432",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "198832b0-f07c-4ccc-98aa-f866d0c3dde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9bb383-c8bc-4647-b200-f60509049756",
        "cursor": {
          "ref": "08d3d8eb-9d72-44e9-935e-3c905b73fd16",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a0d51c6-d5f6-47ed-bf19-dd768cf4793a"
        },
        "item": {
          "id": "ba9bb383-c8bc-4647-b200-f60509049756",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a1757d36-4865-4696-86f3-9760dab179ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc537e5-10d2-43e0-8c28-ee2e5ebafc18",
        "cursor": {
          "ref": "06af093c-b5a3-4f06-af65-be717d49d6e9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4c176c18-019d-45a7-ac44-58b228ab1b82"
        },
        "item": {
          "id": "9fc537e5-10d2-43e0-8c28-ee2e5ebafc18",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cb8a02b9-b6d0-4670-83fa-7911c2fe6f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca731be-62fc-4456-a9c9-d4dd63ae3bb7",
        "cursor": {
          "ref": "0278626e-57ee-4a12-acef-976792b3eb8b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "df5c8536-95e3-4719-90e5-83f19dff6b38"
        },
        "item": {
          "id": "dca731be-62fc-4456-a9c9-d4dd63ae3bb7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "435c1416-44ab-44f5-9597-fb0d91b4a30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4565e339-b875-4fb8-a23f-43ef5de8caea",
        "cursor": {
          "ref": "94af3cd3-0f2a-470c-a474-0c44ac7fc6e2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "45f4e4b3-1e17-4cc3-b94d-052e984a5aca"
        },
        "item": {
          "id": "4565e339-b875-4fb8-a23f-43ef5de8caea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6a1aa751-3649-4c73-97c3-63a296d6c743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4a960c-fd56-4e82-acd1-e660395c1157",
        "cursor": {
          "ref": "dbc812c5-6627-40df-8b5c-a60cd847db4e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "41af16fc-fa16-456a-88d5-1b516634c7c7"
        },
        "item": {
          "id": "9e4a960c-fd56-4e82-acd1-e660395c1157",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0b570624-37ff-42be-bc32-5c6719fb1818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c22faec-8c1a-44c1-8080-554870aa92de",
        "cursor": {
          "ref": "6633bcc0-e2de-48cb-8593-72e11c530d41",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4230ffc0-b043-48a0-a967-0ab6c9928bbd"
        },
        "item": {
          "id": "7c22faec-8c1a-44c1-8080-554870aa92de",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8b94dade-e430-4d10-ad80-c89914e69b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448f074-860f-4adb-9ac4-1a3084401fe4",
        "cursor": {
          "ref": "5dd51aa4-b886-468b-b0ac-f60abbf6abab",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "77b9f4d4-6de5-43f9-9e09-35789b36b21b"
        },
        "item": {
          "id": "1448f074-860f-4adb-9ac4-1a3084401fe4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cf57f939-3a17-4e81-891f-3cf2501a5ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dec4af-b714-4747-b880-3a1a5559f7a5",
        "cursor": {
          "ref": "47d34e57-c6a4-4b0c-8f00-bef215f5d96f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "31a25303-4a9c-4eeb-9865-d620899a559e"
        },
        "item": {
          "id": "97dec4af-b714-4747-b880-3a1a5559f7a5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e7a2b64b-6d10-4bfe-92bd-7b4fad1fe33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9868e56-a4f1-4a1f-83ae-3d0f6dba805e",
        "cursor": {
          "ref": "2c7f251f-163c-4907-aa72-ac9635f1fecd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9b82ef92-ec23-4cb3-90b3-77837b6f25eb"
        },
        "item": {
          "id": "a9868e56-a4f1-4a1f-83ae-3d0f6dba805e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d8d0b913-f9a5-4509-820e-d1e7c2a83d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8df0c08-e7d7-42c1-a7b1-b07e41252dd5",
        "cursor": {
          "ref": "c3f6f3ff-3114-455c-9e3d-ac2bf6be3212",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cbe82056-0b3c-4ab2-a5c6-029a80d5bdcb"
        },
        "item": {
          "id": "a8df0c08-e7d7-42c1-a7b1-b07e41252dd5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d866082-0491-4030-8c60-53bf24d3a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd281ebb-6596-430d-aef4-39369bf81830",
        "cursor": {
          "ref": "eb3cec49-54c1-4ad2-902d-bf32587b5554",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e193a37b-40d5-46f4-bee4-6fb59d32ab8a"
        },
        "item": {
          "id": "dd281ebb-6596-430d-aef4-39369bf81830",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "250e2c3f-e9cd-48e8-8f13-2c9911c15c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6773a9-118c-4648-82cc-65e7d5f330cb",
        "cursor": {
          "ref": "6251028c-3450-4d8a-9d96-ce16a7f44dde",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2af3b997-e3ff-456f-ba8e-67f8b2b09bb7"
        },
        "item": {
          "id": "3e6773a9-118c-4648-82cc-65e7d5f330cb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "06ac83fa-d3cd-417a-b3c8-7ca6ff1a176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec5baa1-ba4d-4fc2-8514-0785a4407ee3",
        "cursor": {
          "ref": "3fe06ba8-8fb7-4c35-80be-41b513c90a3c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "574b2cb9-5e33-4f80-9aec-002b553e0ffc"
        },
        "item": {
          "id": "6ec5baa1-ba4d-4fc2-8514-0785a4407ee3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7d52f92-7085-4c71-8591-aaa9cc4f8e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e2e492-b7d2-45e2-acef-08a3a3f158ea",
        "cursor": {
          "ref": "ef9f2975-25bd-4547-b96d-33b3e8768489",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8a4d7265-2f04-4469-8579-14b0122ebe2d"
        },
        "item": {
          "id": "80e2e492-b7d2-45e2-acef-08a3a3f158ea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9ce705a6-a51e-44ac-812d-621e584c57d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c5246d-e7f1-4540-882c-66b4555b8856",
        "cursor": {
          "ref": "dccfc498-ed04-4fbe-9737-8e55d1463235",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "521650ed-d748-4884-a309-adfa7abee660"
        },
        "item": {
          "id": "85c5246d-e7f1-4540-882c-66b4555b8856",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ec91184-1fe4-4ddc-8bb4-11986744e9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7115a367-411a-4b2e-bed5-9c9b1be8658a",
        "cursor": {
          "ref": "86668efc-f418-4d73-a9a5-e6356d4cc7bd",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b963a932-1c8a-4a88-9b49-d93dceead520"
        },
        "item": {
          "id": "7115a367-411a-4b2e-bed5-9c9b1be8658a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c9d6f7a2-0737-4b68-b436-aba9553ec04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2feef7-7c3e-4e95-a3bd-9a1762a14176",
        "cursor": {
          "ref": "36ad07e0-9481-4f61-a737-8bd7c786b9c2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4705f11c-debd-4000-b44d-0f3e392974f5"
        },
        "item": {
          "id": "2a2feef7-7c3e-4e95-a3bd-9a1762a14176",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "11da9dc6-14be-44f5-88b3-c2b151dd0650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712683db-298c-411f-a178-c959200d0f04",
        "cursor": {
          "ref": "11997b60-b894-454e-9627-37fcb6737695",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5d8f0755-7982-4cd1-a051-bc2089889122"
        },
        "item": {
          "id": "712683db-298c-411f-a178-c959200d0f04",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f59c44bb-ab48-4c41-94af-1af5bb066fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91851078-7b76-489a-a296-52cd532a0505",
        "cursor": {
          "ref": "f5729c53-05ad-43fe-8770-cf2525d5b3f9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "67c996ee-5784-449f-9459-642abd6e428a"
        },
        "item": {
          "id": "91851078-7b76-489a-a296-52cd532a0505",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "edd7158b-30d2-4ec9-85c8-c0f4f75f7fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fd5ba5-83b6-4331-ae23-69c34af30bf7",
        "cursor": {
          "ref": "47db3875-bb96-4142-90c6-fa5ad4319b5b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0480378d-dadb-411d-a524-24c1d66cf8b3"
        },
        "item": {
          "id": "c2fd5ba5-83b6-4331-ae23-69c34af30bf7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9a0387f0-376d-4496-b74f-20f78f2e1b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa888c-bf07-4b7a-b20b-f0fead92b5e1",
        "cursor": {
          "ref": "069045cd-59a5-4ae5-9774-c5d8b3166e11",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c66a9f6c-ae8b-4fa5-aa61-ff3f2950c5df"
        },
        "item": {
          "id": "39aa888c-bf07-4b7a-b20b-f0fead92b5e1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "adc1529f-896a-4786-93e2-a7307b9d98e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c62790-9472-4a92-96bf-b920405f7839",
        "cursor": {
          "ref": "ac92fc14-c33c-4a19-81b9-dd3cd987b57b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "70ba2212-e714-4b10-ade4-95b4ce3b12a3"
        },
        "item": {
          "id": "42c62790-9472-4a92-96bf-b920405f7839",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ceff4108-ca31-4242-87e5-29c730082592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1023a8ce-555e-4886-826a-6c18a078ab1f",
        "cursor": {
          "ref": "a62f031a-ddb5-4cde-855c-16d3d8e2743f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "168ffd4c-3899-4616-b9f4-cc8f4d22d7ef"
        },
        "item": {
          "id": "1023a8ce-555e-4886-826a-6c18a078ab1f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b67ccb39-2ba6-4f7f-b75f-5b278bb3b130",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393fba8e-8f67-471b-bbc1-9f876fda90cf",
        "cursor": {
          "ref": "e5d4f09e-9f5c-4c31-8dbf-a79b02d0300d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "feec371e-06c2-417a-8baf-3b189a7a5b12"
        },
        "item": {
          "id": "393fba8e-8f67-471b-bbc1-9f876fda90cf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a4540146-2223-46c1-881d-2f99d7c71ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5e1d85d4-e7cc-4448-825b-34df84d7d8dd",
        "cursor": {
          "ref": "40825042-2baf-43f9-8f7f-0082a75cb873",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "383e7f64-15fd-433d-a105-7f905f9b52ae"
        },
        "item": {
          "id": "5e1d85d4-e7cc-4448-825b-34df84d7d8dd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "784d3572-6505-43cd-a94e-053432a5c687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6d500b53-42af-4dea-9aca-2fc2a5c31085",
        "cursor": {
          "ref": "a61a91c3-b8d1-48c5-a7d9-1919f2af5a2f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4b48abe2-90db-4296-903d-25d99ecd7c83"
        },
        "item": {
          "id": "6d500b53-42af-4dea-9aca-2fc2a5c31085",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c99485ac-3155-49b3-8f90-03adeb73b21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fe4f78ae-7231-4952-a578-304875c03c6b",
        "cursor": {
          "ref": "5d2b6ffa-c13e-4634-97ff-4b744485d959",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f1c313ec-bb2e-4813-b2ac-3f1c641db4cc"
        },
        "item": {
          "id": "fe4f78ae-7231-4952-a578-304875c03c6b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "189d5c9f-01b1-4b91-9728-53f284efbdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "425ca28c-30df-433e-a61c-a06f487489c2",
        "cursor": {
          "ref": "257fd21f-0228-4826-8d26-ec91a9f244b4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "216f783c-e80e-4679-909e-0782d9dec2ca"
        },
        "item": {
          "id": "425ca28c-30df-433e-a61c-a06f487489c2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0a7e6075-0c82-4d48-9d48-12f7e122aae7",
          "status": "Created",
          "code": 201,
          "responseTime": 10220,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a48d266-c310-4950-aad1-a272dfb451ac",
        "cursor": {
          "ref": "1f70ac15-1d53-4b0a-bf50-8fa7cd1a5790",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "64c1d381-9f46-403f-aefc-34a330815f34"
        },
        "item": {
          "id": "6a48d266-c310-4950-aad1-a272dfb451ac",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "992858db-dbe8-4848-9dda-d71184da4d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "5c50ca71-0899-4ad4-8331-6e1bb73a62c1",
        "cursor": {
          "ref": "402f0433-646a-4490-83ff-b757b65f324e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "62d3d910-f327-4458-8b51-3a305e369ab2"
        },
        "item": {
          "id": "5c50ca71-0899-4ad4-8331-6e1bb73a62c1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "695886c8-34e9-48b5-ac39-3e3688f15f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ec67679d-5a14-4da7-b224-87224383c21f",
        "cursor": {
          "ref": "a38e3b87-3d7c-4b2a-9d2e-7efb4ab619ea",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "aa2ac82d-4d51-41c5-a211-2674f811c834"
        },
        "item": {
          "id": "ec67679d-5a14-4da7-b224-87224383c21f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd123055-940b-4718-9288-adddae1d163b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8054a1eb-3821-4a31-978f-2360ba79d602",
        "cursor": {
          "ref": "ae682dfc-ca12-4fc8-b5e6-e6425383a0ee",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6704fff2-7475-4586-bc73-5037f4e99632"
        },
        "item": {
          "id": "8054a1eb-3821-4a31-978f-2360ba79d602",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7bbf4b7b-1cd8-45e1-9f24-ca1132193a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7306a851-7d55-4845-882a-69504ddb3388",
        "cursor": {
          "ref": "fbabe1e3-3ada-4939-8120-ba9715f79ece",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2082f34b-d011-4032-86d0-f04bd434e7e0"
        },
        "item": {
          "id": "7306a851-7d55-4845-882a-69504ddb3388",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a798c3b6-08d5-46c5-94f6-8d7950c95684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba930f7b-b24b-4e2f-a181-e3cdb51d145e",
        "cursor": {
          "ref": "98526600-8dba-4e90-9e03-74640d511266",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1224c64b-532a-4a97-a41a-79cc890e522b"
        },
        "item": {
          "id": "ba930f7b-b24b-4e2f-a181-e3cdb51d145e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aa3e79a2-041a-4e0c-bef7-73699d5be2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fbda50-ee7d-4cab-8036-eeeaaf585e17",
        "cursor": {
          "ref": "556a4463-6217-4ed5-b54d-738728a2d229",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5c1132b8-93de-4b77-ba20-f5d85544fdd1"
        },
        "item": {
          "id": "12fbda50-ee7d-4cab-8036-eeeaaf585e17",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04c221ab-da69-474e-8a05-cd7fdb36f217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eb2740-fcd1-438d-8f17-eb2d98c114ca",
        "cursor": {
          "ref": "52379424-a05c-4a40-a919-ddb4d8c376a4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0ae59070-01e0-4799-88fa-d7709035148e"
        },
        "item": {
          "id": "17eb2740-fcd1-438d-8f17-eb2d98c114ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18c95bd5-029e-4d4f-a83c-997fb7317bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e04747a-3d10-43c6-9321-9e6f59c8a1ab",
        "cursor": {
          "ref": "d355f7cc-d951-47ce-88b0-70c2fbb3acf3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9d3aae6d-a0e2-45fe-bab2-692483852b12"
        },
        "item": {
          "id": "4e04747a-3d10-43c6-9321-9e6f59c8a1ab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5697acc1-6aba-4150-8b32-f2f59d99eeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a7fc0e-183a-4bb5-82d9-8fcc3908b7d9",
        "cursor": {
          "ref": "7cee5c05-e4e0-4985-be07-8304f4339e1d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "60464668-8ee9-43c7-8c72-1212fff3e104"
        },
        "item": {
          "id": "c9a7fc0e-183a-4bb5-82d9-8fcc3908b7d9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c8a58f8b-147d-429e-8dc5-c6a9e14ed76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2835d15b-6df1-435d-b34b-c738b05d16dc",
        "cursor": {
          "ref": "ff6c87d5-50e6-444f-b01f-c15566e3681c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3882b582-65a1-451c-9039-c073644f2374"
        },
        "item": {
          "id": "2835d15b-6df1-435d-b34b-c738b05d16dc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "caadc440-abb8-4b32-bbad-d97bd99ae666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9837409e-b038-4d04-aaca-8dcbee51831d",
        "cursor": {
          "ref": "12acac8e-3853-4356-b581-4e8c08650fcd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "44db0209-070d-43cf-ad35-a8ff13908053"
        },
        "item": {
          "id": "9837409e-b038-4d04-aaca-8dcbee51831d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a70ea385-75c0-48b0-b9e5-61d490d30de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db3f5dd-dde7-45a1-92af-72c00dd04ccb",
        "cursor": {
          "ref": "0e770254-ac2e-44b9-a704-e8f0b2d0c04a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9e89d02a-12f2-4a1d-8d5c-33fe3bf54039"
        },
        "item": {
          "id": "0db3f5dd-dde7-45a1-92af-72c00dd04ccb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e8c40ccf-984a-4daf-a1c6-f428d55447de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f5eb1d-7fb4-468e-9eea-7814c079a52a",
        "cursor": {
          "ref": "829cebab-bf2c-4fd3-a38a-901358c2eeec",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0516fd26-7692-4bba-8648-17725cbd8c16"
        },
        "item": {
          "id": "a2f5eb1d-7fb4-468e-9eea-7814c079a52a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e302303-2431-4944-bba0-7b0e6864d97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f04537-77f8-42e4-bdcd-d6e4daaa23a7",
        "cursor": {
          "ref": "e80380e0-7402-4948-897c-354e80cb28e8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cdd2fd57-6eb5-449b-bd58-3c93c2f43720"
        },
        "item": {
          "id": "48f04537-77f8-42e4-bdcd-d6e4daaa23a7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3e7b0c8f-8f78-42af-980a-6b9aec872180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b50939f-ec26-4f4d-b2fb-a909d5c9be9d",
        "cursor": {
          "ref": "2862a816-95ea-410f-bede-54efa4daeaea",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "08bf5974-29df-4203-af9c-0c933f67337e"
        },
        "item": {
          "id": "3b50939f-ec26-4f4d-b2fb-a909d5c9be9d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6430fee8-749d-46a2-9869-382d630a816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdd41c5-335d-488f-b8fe-195387401051",
        "cursor": {
          "ref": "cbb90878-b9df-4e1b-9192-67fbc0a7f879",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3527c318-c719-4b44-ac2a-46db65a36911"
        },
        "item": {
          "id": "1cdd41c5-335d-488f-b8fe-195387401051",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0a7699ec-ec10-4c7b-917c-93c0a8eb0c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c1ea2e-ecd7-4f93-a717-82b4ae7b28f5",
        "cursor": {
          "ref": "0cc2e4a5-c98f-4da9-a521-1bdb7d5bd823",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9b28eab1-6f48-4d61-b4f8-bea2d0702274"
        },
        "item": {
          "id": "61c1ea2e-ecd7-4f93-a717-82b4ae7b28f5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1f89a443-5eff-46a8-9f71-4fdf2a1342a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9b7104-0243-487b-b73c-7b273ad0539a",
        "cursor": {
          "ref": "110ba53c-55f7-44eb-986c-499ef6f7438f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c5b9c792-54c3-41fb-8f56-e37956cc2f9a"
        },
        "item": {
          "id": "0c9b7104-0243-487b-b73c-7b273ad0539a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "34da2e32-6f7d-4886-80ed-11ba474d3aca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "69ec7ab4-ca4d-4d3a-924a-eeeb214b1fbc",
        "cursor": {
          "ref": "6de50f37-411e-4712-b1b9-561fb232b9e4",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fe1fa11a-071e-48b1-89f0-ee52377db152"
        },
        "item": {
          "id": "69ec7ab4-ca4d-4d3a-924a-eeeb214b1fbc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c1150ba5-60a0-4c62-8ec3-a644a724dd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cdc23a-46f2-4ae4-bdb8-9b2e44f6fd00",
        "cursor": {
          "ref": "6ec08913-13f0-45fb-878e-d5f093123572",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "16cd2422-1ffb-49c9-93ba-53f0d12e21c5"
        },
        "item": {
          "id": "d9cdc23a-46f2-4ae4-bdb8-9b2e44f6fd00",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9cc703d0-1543-4d28-b589-5c692b5077de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a6d5a8-0812-47f9-acf8-8938ce564b07",
        "cursor": {
          "ref": "bd2a6101-94e7-411e-86fe-f53dd1e7f569",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a9ebc8f-3170-4320-b8f6-13d0cc209620"
        },
        "item": {
          "id": "72a6d5a8-0812-47f9-acf8-8938ce564b07",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea178727-0b0c-4998-b329-c81907d14775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ebebbe-f6e7-4c08-9dee-2bdeb89eea4c",
        "cursor": {
          "ref": "a384fd8c-0e88-4115-a69f-129370421bf6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4ae0d189-3d90-44ee-9f54-f5e0c4ee2a05"
        },
        "item": {
          "id": "09ebebbe-f6e7-4c08-9dee-2bdeb89eea4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "82e33b40-a04c-4fa7-8cff-c36446e80eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf87debb-0c66-486d-8ec6-eeaa3b893beb",
        "cursor": {
          "ref": "869c1092-f927-42f0-81e1-733e0c81ac86",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2c767595-45b7-4e47-8806-64dbdfc8a060"
        },
        "item": {
          "id": "cf87debb-0c66-486d-8ec6-eeaa3b893beb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3bccd7e4-c5a6-42bb-b660-047bbdec8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc8c433-cf2c-4bd4-965e-0c311700b364",
        "cursor": {
          "ref": "0f15a60b-7376-40cc-b901-efdeff6a351c",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ff6ae150-a859-47ef-ad2e-ca4602ea4b37"
        },
        "item": {
          "id": "8cc8c433-cf2c-4bd4-965e-0c311700b364",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1955ec20-5aea-48a2-b5a7-b4f4091da925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e7644a-d08a-4640-9e94-763f783c4ea3",
        "cursor": {
          "ref": "6eb3e0e5-dad0-49a9-95aa-b78e49acf734",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9761b9f6-58ca-48e2-a5dd-ab4fd8ae8e30"
        },
        "item": {
          "id": "d2e7644a-d08a-4640-9e94-763f783c4ea3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ec9f0b30-090a-4aab-8914-24f24fe1e77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86523718-41f9-4408-989c-4f494c51d3c2",
        "cursor": {
          "ref": "4e777b9b-e719-40ff-bd32-b39cc487bc56",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a2163119-c5d7-4f7c-bc05-cfd24df6071d"
        },
        "item": {
          "id": "86523718-41f9-4408-989c-4f494c51d3c2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f82b4373-d03d-4a41-9e1a-461d5e9d6ac5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 107,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "06376bfa-0aab-435c-9208-f934b8adf7d7",
        "cursor": {
          "ref": "72f28cf0-cf32-4e2b-b917-96495cc4ea2b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c530c705-7ade-4d38-9d6c-01c91b75ac1c"
        },
        "item": {
          "id": "06376bfa-0aab-435c-9208-f934b8adf7d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "086ecdee-8fad-4bac-b796-da57e622f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2874c6-5534-43b8-a7c0-1020aadabb97",
        "cursor": {
          "ref": "c0efddd2-348e-4392-9c1e-caecd5a60fbd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ce77c5b2-1708-4ad1-aef2-05c8c78521ef"
        },
        "item": {
          "id": "ba2874c6-5534-43b8-a7c0-1020aadabb97",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "be501a0d-e8e8-40bd-8607-56a88ff81344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5b4493-7a98-4760-befd-daf6da38305b",
        "cursor": {
          "ref": "b55a14f2-405f-4de1-b11d-ca42c8b7f47f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "293c8434-6f89-4de5-adec-203a35328f69"
        },
        "item": {
          "id": "de5b4493-7a98-4760-befd-daf6da38305b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dbcfcf5a-fe23-4313-bec0-426ebfcd6171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec181477-1faa-429c-b332-d87418b0b730",
        "cursor": {
          "ref": "b066a9df-832a-432c-b6cd-c250ac801e82",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a9038468-d395-4d86-86ee-69549b64fac2"
        },
        "item": {
          "id": "ec181477-1faa-429c-b332-d87418b0b730",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e8d7a56-e804-4c32-96f1-218fb6b0850f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6210ea0-68d6-4a13-a46a-1a05d76a5664",
        "cursor": {
          "ref": "b4219772-f6c3-49df-8796-f3dc74ddb31a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85c5264c-d986-420d-af10-36f8249edb99"
        },
        "item": {
          "id": "d6210ea0-68d6-4a13-a46a-1a05d76a5664",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1623cef9-64bb-43f7-bbdd-1c1a799c5b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12e8391-91f3-4ba0-b205-69d9555a0199",
        "cursor": {
          "ref": "5231a1d9-1425-4df1-9378-eab6ef73b473",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aa179f3f-8711-4a16-ab4c-df752500d760"
        },
        "item": {
          "id": "e12e8391-91f3-4ba0-b205-69d9555a0199",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c50b78ef-5981-4734-b936-f5b89f82a7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc26d5c5-3de0-4741-beb6-f5fddf07ff64",
        "cursor": {
          "ref": "812ed055-0cd5-464b-87b9-3bd5a71a3970",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e68401d7-234c-427d-a0ae-98ae2ddfcbce"
        },
        "item": {
          "id": "bc26d5c5-3de0-4741-beb6-f5fddf07ff64",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bc8dbbb0-e72a-4e01-80b5-64da7e7f5f54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "1aa59a33-10fa-4f0c-9b1a-58c5f9bf1834",
        "cursor": {
          "ref": "116f8e5d-0306-4672-bb54-b55ab3185a5f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f27fb440-c61b-41e8-b0bd-12ca668c0213"
        },
        "item": {
          "id": "1aa59a33-10fa-4f0c-9b1a-58c5f9bf1834",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "feff069e-c460-4261-b6c9-41d6bdb034d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f551cfe0-fd91-47b0-9da0-4e91ded37b96",
        "cursor": {
          "ref": "8eb3974d-302c-4389-a130-2d3aa9149dce",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e0ca61f1-211e-4691-a2e7-8fa05a39f55c"
        },
        "item": {
          "id": "f551cfe0-fd91-47b0-9da0-4e91ded37b96",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0c817e8e-a4dd-40c9-b7ff-afa17c579c7e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5e5f8430-a95f-46b3-90b9-1622f6f152aa",
        "cursor": {
          "ref": "ae27a504-09fb-444a-a96c-426317799f13",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "18302e28-520a-466d-9d08-3c034b8d47c7"
        },
        "item": {
          "id": "5e5f8430-a95f-46b3-90b9-1622f6f152aa",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9df7d170-a463-4742-a835-cb98f0ba326b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "719219b8-6d27-4ef9-9408-b0256c91ca11",
        "cursor": {
          "ref": "5b1fee1c-5700-4a4f-a876-3e6152468d80",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cd9b0fca-e911-4415-9385-7eea15ba41b7"
        },
        "item": {
          "id": "719219b8-6d27-4ef9-9408-b0256c91ca11",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4e34d040-4caa-49c1-9a58-47b08a955310",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "abf404de-12d3-4937-91c6-b423a61fd20b",
        "cursor": {
          "ref": "e935dc4d-5535-43f7-8de7-42cc6b5b0586",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8c9f614c-1761-4708-bc3b-73639bfddb2a"
        },
        "item": {
          "id": "abf404de-12d3-4937-91c6-b423a61fd20b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9853a1e0-c970-4632-a463-5c5105a3c79d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 104,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "4626ed93-2c67-418c-9a5f-27aafb45412e",
        "cursor": {
          "ref": "dff2b5e4-f32a-4687-930d-cacb2bfd4ab4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bf430a50-a459-456d-8c68-1e67206d18f6"
        },
        "item": {
          "id": "4626ed93-2c67-418c-9a5f-27aafb45412e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4a344409-908e-4117-bda1-e55652b09e61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28c0089-425d-44ed-a9ef-62a85851326f",
        "cursor": {
          "ref": "4e1d6b2e-5f65-46dd-966a-56672a07197a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9c41adcd-fb3c-482b-8d10-e104ca52e0d4"
        },
        "item": {
          "id": "a28c0089-425d-44ed-a9ef-62a85851326f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2e3a5c8c-e93a-44c9-b9bf-6460451ca6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aae6fd-b0cb-414b-b713-429dee1db9e7",
        "cursor": {
          "ref": "76551c1d-6a55-49fc-96e0-3855c0c55c3d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6aca0b87-0210-49a4-88f3-dfffb2d7f5b4"
        },
        "item": {
          "id": "07aae6fd-b0cb-414b-b713-429dee1db9e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "600de48c-899f-4432-ba47-d7ed4e0f1290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e27153-dfa4-4768-8087-24c20b0c5a3e",
        "cursor": {
          "ref": "afb16119-17ef-4039-b151-8615c6598eff",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fe174053-aadd-4ec4-99a7-85c2a9fc93f8"
        },
        "item": {
          "id": "33e27153-dfa4-4768-8087-24c20b0c5a3e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "388bc6da-40db-4d2d-bb2c-b983bd569140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329eb9c3-2aa3-4803-a93f-cc860aee0163",
        "cursor": {
          "ref": "34511d58-b3cb-4a0b-8b00-989ba25e4f02",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "00c75000-9d53-4186-bbbd-a57935f07ef7"
        },
        "item": {
          "id": "329eb9c3-2aa3-4803-a93f-cc860aee0163",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "09902f93-3cfd-42d2-9dd1-b925fb7a4057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b15c075-5de4-459f-8814-6e0fcded65eb",
        "cursor": {
          "ref": "85a74e10-5ded-4ae0-a91f-7dd3995bc0c2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d4f3bff7-9ac4-40fd-bd94-694be5758065"
        },
        "item": {
          "id": "8b15c075-5de4-459f-8814-6e0fcded65eb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "83db34d6-4399-4c7b-b17f-a7c3e7b04278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc41968-25b1-48cb-b2b9-ca49f8233567",
        "cursor": {
          "ref": "f0b54813-8200-450f-89e9-a112c33197a6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "74fcb121-7844-463a-b437-b454d16b4abd"
        },
        "item": {
          "id": "ddc41968-25b1-48cb-b2b9-ca49f8233567",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7026f913-66d5-4998-909b-604fc051b5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8ff9a3-119c-4efe-a5f8-bb9b32c42e2c",
        "cursor": {
          "ref": "4cee85c5-824e-4aca-a1c7-aaa55613501a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5a663e2a-bfcf-4566-b4f4-84a37cce940b"
        },
        "item": {
          "id": "4a8ff9a3-119c-4efe-a5f8-bb9b32c42e2c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "72ee97b0-5cbc-45da-a50d-78783cba1383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ab6cc5-4da0-444b-b81c-45204f4fe92b",
        "cursor": {
          "ref": "bba4805a-e19c-45e1-bf74-cbb4152a9eb4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e04b55ed-914e-4721-85e1-2a73de0aa30b"
        },
        "item": {
          "id": "06ab6cc5-4da0-444b-b81c-45204f4fe92b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bd428518-d9c6-4d42-b6c8-4467c59fbd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf499ab-0ef9-45cd-9704-e433a939b514",
        "cursor": {
          "ref": "d90baa92-98c4-4f2b-9443-67c14ccc1143",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "20afb7ec-4fdc-42f9-8c3d-d0d5d2ad2345"
        },
        "item": {
          "id": "2bf499ab-0ef9-45cd-9704-e433a939b514",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e6dba8ba-4eec-42b1-841a-188531f57d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8348d7e0-0b78-491a-b271-ccd9725ed931",
        "cursor": {
          "ref": "43eb500b-a7ba-47db-bdd0-ed9061019998",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "28351d90-9a75-4cb4-b60c-f9cbd9682bc8"
        },
        "item": {
          "id": "8348d7e0-0b78-491a-b271-ccd9725ed931",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "683e10f1-1060-44f4-aa73-307a0b963215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13601c44-7d7d-4424-a9ff-8ba380921286",
        "cursor": {
          "ref": "6a52783d-ab1b-4f6d-b5f7-fc3798a78f5a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6151c243-035d-4212-ada4-3324a46c23f8"
        },
        "item": {
          "id": "13601c44-7d7d-4424-a9ff-8ba380921286",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e202a0e2-42a9-4a73-8257-3e71e553b9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5462e953-6b7b-442c-87f1-fd317fa8df48",
        "cursor": {
          "ref": "84667f0d-1ee9-4fd8-b1d3-78ed70f6dfd4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0649a332-f03b-49ad-8e33-484a27101ebd"
        },
        "item": {
          "id": "5462e953-6b7b-442c-87f1-fd317fa8df48",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "19a57da1-da2e-47ab-84d9-9f790b99ac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da6f508-1f8c-4f60-9747-e597a35e25e1",
        "cursor": {
          "ref": "59a174ef-4283-4c19-b7a5-85e48d21ac57",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "73b2b914-cbbb-4cb4-8c37-9713e3838cc8"
        },
        "item": {
          "id": "5da6f508-1f8c-4f60-9747-e597a35e25e1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "03772887-4db8-4e26-af89-354484574e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4cf3b7-77fc-46e1-acff-bb614ec77dde",
        "cursor": {
          "ref": "cae31c37-9e2d-41b5-99d8-9efafd1a91b3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "88c0baa9-dee4-4807-a5a6-24956f4368b4"
        },
        "item": {
          "id": "3e4cf3b7-77fc-46e1-acff-bb614ec77dde",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a14c7995-c70b-4c0e-9eac-62827144695b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dbc244-ca86-444a-9057-73d7757995df",
        "cursor": {
          "ref": "b78326e5-0123-4c29-b0b5-2db8e01c3af2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f6359c09-4d8a-4c30-b10a-658eb5445460"
        },
        "item": {
          "id": "c5dbc244-ca86-444a-9057-73d7757995df",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bee8693b-e84a-432c-840d-9317ddcc7851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb82b233-ed56-4db4-81bf-17c09a847d59",
        "cursor": {
          "ref": "cd8ea216-dbbc-4a50-bb65-b2a0cf39ce03",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be6e2538-8f17-4d13-8dd4-4c200cd8ef67"
        },
        "item": {
          "id": "fb82b233-ed56-4db4-81bf-17c09a847d59",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "17904356-27ef-45e5-9d1d-ae18e1b7fa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95d79c4-9531-4bdd-9f29-094cab119d3d",
        "cursor": {
          "ref": "b8aa4da3-c9d0-42b7-ae6c-0a11d3a330fd",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f98af7a0-4106-4d0c-b865-90d9737d4260"
        },
        "item": {
          "id": "d95d79c4-9531-4bdd-9f29-094cab119d3d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "44450a1c-581d-4ee0-8fe4-8c4f5865ad4d",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "2271b694-ee32-4659-87fd-0d41ee567907",
        "cursor": {
          "ref": "39452327-117a-465c-96e2-f501504c1a7e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f63338f8-57b8-4190-ba15-7a256749f4ae"
        },
        "item": {
          "id": "2271b694-ee32-4659-87fd-0d41ee567907",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0b76b032-442b-4525-8527-96daa6cddee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fedc21-6471-43fd-8e57-82e3a61c8da2",
        "cursor": {
          "ref": "190c0093-1dab-4df5-8b59-11fb0b119039",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fb934bf4-d1ad-4f1b-949d-e57fd7cb4d56"
        },
        "item": {
          "id": "f6fedc21-6471-43fd-8e57-82e3a61c8da2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e7975f84-a7b5-4523-a3a6-49093f9b604d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ed612f-1ea6-40aa-a9d5-9a4f51aab52f",
        "cursor": {
          "ref": "56c9e89a-acf0-465b-a78a-cadfb0969a91",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e519dfdb-6847-4349-b58a-a8c9764eaeac"
        },
        "item": {
          "id": "93ed612f-1ea6-40aa-a9d5-9a4f51aab52f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "88d6f5a7-0beb-4072-8e7c-17f9437a58f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2d9334-bef1-4b4a-83c1-4b47c073f1cc",
        "cursor": {
          "ref": "a5274290-66ae-4ac8-a40b-a5235fe5eb50",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9d8b6594-1c15-4c31-b670-ba9de12ca8d3"
        },
        "item": {
          "id": "1b2d9334-bef1-4b4a-83c1-4b47c073f1cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "68f3ae3c-def9-4db4-a1bd-974770151af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9df0044-89b1-434f-9538-f88379b063f8",
        "cursor": {
          "ref": "cbb610a8-50f9-43da-a15d-9d2bbd21656f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac1651e7-367a-4d24-9d6d-d4ecb9eb6608"
        },
        "item": {
          "id": "d9df0044-89b1-434f-9538-f88379b063f8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d2906fcc-e0fb-41cb-bf79-9de2ed9e28f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d38cefc-7989-4ec4-aa1b-599913c404a1",
        "cursor": {
          "ref": "54338d29-c030-4ea5-ae73-d12eb12afd50",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "08b94277-95a5-46d1-ad53-d78cbdb950b8"
        },
        "item": {
          "id": "6d38cefc-7989-4ec4-aa1b-599913c404a1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c5f4a3d6-32a8-4c42-a630-3fdec57913d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905124ea-893d-4a04-ae5f-3986046a8e73",
        "cursor": {
          "ref": "90fbdfc2-cdcf-45d9-8fd3-16b65afe9163",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0969b4f7-20ee-4dd1-b0d1-64c266379e89"
        },
        "item": {
          "id": "905124ea-893d-4a04-ae5f-3986046a8e73",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8bd521f3-528e-481a-8091-9e0e2354aa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59922c4a-ea6e-4152-80ea-07c896e99076",
        "cursor": {
          "ref": "98008ebe-5f0e-4bbb-8620-a68c5abf6308",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "185fc58c-323a-4494-be51-d8816d7360f0"
        },
        "item": {
          "id": "59922c4a-ea6e-4152-80ea-07c896e99076",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "56576f6f-f68a-4cf6-a620-b1c8225459e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479ab237-d62f-480c-9e6c-da81f5a3971f",
        "cursor": {
          "ref": "19cb5236-548e-4232-b0f4-cd3ca762cd6b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b5e04c4-456b-46c7-a28c-15046fb33012"
        },
        "item": {
          "id": "479ab237-d62f-480c-9e6c-da81f5a3971f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "efa9df48-fa97-4eee-a615-f6e4cc71879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790fc6ec-281f-4631-a4d0-5bba72edabcd",
        "cursor": {
          "ref": "aa345c5e-182d-4770-8892-f52ac02aa979",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2049c6ae-e3bc-4753-85d2-2df3f06cd994"
        },
        "item": {
          "id": "790fc6ec-281f-4631-a4d0-5bba72edabcd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7784956a-0ea5-44ab-8e38-6ef0e562a66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a8cc05-a8b1-4c55-b5ee-335ecd1adba9",
        "cursor": {
          "ref": "e17c33d3-a3fa-45f3-b744-4f6bb797b14a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "29c6fe7f-f0dc-4282-8d30-555bbab912d7"
        },
        "item": {
          "id": "85a8cc05-a8b1-4c55-b5ee-335ecd1adba9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3c0422e5-90a7-4c2c-88cd-f5f0dd7cec2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf55d2a-4cf8-4db2-b975-5e915d8682e2",
        "cursor": {
          "ref": "a7d3c6fc-b1de-474e-a729-d8dc42ab8065",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5f1afd99-8f31-41df-b780-8df5614a20a9"
        },
        "item": {
          "id": "6cf55d2a-4cf8-4db2-b975-5e915d8682e2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8038fef3-3e5d-49bc-bf96-3aa6c30ec0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c44c938-0d36-4c7f-bc52-d2fbda0b9eea",
        "cursor": {
          "ref": "4ae59663-3c7a-4c07-812d-d5c78f18fbd0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4b2a4b8b-a04f-4df3-9514-d32146a4c28f"
        },
        "item": {
          "id": "9c44c938-0d36-4c7f-bc52-d2fbda0b9eea",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "77c504dd-62e4-49c4-9441-2a6be0eae0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faa919b-72d8-4304-a0bc-b475008b4f62",
        "cursor": {
          "ref": "8b6cdfa4-667c-4219-911c-5943e3531d16",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a4d6d4df-a0c2-4147-93ce-54330d73beee"
        },
        "item": {
          "id": "5faa919b-72d8-4304-a0bc-b475008b4f62",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2762b6b0-0bc9-4829-9480-1f8e2460e190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946ed45a-2afa-4619-81dc-916326cca387",
        "cursor": {
          "ref": "e52371ac-2424-47b2-8da2-74f0e2bf0ce8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bf96015b-dc45-4d3b-90a1-6ed4892a96a3"
        },
        "item": {
          "id": "946ed45a-2afa-4619-81dc-916326cca387",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "82aaa628-c81d-4b30-85f9-b415a5ee0b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e471be-2357-482f-aa47-468b20cf5738",
        "cursor": {
          "ref": "c4736f35-a06c-480b-be8b-672e2c5e44dd",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f9e39953-a38b-4900-ae28-dca253f17536"
        },
        "item": {
          "id": "34e471be-2357-482f-aa47-468b20cf5738",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7b4ad5ce-b481-4999-bd79-c9da079cf76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b424f8-56a9-48df-833c-9b5f39d3399e",
        "cursor": {
          "ref": "3f76208b-ff5d-458c-a433-62ef4afd2d9a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2cdb8af7-9433-410c-bdd0-962b935e93fc"
        },
        "item": {
          "id": "72b424f8-56a9-48df-833c-9b5f39d3399e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "30a1e342-1187-45c2-9b57-015295847881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c3de60-a5a0-4a6d-a817-8d042ab96220",
        "cursor": {
          "ref": "fa2deaf4-4aa1-41d1-99e2-1b2dae4dd262",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6ae1f36f-6278-4623-9b0b-1928e161d69e"
        },
        "item": {
          "id": "31c3de60-a5a0-4a6d-a817-8d042ab96220",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9fdae45b-31ff-4a9c-9a89-d7214191638c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf59643d-e2ac-4fc9-8991-e9e89dbd4c71",
        "cursor": {
          "ref": "3fedc7d2-17cc-4980-b47f-c4efaf3ed9ad",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ed824663-0a36-4bb7-9b3b-8cc05c5b9e56"
        },
        "item": {
          "id": "bf59643d-e2ac-4fc9-8991-e9e89dbd4c71",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e1c1e276-0bdd-490b-8536-0317625e41ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57af3f7-0cc8-4702-9501-ab6f768aed3f",
        "cursor": {
          "ref": "24dbeef2-dbe4-4f9f-927a-5e5bde8608bc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eb77ee90-6113-4496-a28e-6148cca1f248"
        },
        "item": {
          "id": "c57af3f7-0cc8-4702-9501-ab6f768aed3f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3c5e427d-25fa-4c51-a590-f8f1ca9b115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa7bac8-6f34-458f-9dc4-5a67dadbdaa1",
        "cursor": {
          "ref": "3b02e2c8-7695-42d2-8415-df56df1afb49",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d39a5393-ece5-43d1-b74d-467ca4724b58"
        },
        "item": {
          "id": "afa7bac8-6f34-458f-9dc4-5a67dadbdaa1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ea06a406-634e-4e53-ab06-2186014ad0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c7d416-ea38-4eb5-ac74-e87a60b82ce2",
        "cursor": {
          "ref": "41ae1028-0ad4-4b8a-8b44-59bd7f2c13d4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5a4b415f-b77c-4ca4-b3ed-d236beb1aa8a"
        },
        "item": {
          "id": "78c7d416-ea38-4eb5-ac74-e87a60b82ce2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c1199655-bad4-4c9d-acc1-d6cb86fa34b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663bd4a6-db25-4c14-a7f3-9af0fc86ede5",
        "cursor": {
          "ref": "e7c586ff-ea69-4914-9f6b-9b7f67f2d650",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b27438af-9d3b-405c-a350-f9678abf1489"
        },
        "item": {
          "id": "663bd4a6-db25-4c14-a7f3-9af0fc86ede5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "905a0da5-2a09-44a6-b912-14b4a3863d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fc7f96-0318-452c-a048-f33a02c6a21c",
        "cursor": {
          "ref": "b5b1c898-2f6b-492f-8404-034682c4c69f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "529e3fff-04c7-4cf9-ba9a-c84454790058"
        },
        "item": {
          "id": "90fc7f96-0318-452c-a048-f33a02c6a21c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1901e38c-0d20-4653-b9b6-026655cf184c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e21522-f41f-43b6-8034-14169a4162d8",
        "cursor": {
          "ref": "4d16a44c-9cf6-469c-9139-3a9961983338",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07faa631-1cab-468d-bbbb-d9319a8f7c38"
        },
        "item": {
          "id": "37e21522-f41f-43b6-8034-14169a4162d8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6aa0b5ca-d0f5-4448-9160-d363e4531d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f01961f-2489-4c37-8c3a-5f7ebc4a1967",
        "cursor": {
          "ref": "60400619-dd7a-4a39-81ee-4b479ec3db4d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b6e031ea-5708-4768-bf93-72cde6582826"
        },
        "item": {
          "id": "4f01961f-2489-4c37-8c3a-5f7ebc4a1967",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f7f2b98b-a7e9-46fd-aead-fde9b06341be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56245b98-4713-4d8d-98be-20b9b09c0751",
        "cursor": {
          "ref": "f14d5f5f-40a2-4a23-8211-d007c5a23fb5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "56cc6628-276b-4594-8cd0-c1569d65b9df"
        },
        "item": {
          "id": "56245b98-4713-4d8d-98be-20b9b09c0751",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3001fc7d-982a-42e0-a961-ee00ac646738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f96791d-90d9-4348-9c8f-812c4c909fb0",
        "cursor": {
          "ref": "4e888187-3893-4852-9717-d9f610d46e94",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "359d799f-c2a6-4746-81c8-15506e504e45"
        },
        "item": {
          "id": "9f96791d-90d9-4348-9c8f-812c4c909fb0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0be99ed4-7d34-44a2-b427-4ccd3724b2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3ab5f7-5d03-4872-bdbf-17276ffc058b",
        "cursor": {
          "ref": "1202290a-e0d0-4682-8c29-06730b2f64a3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1639da51-4d16-4f30-a216-6e7594226965"
        },
        "item": {
          "id": "9a3ab5f7-5d03-4872-bdbf-17276ffc058b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0a5e46af-f547-4ccc-a68a-c58f6337a653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec57264f-c9e4-4a25-934e-04efb1448869",
        "cursor": {
          "ref": "8040be4d-b673-42e1-9852-6e5361e6ae93",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "aab3bb89-58ec-4f74-85a5-3cff23d59c7a"
        },
        "item": {
          "id": "ec57264f-c9e4-4a25-934e-04efb1448869",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "76ec9862-b9ca-4ce4-bf76-3208969b3b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2404c193-d6e0-4b90-9943-20211dc9ea08",
        "cursor": {
          "ref": "cd130c90-bea6-46d3-bc87-a02c91b78860",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c46d69d5-c439-4640-a94c-75f71b8d55ba"
        },
        "item": {
          "id": "2404c193-d6e0-4b90-9943-20211dc9ea08",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5ccf5dad-5a78-4153-9241-baad03780575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d2b62d-ec18-4f7f-ba76-e4f11fa02310",
        "cursor": {
          "ref": "2c09de3c-bbc3-4827-9aab-a612ad84c233",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d8bdde5e-6112-41b7-a635-512a3168e3d4"
        },
        "item": {
          "id": "03d2b62d-ec18-4f7f-ba76-e4f11fa02310",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "020adba4-13bd-4e44-8321-66af561b83ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f83b899-b0a8-458c-8a5f-02c9f92694ed",
        "cursor": {
          "ref": "56cb160e-a414-4b2c-ab71-1c9a305a2125",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b81dadc5-1ec5-48e5-9ddb-ef3976ad04bc"
        },
        "item": {
          "id": "7f83b899-b0a8-458c-8a5f-02c9f92694ed",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ba6623b2-d0d9-425b-a782-1724c8c66bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753dbe8-f225-4c02-8c13-ac0368ac86a5",
        "cursor": {
          "ref": "81133c63-3c5e-4a1c-b728-070cc5be0d16",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7b5df60a-7e95-451b-9a5e-9765ea797e31"
        },
        "item": {
          "id": "6753dbe8-f225-4c02-8c13-ac0368ac86a5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "49362423-5072-4aeb-98fe-0ed5b47422fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddecf387-c225-4982-8f11-3bdad03ad0aa",
        "cursor": {
          "ref": "79cfbef6-ad14-4f89-98c9-5cbd72bb39b1",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4c4092fd-e0b6-4e49-ab65-d55cf2ad3cb2"
        },
        "item": {
          "id": "ddecf387-c225-4982-8f11-3bdad03ad0aa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "597b8cc4-41af-46e5-b2c6-f4f42ae4b780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ea3779-7c28-4e4b-adbc-dd019ed2d073",
        "cursor": {
          "ref": "6a7a90f3-d137-46fb-9d1d-624ab1107113",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "622f9adb-cdf6-4fda-8fb6-444cf3efb02f"
        },
        "item": {
          "id": "87ea3779-7c28-4e4b-adbc-dd019ed2d073",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d5f97f2c-2a7d-4fb2-90b2-ddb50001893d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61637d6-c6b6-4c9f-901f-44d6e29924af",
        "cursor": {
          "ref": "9e3a552b-55cf-4e38-9a34-497d5182aa1d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d742d9eb-e5eb-498e-bb2e-19ff675296d7"
        },
        "item": {
          "id": "e61637d6-c6b6-4c9f-901f-44d6e29924af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "735b5744-4ce7-49b2-80b1-6820dabd74c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934bafb9-60fa-4aac-b1fb-2043731c4ac8",
        "cursor": {
          "ref": "daef0c80-f51c-46d1-863c-8887f5576cb2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "82a671b5-6484-4ec6-977c-de56870725fb"
        },
        "item": {
          "id": "934bafb9-60fa-4aac-b1fb-2043731c4ac8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "22826d64-55da-4b07-9510-be6df3b0ac81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82787aee-46fa-4a19-8f7e-7f3913122655",
        "cursor": {
          "ref": "d9b4975a-cc49-41fe-a705-3fecf651da67",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fb64e2b5-ec74-48e5-bf8d-3544aa30a13b"
        },
        "item": {
          "id": "82787aee-46fa-4a19-8f7e-7f3913122655",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "efd511a5-58f9-40e8-8532-462ef4d2e10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d373a0f-9410-4a3f-af00-fe98e5390787",
        "cursor": {
          "ref": "a764f7ea-f144-4de6-88bf-fed7190a463f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4b933491-3a3f-4979-8665-e2d6d5939413"
        },
        "item": {
          "id": "1d373a0f-9410-4a3f-af00-fe98e5390787",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "777b8c13-bc77-4dc6-9af2-57622656cf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96590c26-d8b7-4efb-acad-3c49005a18a3",
        "cursor": {
          "ref": "d31a7c2c-6c77-462e-8d8a-c84581784519",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "057b7f98-a154-47a0-9a22-5cfaee252b4e"
        },
        "item": {
          "id": "96590c26-d8b7-4efb-acad-3c49005a18a3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4ebe8183-079f-4286-9383-f6c6c482e351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fbd06f-1e28-4dae-8e5c-40f4fdc32633",
        "cursor": {
          "ref": "03202783-d7a9-480e-b3f9-73398e628a94",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f35589fa-9949-4206-858d-f9dd2817cba1"
        },
        "item": {
          "id": "a4fbd06f-1e28-4dae-8e5c-40f4fdc32633",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4c3ed8af-ab21-4188-85d6-a4adb5ce27ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815c0fb5-dea6-4eb8-a00e-b67041e6aa17",
        "cursor": {
          "ref": "764118b6-4a8d-4ef6-92fd-53bfce9e4989",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "15e4635f-06ab-48c1-bc5d-3913de62b89f"
        },
        "item": {
          "id": "815c0fb5-dea6-4eb8-a00e-b67041e6aa17",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "180d77e4-eb59-4bbe-b63b-7e56b52b593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d864a5f2-719b-42fd-ba7a-e159f5df73a9",
        "cursor": {
          "ref": "9e772b43-cfa9-4c8c-a44a-c057e758f88a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "da93b418-52a7-48a2-a2df-3c95a0ae8dce"
        },
        "item": {
          "id": "d864a5f2-719b-42fd-ba7a-e159f5df73a9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff6e0e85-c513-463c-81d1-4ac387d1ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13399a0a-2129-4bf0-a5a2-b2b948640ce2",
        "cursor": {
          "ref": "81d1bba6-84dd-414d-901f-8f669c916775",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dc86d6fe-19b6-4d1b-a3ea-c499857a2be3"
        },
        "item": {
          "id": "13399a0a-2129-4bf0-a5a2-b2b948640ce2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0d74dd05-cff3-4809-8eb8-e3ae05d4a2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40963960-e0fd-45d8-a10b-82b1e0380db6",
        "cursor": {
          "ref": "37c545ef-2a90-4d8d-bfbd-50d83a4e72a5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "84784c90-0315-4cf1-8ce7-558ebf064224"
        },
        "item": {
          "id": "40963960-e0fd-45d8-a10b-82b1e0380db6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9d60a952-774f-46a1-9365-f9a08ef99145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25659332-67e0-40fb-a582-6e9c76f3ae0e",
        "cursor": {
          "ref": "e7e83044-9ec9-4ace-8d51-8c63a21e22bb",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "49749808-aae9-45b3-89ce-37707d4d0d2e"
        },
        "item": {
          "id": "25659332-67e0-40fb-a582-6e9c76f3ae0e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0d50affe-36dc-4b62-b6c2-a3646dcfd468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab58a019-b792-492b-b173-6a4a1ed10d02",
        "cursor": {
          "ref": "9c535576-434e-4098-8bba-6dfc87fd2174",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3da5c206-6d9c-4604-b74f-e36f4efc5235"
        },
        "item": {
          "id": "ab58a019-b792-492b-b173-6a4a1ed10d02",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "35789494-f1fa-4b81-8b46-9c74feb58457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8be9c1-30d0-4196-b625-d34ec037db04",
        "cursor": {
          "ref": "229674ba-881e-44eb-8702-b58d0976ce28",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ee284648-4083-4f8c-8995-1859c82379ea"
        },
        "item": {
          "id": "1b8be9c1-30d0-4196-b625-d34ec037db04",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ef4c569b-49c1-4a47-afd9-010d1b916d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c79043b-88a5-4513-9f46-592a94e08d10",
        "cursor": {
          "ref": "1b801d55-ed5d-4bfa-89c9-221efaba6c2e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f5d11899-34d9-4a85-9a00-d32637dbd316"
        },
        "item": {
          "id": "1c79043b-88a5-4513-9f46-592a94e08d10",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac6e32ae-435a-4ba8-904f-4a03d10d9e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43d5ac6-bfd7-4d71-bc67-2510853bddcc",
        "cursor": {
          "ref": "fd31a301-5c9d-4a8d-99b2-dff06b8bff5e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b691d74e-0ca9-438a-a2ef-513a8361c624"
        },
        "item": {
          "id": "f43d5ac6-bfd7-4d71-bc67-2510853bddcc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5867606b-7ff5-45e9-bf88-612440300359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106dddc2-5cb5-4f0b-8ef9-891716fbaafc",
        "cursor": {
          "ref": "b26540be-9b4b-4ddf-a5e0-08209b380765",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "061c6a3e-625e-4801-963d-de1f142b92f2"
        },
        "item": {
          "id": "106dddc2-5cb5-4f0b-8ef9-891716fbaafc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "588580e0-982a-4d2e-814f-5e735b302b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3833a1c4-ae3b-4a70-b1bb-868745bb30b1",
        "cursor": {
          "ref": "8abb3396-b5ce-40dc-b3f2-89bbb1149f78",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac913fdd-28be-4959-8eff-c5502d138f8b"
        },
        "item": {
          "id": "3833a1c4-ae3b-4a70-b1bb-868745bb30b1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0ef3370c-6ffd-4484-9829-d30cbf1b31ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56ef6ee-b8a5-4651-a776-ce0281dc1f37",
        "cursor": {
          "ref": "73ea3a46-6b89-4814-bfd5-1aafa4eceaa6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "243c3c1f-faf9-434e-a12a-7b1d23a80609"
        },
        "item": {
          "id": "b56ef6ee-b8a5-4651-a776-ce0281dc1f37",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "78381897-39a3-4515-8b8f-86db9dd1000b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2b8c37-a1b5-48e0-ad80-ed45f0129f35",
        "cursor": {
          "ref": "9d46e9dc-415e-4c1a-94aa-13a7759b917c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "854d9497-ca35-41f9-95a7-cd9295fbac62"
        },
        "item": {
          "id": "fa2b8c37-a1b5-48e0-ad80-ed45f0129f35",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d94c0403-a370-4bb6-b1e5-bc6b0051eb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eed87a-a187-49d6-968f-ab5be44c98cc",
        "cursor": {
          "ref": "76c4bf93-0af1-4f63-90e5-3050112fcca7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "49d64e55-f856-4227-8354-f67da14d916a"
        },
        "item": {
          "id": "34eed87a-a187-49d6-968f-ab5be44c98cc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f8c875fa-5c7d-45cf-91b7-98c15bcbd0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bfffd0-ade4-427d-af4a-2d6c8330f6d0",
        "cursor": {
          "ref": "8bb715e0-7329-4f80-9122-ce92b83f2c67",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f950771c-553e-4dab-a14a-e162b44ae104"
        },
        "item": {
          "id": "60bfffd0-ade4-427d-af4a-2d6c8330f6d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "52a5fd31-0274-4de4-bc57-4fa8863d0233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea847b9-01bd-4528-8554-22cb18981666",
        "cursor": {
          "ref": "86eee1c8-c37f-4b26-ade4-3a5a37fd1666",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "19c56a70-7bbd-442c-abd5-5f07d75be8f4"
        },
        "item": {
          "id": "5ea847b9-01bd-4528-8554-22cb18981666",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a196cc23-62a5-4c7b-bcd9-e8fc43337cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d33df0-784f-46f7-8ed5-bd58bf9f4af7",
        "cursor": {
          "ref": "9c6e8aff-94d5-4a3b-b149-714b6dbe548b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "358838eb-7982-49e7-b176-be1e026797d6"
        },
        "item": {
          "id": "10d33df0-784f-46f7-8ed5-bd58bf9f4af7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "76252dfa-0427-468f-9a09-47a663365cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b1acb2-ac64-40f6-98a2-9bd5ec2e03a6",
        "cursor": {
          "ref": "194c363a-51ab-470d-9ec5-5033175482b6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "46ff1caa-e9f7-48a9-b3cb-ef63f273ef29"
        },
        "item": {
          "id": "d1b1acb2-ac64-40f6-98a2-9bd5ec2e03a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a978d49d-0d77-46c5-a7e8-e0852060d74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697a94ba-0128-447c-b2d8-fb68deaa7f9c",
        "cursor": {
          "ref": "9d300a08-a41d-447f-8dd3-772e67fed800",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9a555ce7-28b8-40eb-af47-baebf5dbb701"
        },
        "item": {
          "id": "697a94ba-0128-447c-b2d8-fb68deaa7f9c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c4507acb-98e1-4e0e-b1a0-3870683c223d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c8d7f6-f7b1-4d89-912d-2e851ccc8da3",
        "cursor": {
          "ref": "ae3ccb14-570c-457b-84f7-806f458aa7c4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "51d61f06-7b08-466d-8aa4-069b8ee01990"
        },
        "item": {
          "id": "c3c8d7f6-f7b1-4d89-912d-2e851ccc8da3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b6b109be-c3e9-4e52-acdb-99b8b006f7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878b4ed2-0719-43fa-972e-11859ced0c6e",
        "cursor": {
          "ref": "8ed9eea5-b880-4921-af81-1252b08e45af",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b7945342-cebd-462a-99ae-e0d9e7a14f35"
        },
        "item": {
          "id": "878b4ed2-0719-43fa-972e-11859ced0c6e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "62a543a9-8317-420a-b009-236c95acf3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fe041e-555c-4165-b803-a3ba7e084757",
        "cursor": {
          "ref": "a2c74c4c-2f98-48ca-9785-49ebff2fd37c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec42f0a6-ed45-48e9-8d3d-77c671031a66"
        },
        "item": {
          "id": "a4fe041e-555c-4165-b803-a3ba7e084757",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0083f592-3599-4187-8984-bca2319ba9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14470ec2-66f4-4a8f-a916-8144a5e90838",
        "cursor": {
          "ref": "221a344f-0a21-40c5-8b7e-f5205af519a4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "29676a4f-1c99-4b2d-9b8c-48077fcb8e39"
        },
        "item": {
          "id": "14470ec2-66f4-4a8f-a916-8144a5e90838",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f5a5d697-3c78-4e52-b02a-2ff4e10df9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf247cc0-d1ea-4a23-ba0d-5a7c42eb11bd",
        "cursor": {
          "ref": "447227f1-dc74-4d57-97cc-e3bb68ac629e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6bb0c03c-5430-43c8-8ad6-899740771d75"
        },
        "item": {
          "id": "cf247cc0-d1ea-4a23-ba0d-5a7c42eb11bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b157d33f-4baf-4c0d-a385-6ff21e72a9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61301cc3-3101-41af-a4c0-a6aaeb85c527",
        "cursor": {
          "ref": "8358d485-0737-4a2b-8fe4-a129b6798389",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2e739d77-8f1e-4f29-8760-4081f14e7150"
        },
        "item": {
          "id": "61301cc3-3101-41af-a4c0-a6aaeb85c527",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8b854425-22b1-451a-8608-49e648180971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a94696c-8421-401d-b871-ee2ea9de248f",
        "cursor": {
          "ref": "1b970c5e-d7de-436a-b601-b65be3205cee",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cfff185a-567e-4619-995e-bc53310f4337"
        },
        "item": {
          "id": "9a94696c-8421-401d-b871-ee2ea9de248f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a19effa7-5294-40d9-8b2f-f8f9c2671690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c4b2dd-c820-4814-83a8-d847b4a97726",
        "cursor": {
          "ref": "05d4ecc1-de7e-4207-849b-a30dd336e0b8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fdae4953-6bfa-4fc6-ae9f-23cd756aaf99"
        },
        "item": {
          "id": "12c4b2dd-c820-4814-83a8-d847b4a97726",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c297a04d-c7e7-498e-8a8e-a9d0753995fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7a19cd-5a1e-440b-970b-d6d94a1e08d8",
        "cursor": {
          "ref": "6b079539-de6f-4f6c-a830-9d1cc7b220d1",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b4c4a773-47ca-4bec-9bef-12f3d023cf49"
        },
        "item": {
          "id": "ee7a19cd-5a1e-440b-970b-d6d94a1e08d8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "324f340c-b82d-4312-8538-8c1725b48723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0459fdd1-cfc2-4724-b592-26735e16710c",
        "cursor": {
          "ref": "0481a68a-7fe8-47a1-a755-01d26b4067bb",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e973edd6-e1b9-40b0-a3bd-f40bcb89c9a9"
        },
        "item": {
          "id": "0459fdd1-cfc2-4724-b592-26735e16710c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5e2d6cee-231b-416f-a91b-f8f074ce04ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14688c82-a977-45af-b092-b057a753daa8",
        "cursor": {
          "ref": "131d3fa3-9ed6-4533-881f-597717b749a0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0f535060-2d42-43f3-8433-4e5cbb885dcb"
        },
        "item": {
          "id": "14688c82-a977-45af-b092-b057a753daa8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ba0f5ace-10e0-40ca-bae8-63fa0a19896a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113b858d-a395-4c76-9670-cc1cfda96249",
        "cursor": {
          "ref": "374f2420-b9db-4bb1-be05-69cb905ef50c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "31e81bea-aee4-4796-ac04-6c571a990221"
        },
        "item": {
          "id": "113b858d-a395-4c76-9670-cc1cfda96249",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b85a9479-7761-44c4-a428-1ba1d6f4be73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6592beaa-81ee-4dca-8e33-6a36956931ff",
        "cursor": {
          "ref": "21f0a355-e21b-4185-9421-bee3664d1ae8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef2f9750-41f2-4fc2-80a4-b85f1bcabffa"
        },
        "item": {
          "id": "6592beaa-81ee-4dca-8e33-6a36956931ff",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2fb22048-8abc-4c6f-b221-f7e459422616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e4795f-914b-4260-88c0-31f4853e1b46",
        "cursor": {
          "ref": "3e4f3a23-e634-458d-98e3-272c5bf3f104",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "90c53e29-c697-4b60-b2af-1dc7ec898a84"
        },
        "item": {
          "id": "40e4795f-914b-4260-88c0-31f4853e1b46",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5a430b32-8945-4d80-bf09-b26abb3a3555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c938fcd-9d4a-4d19-b6a0-3456e98eb040",
        "cursor": {
          "ref": "895dcbfb-5857-49f5-9aec-7612370a1e38",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f6952229-c93c-45dc-8864-0c3451b8369a"
        },
        "item": {
          "id": "9c938fcd-9d4a-4d19-b6a0-3456e98eb040",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c7937d48-2063-4691-bfc2-cdc4276c0e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6e4172-a66c-4a2c-b09f-3c059ab38e62",
        "cursor": {
          "ref": "3caf8c1e-5cf2-4df9-82d1-5f4c769b83ca",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "02c64306-1f56-4e8d-9e6a-517f76299bec"
        },
        "item": {
          "id": "ec6e4172-a66c-4a2c-b09f-3c059ab38e62",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "609f4c38-8f80-451c-9e65-c3b61e0e8e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482fbfeb-cbce-432f-b2a0-59528f034026",
        "cursor": {
          "ref": "ecec1240-ff7a-4e56-9e96-698acddc1897",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "93a74e28-53ab-4488-a107-ff337a5894f8"
        },
        "item": {
          "id": "482fbfeb-cbce-432f-b2a0-59528f034026",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d40fe544-a183-4fe5-8d0b-9d285e15883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6291cfc-a869-4ce3-8db3-93c51e1816db",
        "cursor": {
          "ref": "71904679-41c7-4535-80dc-393d2d9cf868",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a9083669-9b90-4280-8230-19ee298ae787"
        },
        "item": {
          "id": "d6291cfc-a869-4ce3-8db3-93c51e1816db",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7a075261-3ab2-4bd8-a4e5-7fae7bbe7108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833f30ef-f9ce-4ac4-836c-ad00b5701a5c",
        "cursor": {
          "ref": "846323b5-329e-47e5-81e9-56104d8638ae",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "996d5f05-37a9-4b77-98a9-3d8be041aeca"
        },
        "item": {
          "id": "833f30ef-f9ce-4ac4-836c-ad00b5701a5c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f939ce4c-dbbb-48ff-a3df-d4f85c57b3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7527007e-f8cc-45be-a30d-739fd0a0d24f",
        "cursor": {
          "ref": "057b1530-8b62-4c3c-9a68-9c12e473b93b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1d65e8d7-fab4-4f38-9d6d-d627469b5650"
        },
        "item": {
          "id": "7527007e-f8cc-45be-a30d-739fd0a0d24f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "938ef805-ad97-46ef-9da0-0234cd4ae051",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59787a5-35a5-45e8-99db-144ecb828db7",
        "cursor": {
          "ref": "26c5ca87-7a1c-419a-8fa3-5ff3fce52de4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bf93e5ff-31f9-47e2-ae5c-168949dc0081"
        },
        "item": {
          "id": "f59787a5-35a5-45e8-99db-144ecb828db7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b3b317cb-eeb3-45ef-b207-9b9c8e5d97e7",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e7489b-75e2-4101-9f62-5cec5814c2e2",
        "cursor": {
          "ref": "fffcd2df-4f33-4df3-b8c5-39cd8a8913b7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4504ec9a-faee-4ea0-817e-a4e8c16d3189"
        },
        "item": {
          "id": "98e7489b-75e2-4101-9f62-5cec5814c2e2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8d904810-6be3-459d-92be-be0f11454dff",
          "status": "OK",
          "code": 200,
          "responseTime": 5713,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5010032b-50b1-4429-bf5e-4e69e27e950b",
        "cursor": {
          "ref": "9bb01759-736a-443a-ae70-0edbb852277c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f095bd49-72f6-48ca-9edd-16c23957d597"
        },
        "item": {
          "id": "5010032b-50b1-4429-bf5e-4e69e27e950b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2c2058f9-6f7d-4a07-b754-74c9336aaada",
          "status": "OK",
          "code": 200,
          "responseTime": 7627,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "394c2e64-6bae-4c6d-9578-5d63a8041378",
        "cursor": {
          "ref": "adb98d2b-6baa-4bd7-8e60-93ca53b49bf3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8df6cb9e-5a37-4fb7-8a96-cbe46b658ae1"
        },
        "item": {
          "id": "394c2e64-6bae-4c6d-9578-5d63a8041378",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33f42de2-bef7-4a9d-b820-281ea2554024",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394c2e64-6bae-4c6d-9578-5d63a8041378",
        "cursor": {
          "ref": "adb98d2b-6baa-4bd7-8e60-93ca53b49bf3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8df6cb9e-5a37-4fb7-8a96-cbe46b658ae1"
        },
        "item": {
          "id": "394c2e64-6bae-4c6d-9578-5d63a8041378",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33f42de2-bef7-4a9d-b820-281ea2554024",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a1ed74-73f2-456a-a6d0-0bdaba0858b0",
        "cursor": {
          "ref": "647dcdb9-8264-4c53-88cb-06b53c237d68",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "73a88580-ac99-464b-bc19-85a3dfc136cb"
        },
        "item": {
          "id": "28a1ed74-73f2-456a-a6d0-0bdaba0858b0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "23ef559c-0517-43e3-a969-547d6cb0d041",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ea2488-2408-445c-a08d-d018a7c2a4b5",
        "cursor": {
          "ref": "01b7c7ea-1dfe-4c88-a18b-63aac7c8afcc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c6ad4b23-0c38-4eae-bcd9-33fb41271b9c"
        },
        "item": {
          "id": "f9ea2488-2408-445c-a08d-d018a7c2a4b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b18d2757-649e-497a-be2b-ee27c696f866",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}