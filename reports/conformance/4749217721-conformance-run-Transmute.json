{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72caa3a6-4225-48b8-bbc9-b1c5d18690b4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4cc1bdbc-e979-4b30-a700-2631b1e17954",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd80526e-38c8-4ea9-b886-e73eadb86d40",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8076462d-bbac-408f-a60e-4206dde7b8ef"
                }
              }
            ]
          },
          {
            "id": "36e37aca-cadc-4c33-882c-9b105a837cb6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e0b19409-0fa9-457d-88c9-ce5eb45cabc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cd9961fa-3dc1-4c34-abfa-c05b3557adaf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f730124e-9a01-4db7-8146-1c37848fa068",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2934ae24-534d-419d-b715-724825031706",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a24bef9b-2f1d-4301-a823-0af91ea6ffbc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d36bedd9-63f2-4bb4-a351-e7596ef02a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "340e07a1-93da-4e11-bca3-a95f2e0d82f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c44c60d0-c64d-4608-8336-065ee18690ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "634f39ec-c6aa-4dcb-a97b-9f520168f6da"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "163e087b-b14d-447e-9446-c711ea478fb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b5bb2d4-55ee-4440-8818-3ca3ac68b6aa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "274a5554-5114-4a83-9761-c5b123e98751",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c0f21bd6-c97c-4864-834a-c423c088fcff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "709adb60-ca47-4bd0-b21b-920ccba771c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db2e939f-38ba-4745-b3d8-901b0c65814e"
            }
          }
        ]
      },
      {
        "id": "9aeb5e95-f8a8-4581-90bf-88d33c651196",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f52fa481-b715-4a00-8ab0-94ec291b4e0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e45d3f2-d19a-4431-bca8-602889be171e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "283fe20a-fea1-4225-af42-677b2e3d2ae7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0e2225-a8d3-44ea-a933-37b426ab3346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc47271a-df79-47ab-b56c-2844369bf0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e767f47-a7fa-49a0-90aa-b3706785283a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965e2a39-d9cf-41d1-a92b-e33bcd3e71bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "850ea33a-2e25-442c-9a25-3bb3e6f1a4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6aefc3-8b8a-4dcf-aeba-cefd62c2c3d1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbc7a72-2c4b-471a-bba8-d786fdd24bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7edbd358-aaa3-45ef-9c90-a5bd02b953f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bec3bc52-f3fa-479b-ae8c-74425b035bb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10bd988d-9a67-492a-9d75-7e641403ef3a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b02dccd-7800-410c-906f-e71151c02ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a2ec684-1746-48d4-bd90-7a334207d5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7747073d-2a4f-430e-9b9a-5df56f234418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6d65e5-a29b-463c-86b5-6935a5c1cef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48348cfc-2e2a-44d8-b2d1-6855381883b8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff2e3ed-2cc9-4093-9cae-d0d2abda0260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3596e35-e4d0-42ec-9db5-6daec8058510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10915522-759f-494f-91f6-a2a63ab65a1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c37a56c3-fbeb-4380-bd44-5c5e377f9a94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1a03cc6a-3a02-482e-8e38-042cc169e2e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6daff40-f6c8-4919-a77d-b7bb7639178d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1437fc9-f7a7-4658-abe2-1be602f57598",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "41ce7a69-fe69-4b41-be04-8b6dcdc33f86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7397cdbb-3a92-4c8b-8782-fddfd25dc92b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "831addbb-87c7-4ae7-83d3-7fda7a88db56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63786d8e-9ca2-4b82-b4e4-1782693444c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6f86e6a-67f2-4d4f-b042-f0eba32af515"
            }
          }
        ]
      },
      {
        "id": "f6fd294e-e8f8-404c-810c-1210c01034a5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f2c202d3-2d48-4156-ae21-d1c4fac35053",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74fb0730-e02f-43b5-bfb2-7355e58a6c45",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4e568a30-deff-4cce-bedd-5439e636d206",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e12a6a-1035-4f68-bc0f-21be4106590a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8687c25d-c610-4250-803c-883b56eb5955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3f1171-baec-48ff-90ce-b2971b053543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39037a20-2ac0-4e86-bd2e-2ed6e3fb64c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6874a8-a9d1-4b7e-a386-e8019a7f1876",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbd5857-430e-46ff-8f30-095c0f382d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b51f993-a360-4fa6-b75e-0d83b148689b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45019c40-3bf3-4de1-b5ef-564ec6a7d5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2b47e28-838c-4d2f-ae80-888ded02a2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff78f8bd-d066-43fd-9bd3-7b1d57916cb3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cd1baf-66a3-44f5-b8d4-b8189a8d4310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5f572d-da4a-484d-8c46-7256d076d02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e0d79c-87e1-44f4-a43d-478e452c5feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfa7fc23-d16b-49d3-be2b-9f6cf7e38a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beaa8f66-afe6-4395-9dc3-6c1dfefda2ab",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f982a6-b1dc-480c-b75c-f29fe7c3bd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18995fde-1b45-4321-8caf-18ed6d2804cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd71809-faf3-4ca3-a581-5ffabe90f606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "268be6b1-7564-4b51-832f-4966db4b02e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5475c04-4013-4f75-8417-5cf781215fa3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f955b45-9a2a-4d9c-9609-8b8c172967ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c74c92-8438-497c-8a20-9e6b20ad8bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb470401-eddb-411f-8cca-34aff4c62b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9ddca65-29a2-45eb-8b5e-54342f1a5b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199662d1-db3c-43b0-888f-a2dfc9343dd2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e317521-fe45-4b5c-a0cc-6c1f1550c504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242e32c5-80d1-4771-b4a0-ce291b7de293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efea82ba-651c-4615-9af1-b07fc8904d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06690250-c3c2-4bc0-8b91-e277ea340169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045e76de-a17a-4fba-bf0e-a1427eb8c102",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75daa8e-945d-44af-8af9-ec4bfe2cac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6172ef-046a-41bb-b204-af8007246896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab26c1c-c7fd-451d-8358-19c30d659939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6588d6e-6762-4cbb-8a80-8f45bd8b8b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a9a6f9-6aa8-4ae8-b3bb-04b885682739",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f4c16-5454-4c68-9f12-46875cbb0630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dca1637-a7fb-4b20-96d8-d7d4d815c9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e1b89-e88c-4211-bbb1-aa5c29897be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55384326-31de-4e58-97fd-852084357d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3186b5-c0a3-4f9f-8b81-c4aeef1e808c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5990cf94-ecfe-4e8e-bf98-d3e8c553bb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0673c8fc-0b5b-4710-8837-c9ef1f149300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e0cd1e-3dd1-47bd-8d84-2aea8521f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae556f90-5311-4806-9b88-d637fca66880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a63e9da-50c5-4ccc-8842-7a4301d0a231",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344499b4-4613-4cb0-b79a-e1ea5e294e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973d3a75-7016-44c9-bf82-e4b3da32e5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f5b56-5ba6-43d4-99b1-b90788c21276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a1f892-06e7-430b-acdf-e81811aaf6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcc5fa1-d00c-46af-93f2-0f6c0e683751",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521af738-d320-494b-bf83-8ffb34456940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cd07e4-a089-4901-b0b0-0cb51f8d2731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d267ecc-e226-450d-beff-7e3ac6dcb3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e3233f-98d9-41e5-978d-21a5be5d95a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b188f808-ccbf-4d5e-bd80-7ceb12feae33",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa187b5-9e64-4a71-980c-fd39f5b88a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da46c53f-67ed-4ccb-a7d3-195a2a3d1a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f398534-b422-403d-984c-33a6d4191d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f58ff212-1193-484f-b2f7-07ee77bcd471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2125c94-7d65-474a-9ef9-918b77399cbc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8d3a1f-b742-4aa7-9585-38da363c8d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c7e699-9659-466c-a956-4d384980a21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2ced4-4dda-4988-a711-2d93c7ef2b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6a51198-0610-4bab-915d-68904b136ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff73f67-f6ac-4f42-a872-b2ed5418b0ef",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2b19c2-ae64-41bb-8d40-6d51ed705525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ab7c25-7f82-4989-b1ae-c0a9d300e0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff7cd7d-262c-4e97-9786-cd3e99004493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "413f937b-91dc-4798-8c0c-ac398791a320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf395ce-159c-40da-a952-86c8093547dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62283e1-bbc5-4ae1-913d-ba22e28e5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a70a88-caff-414b-9d53-c416e99cdb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11dcfb76-85b6-4054-93c4-e9ec80a6a45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b214cae0-b397-409e-b25f-3e7bcb1f25b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406f7d56-7959-466b-8373-f4678b4cd518",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33607142-2a2b-40e5-9540-160afcd7a535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1eb80fa-9932-4c32-b921-9ca7abad680d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bf2542-949f-4b0e-a1b3-02d37175528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d43a355-bfa0-4d27-b7c8-78010d019f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6710b3a-c9f7-414a-9028-70b41cdd37fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaff164-52d9-4411-be01-4880f66b234b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cea727-49e6-4d8b-acf8-4b6e493ad09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbba970-43a4-40de-9004-ee6921509ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7470f3cc-408d-42bf-bf1f-87c0e3617d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cc2f1a-f878-4cca-b2c5-5c7442e5794c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b400d90-bc0f-4a09-a652-bca8b476fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e438f3e-5d92-4eb8-ae42-1d2a9499eb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d3be2d-5bb2-401a-9538-413eaa934b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4090e8-cb3c-4772-be27-0bf0f796510e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf34886-26c5-416f-b6f3-ac90109442a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdd641c-1aaf-4c88-a924-5857577a0a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57dad23c-6684-4c6e-a3bd-7ff613bd6775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ce4eb6-f82a-43f6-bc93-cb9a776131b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "498831e9-83d5-43db-a3e1-b879c7690e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db0d2e0-1092-430d-870c-35e9124f7a0e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5702dcfa-ce8e-405e-b680-ae22a5d0cdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b47cf8-6129-462e-bd8b-4c1278eeacb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d77ca0-94d8-4746-91e0-4eea1f435d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ace80fd-5c7e-4691-9367-d63ed9201df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe169838-d404-49ca-af6a-d5b162145878",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ad3be4-d2dd-417f-ab0b-e6b21e1df84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac79dd1-6e3f-4a4e-84c0-e86afd7f9466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04278be2-370d-4a99-9f90-f83bced481c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fef0b51-4439-4448-bab2-a3cbc1ff88a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3e4ade-beee-4fed-834a-f3f1096bb167",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9410be4e-633c-45f1-96b2-87e611b0d9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff45058-e813-4b1a-803a-b87e03773b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647cd6ee-fa87-4fd8-999b-cd9b99fdd821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22beb9a1-2355-4140-bc09-cf9cb232ee70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce258045-a7a7-45e2-a08d-ca00a70f0a40",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb5e532-9d29-4392-9251-550d92f031fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a8e666-b548-41b1-bd1e-26dcfc23b227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccca1a8-60f0-413c-a35c-b8d45a48903d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8adfb1d9-593c-43b3-ac7b-4e43780ed935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeb757f-453e-4209-929f-6686fb6bb1a3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21678895-d175-4738-b31f-a0195c7a5727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b36c6fd-f560-4072-ab0d-97a9134d2ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb0907f-f52e-4436-bc2c-c31476140b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d518da-bbca-467f-94a5-49d79c57b260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea23d04-47ae-4b53-8263-9f9d721a0eb6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fe1c7c-0a82-4935-8fa4-fffa93068bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54450631-7270-4592-93b3-e00056cf5e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7089543-7e58-4ecd-9831-dde128027788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f041d4-957d-4e8c-8244-d02e438284bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f58d35-03d7-4bec-9f82-201ebfcbdcc3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbff76a-580a-4fac-8e24-dc93e983c92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07230d83-6463-48a3-85b5-56c60f88a950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815bac36-966f-496b-b728-30dba6368587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "072cce0e-c5ae-421b-a1b4-be09bb4ad24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77da6825-d467-4418-8067-1cc7449151c2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6892aa-3708-4a8b-aa45-5424103cd42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8b075c-8d10-4669-9b42-865c2130aa31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4c7ae4-a9d8-43d5-bda4-1ef2675211f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7628d1b6-9b50-4c6b-9ee4-9bd901c2cc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0ebb9c-13cb-4522-8a90-db85ae650a5f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08ffa5c-dd43-4201-a945-4fe86098b508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdf8170-67fd-498a-9ca7-91cadb7cf5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bed739-d047-45c5-8d09-403bc98da3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1edb5c32-c098-4cf1-8da7-564160557945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784a2d8e-ebca-4dbd-84a9-9a8a19ff9cb2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c961458d-ff38-4d7e-a8fa-a0a298fa375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e38cf1-6de8-4add-b53b-7dd70e7b4609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dc9e14-8008-450a-a4e2-c0ffbc5a68ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8740b735-38a7-4264-b18a-0e841639d6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fd43b7-9fa3-4ffe-8684-ba895be396d6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a9a459-9178-490e-a823-73fbf875c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56da0db-f4ad-401d-94d5-fb75794a379a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7d6f8d-5aa1-4dde-af96-5a02129c0b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a486432d-1525-4c0e-a59c-6b6ea8de6b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8027ead8-79ac-47ed-aa4d-6515625a25b0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8220e96b-29f4-4514-98ed-585c5fb68903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a6b2de-7b64-4aba-8b5c-703e96eda2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c48c0fe-11eb-49e9-8bbe-68eb751540d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd20d73-607e-4d99-9c8a-04a519a024cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d78b17-3d10-4b0f-a627-b8b6192b24c0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5856cd-9e64-486e-8f09-2a16a1c49afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae68fc7f-c4e2-4120-960e-ca3ba85cb3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa983ad-5565-4586-bfb2-9d1739590c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a324fa64-ba1e-4c4e-a7f4-034c46dd75fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26928969-b495-4f94-a6c8-a4c0a77009e5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f22e04-aca6-4d2e-8696-853b3f9648c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ecccb4-aaf7-469d-957d-8459128bcfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101eab98-b359-41bf-800d-ef53a37266fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfafdb8-f80b-42bc-8b3f-7e47602edacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070e3673-11b5-4db5-bee2-61466150d4f6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21668cb-7ef9-4020-befd-05d3208a695c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f1e45b-9b4a-472d-85e6-ba95978da39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f7780e-d68f-4e30-a32d-4d2a19fb1fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93a946a-492f-49c7-aa54-87f7bb0a2d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfd224a-364a-4f64-9c4a-5bfc68e4ba1e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556dfd6c-4f2c-40df-ab25-b674aa37d074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb12e05-77e3-4f77-a20f-11e054b9a4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c59d450-ed36-4a2b-b467-4e5df78a4932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8d2e0d-2557-4166-9700-4ef6750e930a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1553832-3976-47f5-b391-3965eefed79a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ffef10-31ee-4aff-b35b-af39076cf6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca7901f-3208-49d5-a445-94422b242c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3faab41-41de-4192-b2b1-ac735887261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "678e9a67-e8d9-4c01-8f8d-54c347ac752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fd70cf-bea7-4574-b6f1-7e2e220e65bd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3542a526-b8c5-4edf-891f-b3f7898c572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b05232-a2da-4260-84a1-d992c039c16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6c6fb4-a0a9-443e-b4e0-7eb8f30a3fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07065a7e-a712-4579-9084-fd807a7ef71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052e7173-dc23-4169-962c-fa1ec96cd005",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba03168-d712-4f7b-a3bb-ffd8bf837f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b407383-6ab9-417c-b1aa-6c01a4f4d072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed2cc7c-b0af-406b-a5f0-935ac6e7d2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "392d3eb9-968b-48c3-9cf2-35fd2182868b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d860bf3a-b8a1-4e25-8294-574477d9c3d7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20184ec1-8c00-4786-9d2c-1b78fc7a3824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3c8d2a-818e-43ab-9c2c-1f7714fc83da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a45506-f9a3-4438-b797-0fc16b2708ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3e30e4-44a8-4469-8a9c-05e42e24c5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd54bc3-442a-4ec4-810a-96075518a3fd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c496092-ce90-4e19-93f4-095a709a2be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d295edd2-8970-473b-bfaa-84f3e7e2fa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfe221f-9f06-411b-86ce-aedfa1b1b6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68189c44-5ed8-4fda-8d1c-0b27c1e86776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4baf3fe9-121b-4a15-8927-52e64eadad5f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92ed2f2-fd45-4584-9ad7-8fc7ee94117f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458b544f-7337-4eb6-9726-9ca7b86fcd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27281cc-8489-4890-9a6e-f15308a57ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa982f7-bbf6-4def-8c68-2a3db08e0b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3520893-4fc1-48a3-aa66-1984df0b1413",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cacc19-8063-4913-b480-89953e720417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbc52e4-c6c6-4301-956a-b9ff4ffd2757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b546b35d-518c-4b60-92b7-95eed8f2ac7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "98806cc4-e089-4970-933f-7d39cbabe39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebd51a8-5ede-4d58-b2f2-4a5e6f168a9d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887b4402-df04-471e-b8dc-f546bcc95ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f151f8-fe70-4aaa-91be-a87c10412b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9970334-40ce-4de0-92a5-7a62d5763410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "57d01c16-57b7-4a43-aaa6-8ae55d3139a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b67acd-2e2b-4626-ab33-2285e0db5dbf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08cc3aa-300a-4561-ad5f-4310583763e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017ac5a1-c7b6-479a-9508-6bd3302cb825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1ebd23-f681-42af-aeb1-fe41ac3a983c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "df31d41c-3ee4-4ebd-9c68-253390c0f43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef28695-7bc2-4048-ace2-560c416b7b20",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2084880-5812-43b9-99df-a2a77662907c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a306ab1-ecc9-459d-a252-1a657071b8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7884cc97-de93-40c6-9ac6-0689c3180e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec9366d-b25b-47cf-80f4-5de54c2771cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73786055-6084-43a1-a44a-23dda384111d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119a1c52-769c-46dc-a3a6-27522d1e47ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120b611b-3ab2-4d28-99f4-6a10f0a7d652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ac78bf-7682-4d09-8acd-a9d618c93fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad491b8-dd71-4209-8adf-eacdc3561e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca348576-a394-4b50-9290-73a9247dfcb9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692fcaa1-4343-4f46-8c55-0711e769cf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10834c2-7bb7-4937-8d8d-c805a1a06f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc60f30-ad83-406e-929a-177d2c6e3055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e04120cd-bad3-4667-8188-b294af6b6bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7572afd-6805-4a82-ad44-af6330052e1a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1c5a93-3c20-4ac1-b170-a5495fbac4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47275a9-57c4-4364-af37-0f0c4bd1308d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12e7409-238d-4058-b216-f8bd3837c1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39db796c-29c1-479b-b104-9c0487b16b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29ab9db-b5d8-4aed-8a17-8374c3ccecfe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c3c7fe-fe95-4ac1-aeaf-0253701ad4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43dc9c8-90bb-4cf7-9c78-e8f761e5c7e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9769d6-591a-4926-afb1-1efc2eeb71cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62972ffa-cb98-43fb-baa5-c983abc3fb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee83fb1d-8b52-4550-a040-2a3b8a2f0f83",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af10214-5fef-4adf-bf8f-7be598db9043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c09524-31b5-457b-9cc5-a23733a9d348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a934afaa-cb14-4130-bce1-ffc2cf828ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6466a895-41e1-4e7e-943b-3b78ed233017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8905282f-a88f-48cf-8682-d2e211aef021",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628a25a1-2f15-40aa-abc9-aa0be4cf871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb08454-9a24-48eb-b9a9-9b1d296a2e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2179cf59-5ef3-49fb-94d8-3f4262379b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab6a02d-0fd8-431e-923c-d423a716403c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7853b8b8-daaf-402e-8b02-3562f9365464",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d42dc9-8083-4173-b354-b6c84b49af78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d059c8de-612a-43c8-9757-ecb2029f1e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb27fdd8-f618-4ef1-9618-2c5fbef9882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb61182-ee91-4123-acd9-ff0e0cc0e1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d21e83-b5db-44be-8509-3a6b7f76012f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d932a9d2-446d-400b-bdea-59d1db235f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df988f95-dfc5-410f-9505-285848a0ba02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f0139e-769a-4bfa-ba6f-388613c285d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f6046b-2642-4e45-8849-636f120b2592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600846b2-9c25-47be-9616-9effd61527b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f346096f-1ab4-461b-bf3c-16ec2a3f0eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f7a268-cb9b-4bc4-86ec-7cf00f058f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f131385e-5fdd-4dac-a3f1-c6dd625fa4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62fb02a0-001a-486a-a07d-d6bf4e760478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d9d258-4897-4bc0-b6b6-a8ba4fa91e22",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91a204a-e653-47a1-aabd-e110fc294203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d4aa53-57a1-4da8-aeee-957ee911c925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e82feb-19ff-490a-82c2-f59e79b739bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c74d6e-51a7-4cf8-806c-af07740b75a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3568d42b-5ffd-4cbc-bb85-a2fb10e20627",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d2b453-1e1c-4e75-bd9d-5d2473729f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ad45db-0d39-475b-a989-0ba2c9a0a53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab6edad-c9ee-4f3b-b161-9f773a8555a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29ec5094-7208-4868-b16c-ad9fddcc90bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e265aab-1f53-4973-b61c-3c68db71aed1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114333c-3788-4a62-80e2-26c06f11c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b23f9a-e488-490d-a9e2-0947c3df9810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b25392-5d7e-43e7-9372-703e77db93f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a12e79f-30b4-416b-b33c-4d3be903da8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b95f098-5fcf-44f3-bcbd-7d9f8b16f603",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5cc0ff-c927-4112-a581-513839cfe510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acd8744-e120-46c3-bc2e-4005c7cad034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e85f81d-f936-49a5-811f-0a0e2fc6c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4056fdb9-80ba-4c72-a17a-9411fa055e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea2e859-0a38-4bf0-9e3f-770881907d7a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a525cd-cfb0-42f7-89c9-070f2c8c8acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb34a184-8191-448d-960f-3b5a38242d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf83a00-4365-4203-a389-d87d79d2e879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "274ca7cf-705b-4bf3-b848-f7ceeca0a748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f17bd00-cdd2-40a2-bf78-ce941fd3ed71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfa42e7-c115-4298-a137-eaf7fbac2d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60d305b-efb0-4660-95b5-7b44b2d2de14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ad9781-5271-474a-ae6d-951b8dff1a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "09e6bd1b-a8d2-44b2-b775-de501bab86ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55a1fb4-b896-40a9-9625-0046f7b845cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae82c4e4-8da4-4c37-97f5-a6600bdf8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57530154-bd25-445d-a132-093038dd8f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449336e3-6548-4460-afea-8e36e5f3c3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f94bf17-775f-4411-9c4d-db2952e0a0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf4b8a4-edd5-4ae9-8ff9-7000b06cd375",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9ae88-5ea9-4901-b465-7221dfb90b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c28766-6a8f-41f9-b4cf-ecd1ef819069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56700524-df1e-4de6-85db-e6f7a76118ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "279eead2-0462-4abb-bf3b-d74368d50785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f45665-b41b-4d6c-8f25-aa190c0369db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6904875-09de-44cf-b93b-5952045faf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ffc537-f66f-4299-bb38-27ec3858f6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657e4c54-b7fe-4f77-b5cf-f07df8520cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d767e52c-8050-4224-b51d-7a83f8e8b77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d79961-cf3b-4c49-9660-65486e2ae5e7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fe7b7c-d5ee-4cdd-85b3-2dc13604888c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a00acb7-2717-4c3c-857b-cfc978fd7cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2354cb9d-d533-48db-8c77-e721cf69f875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d25239d-74d3-4cbb-b471-6557d20b7066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0235b319-66eb-4a91-9189-b43ccb0f12bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12a38f7-b8c6-4efb-a5a0-c6c4807a2680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a603c9-3cc9-4174-ad81-3f0cd0dd797a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f5c001-2bff-4888-b8c9-24cf500579ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f550209c-4263-47e3-96f1-fdc245b3f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c04e30-7531-416a-a952-8ffb4eb82a6b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b60290-4bec-4f74-81fb-f0c823ad0600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf67569-c9e4-4b52-9ea5-5977c81f24ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047b3e13-90a5-4f75-b7bb-b11957ab26d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3b4139d-e18d-42d5-a33d-ed0057d5a5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401fc17-ec1f-4ae2-aa17-7e8e882f072d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11775a4b-0312-4dd8-a952-e66bbfdedb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb8433e-f870-4e8e-bc13-8a48595988b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb23833b-d4fb-4451-ab16-cbb4fc93e21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4c1117-c1aa-4724-b937-2b26713fca19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092122cd-1c54-4af8-9f73-3610dc59a3af",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e38d7b8-1405-498d-8929-b09dcb063b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91a96b5-d278-4bb1-b86e-8eb1dae74fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b581a0a-67d8-40b8-b128-bc65faf69454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "39d0976f-72a8-49ae-8b8d-cf6c79aa339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0998ce-7b3c-4bcb-a05b-e07c44429833",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6aaf40-949f-4cd1-8689-2a7a1a1c3e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6769c0e-5a93-44a5-925e-a82702535ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff363a8b-fd06-4927-9026-fc3f635b1cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e190c7bf-0ffb-4534-9c76-938f8cab5db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2409da71-ecbb-4e08-b839-671669661bf6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b381045-8831-4c99-803d-d05c9d7abbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63670a62-da60-438b-949f-98e9764c4416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a616b9a-3724-474b-83a0-79ea2ec21950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1018ca22-9b32-4421-96f9-d998e5729896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c6983-730d-400b-81fe-01155cf95b23",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b503543-020d-4abb-a736-77274298d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf5cc9c-a6ad-4c5e-96f5-0242f7cd31dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fc1334-0036-4f84-b75e-4425f93bd65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "103e924c-1d37-4e54-9b70-fd2d5d914d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402b7c71-6d01-4b76-b685-f97b4abd891e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18dcd1b-0cae-4b6f-8310-ada68a387b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a9b606-ec86-450b-832f-878c31dc524d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6504de9-380d-45eb-89ea-24c2ee3cdea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad3905-0e48-4700-8335-17580b0f44eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9832cde7-8cc3-46b9-8589-acf2e3d63524",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ceb6d8-879d-4f88-b57f-9100fa0a2d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421c0982-70b2-4e35-a828-d916a7f09f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4df9b21-d287-444f-8d3d-ce87a3792d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6541b08c-ef60-4b12-903d-ec12588291dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd103ded-9003-47b6-b5ca-0400f0093a00",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3409af0d-1934-416e-b02c-6179c978a43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b5eaa2-9a20-409d-b570-ec14bf58a075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea145aa-4c23-48eb-8def-0e6e958feb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e39c2ec0-7750-4af1-8e7d-30d29fd43c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f805b7ac-66ac-45f0-b8c8-0e3aff25a78d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02308410-989f-48ad-b8ca-9afa945d1689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2131e102-bb44-46f6-9ba9-c58601c8acc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e259a0-003c-444f-929f-76998c2ed03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed79d55-95bd-46de-8536-8a44e053db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03bc53d-2155-4f37-a2a5-80bb411fb15f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5938516b-9dd7-4a83-b6dd-0ce3a474f57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18864b0e-9ee0-4f19-902a-66441234ba77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372fe47a-9968-4f81-987e-69c14a511a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7e26a5-1697-4e2b-b012-74aa11a7e747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32e8abb-633b-4620-8898-00f7f68542d2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8a6e6e-94d1-4757-ba10-bf0a70e92ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc6d4c6-cbc3-4178-8a9a-711120fecf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3708c34-fb06-4b73-a6f4-eccd306c97d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da5ee0b-d17f-48d8-b24d-3655ebef9205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ea94e8-02bf-429d-bcf3-2ef8587968ec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7519cf0-4f02-4a58-8ad4-da825910ba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ca0af2-e126-47cf-8dcd-c13dbbf77882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4070d87e-31bd-4516-923e-da189cdabf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ca8e64-996d-4980-adcc-cc01aace7691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bcb040-4a77-4deb-9e61-ad48ecbeafd2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6bc4f8-deb6-43a6-be37-352b2f221d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a178d1-54ef-4526-8ee1-1639194e7585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7017fb5b-b441-4545-a65c-e8c7f42824be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "877fa21e-a285-417e-9ac2-caa902b1eef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dee33d-994b-4ccb-9621-3bf90310ca70",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c76e2d-e056-4c81-851e-15e3824fa580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0b2d08-aa4a-46b0-9a66-d5336e055c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ffe582-2abc-4458-bd22-8224857363c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bae16edc-2ad4-42d6-aa42-6fcee06223f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1011e833-5131-4a95-b66a-9ac244346a87",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7460ede3-3f4a-4f7f-8cae-161e4aeb2168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74547f46-c603-4c70-8afb-73f8d64a0bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444d0fb-828e-45fd-8f17-53e7d6ba18ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ddfdd1c-01fc-4336-8f5b-ccde4b7bc967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709dc58d-ebd0-4e0b-89d2-0cd57c288810",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f43154-e62e-4123-9ca1-78a42805d984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7eefd3-21d9-4785-902b-68b73d27709b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76cee17-4f66-4b69-b26d-8886e5798239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e81458-306a-4ed1-a539-04b7a496b674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f09dbe-f173-4bf5-8619-e05321164710",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05957a43-df1f-4cc8-8b4d-142048a3d40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c726422b-d435-42fc-9172-de15dfede6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff72cd5-66b3-4207-b763-7fcc4d9327f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab7bce76-c490-4fbb-9dce-bd0d81518622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189e3f7a-a543-494b-9a51-a21cbed98980",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6364699-753e-4034-b6ad-23bfaa060edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c11a25d-117d-4e2f-b677-377467d60d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56044c88-9a38-4a63-981b-5696589460af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "103c2119-8700-4066-a4af-9e4c1f9ecdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2e102d-94fb-4305-bf31-76988e5fca94",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e704944-83ec-4299-b2bf-883f2cacf258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da06a20b-ff1d-4198-a6ea-22cb8439db68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a2dc9c-5a85-4e08-ade4-780f4274373e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "267a1425-da19-4cf9-8abb-3bfcf0956297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376eb801-6cb2-4b96-b265-3d3d06b71a5a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bb63c9-c539-4282-81df-31fa31388f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d54945-2832-48aa-87f5-002e3a35d491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba367e0-7837-478e-8c05-6c76e2708291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a94e68d0-d7c5-4e0e-9ced-f0e628fa1833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52d3955-816b-42fb-8bc1-b780766c3d94",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b9d559-fae5-4744-8a1f-e01f2d5fe16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d395a78-1694-4048-a2fb-b276d6d46542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4811099-cc6f-4d3a-b603-75389e11465c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3508d512-f101-47c9-bdb3-29e7a4dd656d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a770202-1a3d-4e56-b0e1-04a22488ccfe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84b7aae-e111-405b-b083-536434c92162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e092537b-3f38-464b-827e-fd9f0ad50046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468b0319-76cd-4dab-aaf4-a938c095a081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "721ec292-9e8e-4037-8f50-6393294b8fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7325af8-d5ae-45ab-98f1-2f70b007129a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c885de00-64d7-47d3-bd84-a64b7a199e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06f00b5-dc1a-40ee-bd3a-f0b9a993ab5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfcfdef-e7b3-418e-a81b-5fddc9c2a6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e604875f-183d-4d1c-b4c2-8f1ea0e64a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19a68ce-648a-4300-88ba-9c8d8b0f0046",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64bdedf-04a6-4179-96f5-248fb30f0b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f847a598-0359-46d6-b607-cb09f19c12bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b31c1d-47e5-46c6-b524-5958e133d117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1138471-8ca1-4896-a5ff-2a5dfcea2997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c93d05-9ea9-4150-83d8-ad468bf1de4e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab7fc2e-2234-40ed-9bcf-1745528ebd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391a4e39-cb4c-41d6-a27a-154f18476490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3116960-975f-4f38-b077-a79e01e16c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b083f8d9-f1f8-4afa-9802-b39c3ef3b8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac94c4e-c088-44af-8ed4-a18dbf429c43",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e622fb-7953-4fa9-b87f-cdcbfdecbe6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12f83936-0eb7-45d7-b27b-4b56a3661c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bde43da-9286-49da-9b83-382354cb78ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d09e53f-a046-45ce-a57f-95cac2c0ec15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "12ff539f-ba93-49d1-9d48-9266e1d9e600",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae909133-a295-4fd5-a5e3-90cba7394de4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef918e6f-f862-402a-a0a7-456d070be4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "244cc5ce-e187-4ae9-a4f3-7ed273b53b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586ee74e-2257-41f6-a55e-c4c4ad2ab6a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e23dadf-e200-437b-b352-9dfb6a4d01a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9974180f-e840-4a2f-a28f-e4ba917c907a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c63b73f-a661-4f7c-a6ad-a713b080f701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db78e102-7977-41b5-a93e-d16c1c614057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de139ac9-df77-4108-bee4-d35a98d90fea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db339b4e-c1f3-443f-bedc-5e617bd77f9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b88d693-09af-4799-8230-1825d0d84df9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e64ba1c7-8149-45b0-a02e-49e67bbf7277"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fec87b1-fb9f-4b78-bfb9-d4c9b297fdc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9e1f41e-e84f-46ea-af2a-db8816aa6472"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80a38d92-d0ff-48b4-8173-465770bf6480",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ea4cbcb-483c-4f16-bcf5-2fa0243d28f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bfabfcbd-c60c-4257-b52d-33afa7d9a6e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65d44423-d2a8-4791-827b-682fd7fa7519"
                }
              }
            ]
          },
          {
            "id": "cdaa24e8-46b3-4cd4-8003-0cf33baa3962",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06c91a9c-2224-4d04-ae82-28ef920f3e5e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95302935-5ac9-4ebe-9033-6b43822a6ab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85ef75ee-ddfa-470b-8fdd-e85419b469ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c08a0aa8-8b89-4108-846e-91e184f9729f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b4bae3b-1c7b-4623-be54-d810f18346d9"
                    }
                  }
                ]
              },
              {
                "id": "4e4ee58a-9e3d-4aad-bc89-d401eabdf0a9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f69610e-3b6b-49d2-ba64-3956b27ef784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6a0847d-e270-49df-8e7f-e3780898ccff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f96f226-4876-483b-aeff-bc05d42711c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a37eb240-7bc5-475f-8441-cc66ebf41294"
                    }
                  }
                ]
              },
              {
                "id": "98e42b4d-281f-4c3e-bc6c-d5722f8f8ec0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bbed938-daad-4adf-ba81-df784cfcf459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79ab01f4-db00-4899-bb16-7efde1c79eeb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0831a20-7faf-4e77-a761-35ae0f4eb155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35f4bdb1-f65c-4288-af29-d041627fc2be"
                    }
                  }
                ]
              },
              {
                "id": "6d00cbd3-394d-44ee-a05f-ef05d5344cbb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc0cc337-0232-4807-9fe9-19d8dc52f32a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dc30fb7-36ab-45ef-8e1a-8444485a5834"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7370878-86b8-40a5-bbe5-6a518fcc3eee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f8163fd2-364f-426a-bcc5-1cf7291babbd"
                    }
                  }
                ]
              },
              {
                "id": "f6ff1a47-95ec-491d-947b-a26d2c73fd9e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3b43c4c-994a-4351-82b1-bd8a5bb8c39b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e1c877b-1f6d-4357-84e5-bcc5cae143c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39d7a4c-2012-4023-8efd-31dbe71c17ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "530cd642-8d76-4781-af36-3b2eb765a8a9"
                    }
                  }
                ]
              },
              {
                "id": "994291c7-beeb-4160-9c9f-14a4ca4122a9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7584cfbf-e6c0-44d9-8d3b-9961051efd9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0f2ec3c-fc40-4db5-9681-001d617dc4fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a770f07-1fd4-42d2-bdec-47cc12d9d68c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3184ab31-2bc1-43a1-a3bf-d5d2d82ea59a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "408ecf2b-1eca-46c7-9601-900f0fb2ce2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "988799b4-944c-48bf-8baa-e68440bba76f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59f42c8d-9ff4-4728-a496-1db1a44b1ae8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f5f0ca6-0fee-42eb-886c-2ea1c0fafa67"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e0cfeeb-75cb-4842-ae23-34152d1c5076",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eec70ca8-9908-4fee-b9dc-76862810f594"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "547d1e84-75f0-452f-9301-624239a29cde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f17e268b-332c-4598-8fa7-4edd27811b30"
            }
          }
        ]
      },
      {
        "id": "9b10ef99-febb-4e7b-907a-b9d360f32aa3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bd2bd217-b1e9-4761-b68d-c831c6c98eb9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09ee7c06-3005-42c5-9536-fe4bd52e781b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d383ec5-deea-405b-af51-f4400875fbe8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c961c3-35cb-41f2-a1d2-de3fd1fcaa32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fca447a-82be-4c2a-86e8-b23a8f9cc955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2790ff4d-69ea-473f-9e1c-9da6a917903a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec524bde-2fef-4177-b0f2-7cfed6c90d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1303509d-5f1e-4592-8167-3154b293a8cf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1d284d-c0f3-4f6b-90b0-bc8eeeee8c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12f1ca5-eff4-405c-b02c-2074d7dcd95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f1e455-70c2-4e8a-9686-b2d1de6b70ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4ee668-89de-4f5b-9ca2-d79f7d53e13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea569f5-cb99-4c53-b8c1-9706e8ce90c7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331c0b11-4b50-4157-b183-f32fb98f8eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f4985a-2d61-4af7-bba2-37aed0879a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b49370d-c315-4a1d-946b-75e0364ad421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7ecf9e-e403-4afc-8d3f-a7f7c9ced6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1044da-bde7-4f58-b050-ca2574ff9a6d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa424ec6-4d45-4886-a2c3-c6005d169964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edf7bd2-1846-48b8-83bf-fcc591f66bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ef6d0c-63c4-42e0-921d-52d3a38cf774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da71a6bb-ce91-4c25-95db-91a3bb25953a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a710c9-3c32-4166-9463-503edf61bbf9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd113e40-db48-40c7-b7d1-27eb69df2111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145172ee-b3aa-48fa-bba8-973fe052adb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f98140e-4377-4edb-a684-0b33cedc434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18cd5ac-ab6f-4bc6-84bd-6f636ae678a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9a2a1e-e83d-47fd-9f46-b9a1be1600a6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0633a3f8-0e84-4ae5-88cc-896dba01152a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b634ad5-4f0d-4cd0-9d15-9d3efaa00489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec2d1b4-3594-4c75-a03a-b0ae2ac3b4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a6db6d-eccc-4fbd-b076-636298ba545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94b2683-da9d-4b37-9c2c-bf220f553fca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849d707c-8bf2-4603-a805-164b6c15e0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7197e6a5-d390-49f7-acb6-a1a4b013b474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f776f016-b889-485a-8308-3b04e6b839bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec87f4f3-c952-49f0-be73-be4e06005531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806506ed-d346-4b94-b9e1-0d8b2f2fccbb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540af801-13ba-4d88-91cf-78219a7e8e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3bbbd7-550c-499a-aa14-a08f43d1132c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028d3755-bcc4-4ed9-a4db-926b75f6adc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1259d9d-dca4-4e56-8e12-2cffc502635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c79c486-90d2-4884-9e91-bf03e0f8a782",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ccde1e-24c0-4182-bbcf-d85958ed4621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb15f93c-62ef-4d7a-b3e9-d1c0effdfe11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54da635a-fc08-4940-bdb2-ee316a7b3fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c53f2be-dd16-495d-acc2-21814d0ea271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05faa1a-6656-4b2d-a172-79b20f3eee24",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8630ac47-513b-4761-998e-03b66f395bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5008e1-d120-4e3d-8f9f-5dd3527adb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e8684d-9eb6-4cb7-9470-ee6ac59ac172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c1ecc1-bf68-488f-b8e5-8d05c89384f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e001d75d-a784-49a7-bf9c-22f7eb9e404a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235059d0-9fa2-4768-95c3-5874896a68e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fde3df-f5e3-4370-8f03-72cba7eb90e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c383d33f-da3a-4621-8324-f88e7ad90a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7479c2-4cfd-4324-8a69-8059356c8aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bdff4a-0e79-466d-98ae-3b6ad71e6212",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e76be77-eafa-4f42-8b32-61037f84c522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b036640d-fc6a-4917-a3a5-165627eff095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22552e93-59b3-4c84-bb9a-462efdfbea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56b17127-ba4c-4beb-9040-11b4be5ee5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15aaeb45-b22d-4e6f-a7cc-9f21fb82bd82",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41aca3ba-1d9e-4574-bc52-32c23c7e1a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17838fe6-04ac-44c1-81b9-53e4b98e90c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2b74ad-55ff-455a-805f-e914d488a21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa77246f-37fb-45ee-a13e-fb1434221f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eba334-7cb7-41f6-9483-06155297fd07",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c62b614-bce4-42a1-9916-7a4f37467d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29e9e0a-0d50-4453-af9c-8912f11261cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03136f4b-f1c3-4ebc-8525-f30e3ca54215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2afaef-b959-4111-9d7e-37cf6c3aea70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94012306-4917-4085-bd51-eaa7434ce1ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49032be1-f3d7-4b8c-b4b8-8464a8b2c819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebba40e-07a1-4794-ace3-859e6e7a60de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b4d445-0669-409c-9af2-da94c4a78591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccfbf1a-a4bb-402e-821f-c05bd7c20b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4402c39-4937-4e26-bb40-4b941e598cdf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b765e56-e5dc-4a87-b644-b8ce5dea65bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52786b3-f583-443b-9a1c-7c155fb4281b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d08d360-7b6c-474f-866d-77971e06f4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7dac93-95ce-45c8-8e18-689ec6d764fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bb6342-fdac-48f6-bfd0-05468cfd66d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0c4024-35f0-496a-9b75-c8ae1a0374aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1751ef8-0fe5-43d8-96ef-ffe10306b16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c837901-07f8-4342-8ed8-53d2aca818c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "68017fa2-4ef0-4ad2-9e2c-61a9ebd47bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd8b15f-6ef5-4a9b-b72b-3abbb1fc33f3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14c3192-33b9-4189-a69a-c20d82d2b5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ebd775-414f-43a1-a15e-e13be3274ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb5a3b3-39d0-4960-8801-8752f48d8d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8e4af1-da5b-4619-8ef5-b4d61d664820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cea298-af07-4d6f-96d1-6b0811c2489a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855a7a16-eb93-4f9e-a994-55e688be19ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be05583-8862-4fde-a4b1-12b80e7da47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b8f6b-28a1-4eab-b821-0efa2fda5bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "440bda46-0b47-4a2a-9192-d3a60b66e3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68c9302-5931-4279-84e9-ed208e6af2a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98750576-0fd3-47ea-835d-34bf6a466817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b478c1-af78-47ed-b303-8f6b2ccf8811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4a10ca-51c8-4107-8940-f58d6fdd6e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b587411-fa05-4f8d-8410-a999bd6d4fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c8b53a-06d1-463f-be0b-bce57103c27b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c932bb27-a4f6-4034-83ed-e5bb87b1c93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2b1eec-7ff3-4585-ac5d-0ab6e1f14f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3f2a10-1a5e-4d45-9a47-7792d7673515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46caa35e-a7a5-4012-b468-ba37e97d40c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8642d31a-0e89-4514-83e3-b3e8aa6a5842",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c4c0a9-e486-4755-b046-e694ae8ec819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95d32ad-57ce-42ae-ae6c-ae25ff0f786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26635c0-a7d1-478e-be97-15b2cb99ce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1078ef44-d82b-4d04-b01d-e5d85809f1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227c4d0c-1fdd-4e8f-8c47-b16b5ec79381",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbc31f4-b83d-42c5-9912-935d29edc55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c248f25-5b21-4981-a8e6-27078b47b25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c2318-2e75-46cf-9513-4721de11781d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73847127-c003-433f-9cee-0b2cff42067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8acc23b-d5ad-4512-a1cc-dcfd35d9a2e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcddcff-52e9-4530-9b82-f1269101a3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bf2701-9fb2-4eaf-b7fe-1835dc912617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71eacc94-d2b0-4a58-8946-ad05d0420b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36d84f6f-5da0-47f4-bb88-eb067d775d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497c2446-dab9-40e2-ace9-e9d33946fcb7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb8f010-b546-4cdb-97e9-7f56472c334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec21bc1d-6c3d-4564-a909-f67544606238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25122fe2-67dc-4c29-8930-47dd0143e046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4d2640-b042-425f-b083-771b59d3c961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ff77dd-4d64-4b40-b634-2d743c4b7bc3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8768a86-106d-44b5-831f-dc2528b940a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fed1d7-e72d-4a4f-89b0-fc5223041d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebba3d24-8106-45fe-a07f-47dffb5d2c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efaebb73-adcd-45fe-a813-01c3f7e134d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6c2b22-cf82-4e80-ace7-ea008eb10981",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb599641-d455-47e3-a6c7-0bc168ae6a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedb9592-e2f3-4911-a230-a39b45ab2f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a35827b-858e-4297-8f7c-da651e0503a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ab3ab9-d3b7-44b8-ab23-77cf0b96f8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4dec16-938f-4947-a8da-22841a3e5c97",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd777983-ad52-4687-a1a4-923a9d958957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae51b0c3-77f1-4c36-a36f-66cd13f65ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa89d42-24c0-4ffc-a4d9-ca46d1c97813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8647f8cc-1461-47d9-8321-496d77e0b37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f72e2c-b586-46d6-b35f-5b49f4c6962b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9016052-1112-4c69-bdae-20941f376f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac06f79d-3d86-44ad-9c67-b430f1bc7def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817d80f9-28a2-4ea6-9184-2c1bc6b7597f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "331ac3e0-2a0a-4641-a749-2f36d24aa0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e118e5-55a7-4b76-87f2-91eec1aba963",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2a9790-1590-4eac-9f03-ce0e841f6986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0fa4d7-ead6-462f-ab49-259e2cda675b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef53e320-5d2d-4d3a-8f12-a99ce837ed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "705e0ccb-d2ea-4573-8848-2afeb8b28c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ed4f33-cf41-4fcb-92d7-ef62ada9cf73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d07220-0fdf-4241-85e0-6e0cba2c49c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b829e582-5f76-4413-8e75-f8b111e075de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068f53f5-5d78-4410-901f-12079c96af11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9e88a8-3673-43f9-a347-3354e0be5cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44648fb-49ed-45e2-b1b0-5ad13a0b9569",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc03383-3664-46a5-8305-c21dd529afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c564cf6c-b2bb-4405-a7ca-2ac505bf209b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba2ed84-a069-4d95-b11b-fb2f5a303c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "294162f1-4b1c-4098-98a8-52d786a3d59c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d4a96b4-a733-4706-a683-a12a308376a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61cd25fa-7f57-478e-832f-ce2b7d8f3f61",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb117d7-f00e-46ee-a72f-a465134de87f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a43a8d77-38be-47e5-b51a-39d8c98490b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c522d7a-d95a-48d2-9ad0-e2709c58dbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36b0d1bb-c68d-45b0-9b65-bf78258f9434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47ebf4c-44b2-4d01-8d80-eca1a15df891",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8546b080-67eb-42cd-ae34-60bcb10ada7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3489fbeb-15ee-4ce3-bffe-48d6c49b76cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d332698-5ece-4ccf-91bf-847151074ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaab8b00-bf46-4536-ab2a-405c355afd4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a45ed6fe-81be-4545-9a79-92a0c0bfffaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bca7321-bbfa-47ee-b562-472d744bbdce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "443cb886-a259-4ccf-ba9e-703c4bcc441e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "168935a1-44d3-4401-a26a-e7eaf970ce74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6942d3b1-8a1a-4f2c-a8e6-e26b27a50a26",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ab3505e-f7e8-4d0b-a6b4-28916defe57d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e6cd7a3-ba37-4c0c-8329-98a0aaf0d803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70946630-abc7-47c0-aab3-78735a25893e"
            }
          }
        ]
      },
      {
        "id": "6ae6e64e-e650-4830-a0f6-8dc25acef7c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1c2b0464-3601-4cc2-8562-36a2ee090c9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7db6989a-725d-4660-927b-7fe379d1a80b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b169c65-7b07-4d97-b74e-0e6dd827c360",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1f49c9-4a13-4006-a5cf-29925707caff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a69a198-4ddb-4e5a-8002-0212986f8038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322cc263-2c28-4d0a-9646-72aaaeece19b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c0cd58-e27e-444a-bb1d-c14ca6fe30aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18869311-baed-4106-a4cc-475a8955e584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fee7e9f-6c0c-4146-8591-59a27786f21d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78197377-0a00-498b-aed5-e93ceadebfcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513a46e9-2a64-49b0-b239-46326b4d84e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c98c21-ef04-4853-8657-5ac1d8c44d30",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed61b8e-e132-4bb3-a0cd-5bb26c4f522d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562117a9-7e21-4cae-b1eb-bc3f2b929d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb2e51-e2fe-466e-ae65-1182f7bd66ff",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f012c6-6c84-49ca-99f5-ce3e9c05fae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874a3317-4e12-47de-a2f2-b0b46f8d93dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225a6b91-6382-400f-888c-8292d024a605",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6158f040-b776-4e0d-8263-3950a7b995bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e215c9-678d-4853-b146-630c662670da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6910776b-4776-422e-a09f-057f843ac5a7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1573124-63d3-4d3f-ab48-7a0347e5a003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f43896-94e6-4189-a5a8-dc9260bf0f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b7b798-74a2-4dc7-8f7e-bd41af732bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da7ad93-2d52-4735-9de6-eb51824a5a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02576363-04a0-420d-a674-ec85b0e5cd3a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cd8a3f-1776-4758-a8d7-7acfaee1b45b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8a0aa44-19b5-450b-ad18-a8c6a99a4f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01eda032-a2f3-4030-a36c-ef70ef80c311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e39cdf-9fd4-46a6-afbe-7f230a89a56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72578d7-48d1-480a-9a73-cf2118b25c47",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57af1f4-da6d-416f-8243-18f0661615b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affbc0fa-5eb7-4980-ab29-48e3902097a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f0cfc-154c-459e-97f5-aea4070a77cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47092100-3d42-483f-896a-57ca9c2be898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9f0cde-753e-4d5e-b4d3-44831ba0ee39",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606fc79d-8851-4d82-a585-e0dcbb6cf388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2438dc13-0705-4810-9e5b-4c12ec7fdeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97d05ae-02a2-4a6b-b216-e1d25867fbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5dc88a-0746-4835-8aa8-b3bdb459fbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e2f837-ac30-4df3-9ce1-fb5ebe3d0388",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f7eebe-6fbe-45ae-83ac-0d9cb8811618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9e46cf-8866-428b-91ed-c16a0207061c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c449b4-0840-4e06-b61f-4d42853b8a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaea798d-8c5b-4fe3-9687-eef408ca1084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16221ab3-1df3-4791-a139-a3fd0ca4e52a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6695305-3d8f-43f7-98b8-0d7ef0db190f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef24fe6-88b3-44dd-b0ee-a1dfff68f9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8357cf10-e23a-4709-9b57-de389973f5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a90c2f-a80a-49a9-91fb-74ad15d238a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f210932-e861-44bc-87a7-87825e86a498",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2587dcac-1071-4682-993b-ff3d937cdf23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332ff189-df96-4479-bc59-02971c2cb335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c443ee-691b-4af0-96b2-3a5dd64f3eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757db281-9bcf-4f94-b477-8878c7c4d8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf39fc95-279e-4b34-92aa-82877dc582c5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0333b073-b244-4008-ba34-361c15a8ffb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7841a9-3a55-4941-a245-85ce4c7c44e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5149909-9aa1-4322-9cf9-abd4bab0506d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b100e077-df2a-46eb-a327-4aee3806fae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b64e375-2c66-4010-b4fc-af562c421eef",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef5f362-a182-4f55-b3ff-4efd466ca59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8fb397e-d7f8-4cb7-b273-e78c55d56b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddd6461-b8fc-4d66-8c3c-ffbc68ca7c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2b272b-71da-4f0b-a75e-00287bd55f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d89fe5-ed8a-46d2-b796-9be61007d712",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4115dcb0-5573-4af1-a3cd-13a7f3965c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f5bd8a-db2b-4492-8958-033bd4fdece8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff525e6-58e2-4175-9933-c5a01510d35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32d47ed-2ff7-400d-aa36-59516e85a228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e69a158-35a3-4f26-94ea-1aaf78225f62",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d27f05a-3b8a-41df-b4bb-96c2c0723244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ad970f-ec66-4783-8552-b7df508219a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbcb267-b9cf-4c6c-8da8-2f3624d216e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1493ac60-f976-45f2-af7c-ca4e298d89e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6f21b6-410f-4a0b-9fe5-8d3f99cd4c6e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7c62ca-c95c-4351-8b68-fb5d57738e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad154299-c5c8-41b6-86b1-d1759d0f9fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e5ecc-73b0-4c53-b515-fcc56aac9dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd94fd5-391e-40cb-90bf-381f019dace7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bab5080-a677-4dae-954b-6ab185a2e1b7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828c5ebd-8709-4f0f-b03f-6c6d26fbc337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d1bb05-5ab5-457e-99c2-6ccde5140c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a1544-4a01-4a7d-ba00-f443a22038b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67bcfcc-1010-42d3-98b2-b7eff3bb68ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c90197-8f0a-4a42-a053-75f7a2224d36",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ab829-bee6-4348-8f9f-eb10925c59d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88feec97-9cc2-45f3-8faa-61424d1d2c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ac76f2-c9db-431f-b2ff-d1f3a746425b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1288af3c-79f5-4f31-a333-7d391d61d171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c34aee-c6ab-4b57-a4f0-9d394a04c831",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee26f81d-8119-42ba-9a2a-a358babc2d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95081157-2577-41c0-94fc-4016600d9be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47722f5-f36b-48f1-aec4-c9a775e75707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69632fc5-39b0-4d03-96e8-a728bda46fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8c4a64-3852-4d55-bcfb-3c76bc89da7a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072ae107-3466-4b35-9708-81599e98fc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f547729d-5ac1-413e-96ee-9dcdb9d96e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001e4d78-9ccb-4ba0-bb84-dca1a3124034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff323fa0-d511-48d5-aadc-41631dfbc793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842531cc-e15b-4432-a92d-2fe9daf899d8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0ffbe4-1bcc-4912-9c2c-7bdacbc2ca45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e57e383-39d6-41d9-a34c-b784603ceb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e642fd-0d30-46a1-901c-a754d25765e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e049bc2a-8e5e-4ab9-835d-06953564984a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadd1f06-4b3f-45e8-af40-ba7386c2ff31",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ba58d7-5f0b-41ac-b7a1-f7a6ae04e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142db83f-906a-457b-8005-8bade496d0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6588da9-68e4-47c6-983e-776548a63ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200f12b2-322f-44c2-a0a3-94777b7c49c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7773f7-8924-4b1a-9fe1-47b468fc061f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed40503-f22e-45c8-8635-39401e8f6e77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9a7bd1-c57e-48eb-abf9-0758f8183325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127e1a04-945a-464e-90ae-5aefee27ea21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c4efc5-f91b-4ae4-889e-f83e1e26d431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b059e40f-dda5-42dd-b594-9d60facfa1bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92a0b02-b73c-41cb-9fec-f2dd8f99ecc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4cb4059-7980-428e-aceb-3ea289105157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16c908a-2b03-4338-9919-7af0bc57b3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9aceb59-7a1a-4e53-9061-b350373badbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a439637d-01a5-4208-8bcc-275c973be2fd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29173d11-d343-4243-83bf-cd1021e1d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fd9018-7d4a-4281-83c9-d26cdeb39d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511c6cad-d2b7-4d17-b0ab-1b6a02e02c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0964d2e-3544-4f61-a285-16b69b25f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acef35cc-2389-4d05-b147-2a4de56c7e5a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd1d54d-4251-456b-9580-0910fbcf4f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6381b0-e9d5-4386-86d7-dfe132441dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4efe124-149a-4bff-bac0-30af28eaa0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1567e379-77a9-479d-a6ad-8e66a5693887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3fcd75-f1fe-4434-9bd6-7913d6945344",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb198df-d0e5-41e4-a7d3-ae7dc783f40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9722e75-684f-450b-8fb8-82358abd0e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943a9b7e-5fff-4d18-b879-8be1f05b10b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5db5a78-ce27-4115-a59d-86ba0f527e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025ed6cf-9b66-47bc-8246-8bc06fa55ca0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45962e69-f22d-4a6d-8ece-361d9778cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b84ac6-17d7-4506-be1c-f885a8de3f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a69ebe-2bc3-4bb3-9fd9-2a96350eb384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9ae7e5-58ce-42bf-a555-c8a2f91bc920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcb6b14-388b-4219-9447-e01719969863",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3849f5-3356-4436-bd56-08ed5335523a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5264cc15-7d11-493c-b45d-d50ea78e9cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb96a24b-190a-47fa-a877-5e38b02544b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5187fe59-3bfe-4c0b-91a8-6d96aabbdcd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a1da7e-a082-4eed-8bb1-eab37a91ab13",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7888cb-0dde-439b-9e71-42f065014124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b07c748-c055-4168-b553-9f3732dd9fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119e71ed-3f17-4659-a82a-a834df59d2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3bdca5-540a-4449-8497-ceadc0873029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314cd0b0-3d16-4395-971b-f17ed3fa3f39",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1ce4b2-45e4-4577-b18a-56be257a303f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bce3eb-f1e6-4acb-ac91-772e0f64de3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1195b7ca-4bba-469e-9532-e3c26684d31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456fd164-79a5-4d38-bc02-7e4d99127046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf76330-8464-4732-99b2-f446e5189ceb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89363536-d140-415c-94cd-68926a10c488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a61911a-1fd0-47db-b484-8c2f9c2f1ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d97e55-859e-4d71-9475-e69c3e871f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f75fe89-5990-41b2-b33e-08072d14fbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa978dea-0c9d-4276-9bb7-3b24e5956dd0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b07feb5-8954-4bc4-83bf-6f1fc66227dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c2643f-4a85-440d-902c-2fd0d7ee9178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0433c3d6-3219-4a09-8e7a-91a110f60975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddf1bf7-0368-4fa0-a9fd-6dbb4122dc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609c4ad9-6e02-4d45-bf47-e0a73aeee0cc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a9656d-afe7-4ea0-8a09-74d3926512d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a02fad-78e1-46d5-8800-9935ebcda3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad2a7f7-6e1b-4d09-bd5a-0220d8d99a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2989d222-ba84-4552-bf96-7394613ede6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb0c838-f09f-4b20-8217-373ef6dcb717",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1167978-a011-4d6a-9f1b-cc8c29f60559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08254de5-cd2c-42a6-b9e4-0ae24cb26ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc80fa59-0024-4b74-9fb2-2a838e4c4f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9526707b-6295-45ae-be69-33661e811dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919f93ef-c065-4e3c-849a-7546e249b05f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef81d1f-10b1-4f58-81d9-a4cd4be0022b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e30d106-a77c-46b3-92b7-807ba9d92858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23489738-cdc6-4a8d-bb0a-ad091f4534f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f4ead8-f7eb-41f2-a23e-c7b9057da5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84353f57-44ec-4ab5-9e21-7ba77c8122d2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c812bda-3e09-4ebe-909e-33a668fdcb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9632f779-3e1e-4848-bc2c-e335bcfe1189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e32f92d-4df6-4b0f-84bd-fc5d1b046ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4b837a-f1f8-45e6-905f-23a45e6ba527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fcd777-01dd-4ed6-8ac8-84fd206832a5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d732166-bd35-4ee3-af32-fd47c1ad1be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42739bda-b042-475f-bc69-55a93af94049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f69439-ae3e-4557-bd31-81c950b921cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d8769b-0f5f-4b57-ad34-400decd1a8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23565b7-b881-4fa0-82cb-0cbcc95d228e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4db9948-3bde-4f69-b09b-c224eb146052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f32e7b9-f835-4e1d-99dd-b292a47bfa17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2be70e-0a8e-4dab-a77f-0cc0bf880106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d7a40f-bec5-40d3-b8e0-34bc6f3a67bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1306ff8b-d557-4a92-8d0f-e54257f5da76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6be39a6-8fa9-4324-b943-6ba53340cd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997e7381-dfa4-402a-8a1b-c34b0780bbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1714d9b0-0202-4457-a284-b87fc6e2bb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab12ce4-d988-4255-8e3c-e3e274e3ae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc71c6c8-ef89-4a9b-9f03-829a5b5f25c9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95135668-09a4-4dde-84c6-502939f8e354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82402a2-f7e3-4cdd-b9f8-32daa2da45b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1a7d89-dd86-41bf-8c18-8a045661a77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc85d8b0-71db-4f0c-bbd1-d93a6e19d9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2972c149-6151-4087-9c44-e0a9e6eb8693",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316aa0bf-7eea-402a-80a3-30296f2cdf1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11824c8-bb8d-4bad-8b9d-1a1d565befee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b03f280-6a2d-49cd-9d5f-6995c384ad2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e194931-c5cf-43f3-a2ee-6329015d676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32402e4e-c2af-4519-af58-e4301e37432d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fefdd08-12cd-48a7-bc43-0e8f60ffa919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745cae36-b0e4-43df-83ee-13aa8c867879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b450e20-0dc3-4309-b765-d813df1d2d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa08dff0-a1bf-4dd9-bd5a-290c8642e869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8f5d4d-9084-4482-9576-d1ee43abe272",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c793d3c7-4e91-4c9c-a0bf-83c9e5c33980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc37eb4b-d026-4c45-9733-6206c6358ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cf666b-b563-4e44-9973-77f6cfe3f35f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a44dc97-8406-4182-8c13-e1cb3011b2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747298c5-5619-4a28-8bb3-37b031072867",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21605e65-b289-45c4-9281-9f4b215d9387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2f9fd1-a153-4526-804a-1ae41a877a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b604a7-047d-42e1-a4c7-1a0a69055eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89df51b2-c5b6-4b7f-adf5-3c28f4c27e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b9e36f-5b3b-41bf-bdf3-3a89f41e4105",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bb2ce6-640c-4a48-880b-54e09d78c64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33dd7ef4-98d6-4d29-ad9f-2336290a9099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23004a75-e605-4dd0-8b42-79045e437edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303b1268-0f1a-4681-bf3b-41d6a1872b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e213cd-0c9b-4ffc-aba7-8e7a64d3d4b7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369b980e-9585-4105-b78f-08fbcb115c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80fc4d6-9268-402a-b043-aa89a956057e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf4c309-4d3b-4799-ade4-4140663bd160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c08f3f-db07-4d1f-9eba-c3a112adca3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbc38bb-f891-4b38-966f-79326e04380e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb5447-c484-4b02-9695-abde8e111da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1afdefa-c1be-43df-902e-b4f49b25fa5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3411932-792e-48fa-bf4d-9953ab114fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeeb667-87bb-4ebb-af46-0ecf3caaf02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72938ab1-0932-4109-8a6b-c9d1555d6d92",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46982f67-61d8-4887-80d6-99d29eccf2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522921d7-48c5-4926-8f57-07cb49454c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2c3632-e82a-452a-a885-71444e0bc9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2ae71a-e6db-48cc-8051-665b108135a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6998c3c7-7152-41c4-a438-43d3b7e8244b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e531d1d-8d0c-49de-8f0f-392b7843f9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b12ffe-c711-40ad-8f06-95a35d210762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c77f8e-b0f3-40b0-962b-b0f39f9b9998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54029311-bd35-4f6f-a8c7-67c100d5ef82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d4ffc5-bf8f-4267-8be7-3c715a1fef07",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad5e085-1ed1-43bd-94d0-b4ae333693d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b333d0-072f-44f9-b5bd-cf712fc51bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a22995-ffe6-48cb-b337-b6e7ad505a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed66a5ef-488c-4633-9c53-06fa3374a234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e54e0d-9a47-4cf0-876e-e275a8225bce",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77785be-0381-4afb-b986-32e972a59bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb446fe6-28a6-46f8-9aac-370b2eccdc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8606d61b-28e5-4b63-b7bb-2040d3d93acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8c92d5-dc78-4019-a63f-abbad3c285ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f190f9ba-a066-40b2-ade7-9c4f6bcf26f2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fde427-24cf-46ac-975a-133ae720c63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ab5650-575d-4e13-aa40-e07dd6288b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e95fe6e-59a1-4a9d-b3bb-3e3a0ec3be4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15858394-162b-41f1-849d-aa1469ec207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6d2665-15f2-4636-b006-992d60921464",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5b7cba-a7b3-4e9c-a923-c7c992fca096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db139e74-1efa-4138-bf81-42ae0497a2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54b41ab-8bf4-40bd-895d-cd7deb0cea26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0309b81-7c50-4836-b935-8702867d5086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7590eb07-362d-411d-863e-81731addf18f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a06dae1-7c35-4e12-b83e-a12b27260812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785742bc-bcfa-4851-8320-3bf639633e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7997816b-8b60-49d5-9560-c9dc453f3158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b85bd7-d4b0-4f96-aa46-2eb70a48bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216200cf-62ac-4ff9-8f1c-097edb362667",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee7c082-8396-42f2-93e8-036f610e6d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfa75fd-4678-4443-acd4-643af0fda8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147bda54-303a-4e9d-b408-95198f50e156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a124501-1830-4b74-89f9-97a74df72ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a093c908-76ba-4bad-a3f1-95303bdd415f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95046c1-7acb-4935-8ab2-cab4bb2d88b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0330deca-267a-4a2a-a81c-8bcff4a7cbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25ce17b-a7cc-47b8-9c11-43212b0d1b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bb3794-aa8b-4036-ab6c-8027b4cd2479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5405a475-8235-4699-96c6-274917d469ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ebf254-779b-4c26-847e-0e0b861d36ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823cc928-5d23-490b-8732-084aaa32145e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51081eca-5518-424c-8e0b-9cdd9b8cf5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942e3dba-03da-4c0c-a725-401704cead55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e923d96-b8fd-4209-afd3-4affc47e5737",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495438a9-90d7-4fba-b7b9-f9eae826f2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28054d2-9011-4258-8672-5670a179ea29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9eba45-a12f-4494-b1f3-a6a9833585ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f262e0-c7b6-4676-806e-22766be9ac8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b536f5d4-5a27-451b-977b-5b44ebd4fde6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c6dbe4-f4d0-4703-9bb2-3b6bb721ab43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a75f7adc-b7e6-4228-8586-7da628bdfa1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f623aee0-4b49-45ee-b976-613b33e0646b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f25b7a2-2f77-4441-b2bd-4072212be7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bd9a87-2e0e-43b7-bf71-50e4daa9c4fe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f9e48f-8a5d-4035-9295-a23041cc1e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d43da2b-c738-4d08-b79a-8cd8d037e59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf73ee7-b8f1-4331-b3bf-1ef24b714723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd739a5-0828-46c8-bb7d-db2e8eedf738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41006a01-cc7e-4227-81c9-c671f182875d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac23a984-78de-4273-a94a-17a0f11e49a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abff8ad-25f4-40d9-abbe-a8c28bde62ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917e9f85-7cfe-4b3c-9685-b9b06f5dc780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8201a20-1a1b-4980-987f-fa53cfb8a810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdc6d9c-080b-4827-8f4f-6ecc39cd0e5c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324e4c2-0145-43c7-9875-41726d1575d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c199323d-bf54-41f8-a9e4-055583d1358e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd352bdd-c949-45be-a43a-0fba385f7b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc0d2e0-c9be-46ac-83c9-cc47e9f2a803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dba3be5-efec-41e3-9090-1f6eeb01d0ad",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118c94a-309f-4048-a7c9-adc141f96ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0e5c42-0541-4a3b-ba23-cd9a86685447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65d1f8c-6466-4d34-a0ba-bf9c81447828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aa5d86-6988-44ca-b660-14c902cfde3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950d7384-584a-41a0-b199-0b6ef18b3b8e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55648b9a-f2c0-4937-93d1-dcc72710f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b44e52-d027-44c7-aab7-c3cfe6faa3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc0467-56bc-4a9a-90d5-a362eea38bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4869f9e7-91fc-4f5d-9159-2ec04288c880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06783bfe-efab-4c53-8856-7a7da521650e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e412659-c48b-4b6f-af8a-f48f7fb60cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3daa32a-90e0-42f0-a4d8-95b6be00e03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2659e32e-cfdf-4b65-99da-530d9feb588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea58530-3cbd-4b73-9194-d7097fd3d553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfeebe1-627b-4dcb-be74-33b21e9334ab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5c1dcd-3d93-47d4-aa13-846089b5097e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935427c7-dfd7-4d51-a857-b8c189d15088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f72bff-9f6e-4aa6-97c1-260d5a1c4f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08d4c51-1c98-44cd-a14a-42982a02cfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f167b8-c2d3-4dd4-9f0f-deae6afa1840",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a931542b-1dde-417d-a8a0-d6a4fd3978cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170d2c47-f977-4e4e-8ab7-12a6de87ed31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd045a7-1866-45cf-90a2-895c3d6c4e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d37141-05ff-4b19-bb52-db6a51253bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8186e7-38a6-4d81-9ebb-61eada3caab1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43efb81-7f19-470d-9c73-460848af4d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5bb484-f119-4c25-8808-21bb6fc64e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ecbaec-babe-43fb-8538-ee1222c2be3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9093c840-d9bb-42b2-8e8e-35ddcf0a678d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641cb023-8339-4900-81c8-4cb602fe8cb3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922b6ad9-228f-4099-a3b8-3d1f0d760581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7c018a-5cd5-4902-8858-1b9e276aa1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383085b6-3b80-4728-b771-fe15dfa645a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbeee72e-1746-4253-836e-866049ae7337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd04641-44b7-4bdc-a73a-a5313dabffb0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00f8658-b52f-4733-a363-2a95c6f911f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55fc9127-a813-49db-865a-d1079941fb0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a76807-4c8a-43e1-8b73-e5b1149799af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd81c83-58a7-4287-bed9-b9326a06341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e41ebf-6baa-4332-9e31-36d1876270bb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0338b9-75c4-4473-a5a8-6bd83cc1469c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779bb57c-db98-463a-8ff5-7914a72c2157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaae5275-4de1-45cb-86a6-0c8bbf8192b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5228f0a4-eedb-4abb-94f6-7a75f1bc1526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dabd98-9c2a-445a-b065-d1c7dbe03e18",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4ffbe-8259-4498-8f75-fe0c3d53448e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29b2cb1a-f209-44d1-8b0d-3d5c01fab74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83503ff5-029b-4310-828c-ffb9df2b8fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9c5ebf-6970-4d1a-81e9-4e27072ddf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdc6be4-5f7a-4b08-bbe3-9f2f3095135d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750db0bb-3772-4d3c-a3c8-4785a738b727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef9746f-b838-4f73-87c2-d036c8dabf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60355c47-3b34-414e-8639-4265b3754c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392bd2a6-c902-438c-bc9c-f7601ab608bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa34df4b-2016-4bc6-bf17-e8455a3e7419",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0600f8-eae0-43cc-80d2-b0d41c2d6fd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f134156-db9f-45cd-b0c6-c18cee8ee4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0355c043-7e93-47f6-9b92-bfbaab1c4e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0690c4d6-1922-4cd6-9625-80708b7974e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2d6f53-b7b5-4515-b8fb-71bfdfa674a0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd01514d-5211-4cf2-9075-09fd60318350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb936f2-4445-4a07-a391-0c8fe75dc5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900814ea-5d27-4cda-937a-d9eb69f881cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb71fe1-bb74-47f0-9687-cf338f2c6848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7681d5-734e-4a79-8f0b-cf8d9fcd979c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b760215-eba2-4d27-8e32-7ee165ae8651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c90bb0-f841-487e-ad0d-ca6686a1a8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1dba08-b435-4a73-ac04-22bd6c0ce34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223fd0f6-953b-4bf8-b58e-960d8cff5bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308db9ab-f811-4864-b750-132952cd31b3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72388ef-809a-45d1-9fd0-1e346db87c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4712e8-7a50-4492-9505-d03879df19dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a05806-5f82-4692-b9b0-e906270d86de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b481eae-0113-4b0e-840c-e9a66b3a55e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf53ba41-e5b0-4ce9-8d70-68fadf98277a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676a652-f4ce-443f-b28f-171704e1a22a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74eff3e9-4635-4bfe-a397-568147d27fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cced050-2956-477e-b5ff-8da6043700e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1d7525-fe61-451b-afdb-7e41fba3f84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6f5bad-55e0-49c9-858e-5664c0f29b3f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9073087d-82e7-44ad-9dcc-8094cc8aab4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5cbc97-1e86-4219-8c4c-d55337045330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65d3e6c-fcde-49dd-adfd-daf02fe503a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7dc899-77bd-4160-ab73-5c5214d26cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a04bd93-fd8c-49a5-a286-f02da180dc52",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5549b539-7a2c-484e-98c6-d15940510448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d798d181-5e09-4213-a7f7-a60dddbaf463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc8aaf3-8352-447a-bdea-a32cc83cd5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81256156-2f6b-4d78-ae65-e309ab0d47ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4442a3a4-6cf8-4403-a02b-4d55b9ecba83",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7db2df0-6724-40bb-a742-3a4579e7c152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bb61b1-efef-4e59-bfeb-f67be1c3352c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f56a66-1eac-47d9-9ee0-067adcec945d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ab1a01-c830-48e2-8121-e3d022eac05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab7bb2e-fd0a-47bb-b2fc-5e32e50506e1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b3ff5b-c99e-4755-bccb-719550924b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e053b956-6af7-4466-803e-6372893504b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7545c1-e2ca-4487-801d-66b052d1d459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28277d84-dfbb-4e82-a876-f5f3d62c2525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4183cbbb-8e10-45c9-8772-90c294d8f484",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7143b07-6dfd-45d8-a9d8-7a3a4bc1e2e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b40aea80-2954-4265-8078-2a130555933b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89af276e-3f0a-46d8-9001-f5a4e79617a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e34a19a-fa0d-46f7-86fa-0e916000b1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d5cb9e-8661-4cc6-9ab4-9006dde19df7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23087690-2f2d-4fb9-8b5f-e3c48ef5caa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edacfe6f-3011-4092-8f52-141e78f8985f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f491c6c3-f933-4464-b2dc-d9de680af2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4267a7b2-4341-4c61-a97f-17e47bb71c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ab40cc-1aee-4996-a61c-1c8bc45eb1e9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1324ca-c07f-484d-a026-aece95f13116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13b0cef-a209-4345-aa0a-904c36679bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a939f3-6e5c-45dc-a5be-deee7366ccb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5af55e-32ce-424e-a7cf-5db296c5742a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbd2ae3-68b4-49e4-9587-77bd28e71ece",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7036c694-7aaa-43bc-8f9f-7e1945d805c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fa246a-da38-435e-bf39-e53e94d9fdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e328ad-a336-4e73-9d87-ba238b6b6de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12258e13-3dd1-4027-a845-98368cb369a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a76ede7-aef2-4bb5-a2e3-4c5969becdbc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad374632-4857-4cc3-8034-7b94bf53fa88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee66e121-253b-4c4a-90c8-02b029ebf6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69f0ee9-7d51-4155-b01b-e24bac76145e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c333d3-21f8-4914-a37d-06f3c28b29b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009149b9-29b7-487f-bfcc-829805597bb3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627fdffb-5b02-4edf-8c3f-b46057ba5583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a2daf96-9474-463e-b7d7-56d98dde0504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0584c8ca-11c9-4fe9-a0c1-5cc899885ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f80541c-211e-443d-a5e1-b1a03fb14abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840c66d3-5d06-483e-acea-7f5e9a607bb6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a90735-8126-42de-bcfb-379deff65fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f038ea3f-616e-414b-8466-43225acf9d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d64ad48-ef41-49c7-9e5f-c22f56f0e848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ed44ba-9f17-4417-bb54-63812b8465e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579e7cf0-c127-46d1-8a89-767f264be2b5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f774097e-67b3-4ec1-9561-39fc6155feab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b875954-54a0-4f94-8e4e-0fa7114851e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25396f5a-501d-47e1-936d-53d05268ac8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7dc478-4338-4256-97d5-6a49447e2b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e1a432-abc1-424e-a0fe-1cc2b0b9d9c5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bb3bf4-bc17-42d7-b6b8-b7d9cd29e600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa341964-d899-4055-9c98-a066aaa9f5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d79ad90-1b93-426e-9833-d59cd9ab42a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c5f123-8a1b-49d9-b701-be7083259bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de81e97-c045-4e3a-9a20-2f0846935bf0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b837e-03f9-4f03-9963-5e63fae4d723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33c8cc8-0c88-4b6c-a715-08d89f38d9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ab7480-acb0-4668-bae7-ffa01e4a429c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a74ee4d-c027-489b-8a6b-c7dc2d334863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac48690-eb43-433c-8bcc-0b4eb09e52e0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c6312a-46b6-4769-910b-c9fd74a889fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32e83f0-b328-42df-924a-7718b3ea9ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dc11a0-d25d-4007-8b30-a3559aa38f0d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6032248-f96a-4e5e-8c58-e54009f4585a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf1de09-810b-4469-9f31-00a06b649e6b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2582dc1e-b70f-4be5-8fb5-9d2d621a9ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8b1f01-adb2-4ce4-9e73-1416c11bd6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e2bed2-4c18-4013-b2fc-b72f4c5e72f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b04b89-312d-4f26-8db0-93d180a6d90b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aca4479-6e94-4045-b6b4-dd160a9b1239",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "488bba08-3635-4826-9854-a339e64dcc9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85bc6c4e-8976-4707-ad46-29f772d34c1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5849c70a-8840-4c9d-8e51-4f5fc42e45e3"
                    }
                  }
                ]
              },
              {
                "id": "fb42d06f-eaa4-400e-9427-0bba682304ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f01e415-7f72-420a-873c-6d7f204e05ee",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cb1e06-df82-4895-9db4-fe642b8b09df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "445f67cf-8318-4bb4-bb02-4f00d5095d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6df95f-1f79-4291-828a-3922f006f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d74cc65-dd54-4623-8714-7c6930b9e7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad288a4-a1ec-42ee-9da0-bb6544b54a9d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7f9168-446e-4b87-aa87-5e907cb0bb65",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e59a719c-3d47-4631-8cf8-62e490d249d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5441894-6cae-41b2-967c-95aeec4f8dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "412aa146-b479-447c-87ff-d564bffafa03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b2f1b84-2a4a-41d0-905d-9a16350d56af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f510aeb1-4f0c-4fb3-8a70-b709b061d634"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a517340-590a-4f73-8652-83e567248993",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a507417-a429-4d00-bf35-0cbd03a177c5"
                    }
                  }
                ]
              },
              {
                "id": "68a8c7a9-ce0a-4f78-947b-419713d78379",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1f5778dc-146d-45cb-8a57-1287761ce019",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdace8a-3cd4-4d76-980b-2425fd0fe5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc01864d-7655-4516-a301-a08d183ecb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5c4dc0-1162-41b6-b285-42faf763a68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0575bb2d-f061-4018-aa22-567be647d3d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3add16fa-5006-4116-b5ab-f17181fae36d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "738743c3-429b-418d-954d-57a84b1c64ad",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "701e55a5-8dcb-4ce3-b923-530f86f3a486",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b0d28221-9d04-40be-bce8-a4af25ec9333"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eadfa381-7a82-4042-bea5-4daa212190ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "836fdf1f-8603-467a-919b-017d394eb3b4"
                    }
                  }
                ]
              },
              {
                "id": "1a343bb1-cbb4-4696-b346-7d12d42ddb5f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3071f1cc-067a-4aeb-a6d0-178e171d538e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7732cedc-cac0-470d-9868-b51caf323ad3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17117261-b2b8-4555-bacd-bf80717507e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4128f7e9-2095-48d8-9586-5dcc7f0b81f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d24d1503-c5ce-4708-b712-6ff7c474d33d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e78d9fe1-c573-4673-b544-4216665d2ad1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c0411fd-f6db-4075-ad90-2616df9e5a58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ad3f381-d7ae-4696-9787-f3f4d5721fdd"
            }
          }
        ]
      },
      {
        "id": "97433a1b-c84e-4eec-9dcb-d84866e6248a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4b9d1c1b-67ab-4c77-b6d6-75c384196075",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93037b48-aaf0-4140-9731-7fd3b096f6ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19227d5a-079e-4e44-a744-0d7d5900a69d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "da4c8bfe-89f4-4239-bb24-fb2f5b6ca6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c530753-1b20-4cb5-8f4c-77cd70c06a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fb48044-55cf-45e0-97b9-528d855dbc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad18beb7-fe96-4c1c-bb10-2fb0c4c95bd1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aab8f50-965f-479c-bc80-c2ed8a2d02ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "77618040-6faf-4df8-83e2-60c52f33d904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5248fa9-b6cb-4586-9f75-5a4e951b0dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31526a1e-9e06-41ec-be84-b66a10630310"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaa953a0-77a1-4725-8be9-a63cd9432fe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "613aa0a6-ec1b-4d01-b152-11695ae2868e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e59730b-f70e-449d-8830-37cb9b484548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c58477b3-4adb-40ce-b57f-057bdfd119af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e37f59a0-0549-4f5d-8e40-5fa870e48437",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05c2a7d8-5688-4c3b-90c3-d653faab87f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28afbc9f-0a37-462e-81a6-89a76ecac573",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "926e276c-0e9e-4c08-ac1d-48467d8a9bdd"
            }
          }
        ]
      },
      {
        "id": "fd905124-f920-4975-b748-bd13bcfad2e0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "059f9622-23e0-49d1-a789-530ad0232a79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a034824-76c9-45dd-9f15-af308c307d82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be39784c-a8cd-4881-9904-a9ea32715403",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d22c6e5-5d90-47ef-a209-d285ba0a221f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4800ee5-5ad9-4f79-9a8d-caec142b3b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7e9d47-b287-4f7f-a374-1546c1b3a815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdb0729d-106b-471e-8c6d-ba84f01895a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72721a9-d108-4512-941d-a3223e4ede10",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56705180-9920-4600-8287-f1a226056b72",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "87c500d0-e6c6-4b31-8f14-7f6716dc8c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a1460-578c-48df-8f4e-52add9530e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f07bc8f-2ed1-4164-bf93-dbb13f02412f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43b48b02-1688-4c3e-ba4e-6487b37b0f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a507ed6b-5062-42a0-93ca-9a1c90e0a30a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6929dbf1-6040-4ec5-853d-8e1dc892e07c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bee7a224-e588-42aa-9a44-db6065493e8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d34c893-e255-46a7-bcc0-28cf830d63c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8643514-355a-4041-9e13-bcd70d7487e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2ed5a73-7440-4f5f-8f9f-9e091b63cc8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d772074-c930-436a-a5eb-a7d912169068"
            }
          }
        ]
      },
      {
        "id": "610f85c1-0d91-4fef-8e14-5c5fd79c07c4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "77cd2b73-c4fa-44d7-ab32-c1755666bd8d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d21f21c-fb67-4309-9c2b-563a3c6d86c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99e44bc2-e29a-4c56-b96c-8083a81bf7c2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c40520-48a9-4b07-9c66-19f2aa73d387",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5ccef95-be8b-4a02-b254-95b95a62f5a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fafd4cd-f443-4a51-90ba-31be827f6b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e128117f-1283-41fd-bfe1-aa701f67ac76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c21de-b637-4d36-9744-5a0ab89f4ed3",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f371124-07e3-46ea-8c08-200137d32749",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "59b5eaab-2c81-4006-958f-e724c153d14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729e3bb2-fa44-4dd4-b996-8dd1497fd94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3987e606-7495-4fbf-889e-c16cbe88a2d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8472f59e-3fac-47bb-8a95-6dbf4084cf48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04d330b2-ae45-400c-b1eb-92036d1ab63c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "270e247e-7f07-407f-9433-4f2fe7698bd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6befe05-29e0-40ab-bbc7-ccbaeb8fea1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64fd017e-b44d-4551-9563-42b099d59c09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a601ab19-2d8f-4137-9b51-931ddcf9a0bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dedd807c-86ce-4fbf-87aa-bff1ce7cc3d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19d05058-39a4-447b-a9b7-b30cd112a20a"
            }
          }
        ]
      },
      {
        "id": "a5d3b669-9de1-4cdb-9256-b665389185b9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e37bc586-6286-4844-9d47-3f16c2bd9c12",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "059116e4-f287-49c6-bc7d-23f82df61d14",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4019fd26-edbf-4f58-bb6a-dbd207c544d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "651c55aa-30d1-4c18-80c9-cd4b2cde5b23",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fc9cb87-5f1d-4407-bdab-103d66c68ec6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 650.15,
      "responseMin": 18,
      "responseMax": 8662,
      "responseSd": 986.7331280349,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681950939184,
      "completed": 1681951118971
    },
    "executions": [
      {
        "id": "4cc1bdbc-e979-4b30-a700-2631b1e17954",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "72dbd20d-cae6-4ecc-beb1-c90970269713",
          "httpRequestId": "ad9d667b-f64c-4399-9855-8876c214ed5b"
        },
        "item": {
          "id": "4cc1bdbc-e979-4b30-a700-2631b1e17954",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7c27928f-4301-4fcf-bfc9-e54a7b1728dd",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "36e37aca-cadc-4c33-882c-9b105a837cb6",
        "cursor": {
          "ref": "d7ed0a0f-c354-4715-ac1f-a801ff0fb22d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d1d97d96-83e0-4e64-8717-040e54f1b14d"
        },
        "item": {
          "id": "36e37aca-cadc-4c33-882c-9b105a837cb6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "16df2926-2f82-447c-a754-ce9471c611cb",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "a24bef9b-2f1d-4301-a823-0af91ea6ffbc",
        "cursor": {
          "ref": "0dc36e59-d218-4b1e-b202-15abeb2a9174",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f1796db1-fd1d-4db8-a415-5f86d97aea72"
        },
        "item": {
          "id": "a24bef9b-2f1d-4301-a823-0af91ea6ffbc",
          "name": "did_json"
        },
        "response": {
          "id": "b3ad6a79-8da1-4fc6-bc3d-b4f8f495a405",
          "status": "OK",
          "code": 200,
          "responseTime": 1585,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283fe20a-fea1-4225-af42-677b2e3d2ae7",
        "cursor": {
          "ref": "86d4ecc8-e5ff-4785-b495-67d8459a4033",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "217286cd-1d22-4886-8f16-b1621ea9cf02"
        },
        "item": {
          "id": "283fe20a-fea1-4225-af42-677b2e3d2ae7",
          "name": "did:invalid"
        },
        "response": {
          "id": "d08d158f-ab9c-41b7-bc2a-e1b51e6d0b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283fe20a-fea1-4225-af42-677b2e3d2ae7",
        "cursor": {
          "ref": "86d4ecc8-e5ff-4785-b495-67d8459a4033",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "217286cd-1d22-4886-8f16-b1621ea9cf02"
        },
        "item": {
          "id": "283fe20a-fea1-4225-af42-677b2e3d2ae7",
          "name": "did:invalid"
        },
        "response": {
          "id": "d08d158f-ab9c-41b7-bc2a-e1b51e6d0b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e767f47-a7fa-49a0-90aa-b3706785283a",
        "cursor": {
          "ref": "4bdf5bc8-32d3-4aab-863c-ebb645759c66",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ae254ff2-ac79-4476-b0ad-394ab49b3273"
        },
        "item": {
          "id": "9e767f47-a7fa-49a0-90aa-b3706785283a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69857719-a7d7-42f7-9591-4bd805e9469d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 606,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6aefc3-8b8a-4dcf-aeba-cefd62c2c3d1",
        "cursor": {
          "ref": "cbdf8b25-7791-4357-8d9e-1257eb648f9a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "379ea7ad-510b-4683-b6f0-7605ed2f0304"
        },
        "item": {
          "id": "6e6aefc3-8b8a-4dcf-aeba-cefd62c2c3d1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9ddecd35-2453-470b-95e9-213fc8df9eee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 505,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd988d-9a67-492a-9d75-7e641403ef3a",
        "cursor": {
          "ref": "26efd84b-cf0c-4a6f-87d2-6a14af44318f",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1dd7b932-e7d3-418e-aade-01e456dd16d2"
        },
        "item": {
          "id": "10bd988d-9a67-492a-9d75-7e641403ef3a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bca48ec7-3faa-46d9-9fd5-1a861acb8b81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48348cfc-2e2a-44d8-b2d1-6855381883b8",
        "cursor": {
          "ref": "9a286c25-20f5-452b-a5f7-f01ec3210ebf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d5c69dd5-5245-4cd8-b5c0-4fb4fd863e49"
        },
        "item": {
          "id": "48348cfc-2e2a-44d8-b2d1-6855381883b8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4d865362-2ee4-4300-97b9-f80a90937613",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1407,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48348cfc-2e2a-44d8-b2d1-6855381883b8",
        "cursor": {
          "ref": "9a286c25-20f5-452b-a5f7-f01ec3210ebf",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d5c69dd5-5245-4cd8-b5c0-4fb4fd863e49"
        },
        "item": {
          "id": "48348cfc-2e2a-44d8-b2d1-6855381883b8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "4d865362-2ee4-4300-97b9-f80a90937613",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1407,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6daff40-f6c8-4919-a77d-b7bb7639178d",
        "cursor": {
          "ref": "83bb1eff-1930-44e4-9b9a-1ba068fe416b",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "46de49ff-53fc-417b-bd8d-ad54384c408d"
        },
        "item": {
          "id": "e6daff40-f6c8-4919-a77d-b7bb7639178d",
          "name": "identifiers"
        },
        "response": {
          "id": "44e4ce7b-99f4-4803-bb13-0472d446716e",
          "status": "OK",
          "code": 200,
          "responseTime": 898,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e568a30-deff-4cce-bedd-5439e636d206",
        "cursor": {
          "ref": "d8c392c8-2ee3-4345-85ee-82e9c9ea9f39",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9616d473-0236-4f25-a763-63c912276745"
        },
        "item": {
          "id": "4e568a30-deff-4cce-bedd-5439e636d206",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d2aa66b-86ea-4966-a10f-c5767d8b5df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e568a30-deff-4cce-bedd-5439e636d206",
        "cursor": {
          "ref": "d8c392c8-2ee3-4345-85ee-82e9c9ea9f39",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9616d473-0236-4f25-a763-63c912276745"
        },
        "item": {
          "id": "4e568a30-deff-4cce-bedd-5439e636d206",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8d2aa66b-86ea-4966-a10f-c5767d8b5df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6874a8-a9d1-4b7e-a386-e8019a7f1876",
        "cursor": {
          "ref": "1d80371c-28ef-40f7-86b8-b8cf86ffc268",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "59d12f73-1aa3-45c8-80e8-9751007f92c7"
        },
        "item": {
          "id": "9e6874a8-a9d1-4b7e-a386-e8019a7f1876",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "669af4f9-3b60-4687-beca-1239424170ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff78f8bd-d066-43fd-9bd3-7b1d57916cb3",
        "cursor": {
          "ref": "cce841d5-38dd-4734-a851-c66c4ca74c75",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e2b67c93-5d04-489c-a0ba-35b51f31feed"
        },
        "item": {
          "id": "ff78f8bd-d066-43fd-9bd3-7b1d57916cb3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a86493ea-2ad5-4720-b8fc-766b2488634d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beaa8f66-afe6-4395-9dc3-6c1dfefda2ab",
        "cursor": {
          "ref": "491b63f2-2218-4d43-b4cc-eb1ce5f4c5ab",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1de1be46-5747-4652-8e0d-103c373f920e"
        },
        "item": {
          "id": "beaa8f66-afe6-4395-9dc3-6c1dfefda2ab",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b340455c-2e6f-479b-a590-c0afcae4e942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5475c04-4013-4f75-8417-5cf781215fa3",
        "cursor": {
          "ref": "a3aef2e7-0c3c-48ff-abc4-9ff557277e47",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1638f6c3-e3b9-4da8-b2ff-cb96c0f1ed72"
        },
        "item": {
          "id": "a5475c04-4013-4f75-8417-5cf781215fa3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "956a47ab-ae2f-4d60-9007-e0c1b423fd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199662d1-db3c-43b0-888f-a2dfc9343dd2",
        "cursor": {
          "ref": "bcafa0af-b8e7-41e3-ba05-79abf7b025d0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0947587f-5b7b-488a-bca5-79cb0f900a25"
        },
        "item": {
          "id": "199662d1-db3c-43b0-888f-a2dfc9343dd2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8cbbb340-fa18-453e-a72d-fefb53d38e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045e76de-a17a-4fba-bf0e-a1427eb8c102",
        "cursor": {
          "ref": "2998eb8d-44f5-4fc4-964a-ec379c0f4c49",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d84d6246-79da-46b8-b305-24198f034007"
        },
        "item": {
          "id": "045e76de-a17a-4fba-bf0e-a1427eb8c102",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "029b514c-835d-4e36-b513-95b92807161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a9a6f9-6aa8-4ae8-b3bb-04b885682739",
        "cursor": {
          "ref": "e166a1cf-8f74-4242-866f-ee15c71e9ddb",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7a3ba764-a149-48df-bc2b-fc6f8d4bf9e0"
        },
        "item": {
          "id": "24a9a6f9-6aa8-4ae8-b3bb-04b885682739",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e6902433-a4e7-4f33-be12-8c6423c24da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3186b5-c0a3-4f9f-8b81-c4aeef1e808c",
        "cursor": {
          "ref": "231b00aa-8d65-4cc9-a79d-2f5321d0ddce",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2b868fb3-f4f6-40d0-8941-ce6cbc60ebad"
        },
        "item": {
          "id": "ae3186b5-c0a3-4f9f-8b81-c4aeef1e808c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b537634d-ed8e-47e8-be2d-254b1bf13369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a63e9da-50c5-4ccc-8842-7a4301d0a231",
        "cursor": {
          "ref": "36cef6c2-56bd-4a4c-9400-882dd5487755",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6f2ada34-3a4b-45a8-aefa-3f0bf242083c"
        },
        "item": {
          "id": "3a63e9da-50c5-4ccc-8842-7a4301d0a231",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "004bf7dc-de5a-451e-b5b2-c232131b5942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcc5fa1-d00c-46af-93f2-0f6c0e683751",
        "cursor": {
          "ref": "5fcc5a5a-dd88-4848-9041-b7ee297674e5",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4c41aee3-80dd-4c93-b41f-4b1d7b743076"
        },
        "item": {
          "id": "6dcc5fa1-d00c-46af-93f2-0f6c0e683751",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3922e2e7-590e-414e-b285-b4911c3705fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b188f808-ccbf-4d5e-bd80-7ceb12feae33",
        "cursor": {
          "ref": "ca7955d8-20f9-4e8c-b922-6df22cd0b1eb",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b01fbbee-0269-4b9b-bcf9-5f14724325fb"
        },
        "item": {
          "id": "b188f808-ccbf-4d5e-bd80-7ceb12feae33",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b0ccc671-be8d-4cda-8610-f6ab7ed9319f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2125c94-7d65-474a-9ef9-918b77399cbc",
        "cursor": {
          "ref": "31baa5fc-d9a2-4933-9d97-4d1b0d76ac4f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "66be8a35-226d-4a93-878b-9549b0c8961b"
        },
        "item": {
          "id": "b2125c94-7d65-474a-9ef9-918b77399cbc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e8318fbe-8bb4-4c92-bcca-969a0c7d88de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff73f67-f6ac-4f42-a872-b2ed5418b0ef",
        "cursor": {
          "ref": "f1bbf18b-4742-483f-a18d-dd32818e0583",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "08f28788-44ca-4cc7-ba77-26f2e4e08e00"
        },
        "item": {
          "id": "6ff73f67-f6ac-4f42-a872-b2ed5418b0ef",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4be4b463-8f35-4157-8242-b7166956fe2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf395ce-159c-40da-a952-86c8093547dc",
        "cursor": {
          "ref": "0abfed7b-9a4d-4421-ad40-4ebc6e67aa99",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6b0fb015-28a7-4c7e-bf39-6ed4da180c1c"
        },
        "item": {
          "id": "1cf395ce-159c-40da-a952-86c8093547dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ee9bd2d9-ef4f-4684-905e-21c7ae59e1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406f7d56-7959-466b-8373-f4678b4cd518",
        "cursor": {
          "ref": "1d37d4cf-8051-4c51-aa63-d7fc3042f40a",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7fb511b4-2166-4c36-86f1-0b00bcc65d09"
        },
        "item": {
          "id": "406f7d56-7959-466b-8373-f4678b4cd518",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c3469cc9-e4d1-4f7d-8b83-0e21112664c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6710b3a-c9f7-414a-9028-70b41cdd37fe",
        "cursor": {
          "ref": "b2f05b41-53d5-4e89-a382-0b80fccf9da0",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3c83f195-7d46-4dd8-9bd2-395de309f2ec"
        },
        "item": {
          "id": "b6710b3a-c9f7-414a-9028-70b41cdd37fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0f4c18d9-b06f-4b5d-8739-ce1d6e7315a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cc2f1a-f878-4cca-b2c5-5c7442e5794c",
        "cursor": {
          "ref": "9322e1cf-113f-4648-a2be-7990a95eead8",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e475600f-59a8-4c2e-bf33-5b17be736551"
        },
        "item": {
          "id": "56cc2f1a-f878-4cca-b2c5-5c7442e5794c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aaf472a5-b516-4a94-9358-67d63e5c0ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf34886-26c5-416f-b6f3-ac90109442a0",
        "cursor": {
          "ref": "40da1f00-cb27-4baa-80e0-8f98a5ce6225",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fb354b46-b817-4a9e-8ee7-de630424d150"
        },
        "item": {
          "id": "aaf34886-26c5-416f-b6f3-ac90109442a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "457dceab-4def-4aa0-8742-8bd225ac09d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db0d2e0-1092-430d-870c-35e9124f7a0e",
        "cursor": {
          "ref": "bdca4381-6d09-459e-9d37-9c4db2d51153",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a6905852-9f98-41d0-96ad-845ca87f6dcc"
        },
        "item": {
          "id": "0db0d2e0-1092-430d-870c-35e9124f7a0e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9a4d0dc3-1d3e-4297-b206-2cd4cb269c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe169838-d404-49ca-af6a-d5b162145878",
        "cursor": {
          "ref": "ae0118be-95c4-45f0-a0d9-eba917b398ac",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ef90b4c3-2dfb-4328-afc7-5c5138dc9d31"
        },
        "item": {
          "id": "fe169838-d404-49ca-af6a-d5b162145878",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "455bb49a-974e-4663-ba8c-3b9354a82d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3e4ade-beee-4fed-834a-f3f1096bb167",
        "cursor": {
          "ref": "73070835-008d-47ed-bde9-1497241a409e",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a5726c15-0e6e-4105-bc82-915e8a08f066"
        },
        "item": {
          "id": "fa3e4ade-beee-4fed-834a-f3f1096bb167",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f0338c42-7f99-4eb2-89ed-132d5b2b0307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce258045-a7a7-45e2-a08d-ca00a70f0a40",
        "cursor": {
          "ref": "b988b2ad-3307-45fe-8ba7-6efffa51164a",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72bfdbba-331f-4f72-bd13-09271109904d"
        },
        "item": {
          "id": "ce258045-a7a7-45e2-a08d-ca00a70f0a40",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a78cd180-97ac-43fa-a2c8-1b27efd413ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeb757f-453e-4209-929f-6686fb6bb1a3",
        "cursor": {
          "ref": "2ad44269-f8de-4600-af91-15c62f65331e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d14434cf-9342-440c-9ed3-3a00d3b3c8ca"
        },
        "item": {
          "id": "cfeb757f-453e-4209-929f-6686fb6bb1a3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c77dbe3-b24c-4e76-9c99-579415903365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea23d04-47ae-4b53-8263-9f9d721a0eb6",
        "cursor": {
          "ref": "14ee265d-6663-48fa-ad5c-ad61e5625036",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8b7fe55e-e6e3-4202-9bfd-60da2f2d36fb"
        },
        "item": {
          "id": "fea23d04-47ae-4b53-8263-9f9d721a0eb6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4c853665-b758-4605-bfd5-1bc2d790c4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f58d35-03d7-4bec-9f82-201ebfcbdcc3",
        "cursor": {
          "ref": "9fa2d118-f168-477a-93d8-da9807cfffbd",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5e96c11e-edd1-4691-bbf8-dfefa6699b98"
        },
        "item": {
          "id": "f5f58d35-03d7-4bec-9f82-201ebfcbdcc3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "42895e40-826d-4180-9f62-497692c0ba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77da6825-d467-4418-8067-1cc7449151c2",
        "cursor": {
          "ref": "218acaad-9bcd-43fd-abf2-bff59b33038b",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "756d7790-5169-4120-bf02-a0c8b68b940b"
        },
        "item": {
          "id": "77da6825-d467-4418-8067-1cc7449151c2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0279d0de-eda2-4140-b069-de2a4acfca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0ebb9c-13cb-4522-8a90-db85ae650a5f",
        "cursor": {
          "ref": "755947fb-991c-4868-84cd-8858012a9e41",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a722ae83-ff28-4d4d-be74-a89636e79631"
        },
        "item": {
          "id": "6f0ebb9c-13cb-4522-8a90-db85ae650a5f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f10fb4a1-da11-47ee-a234-83bb4f65f4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784a2d8e-ebca-4dbd-84a9-9a8a19ff9cb2",
        "cursor": {
          "ref": "528ea822-d470-4322-9867-60c0dcec71d2",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2810e049-c28b-4b5b-8154-cfbfaae8c762"
        },
        "item": {
          "id": "784a2d8e-ebca-4dbd-84a9-9a8a19ff9cb2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4366f156-708b-4c8b-a6ec-c7501cb67857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fd43b7-9fa3-4ffe-8684-ba895be396d6",
        "cursor": {
          "ref": "6ae9f12c-cc98-48e8-83ec-c79153b5122a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "15baae65-59b6-4fa2-bf2b-0f1fd157f64e"
        },
        "item": {
          "id": "52fd43b7-9fa3-4ffe-8684-ba895be396d6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2d8f5db9-629f-4ab5-9f88-c0f0dd47242e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8027ead8-79ac-47ed-aa4d-6515625a25b0",
        "cursor": {
          "ref": "8b6dcccd-e0c8-42f6-ae87-56c37a188a62",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e3140ca5-5b84-433e-8eb2-13ed58618cfa"
        },
        "item": {
          "id": "8027ead8-79ac-47ed-aa4d-6515625a25b0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "eb7c28d7-8581-487d-9773-69c545436096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d78b17-3d10-4b0f-a627-b8b6192b24c0",
        "cursor": {
          "ref": "77e920b2-5dd7-432c-bbe2-ffdb338a47cc",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "34691231-12d4-4a90-9d15-d6357cf37d4d"
        },
        "item": {
          "id": "d8d78b17-3d10-4b0f-a627-b8b6192b24c0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dd0894cf-1364-4df4-8cdc-a7fc465f0699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26928969-b495-4f94-a6c8-a4c0a77009e5",
        "cursor": {
          "ref": "818b2038-0215-41b5-8c58-db0aac416fb6",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8d320e88-eaf7-45de-a626-45dd8bcbeac1"
        },
        "item": {
          "id": "26928969-b495-4f94-a6c8-a4c0a77009e5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2beb1301-52c2-444e-bf67-e11418dfc583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e3673-11b5-4db5-bee2-61466150d4f6",
        "cursor": {
          "ref": "1b4141a3-272b-46ad-94a7-d3a11def864f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6040b599-9ee3-4e64-a7b6-adcf5c9dffb4"
        },
        "item": {
          "id": "070e3673-11b5-4db5-bee2-61466150d4f6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3990c0df-0b18-4f94-8369-12f7cf7d82ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfd224a-364a-4f64-9c4a-5bfc68e4ba1e",
        "cursor": {
          "ref": "1a5c25fe-571d-4944-bff9-74b3711149de",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ce480a37-1509-45f7-a5a2-8ac78b0c6168"
        },
        "item": {
          "id": "9bfd224a-364a-4f64-9c4a-5bfc68e4ba1e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d4a8df9a-4018-4183-a38a-04bc3c095d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1553832-3976-47f5-b391-3965eefed79a",
        "cursor": {
          "ref": "b6a1b71a-ffc3-4c31-b7bf-15642abdc852",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "59f72d72-a0ca-4a79-8010-a7b0effdd373"
        },
        "item": {
          "id": "d1553832-3976-47f5-b391-3965eefed79a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cbe9717a-b5a5-440a-8dac-34e71466f94f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1759,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fd70cf-bea7-4574-b6f1-7e2e220e65bd",
        "cursor": {
          "ref": "c0fe505a-e959-48e3-a174-8a6a39c8aa47",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d245eb8a-80b4-4abd-8cb1-85be730ee17c"
        },
        "item": {
          "id": "f5fd70cf-bea7-4574-b6f1-7e2e220e65bd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5128b693-0b4a-4df9-809c-90dd48e218f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1314,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052e7173-dc23-4169-962c-fa1ec96cd005",
        "cursor": {
          "ref": "6f56d2e7-815f-471e-8556-ae73b2e56555",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "efefa43d-efc4-404d-885f-0bf12b666f3f"
        },
        "item": {
          "id": "052e7173-dc23-4169-962c-fa1ec96cd005",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5ef3324b-8c4d-44d8-91ce-b7eaa7e3d369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d860bf3a-b8a1-4e25-8294-574477d9c3d7",
        "cursor": {
          "ref": "149fadcb-aafa-470f-a96d-f84877eee735",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5cb10de0-a542-497e-8c79-b304bd89e2c2"
        },
        "item": {
          "id": "d860bf3a-b8a1-4e25-8294-574477d9c3d7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d84fe461-4594-4047-8713-d1a7b46948ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd54bc3-442a-4ec4-810a-96075518a3fd",
        "cursor": {
          "ref": "51198f8f-33e4-4ebd-9b49-96341f2b3428",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3ad4093b-56c2-446d-912f-3215bfd2ab91"
        },
        "item": {
          "id": "9dd54bc3-442a-4ec4-810a-96075518a3fd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8bb2475c-68dc-4769-b616-13ca35eef4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4baf3fe9-121b-4a15-8927-52e64eadad5f",
        "cursor": {
          "ref": "ba56d4f2-ab48-4bf3-8b72-4c8f21cfdf92",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e1215f79-c6a6-401b-ae22-17b42b2f844a"
        },
        "item": {
          "id": "4baf3fe9-121b-4a15-8927-52e64eadad5f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1238c053-cff2-4d1d-99c0-d6276153d804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3520893-4fc1-48a3-aa66-1984df0b1413",
        "cursor": {
          "ref": "78a18189-1238-4e56-81ca-bd1c5f364f64",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "68330848-778f-411f-bd81-8bd20c0a68b3"
        },
        "item": {
          "id": "c3520893-4fc1-48a3-aa66-1984df0b1413",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b80288ea-4ba4-450f-a57a-10e149e1fcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebd51a8-5ede-4d58-b2f2-4a5e6f168a9d",
        "cursor": {
          "ref": "d45058ef-48a3-46fe-a087-1f29ad8d673c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ba03e436-1eea-47c3-8529-9577747e0fee"
        },
        "item": {
          "id": "2ebd51a8-5ede-4d58-b2f2-4a5e6f168a9d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c4f50802-950c-4fda-bcd4-546d448caba9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 661,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b67acd-2e2b-4626-ab33-2285e0db5dbf",
        "cursor": {
          "ref": "16d94e22-1635-4017-852f-ebc7d3c74152",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "93929fbb-b918-4d30-8f9c-f24b36b347ee"
        },
        "item": {
          "id": "99b67acd-2e2b-4626-ab33-2285e0db5dbf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "56986dea-95dc-471b-926a-225b93386039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef28695-7bc2-4048-ace2-560c416b7b20",
        "cursor": {
          "ref": "8bf9a6c4-5d05-47b3-9d0b-f564242e631d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d95603c2-79ad-4303-ba85-c5105e2b28b9"
        },
        "item": {
          "id": "8ef28695-7bc2-4048-ace2-560c416b7b20",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e3252c50-0eb6-4f6c-8f1c-9abf064e06cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73786055-6084-43a1-a44a-23dda384111d",
        "cursor": {
          "ref": "dc6236c0-ef0d-4064-bdfc-d2f885fc5f77",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "dd815f06-0721-4446-b628-1877d13311b6"
        },
        "item": {
          "id": "73786055-6084-43a1-a44a-23dda384111d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ba6feee8-a828-4891-a4bf-768dd7cd5435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca348576-a394-4b50-9290-73a9247dfcb9",
        "cursor": {
          "ref": "605b3524-1d67-4b09-a210-042bae0485e6",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d9901ed3-0bb2-4736-81e9-6f4cc033de2c"
        },
        "item": {
          "id": "ca348576-a394-4b50-9290-73a9247dfcb9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f4c57949-9157-49a9-833b-6ab22d758545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7572afd-6805-4a82-ad44-af6330052e1a",
        "cursor": {
          "ref": "2b3dc11d-e684-494f-8e8f-c593b86406c4",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6948f304-341b-45b6-9120-8c9ee4d202f3"
        },
        "item": {
          "id": "f7572afd-6805-4a82-ad44-af6330052e1a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ecf33dfe-e88f-44a9-9d98-7da01763c149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29ab9db-b5d8-4aed-8a17-8374c3ccecfe",
        "cursor": {
          "ref": "51971c9f-c339-4d12-b162-2e09193a6047",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3b5fe084-a654-4175-a331-82daad99198d"
        },
        "item": {
          "id": "d29ab9db-b5d8-4aed-8a17-8374c3ccecfe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "afe4b12e-6417-4a8a-9f42-8038c48e1b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee83fb1d-8b52-4550-a040-2a3b8a2f0f83",
        "cursor": {
          "ref": "9f54794e-86d6-47f8-9b4f-bf65791bad40",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2f55cbb3-92d7-45f8-b2ab-42d2b249d292"
        },
        "item": {
          "id": "ee83fb1d-8b52-4550-a040-2a3b8a2f0f83",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "138001ca-be88-4541-8560-f37c70ea8dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8905282f-a88f-48cf-8682-d2e211aef021",
        "cursor": {
          "ref": "6b7f988a-e948-4a91-b8c6-1536d74c9955",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "73d5fdb8-8800-49d9-8a1a-abcc867eb612"
        },
        "item": {
          "id": "8905282f-a88f-48cf-8682-d2e211aef021",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2b4923d0-c798-4b86-853a-7e7216c556fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7853b8b8-daaf-402e-8b02-3562f9365464",
        "cursor": {
          "ref": "a777b6f7-7937-4926-afcb-778c44bba72b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ac6a4942-9a11-4be9-8419-beae98f7d1bd"
        },
        "item": {
          "id": "7853b8b8-daaf-402e-8b02-3562f9365464",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f08f65f0-0b9a-436c-8fcc-e48524879052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d21e83-b5db-44be-8509-3a6b7f76012f",
        "cursor": {
          "ref": "49fb44a7-40e6-4716-aa1d-6e0aa5358f80",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bb3548e4-f204-4432-902a-2682a6095ebd"
        },
        "item": {
          "id": "29d21e83-b5db-44be-8509-3a6b7f76012f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a1397d7d-68e6-4d4c-8760-81810777257d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600846b2-9c25-47be-9616-9effd61527b9",
        "cursor": {
          "ref": "66f3d365-cd46-45a6-8219-3cb7a25ec15f",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c1213295-e825-436c-a6f6-00f76613df42"
        },
        "item": {
          "id": "600846b2-9c25-47be-9616-9effd61527b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d152a1e1-8a97-42f0-8574-222ed034ddf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d9d258-4897-4bc0-b6b6-a8ba4fa91e22",
        "cursor": {
          "ref": "59bbff7a-b05d-4258-8376-fa9dd96af976",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4aad15cc-aeaa-4f38-b58f-0b4c572dd657"
        },
        "item": {
          "id": "95d9d258-4897-4bc0-b6b6-a8ba4fa91e22",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9f1566c7-e81e-4afb-b775-5a07d3a6f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3568d42b-5ffd-4cbc-bb85-a2fb10e20627",
        "cursor": {
          "ref": "93575fa4-60df-4b6b-8085-b7f561707dec",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b5fc30a4-db88-47f6-8260-771b6e23a27a"
        },
        "item": {
          "id": "3568d42b-5ffd-4cbc-bb85-a2fb10e20627",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b402e1cd-c7f6-45fa-b9e0-b9a7b9d53a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e265aab-1f53-4973-b61c-3c68db71aed1",
        "cursor": {
          "ref": "e658eba8-f376-4c3f-b9cd-ca769ed91bcf",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a6570736-b126-46a9-9db4-1351bdfa5185"
        },
        "item": {
          "id": "4e265aab-1f53-4973-b61c-3c68db71aed1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a346c2b5-2658-4c1c-92fa-126e5508a381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b95f098-5fcf-44f3-bcbd-7d9f8b16f603",
        "cursor": {
          "ref": "6973afcd-e161-4185-9de2-a9fe685ea370",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7b81ed69-4315-423e-8682-f96ffc6c60cb"
        },
        "item": {
          "id": "3b95f098-5fcf-44f3-bcbd-7d9f8b16f603",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "205d62c5-fe8b-4ad8-8bf1-5e4f088e7a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea2e859-0a38-4bf0-9e3f-770881907d7a",
        "cursor": {
          "ref": "3e20a5e5-ecaa-4fd7-b3c5-76276061f23f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44ea063c-e8b9-4b50-8673-800f0d241f34"
        },
        "item": {
          "id": "6ea2e859-0a38-4bf0-9e3f-770881907d7a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f053aa22-4e37-4fd2-88cc-3ab8403c2813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f17bd00-cdd2-40a2-bf78-ce941fd3ed71",
        "cursor": {
          "ref": "0f38cf95-35ae-485f-84fc-28d64cf8dc6c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5777c9a3-7a21-4564-9efa-ad403ffc3618"
        },
        "item": {
          "id": "0f17bd00-cdd2-40a2-bf78-ce941fd3ed71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cd90adae-8555-4334-9904-3f05c301da4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55a1fb4-b896-40a9-9625-0046f7b845cb",
        "cursor": {
          "ref": "e78aaa1d-bfb8-4808-9b8a-f049abfe8db1",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ae967e67-8885-4772-8f4a-2302a9f37ee6"
        },
        "item": {
          "id": "f55a1fb4-b896-40a9-9625-0046f7b845cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9b3b5001-3c00-4ac9-8aa2-ceb7cba9f18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf4b8a4-edd5-4ae9-8ff9-7000b06cd375",
        "cursor": {
          "ref": "1a6b8de3-73f7-4e19-b2b1-c786e5f9a610",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8ee24023-6692-4e47-872f-749198e841b6"
        },
        "item": {
          "id": "4bf4b8a4-edd5-4ae9-8ff9-7000b06cd375",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8d16bb1b-dc07-4a87-9b4a-aadcf94241de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f45665-b41b-4d6c-8f25-aa190c0369db",
        "cursor": {
          "ref": "aeee90b6-19b9-4b78-b392-6071367141c5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f070209f-b2bc-47be-a20a-e0a9e48b4d30"
        },
        "item": {
          "id": "29f45665-b41b-4d6c-8f25-aa190c0369db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b6dcd4a6-d884-4db6-8bd7-122c773b9dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d79961-cf3b-4c49-9660-65486e2ae5e7",
        "cursor": {
          "ref": "33c6d5fa-f5a5-49c8-a7b5-cc47835600b9",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea8302b1-a67a-468b-84b6-3bf00005d01b"
        },
        "item": {
          "id": "92d79961-cf3b-4c49-9660-65486e2ae5e7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0e572aae-5d38-45f6-bb98-4d2787de5304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0235b319-66eb-4a91-9189-b43ccb0f12bb",
        "cursor": {
          "ref": "bc67b54d-cde5-46f5-ae10-11d35d310bb1",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f84230ae-d8de-4f54-bce6-226b849ce67b"
        },
        "item": {
          "id": "0235b319-66eb-4a91-9189-b43ccb0f12bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "54c4b172-130e-4774-9f0a-2a64b5b3fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c04e30-7531-416a-a952-8ffb4eb82a6b",
        "cursor": {
          "ref": "7234b263-5150-4aa6-9e3e-4b7f4ec20999",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8badbc63-f5c1-4e0b-9376-306c21437129"
        },
        "item": {
          "id": "08c04e30-7531-416a-a952-8ffb4eb82a6b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d4a1dd8f-6249-4c03-a304-d136a7dc5c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401fc17-ec1f-4ae2-aa17-7e8e882f072d",
        "cursor": {
          "ref": "caa54c47-3734-4466-b6ab-52b37a49f1a8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a9ad68fe-52db-4d48-860c-2bf58a3ba672"
        },
        "item": {
          "id": "6401fc17-ec1f-4ae2-aa17-7e8e882f072d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5e499d28-f401-4e9c-93bf-ef7b43d3efac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092122cd-1c54-4af8-9f73-3610dc59a3af",
        "cursor": {
          "ref": "89e8872d-2593-45a3-9ac7-5e5879eea966",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5d77af9d-53bc-492e-bba6-199d536ccc1f"
        },
        "item": {
          "id": "092122cd-1c54-4af8-9f73-3610dc59a3af",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0aa4897a-b424-4dbe-a872-a0b0b74bcdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0998ce-7b3c-4bcb-a05b-e07c44429833",
        "cursor": {
          "ref": "d66266ac-5270-45fe-a920-2f3f92feaffb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "844d1d48-1637-4501-b6ec-a6a05df54acc"
        },
        "item": {
          "id": "7c0998ce-7b3c-4bcb-a05b-e07c44429833",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ea5d9d34-540c-44f1-8aff-f7e8089daccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2409da71-ecbb-4e08-b839-671669661bf6",
        "cursor": {
          "ref": "9e648cd5-aaa9-45ff-827f-578523a72870",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e5bc351-a77b-4d6d-a017-cca20910d899"
        },
        "item": {
          "id": "2409da71-ecbb-4e08-b839-671669661bf6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "def48689-0350-43c9-9914-f78b231679da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c6983-730d-400b-81fe-01155cf95b23",
        "cursor": {
          "ref": "51f4f0e8-4dda-4375-a2f1-162d8a271fb3",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "54cbf385-58f1-49d8-a94a-4d3a89ef5f2d"
        },
        "item": {
          "id": "1f3c6983-730d-400b-81fe-01155cf95b23",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "674f4441-4ce4-4598-9767-75f5a2a1fa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402b7c71-6d01-4b76-b685-f97b4abd891e",
        "cursor": {
          "ref": "5076347c-eb32-412f-ab2d-c058393b6f5f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c3858fda-03cc-4b7e-a9e5-d217d8040b6b"
        },
        "item": {
          "id": "402b7c71-6d01-4b76-b685-f97b4abd891e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e42a3319-f177-4fee-b606-8301989555a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9832cde7-8cc3-46b9-8589-acf2e3d63524",
        "cursor": {
          "ref": "78fdaa7c-f4fa-4267-9cf0-bd1d3e28e89c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "66647cc3-12fb-45b1-9530-26d605ff3692"
        },
        "item": {
          "id": "9832cde7-8cc3-46b9-8589-acf2e3d63524",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ddd4ea51-8033-46b2-a5fd-01ea6ee739bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd103ded-9003-47b6-b5ca-0400f0093a00",
        "cursor": {
          "ref": "b50ebaeb-c200-4130-8404-d90f262f6dba",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b70d18d-07b6-4be6-8630-4fb41adc84c9"
        },
        "item": {
          "id": "cd103ded-9003-47b6-b5ca-0400f0093a00",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6598e4f7-0732-478d-832d-0f6012389bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1038,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f805b7ac-66ac-45f0-b8c8-0e3aff25a78d",
        "cursor": {
          "ref": "2eb29cac-2c27-48e5-94ba-1a9a43b706d0",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4dcacded-0826-4681-b2f7-099bd91856a0"
        },
        "item": {
          "id": "f805b7ac-66ac-45f0-b8c8-0e3aff25a78d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a7017f2a-a731-4370-b5e0-50fc305d34da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03bc53d-2155-4f37-a2a5-80bb411fb15f",
        "cursor": {
          "ref": "8cb7ef09-b570-435a-b70a-aa8b7c189c0e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2fdfa091-c112-4e40-bd87-c6304af9b52d"
        },
        "item": {
          "id": "b03bc53d-2155-4f37-a2a5-80bb411fb15f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "14d45bd7-da2e-4448-9495-f551aa909863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32e8abb-633b-4620-8898-00f7f68542d2",
        "cursor": {
          "ref": "5ff6be98-593a-4ec1-aa0c-7fe56ab52598",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "24c4aef6-4df4-471d-861d-a70b3f858ea4"
        },
        "item": {
          "id": "b32e8abb-633b-4620-8898-00f7f68542d2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e64b48e4-8ba3-49d8-bd87-47c605babe00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ea94e8-02bf-429d-bcf3-2ef8587968ec",
        "cursor": {
          "ref": "bb0ba87b-1b43-4a7d-95f3-a367f58d01d4",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d286bbb6-8000-463f-a4a7-fce3962b585c"
        },
        "item": {
          "id": "b2ea94e8-02bf-429d-bcf3-2ef8587968ec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d9f533b2-edf2-498b-a006-493f6921ff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bcb040-4a77-4deb-9e61-ad48ecbeafd2",
        "cursor": {
          "ref": "6c825e61-ad80-4646-9e62-64e9bf201f6f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9417810f-c617-414e-a3e1-ebbb5d73202b"
        },
        "item": {
          "id": "d8bcb040-4a77-4deb-9e61-ad48ecbeafd2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5914dc01-cb6e-493b-ba29-08b37a5289b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dee33d-994b-4ccb-9621-3bf90310ca70",
        "cursor": {
          "ref": "e4c12313-1ac1-46fd-8b49-824b8bba0a94",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "44106ea7-90ac-4dc9-8225-2d97b0935ea1"
        },
        "item": {
          "id": "d2dee33d-994b-4ccb-9621-3bf90310ca70",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5d8be865-921c-4b05-9c90-61dfd98032c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1011e833-5131-4a95-b66a-9ac244346a87",
        "cursor": {
          "ref": "071c64d3-645e-4651-98f8-e8c2f676e646",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "39a5fe1e-1eda-4399-af15-747095e56edc"
        },
        "item": {
          "id": "1011e833-5131-4a95-b66a-9ac244346a87",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4d1c3d6a-9f16-4d95-adfd-c630b66d77af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709dc58d-ebd0-4e0b-89d2-0cd57c288810",
        "cursor": {
          "ref": "3ab4c3d7-243a-445b-a65f-0f2a7550eb88",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12d3f83a-36ed-461b-8749-909a68d315e1"
        },
        "item": {
          "id": "709dc58d-ebd0-4e0b-89d2-0cd57c288810",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b6f83d34-749b-4b45-ae4b-5e8d1e944e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f09dbe-f173-4bf5-8619-e05321164710",
        "cursor": {
          "ref": "143a28ec-15d9-4421-bece-152f70636a5b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e6287e56-38a1-4225-b3f2-d878145472eb"
        },
        "item": {
          "id": "81f09dbe-f173-4bf5-8619-e05321164710",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8748c9cc-9451-4b47-9d79-ff7a243177d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189e3f7a-a543-494b-9a51-a21cbed98980",
        "cursor": {
          "ref": "76c6d50c-bc6a-4654-8724-f80d015f36b7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dfba449a-9556-4067-8d7e-a6e151c27344"
        },
        "item": {
          "id": "189e3f7a-a543-494b-9a51-a21cbed98980",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "81116962-07d6-40f4-8140-3111a5302e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2e102d-94fb-4305-bf31-76988e5fca94",
        "cursor": {
          "ref": "b1a84b10-f052-4689-b423-e41b2e2e805b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3c00a4a1-6c24-4459-b9e3-0361ca444459"
        },
        "item": {
          "id": "bb2e102d-94fb-4305-bf31-76988e5fca94",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96b2146a-beac-43da-93f1-4e046a7c1b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376eb801-6cb2-4b96-b265-3d3d06b71a5a",
        "cursor": {
          "ref": "2ff0b4a4-60b3-4e56-af1b-85d094a06587",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d353abc-bbf3-4761-af2d-8545817faf25"
        },
        "item": {
          "id": "376eb801-6cb2-4b96-b265-3d3d06b71a5a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0b24a767-ffbd-4d16-8bbe-1afdccde88f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 997,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52d3955-816b-42fb-8bc1-b780766c3d94",
        "cursor": {
          "ref": "773b46ce-92fb-47e2-9cd7-1cb8777fb0cd",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f6ccffd2-e824-4abd-a075-f0f8dd8b9d90"
        },
        "item": {
          "id": "a52d3955-816b-42fb-8bc1-b780766c3d94",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9846bdd3-0057-4968-b58a-3fe241a3952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a770202-1a3d-4e56-b0e1-04a22488ccfe",
        "cursor": {
          "ref": "4612b295-66d6-4c54-b07e-e52e2663c9f4",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "305366de-8615-4e79-9e45-d4430b6edcec"
        },
        "item": {
          "id": "4a770202-1a3d-4e56-b0e1-04a22488ccfe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f9c8e416-bc8c-435f-a387-6f807786fe97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7325af8-d5ae-45ab-98f1-2f70b007129a",
        "cursor": {
          "ref": "3e4b32f5-beaf-42f4-99fb-782d5433cf37",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bf7bb411-fbd5-4f20-b801-1a5e3c20935f"
        },
        "item": {
          "id": "a7325af8-d5ae-45ab-98f1-2f70b007129a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a3932775-0a3f-46a7-aaaa-daf931c00d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19a68ce-648a-4300-88ba-9c8d8b0f0046",
        "cursor": {
          "ref": "d15a7e78-13ad-49a1-bc1d-ec988f085d63",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4c1acfd-6ec8-404c-acb4-8b9c6881eb94"
        },
        "item": {
          "id": "d19a68ce-648a-4300-88ba-9c8d8b0f0046",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a5fbc242-6b62-41e0-944e-c92e483119ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c93d05-9ea9-4150-83d8-ad468bf1de4e",
        "cursor": {
          "ref": "20e2ea3b-ea62-46df-8845-fe19f54dc5d1",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "19c422bf-ed69-4343-9493-4054ee1b43f5"
        },
        "item": {
          "id": "86c93d05-9ea9-4150-83d8-ad468bf1de4e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7989dca2-a92c-4741-9ce4-74d9c1d15331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac94c4e-c088-44af-8ed4-a18dbf429c43",
        "cursor": {
          "ref": "e878245d-1d5b-40c3-8b7e-334b73725158",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0ae4048-2460-4007-ab73-837abc983220"
        },
        "item": {
          "id": "1ac94c4e-c088-44af-8ed4-a18dbf429c43",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cebefc57-56d4-41ec-aa11-cc41e702db47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae909133-a295-4fd5-a5e3-90cba7394de4",
        "cursor": {
          "ref": "d82621e2-eae8-4e65-aca3-186a8aceb614",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7369278f-f78e-4ee4-9c48-32198d6119a6"
        },
        "item": {
          "id": "ae909133-a295-4fd5-a5e3-90cba7394de4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "011f30d9-30dc-41f3-a031-8a7e1ea81eda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9974180f-e840-4a2f-a28f-e4ba917c907a",
        "cursor": {
          "ref": "29bf6424-f231-4f0f-9b1a-5c025f95bf7a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "aaba6fce-3f9a-47e2-80c0-55e1ce1cc349"
        },
        "item": {
          "id": "9974180f-e840-4a2f-a28f-e4ba917c907a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "34ad59ee-6746-40eb-9f72-ec7606b22e95",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c91a9c-2224-4d04-ae82-28ef920f3e5e",
        "cursor": {
          "ref": "9015efd2-d714-444f-8b5c-4a47e086b6ee",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7d96fdb2-5c8c-471b-8e29-83b51e3b85a0"
        },
        "item": {
          "id": "06c91a9c-2224-4d04-ae82-28ef920f3e5e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "23294133-36a7-41a4-9721-23b65e5984c3",
          "status": "Created",
          "code": 201,
          "responseTime": 6625,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4ee58a-9e3d-4aad-bc89-d401eabdf0a9",
        "cursor": {
          "ref": "8d3e6f89-431d-48f4-b97d-d705d5137357",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e66fc35b-9bae-4da9-b4d4-f1d65017b4c4"
        },
        "item": {
          "id": "4e4ee58a-9e3d-4aad-bc89-d401eabdf0a9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "13f83309-a292-454f-9a1a-a71f65cb6314",
          "status": "Created",
          "code": 201,
          "responseTime": 6851,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e42b4d-281f-4c3e-bc6c-d5722f8f8ec0",
        "cursor": {
          "ref": "6ddb72b3-f036-4688-8d4a-228a849149bd",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bfc9f0dd-6ce2-4953-b1f7-f33b060dd80b"
        },
        "item": {
          "id": "98e42b4d-281f-4c3e-bc6c-d5722f8f8ec0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17f18085-d25c-4559-b52a-0455cedab409",
          "status": "Created",
          "code": 201,
          "responseTime": 6404,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d00cbd3-394d-44ee-a05f-ef05d5344cbb",
        "cursor": {
          "ref": "aa5ec0eb-457f-435e-8585-5227da144782",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "200975b2-50ed-49b4-abca-b0323a2612f8"
        },
        "item": {
          "id": "6d00cbd3-394d-44ee-a05f-ef05d5344cbb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d2f7b448-3785-4ea9-ba54-32cf89c6fa6a",
          "status": "Created",
          "code": 201,
          "responseTime": 6118,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ff1a47-95ec-491d-947b-a26d2c73fd9e",
        "cursor": {
          "ref": "3fac4b3f-5fa7-43a3-bd64-4769fce9b394",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e360bcfd-00a2-4afb-9c14-2d8dac55db52"
        },
        "item": {
          "id": "f6ff1a47-95ec-491d-947b-a26d2c73fd9e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a21a7eaa-acc2-42b5-956b-1b58ac51674c",
          "status": "Created",
          "code": 201,
          "responseTime": 6063,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "994291c7-beeb-4160-9c9f-14a4ca4122a9",
        "cursor": {
          "ref": "393882fb-5188-4689-8c2f-162cc929cb34",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4af7a098-7c7d-4fe2-9376-8909a8ab8765"
        },
        "item": {
          "id": "994291c7-beeb-4160-9c9f-14a4ca4122a9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "00c8dfc2-65c3-4d6d-a0b4-5e97d209c722",
          "status": "Created",
          "code": 201,
          "responseTime": 8662,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d383ec5-deea-405b-af51-f4400875fbe8",
        "cursor": {
          "ref": "4071b13a-8076-4b19-b40c-a49dca8d7e38",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1fa32b9-624f-4f2b-a2b8-3648ba8a2395"
        },
        "item": {
          "id": "4d383ec5-deea-405b-af51-f4400875fbe8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1d5c17cd-7ee0-4414-bb5d-e4841b9ff0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d383ec5-deea-405b-af51-f4400875fbe8",
        "cursor": {
          "ref": "4071b13a-8076-4b19-b40c-a49dca8d7e38",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e1fa32b9-624f-4f2b-a2b8-3648ba8a2395"
        },
        "item": {
          "id": "4d383ec5-deea-405b-af51-f4400875fbe8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1d5c17cd-7ee0-4414-bb5d-e4841b9ff0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1303509d-5f1e-4592-8167-3154b293a8cf",
        "cursor": {
          "ref": "2812cb38-c0d5-485e-9ce3-f3d69d12cdce",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "37a36d98-6144-4d4c-8dcb-f2b5d9a387e1"
        },
        "item": {
          "id": "1303509d-5f1e-4592-8167-3154b293a8cf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2e363da-7bf9-463d-8df1-90e9581becd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea569f5-cb99-4c53-b8c1-9706e8ce90c7",
        "cursor": {
          "ref": "7a384555-309b-4d58-82ea-eb1fdb5715bb",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "64870b6c-c769-47f3-8139-21530544b54b"
        },
        "item": {
          "id": "aea569f5-cb99-4c53-b8c1-9706e8ce90c7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "802dbe5c-62a2-49f4-8c4d-aa281f38caff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1044da-bde7-4f58-b050-ca2574ff9a6d",
        "cursor": {
          "ref": "853b77bc-43e1-4f7d-8e66-3720d8d6fc7b",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e2ad83e9-ef4d-4f88-8bb7-709d1abd6760"
        },
        "item": {
          "id": "fd1044da-bde7-4f58-b050-ca2574ff9a6d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "05780e58-535c-4540-b775-cf00e026816d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a710c9-3c32-4166-9463-503edf61bbf9",
        "cursor": {
          "ref": "36a7bc8b-3437-4a55-af30-405a0a8fa053",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7075e953-90e0-4e7b-8a4f-6d7fd3511476"
        },
        "item": {
          "id": "95a710c9-3c32-4166-9463-503edf61bbf9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "95b6ce47-b880-4832-a2d7-dd034e1d5c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9a2a1e-e83d-47fd-9f46-b9a1be1600a6",
        "cursor": {
          "ref": "70cc3cb7-44ee-4d81-b141-dc7398d23dcd",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f43e33c0-fe0f-41f7-9d2c-438850819194"
        },
        "item": {
          "id": "4e9a2a1e-e83d-47fd-9f46-b9a1be1600a6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9653ffdf-8433-465b-89ae-fc5d72dc5263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94b2683-da9d-4b37-9c2c-bf220f553fca",
        "cursor": {
          "ref": "60c8c74b-1a80-4738-8e5a-09ebe0eb496e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "155e2c52-f391-45f9-b4c8-f1a2ffd56805"
        },
        "item": {
          "id": "e94b2683-da9d-4b37-9c2c-bf220f553fca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "562f72b9-f82b-48fe-8bac-604529868d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806506ed-d346-4b94-b9e1-0d8b2f2fccbb",
        "cursor": {
          "ref": "24fe5266-bbc2-4705-a2fc-53925ec73978",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "87d94f4a-8608-4a8d-9d0f-d69ac5899dac"
        },
        "item": {
          "id": "806506ed-d346-4b94-b9e1-0d8b2f2fccbb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16eca16a-628a-4fbe-aba7-df8acf8af9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c79c486-90d2-4884-9e91-bf03e0f8a782",
        "cursor": {
          "ref": "3cb7adeb-565c-4d51-85ff-899547d70fc1",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7c8cca44-6cdc-48f6-b353-ed3d310748f5"
        },
        "item": {
          "id": "0c79c486-90d2-4884-9e91-bf03e0f8a782",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "339aa831-f4b6-4294-b697-0d0b1013263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05faa1a-6656-4b2d-a172-79b20f3eee24",
        "cursor": {
          "ref": "3106ec33-d1f4-4ee1-b5cb-10d7db592633",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "62c6e86e-3640-48ed-b8b0-73cfce6a2a7a"
        },
        "item": {
          "id": "e05faa1a-6656-4b2d-a172-79b20f3eee24",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1e465ff4-4403-4767-8ffb-27de9c2fccb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e001d75d-a784-49a7-bf9c-22f7eb9e404a",
        "cursor": {
          "ref": "8bfab01a-af7e-410c-9985-e2d7e1b7aa54",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1447d626-a24e-4929-9be5-838e50037a2d"
        },
        "item": {
          "id": "e001d75d-a784-49a7-bf9c-22f7eb9e404a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "689613b2-4023-4af1-b301-034bd1064437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bdff4a-0e79-466d-98ae-3b6ad71e6212",
        "cursor": {
          "ref": "672162cb-3869-4bb3-bdc1-5fe5ed16db01",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f2fd9da0-5d50-43b9-a0c2-24a256dc1959"
        },
        "item": {
          "id": "21bdff4a-0e79-466d-98ae-3b6ad71e6212",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "25be4df8-b0b9-4739-9517-e5bd8b6177d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15aaeb45-b22d-4e6f-a7cc-9f21fb82bd82",
        "cursor": {
          "ref": "7c7850a1-c1b5-4baa-9b27-a8ea380fca14",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "090a5490-e483-418e-b192-09120e75b61f"
        },
        "item": {
          "id": "15aaeb45-b22d-4e6f-a7cc-9f21fb82bd82",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f50abd0-4356-4299-9220-061effe39304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eba334-7cb7-41f6-9483-06155297fd07",
        "cursor": {
          "ref": "9d949179-d0cb-4e31-a559-f5faddb920aa",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a48b9228-7128-44d3-a8bc-873c10fe9934"
        },
        "item": {
          "id": "90eba334-7cb7-41f6-9483-06155297fd07",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b28cb9c9-cf8c-4279-b729-9bb61f3a6cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94012306-4917-4085-bd51-eaa7434ce1ca",
        "cursor": {
          "ref": "7c5f7c7c-f36e-4dcb-9566-24991bb96db6",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5a8186cc-5407-4070-96e4-c130594d584a"
        },
        "item": {
          "id": "94012306-4917-4085-bd51-eaa7434ce1ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "875cfe4c-fe90-414c-ab9c-7b3bbb57e634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4402c39-4937-4e26-bb40-4b941e598cdf",
        "cursor": {
          "ref": "a8cf111f-0e30-4243-bbf7-f732bd429da7",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "06dcf412-5634-4fca-a638-daa30557c028"
        },
        "item": {
          "id": "e4402c39-4937-4e26-bb40-4b941e598cdf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2aae8564-f850-4eac-9194-8e3d72969442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bb6342-fdac-48f6-bfd0-05468cfd66d8",
        "cursor": {
          "ref": "eeb829c4-2ad3-4bbd-a8f1-9976a93facfa",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "524c3459-fe81-4667-889e-10513b9dab1a"
        },
        "item": {
          "id": "77bb6342-fdac-48f6-bfd0-05468cfd66d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "11a17414-0a10-48f6-9201-b7357f899b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd8b15f-6ef5-4a9b-b72b-3abbb1fc33f3",
        "cursor": {
          "ref": "b12e623a-ae73-460e-809a-c57f3435d74a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c81f55af-2568-48e0-87d3-713cc0f08b80"
        },
        "item": {
          "id": "bbd8b15f-6ef5-4a9b-b72b-3abbb1fc33f3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8ec2c2f-4304-40d2-8f0f-382671789a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cea298-af07-4d6f-96d1-6b0811c2489a",
        "cursor": {
          "ref": "6e65b372-e6f6-4fea-bd5c-2cb4a2e72bf0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78571906-4cc5-4740-8587-4fae4a69d987"
        },
        "item": {
          "id": "89cea298-af07-4d6f-96d1-6b0811c2489a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ef18ec03-1f8a-4393-a166-e41a97660476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68c9302-5931-4279-84e9-ed208e6af2a9",
        "cursor": {
          "ref": "34d02a8e-6c7d-400f-a745-e76625136ee2",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "598b5624-b5f5-48e2-9c22-104b0a6b6591"
        },
        "item": {
          "id": "c68c9302-5931-4279-84e9-ed208e6af2a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5b1b069-6213-4814-b540-8d1ef97d36e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c8b53a-06d1-463f-be0b-bce57103c27b",
        "cursor": {
          "ref": "f7cd0712-6c46-4e61-b853-5dec1fe92fbc",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "30b59fa6-c829-497e-9f20-56e462b14e2b"
        },
        "item": {
          "id": "05c8b53a-06d1-463f-be0b-bce57103c27b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a5863ffa-8669-44cf-9018-610b18c7f8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8642d31a-0e89-4514-83e3-b3e8aa6a5842",
        "cursor": {
          "ref": "3d29753d-6d85-4e4e-bf61-b1ffea13a010",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81947fc4-9fb0-4e84-84be-fee3be93ce50"
        },
        "item": {
          "id": "8642d31a-0e89-4514-83e3-b3e8aa6a5842",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "144a8fde-6417-4156-875e-0a9d1c6fc6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227c4d0c-1fdd-4e8f-8c47-b16b5ec79381",
        "cursor": {
          "ref": "f3441a93-8332-4106-a982-d0adb1e78b73",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "02957834-aab1-4aa1-bc4a-dba5523a90a7"
        },
        "item": {
          "id": "227c4d0c-1fdd-4e8f-8c47-b16b5ec79381",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f73bd916-15e0-4f40-a6a4-d621a7344cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8acc23b-d5ad-4512-a1cc-dcfd35d9a2e0",
        "cursor": {
          "ref": "d6b42db0-208e-481b-a4cc-f78267010219",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8e895264-3341-4a17-ae4b-4076deaa9e0d"
        },
        "item": {
          "id": "d8acc23b-d5ad-4512-a1cc-dcfd35d9a2e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8de6747b-6588-4eed-8f6b-f2225bacf422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497c2446-dab9-40e2-ace9-e9d33946fcb7",
        "cursor": {
          "ref": "3da2153f-52f7-43d3-90fb-efe2bfedfc94",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7158d515-fbed-443f-afa4-eca6b549e279"
        },
        "item": {
          "id": "497c2446-dab9-40e2-ace9-e9d33946fcb7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31e98109-e4be-453f-bc8c-6d0a36935247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ff77dd-4d64-4b40-b634-2d743c4b7bc3",
        "cursor": {
          "ref": "7a8b8bde-643d-4470-b3f8-4854a21eb1ea",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8314f5f3-711a-4105-b3ca-51fda949dd87"
        },
        "item": {
          "id": "84ff77dd-4d64-4b40-b634-2d743c4b7bc3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2d473bff-2ab7-4748-80d8-3857c6607a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6c2b22-cf82-4e80-ace7-ea008eb10981",
        "cursor": {
          "ref": "85706dc0-890b-4f22-aae7-93513fef91fe",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2cf6ee4c-c727-4cfb-9342-f87cecedd261"
        },
        "item": {
          "id": "9f6c2b22-cf82-4e80-ace7-ea008eb10981",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3c48413d-085e-4fdf-ab4c-ed88de8b90d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4dec16-938f-4947-a8da-22841a3e5c97",
        "cursor": {
          "ref": "513e1a13-ac60-4f5f-ac8d-520bf61c294f",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "128a1ec2-4e32-4819-91d7-73f70cc08b29"
        },
        "item": {
          "id": "6b4dec16-938f-4947-a8da-22841a3e5c97",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2387a566-66da-4f7a-af8b-5316fa6badbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f72e2c-b586-46d6-b35f-5b49f4c6962b",
        "cursor": {
          "ref": "da33981a-3293-45ac-9168-275bdd3ffb65",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cbb486e8-cc4f-4bde-8c33-8f91d86a5e4b"
        },
        "item": {
          "id": "a8f72e2c-b586-46d6-b35f-5b49f4c6962b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f348edf9-659f-48ad-9074-74c34aa5d235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e118e5-55a7-4b76-87f2-91eec1aba963",
        "cursor": {
          "ref": "42867786-64cf-47e4-8b47-60032796a1d6",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2cc84ec8-2636-4882-81a9-41c11490e3db"
        },
        "item": {
          "id": "23e118e5-55a7-4b76-87f2-91eec1aba963",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "796cf875-8c1c-44cd-8be5-aa386e3430a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ed4f33-cf41-4fcb-92d7-ef62ada9cf73",
        "cursor": {
          "ref": "8ccd5180-ad99-4990-a017-d0d50d557917",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "465da37d-d8ec-4ea3-be69-560f43ef37af"
        },
        "item": {
          "id": "f8ed4f33-cf41-4fcb-92d7-ef62ada9cf73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cc82ef5f-c2a2-472b-a31a-42c55e047cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44648fb-49ed-45e2-b1b0-5ad13a0b9569",
        "cursor": {
          "ref": "d7837a16-f4e1-4543-ae3f-ca17eca6af24",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fff4d52e-3f90-4eb6-bb39-97d1901f5a9c"
        },
        "item": {
          "id": "b44648fb-49ed-45e2-b1b0-5ad13a0b9569",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb81a634-b713-44a9-9abc-3d4380707ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cd25fa-7f57-478e-832f-ce2b7d8f3f61",
        "cursor": {
          "ref": "a66eaf82-2472-4885-9908-8ae9232391cd",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "08b27375-00f3-44c2-8f39-997b2a03e499"
        },
        "item": {
          "id": "61cd25fa-7f57-478e-832f-ce2b7d8f3f61",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "72a5fa5f-d7c9-48bc-bf5d-d093c9f1344a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47ebf4c-44b2-4d01-8d80-eca1a15df891",
        "cursor": {
          "ref": "eab41e0c-259b-4df1-9337-91f4e2877a11",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c041acb-a7a2-4775-9360-090f853e2852"
        },
        "item": {
          "id": "a47ebf4c-44b2-4d01-8d80-eca1a15df891",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8eae866c-2aea-4635-a9bc-0af1130ea62d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 511,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b169c65-7b07-4d97-b74e-0e6dd827c360",
        "cursor": {
          "ref": "e8bd9a2e-586a-440e-b1e3-b7e0cd887dab",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c556e2d3-472b-423c-868e-2f3dcee3bc53"
        },
        "item": {
          "id": "3b169c65-7b07-4d97-b74e-0e6dd827c360",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a8236b12-23d6-42db-965f-63447f99a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b169c65-7b07-4d97-b74e-0e6dd827c360",
        "cursor": {
          "ref": "e8bd9a2e-586a-440e-b1e3-b7e0cd887dab",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c556e2d3-472b-423c-868e-2f3dcee3bc53"
        },
        "item": {
          "id": "3b169c65-7b07-4d97-b74e-0e6dd827c360",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a8236b12-23d6-42db-965f-63447f99a2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322cc263-2c28-4d0a-9646-72aaaeece19b",
        "cursor": {
          "ref": "f2d216e4-3fa7-4e90-83c7-c56f9e585549",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0870d9d-d4cc-4941-8737-8c0c8b0d5ef7"
        },
        "item": {
          "id": "322cc263-2c28-4d0a-9646-72aaaeece19b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "561aa909-cc72-489a-9389-9691db84f713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fee7e9f-6c0c-4146-8591-59a27786f21d",
        "cursor": {
          "ref": "9ebe9d90-ed9c-40d9-8ccb-ba3ec73aad1c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "16838a10-6c58-4a82-9dc1-a11c52e2f706"
        },
        "item": {
          "id": "2fee7e9f-6c0c-4146-8591-59a27786f21d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9cc9a47e-0368-4d40-8428-57df1a7117b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c98c21-ef04-4853-8657-5ac1d8c44d30",
        "cursor": {
          "ref": "cb5b0fa6-7c54-480e-9fcf-a204ea241ecb",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d6c2e543-c6b7-4e4f-ae27-6d519fd17e8f"
        },
        "item": {
          "id": "39c98c21-ef04-4853-8657-5ac1d8c44d30",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "844ccb23-5012-4ee0-a7f0-065a3c17366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb2e51-e2fe-466e-ae65-1182f7bd66ff",
        "cursor": {
          "ref": "d4d65b22-f657-441a-9b6e-ab5608e135fa",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "27a9df07-c36b-4282-a66a-bf02ae1a4cc5"
        },
        "item": {
          "id": "2ddb2e51-e2fe-466e-ae65-1182f7bd66ff",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "832c9249-7fc0-43e2-afcd-dcf853ca8bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225a6b91-6382-400f-888c-8292d024a605",
        "cursor": {
          "ref": "029c9ec8-36cd-4ab7-9920-a97b29b08e0d",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4996c33c-5c57-4076-9321-0703dce99144"
        },
        "item": {
          "id": "225a6b91-6382-400f-888c-8292d024a605",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7aa76a4e-6d28-4267-8116-b91995087ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6910776b-4776-422e-a09f-057f843ac5a7",
        "cursor": {
          "ref": "49d0a8da-66f7-4474-b401-ba497ff08b97",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ce2332ee-0c25-4319-a5b9-b81a85688bc8"
        },
        "item": {
          "id": "6910776b-4776-422e-a09f-057f843ac5a7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "14fd4d99-b255-46c7-b364-e3c4bc4434fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02576363-04a0-420d-a674-ec85b0e5cd3a",
        "cursor": {
          "ref": "f189664e-d8c6-493c-a8f0-9bf3f50c18e7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8dca64ee-1a36-49c8-8db4-8a52c6bc7980"
        },
        "item": {
          "id": "02576363-04a0-420d-a674-ec85b0e5cd3a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "99030d40-eb56-4779-8bdd-20a04d9b6394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72578d7-48d1-480a-9a73-cf2118b25c47",
        "cursor": {
          "ref": "48250668-9d9e-40d0-8baf-5fc6aa57305d",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "438dd3f1-d633-43fa-b88e-a2ec19d53e32"
        },
        "item": {
          "id": "a72578d7-48d1-480a-9a73-cf2118b25c47",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd38663f-c022-47d2-8379-5ec1f0920a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9f0cde-753e-4d5e-b4d3-44831ba0ee39",
        "cursor": {
          "ref": "ed0dfdee-5a5c-42f3-a0d3-6875c88b6ac7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2d276f15-4096-49db-99e1-16a45897f34a"
        },
        "item": {
          "id": "aa9f0cde-753e-4d5e-b4d3-44831ba0ee39",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "047931d1-1077-405e-81c7-56b516bce57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e2f837-ac30-4df3-9ce1-fb5ebe3d0388",
        "cursor": {
          "ref": "c6b3bbf7-218c-4dc7-b89e-56173336d0be",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "85e0d122-0ef5-46dc-ae18-85584f63e992"
        },
        "item": {
          "id": "02e2f837-ac30-4df3-9ce1-fb5ebe3d0388",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f2b69e90-a7e9-42af-9b8d-29c5bfcc5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16221ab3-1df3-4791-a139-a3fd0ca4e52a",
        "cursor": {
          "ref": "34971fee-3a31-4cd6-bda1-8f92c578a357",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "496af183-20c0-4480-b154-def9766a1358"
        },
        "item": {
          "id": "16221ab3-1df3-4791-a139-a3fd0ca4e52a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "263fa592-b653-4ce5-a849-1ac74aa04d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f210932-e861-44bc-87a7-87825e86a498",
        "cursor": {
          "ref": "670b8307-bc41-4c9c-9d86-3bb84d04358b",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "80335457-3bf2-4f92-9d51-8fb405e1685b"
        },
        "item": {
          "id": "3f210932-e861-44bc-87a7-87825e86a498",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6731a910-f37e-44c1-8834-f4da8e687aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf39fc95-279e-4b34-92aa-82877dc582c5",
        "cursor": {
          "ref": "3c95671f-6d36-41ff-8e30-255dbe6f37f6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a1ac3651-a63a-44fe-9772-cadefb180f95"
        },
        "item": {
          "id": "cf39fc95-279e-4b34-92aa-82877dc582c5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6430479c-cee3-4ba9-8d2f-700ae810b9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b64e375-2c66-4010-b4fc-af562c421eef",
        "cursor": {
          "ref": "2887e08d-5365-4e21-bc32-385eb2cf7438",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9c128678-42d1-4e22-9f04-3492f1f0e6a0"
        },
        "item": {
          "id": "5b64e375-2c66-4010-b4fc-af562c421eef",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dd304437-dd70-4d18-9f41-8a3b993fd8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d89fe5-ed8a-46d2-b796-9be61007d712",
        "cursor": {
          "ref": "1ba8b27f-bdfa-4049-b50b-431b52635a8b",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "63c6c52f-f220-4844-9528-2e8964557734"
        },
        "item": {
          "id": "65d89fe5-ed8a-46d2-b796-9be61007d712",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b9194bbd-b044-4092-8320-65880a146d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e69a158-35a3-4f26-94ea-1aaf78225f62",
        "cursor": {
          "ref": "2f3d1fdb-3fff-48ea-9e1e-5e0e965f2ab0",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c72495aa-4f86-45c1-801a-12691198c945"
        },
        "item": {
          "id": "7e69a158-35a3-4f26-94ea-1aaf78225f62",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9dd93c48-d7e9-46e1-9009-1ce0e27830f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6f21b6-410f-4a0b-9fe5-8d3f99cd4c6e",
        "cursor": {
          "ref": "04107527-f454-4773-aeab-676535ad0b3e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8e2e5df8-2309-47c9-8fb3-a02fb69de2aa"
        },
        "item": {
          "id": "8a6f21b6-410f-4a0b-9fe5-8d3f99cd4c6e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5eaba0ff-5150-4ea8-ac7d-c2da1b0e389e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bab5080-a677-4dae-954b-6ab185a2e1b7",
        "cursor": {
          "ref": "eb961806-dc88-49e2-b134-74f401212f7a",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2aba6e9c-7be8-4605-9ce6-87588a630632"
        },
        "item": {
          "id": "7bab5080-a677-4dae-954b-6ab185a2e1b7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c9600fbb-87f5-4a98-afa1-e01f10dc1b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c90197-8f0a-4a42-a053-75f7a2224d36",
        "cursor": {
          "ref": "e3340323-bf4b-4699-a7f6-96339d531559",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "acb7ff84-a125-4fb3-b233-69b9df9f5729"
        },
        "item": {
          "id": "86c90197-8f0a-4a42-a053-75f7a2224d36",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "08e42647-86c2-4fba-8c1b-d76dd27d8fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c34aee-c6ab-4b57-a4f0-9d394a04c831",
        "cursor": {
          "ref": "218cb6ba-74e9-4a1e-8bd9-dfcc234bc3aa",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c40ad55b-739a-4a9d-bbd6-821e9770a937"
        },
        "item": {
          "id": "f9c34aee-c6ab-4b57-a4f0-9d394a04c831",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fee80af7-c55e-4ccd-ae96-691a05fd6b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8c4a64-3852-4d55-bcfb-3c76bc89da7a",
        "cursor": {
          "ref": "203f090b-b4b3-44ae-8029-14cf4e34e1d3",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "610fa3b2-cc69-45f3-a76f-7461bad4bbb4"
        },
        "item": {
          "id": "db8c4a64-3852-4d55-bcfb-3c76bc89da7a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "92c5c794-87d8-465f-9242-736d8fd66939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842531cc-e15b-4432-a92d-2fe9daf899d8",
        "cursor": {
          "ref": "6b487ac7-311f-44ff-848b-c00053a03209",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cf0d403f-3f12-4b0d-b409-ca86ae55e8e3"
        },
        "item": {
          "id": "842531cc-e15b-4432-a92d-2fe9daf899d8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26fea22c-a8a5-41f0-bf23-9b14a259c447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadd1f06-4b3f-45e8-af40-ba7386c2ff31",
        "cursor": {
          "ref": "4e7844e9-cdd6-4249-af09-0a355ae481dc",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "90f3b35f-5a84-4682-ad2d-85cdfbec4561"
        },
        "item": {
          "id": "eadd1f06-4b3f-45e8-af40-ba7386c2ff31",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b0542d4f-a39e-4d4e-938b-c884b49a708e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7773f7-8924-4b1a-9fe1-47b468fc061f",
        "cursor": {
          "ref": "eac240f1-d618-4506-81c6-1355c274e9e1",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "10c033be-2221-4fe5-92c3-b7b6949de9bd"
        },
        "item": {
          "id": "7c7773f7-8924-4b1a-9fe1-47b468fc061f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "826f6933-00bc-4ef6-ad9f-c6b8c1b91c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b059e40f-dda5-42dd-b594-9d60facfa1bc",
        "cursor": {
          "ref": "9f602854-66b0-4d4d-8970-350279192a4c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d99ca32d-35e7-46c4-bb28-cf4d61aea925"
        },
        "item": {
          "id": "b059e40f-dda5-42dd-b594-9d60facfa1bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bd4e01bf-4ed0-4b48-b248-8fa44ef76a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a439637d-01a5-4208-8bcc-275c973be2fd",
        "cursor": {
          "ref": "b8bf077f-3362-47fd-affa-8c0a6f1fb0bc",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2808420c-f4ef-4ce0-a252-1808d495b4fb"
        },
        "item": {
          "id": "a439637d-01a5-4208-8bcc-275c973be2fd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "620a4889-9e6f-4c53-bdd8-020132e61193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acef35cc-2389-4d05-b147-2a4de56c7e5a",
        "cursor": {
          "ref": "39fc2886-4367-4a76-8383-0b5db3072095",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1949b6a-e54f-4bb6-beb8-1596c3754c66"
        },
        "item": {
          "id": "acef35cc-2389-4d05-b147-2a4de56c7e5a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "10e7b83a-f9be-440b-8c57-5f069883549b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3fcd75-f1fe-4434-9bd6-7913d6945344",
        "cursor": {
          "ref": "0ae35fb8-7bdb-4099-a7df-974476153fd9",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7abba07a-ca5d-4fe1-9182-759211cdfb27"
        },
        "item": {
          "id": "cd3fcd75-f1fe-4434-9bd6-7913d6945344",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1b94d7a6-09c7-43ee-bc54-31889c71efa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025ed6cf-9b66-47bc-8246-8bc06fa55ca0",
        "cursor": {
          "ref": "c22263a2-6509-4365-afe6-d849719cb89a",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "98ce98a1-20bd-4da6-9347-8cdf247b1050"
        },
        "item": {
          "id": "025ed6cf-9b66-47bc-8246-8bc06fa55ca0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "83286373-823b-485e-9dd6-98c8e0288858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcb6b14-388b-4219-9447-e01719969863",
        "cursor": {
          "ref": "545f9122-1aa4-4005-acb8-543e79c7537b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e4ef7f3d-c947-4ba9-8290-b69f2f5ccfe2"
        },
        "item": {
          "id": "3fcb6b14-388b-4219-9447-e01719969863",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e43c009e-dfcf-4dc1-ba73-3b19a1f20131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a1da7e-a082-4eed-8bb1-eab37a91ab13",
        "cursor": {
          "ref": "c804fc5a-8ce1-4656-8a14-69d5dd403ced",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9c6d3186-6382-4c7e-9f40-42cf4012ea28"
        },
        "item": {
          "id": "92a1da7e-a082-4eed-8bb1-eab37a91ab13",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2c474835-8a87-47fb-a918-728cc4d3498e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314cd0b0-3d16-4395-971b-f17ed3fa3f39",
        "cursor": {
          "ref": "b3240f2c-2005-49a6-bce5-62b982a11d5a",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "20673604-a6c1-4d4c-8644-999ce8497770"
        },
        "item": {
          "id": "314cd0b0-3d16-4395-971b-f17ed3fa3f39",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "417e1ce4-edf1-40e1-b4c1-e4e936ecaf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf76330-8464-4732-99b2-f446e5189ceb",
        "cursor": {
          "ref": "4f036ca5-6d7a-4eff-9e15-a37a5bebd642",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0b848ef0-5fc3-4ac0-a50f-1704b72d362a"
        },
        "item": {
          "id": "cdf76330-8464-4732-99b2-f446e5189ceb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "38fe6c12-94fa-46ad-9a6a-dff6549ca0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa978dea-0c9d-4276-9bb7-3b24e5956dd0",
        "cursor": {
          "ref": "ff14050e-d7ae-42c3-8629-e5fe48bfe35d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3e794aec-96c3-4998-947f-2044fd7d4247"
        },
        "item": {
          "id": "fa978dea-0c9d-4276-9bb7-3b24e5956dd0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "84c8940d-3d5f-4e25-91d0-39c8b6736390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609c4ad9-6e02-4d45-bf47-e0a73aeee0cc",
        "cursor": {
          "ref": "d6ecf581-5beb-423c-839d-69923275eea2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1b50bc9d-f650-4bca-b5c7-d0695e4726e6"
        },
        "item": {
          "id": "609c4ad9-6e02-4d45-bf47-e0a73aeee0cc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f1698083-3a3b-4c9e-bee9-743e36157f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb0c838-f09f-4b20-8217-373ef6dcb717",
        "cursor": {
          "ref": "4b850998-6ea5-4bc4-9dcf-168e02347454",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "710737db-aa6b-4539-b925-18bbe889819d"
        },
        "item": {
          "id": "5bb0c838-f09f-4b20-8217-373ef6dcb717",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f0cca383-d4fe-4981-8d00-453eb06d84ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919f93ef-c065-4e3c-849a-7546e249b05f",
        "cursor": {
          "ref": "1175da31-e5c8-4b4d-b4b5-9bb874dc9a66",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "045611a0-9259-4dc9-ae26-ade5a101d4ba"
        },
        "item": {
          "id": "919f93ef-c065-4e3c-849a-7546e249b05f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d026f4ab-dd46-4756-974e-d59603595531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84353f57-44ec-4ab5-9e21-7ba77c8122d2",
        "cursor": {
          "ref": "99e9348f-ed2b-4fc5-b61c-0a1bfd2d5fa3",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ecc45cf6-2a45-49c1-a107-bbea6b1fb65f"
        },
        "item": {
          "id": "84353f57-44ec-4ab5-9e21-7ba77c8122d2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "56a1eb04-a5a1-4a42-a090-6c9437558674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fcd777-01dd-4ed6-8ac8-84fd206832a5",
        "cursor": {
          "ref": "7f31620c-b67c-4851-8702-3e2e111b875f",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e28c3aa2-b247-48a2-a497-abb6b4dc6999"
        },
        "item": {
          "id": "42fcd777-01dd-4ed6-8ac8-84fd206832a5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8438cc13-a9bb-4567-9ff4-ffdeeafdcc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23565b7-b881-4fa0-82cb-0cbcc95d228e",
        "cursor": {
          "ref": "663499ad-e115-4755-9173-54fbe5b8fa67",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ecf4f9c0-25d6-4233-a08f-73e74a25fcf3"
        },
        "item": {
          "id": "c23565b7-b881-4fa0-82cb-0cbcc95d228e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e6c676b5-ff51-4d34-912e-c2ac2756438f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1306ff8b-d557-4a92-8d0f-e54257f5da76",
        "cursor": {
          "ref": "9b96f0b8-58ed-42a0-acac-0370646f82ca",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "00a67fbb-fb5f-46a0-bc4f-6691cb911d84"
        },
        "item": {
          "id": "1306ff8b-d557-4a92-8d0f-e54257f5da76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2619069e-83ae-44a1-bd71-7b82222a02a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc71c6c8-ef89-4a9b-9f03-829a5b5f25c9",
        "cursor": {
          "ref": "285b4098-868f-4a59-ad1b-ea6a75914fe9",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8ecd66af-03d0-4b94-abe3-b3fdae3981e7"
        },
        "item": {
          "id": "cc71c6c8-ef89-4a9b-9f03-829a5b5f25c9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a1c5331a-2106-4a6d-b139-0d9b7f70590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2972c149-6151-4087-9c44-e0a9e6eb8693",
        "cursor": {
          "ref": "099b5db2-ad7e-4466-9bfd-91a7559fbab6",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f9613a7f-1a7e-46dc-95a7-9defaa02c82e"
        },
        "item": {
          "id": "2972c149-6151-4087-9c44-e0a9e6eb8693",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "314bce63-a87f-42a7-9c3d-001917cbf321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32402e4e-c2af-4519-af58-e4301e37432d",
        "cursor": {
          "ref": "bc90d46c-395e-44e7-ad00-ff176a5355e2",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "891db3ba-db4a-4605-8401-99e6aa4fd40b"
        },
        "item": {
          "id": "32402e4e-c2af-4519-af58-e4301e37432d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8c84807-b460-41b8-b076-ed6111da7c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8f5d4d-9084-4482-9576-d1ee43abe272",
        "cursor": {
          "ref": "390e54b8-385c-4b53-b0d4-433fdbe29a2a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "091fa43c-0b37-47fa-9387-a0656d5bdc24"
        },
        "item": {
          "id": "5e8f5d4d-9084-4482-9576-d1ee43abe272",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "74fe420b-e7c7-4ea4-a5b7-cfc8fc7bbcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747298c5-5619-4a28-8bb3-37b031072867",
        "cursor": {
          "ref": "494983e8-3a28-4182-aab3-c5fce19bda6a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3eda2799-8f79-4a6e-a1d4-2472d21c2c4c"
        },
        "item": {
          "id": "747298c5-5619-4a28-8bb3-37b031072867",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e2dc2ab2-3898-4043-9e33-291e03c8dbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b9e36f-5b3b-41bf-bdf3-3a89f41e4105",
        "cursor": {
          "ref": "52822ff2-3528-421e-8623-789b5ea3983a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d19f5272-621b-478b-b14b-fb3a4033c951"
        },
        "item": {
          "id": "66b9e36f-5b3b-41bf-bdf3-3a89f41e4105",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5508db37-519d-4b8a-b4bf-945fa20e1ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e213cd-0c9b-4ffc-aba7-8e7a64d3d4b7",
        "cursor": {
          "ref": "da24acde-fdf5-4ad9-85c3-252ec188f902",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b03c27dd-d2bb-4651-8abc-fec3647928fe"
        },
        "item": {
          "id": "62e213cd-0c9b-4ffc-aba7-8e7a64d3d4b7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c103d720-6ed2-42ae-8694-b08e36154b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbc38bb-f891-4b38-966f-79326e04380e",
        "cursor": {
          "ref": "71fbf226-1456-4669-9b11-f8d47473af0c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "053f627e-c0b7-4f03-b267-18fbf90a6ab4"
        },
        "item": {
          "id": "2bbc38bb-f891-4b38-966f-79326e04380e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e16e0cb1-fd60-4f5c-b511-117f19ce99cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72938ab1-0932-4109-8a6b-c9d1555d6d92",
        "cursor": {
          "ref": "9597a961-0c33-4fb2-b1ee-ce3d88b43c77",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "64d31238-a4fc-44c2-a67a-57ddd7f63255"
        },
        "item": {
          "id": "72938ab1-0932-4109-8a6b-c9d1555d6d92",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e244ded4-c693-4754-8889-c531536adcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6998c3c7-7152-41c4-a438-43d3b7e8244b",
        "cursor": {
          "ref": "cda4bc07-8c28-447a-b405-f95dcb3c7faf",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c9379345-092c-4ed5-8f03-4820681c1d5a"
        },
        "item": {
          "id": "6998c3c7-7152-41c4-a438-43d3b7e8244b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ec6dfac4-09c1-48db-82bb-0d24c03de5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d4ffc5-bf8f-4267-8be7-3c715a1fef07",
        "cursor": {
          "ref": "913b2a63-8b8f-4435-a916-2a76c749f985",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "597830b6-777b-44d3-b848-66b48b5ce08b"
        },
        "item": {
          "id": "92d4ffc5-bf8f-4267-8be7-3c715a1fef07",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e5e6d7bf-7200-472d-b02c-c72470bd7d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e54e0d-9a47-4cf0-876e-e275a8225bce",
        "cursor": {
          "ref": "97e1440a-864f-44bf-ba8b-2e8a9fe77e04",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a6cfd588-b42e-4204-9ebe-6bdc7a8abf6c"
        },
        "item": {
          "id": "f9e54e0d-9a47-4cf0-876e-e275a8225bce",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cbfb3827-d50b-4027-9309-54a893389921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f190f9ba-a066-40b2-ade7-9c4f6bcf26f2",
        "cursor": {
          "ref": "a0b35dc9-3e24-4b7a-b254-3245602127ec",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "910fe27e-850a-4dac-9394-29185bdf79ec"
        },
        "item": {
          "id": "f190f9ba-a066-40b2-ade7-9c4f6bcf26f2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ce11cf1c-459b-4150-ba5b-29987d42f27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6d2665-15f2-4636-b006-992d60921464",
        "cursor": {
          "ref": "de8c06ad-78c2-400c-9e4d-f5f76a7d99f1",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "741b8f79-7e88-43af-8d4b-a95790c6dfc0"
        },
        "item": {
          "id": "5d6d2665-15f2-4636-b006-992d60921464",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "65caf59f-2ed5-425e-8f3d-57018963c4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7590eb07-362d-411d-863e-81731addf18f",
        "cursor": {
          "ref": "936a25c0-f5f0-4567-b1cd-98948a208a14",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5f3feced-4952-4510-b39d-1640b0f2b047"
        },
        "item": {
          "id": "7590eb07-362d-411d-863e-81731addf18f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "196d0da4-f524-4d61-9f0e-d42ad42fe960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216200cf-62ac-4ff9-8f1c-097edb362667",
        "cursor": {
          "ref": "fe7842fb-44a4-4f1d-8d23-0de4c1fed1f8",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5e9485e5-e834-463c-b603-40a8577223d8"
        },
        "item": {
          "id": "216200cf-62ac-4ff9-8f1c-097edb362667",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee4d1115-44f7-4f4b-9193-b10ff06351eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a093c908-76ba-4bad-a3f1-95303bdd415f",
        "cursor": {
          "ref": "8feb1544-fee1-48b6-9104-c94c15dc3fa0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f7ad2301-ffc8-4e4d-9a4c-4eaae1b68799"
        },
        "item": {
          "id": "a093c908-76ba-4bad-a3f1-95303bdd415f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a6ed9e4b-986f-49ad-90a6-bb267ff78ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5405a475-8235-4699-96c6-274917d469ac",
        "cursor": {
          "ref": "b044f7e2-7108-4af2-9e54-043388d0b6cc",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "437479fd-ea69-46b8-9501-edef3a093fdd"
        },
        "item": {
          "id": "5405a475-8235-4699-96c6-274917d469ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2718b5ed-08ce-45ba-9ed7-80756df9ef53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e923d96-b8fd-4209-afd3-4affc47e5737",
        "cursor": {
          "ref": "5f5a9187-def8-4f76-a196-ab7e3d0e8091",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5867c1af-e443-44a0-a606-d3b9eb02104a"
        },
        "item": {
          "id": "9e923d96-b8fd-4209-afd3-4affc47e5737",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bfd74457-00f0-4633-a85e-dcfd17276990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b536f5d4-5a27-451b-977b-5b44ebd4fde6",
        "cursor": {
          "ref": "44aa9c39-9f73-4f82-ab6c-aca1bca5ad57",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2e851837-7fc0-40d2-a816-88e893ed770d"
        },
        "item": {
          "id": "b536f5d4-5a27-451b-977b-5b44ebd4fde6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e802e14b-5425-4c62-be33-a70365255b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bd9a87-2e0e-43b7-bf71-50e4daa9c4fe",
        "cursor": {
          "ref": "23d98143-4f51-4304-9236-de8ab78fd607",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ad470e3e-2eee-49e4-b5d1-e6b7f057be73"
        },
        "item": {
          "id": "16bd9a87-2e0e-43b7-bf71-50e4daa9c4fe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c8c6babe-89aa-43e2-b4e1-43e0a94e9655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41006a01-cc7e-4227-81c9-c671f182875d",
        "cursor": {
          "ref": "9a9cde71-803a-4e03-a033-4abe20942b62",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fbe0c0c1-308f-4376-8e7e-7193cbb2c377"
        },
        "item": {
          "id": "41006a01-cc7e-4227-81c9-c671f182875d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eb27e962-33a1-4a8f-b4be-3fa5bc50d1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdc6d9c-080b-4827-8f4f-6ecc39cd0e5c",
        "cursor": {
          "ref": "b5287a3e-edcb-4a2e-9bd7-a202b675a224",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "11a14ad8-443a-4e6b-8b3e-a9c908b61718"
        },
        "item": {
          "id": "2fdc6d9c-080b-4827-8f4f-6ecc39cd0e5c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f06b8ef7-0d2c-4845-8696-514443a4b6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dba3be5-efec-41e3-9090-1f6eeb01d0ad",
        "cursor": {
          "ref": "2048ec2b-6c45-4ed4-b6f8-b1671ecddfec",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d564dd31-c524-4834-ba62-0294bd765ea8"
        },
        "item": {
          "id": "6dba3be5-efec-41e3-9090-1f6eeb01d0ad",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b3816765-133d-4a31-8f0c-150ca9c214b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950d7384-584a-41a0-b199-0b6ef18b3b8e",
        "cursor": {
          "ref": "5d4452fa-746e-4417-9483-528e2983456c",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ce919d5-366c-45fa-8bd8-215812b64489"
        },
        "item": {
          "id": "950d7384-584a-41a0-b199-0b6ef18b3b8e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0c7a7d9c-ba20-403f-bc26-0d1ca3ec4551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06783bfe-efab-4c53-8856-7a7da521650e",
        "cursor": {
          "ref": "8b520068-a67c-49ff-9c68-02ab0792291f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4818a9c7-1023-4228-a17c-037a62489404"
        },
        "item": {
          "id": "06783bfe-efab-4c53-8856-7a7da521650e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e476b5a4-5003-479e-9de2-2de6110cc587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfeebe1-627b-4dcb-be74-33b21e9334ab",
        "cursor": {
          "ref": "3d99b9bf-ea7c-48b4-80eb-bbd09044fcfe",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "38b96c69-098b-4e0d-8d22-33284ec4736c"
        },
        "item": {
          "id": "9dfeebe1-627b-4dcb-be74-33b21e9334ab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "945eeec4-2598-42b0-90bb-928e7759473a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f167b8-c2d3-4dd4-9f0f-deae6afa1840",
        "cursor": {
          "ref": "8bbcec5c-daff-41f9-987b-2a23e5831b49",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "18ca6283-9c37-4cb1-b06a-7a74c9fcfb01"
        },
        "item": {
          "id": "f0f167b8-c2d3-4dd4-9f0f-deae6afa1840",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2eba65a-db7e-4f4c-b0b6-5784f8eed052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8186e7-38a6-4d81-9ebb-61eada3caab1",
        "cursor": {
          "ref": "911e8567-be5b-444e-a5f8-e70234bccafe",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2e5113c3-4796-4387-b44c-bb20936650e0"
        },
        "item": {
          "id": "bc8186e7-38a6-4d81-9ebb-61eada3caab1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d458d4ea-ef4e-4c36-91ec-75ab48b2ae5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641cb023-8339-4900-81c8-4cb602fe8cb3",
        "cursor": {
          "ref": "b6dec227-1985-468b-8661-2c48e5cc04dd",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d2f65c6-38d1-4604-9902-c9c768e5661e"
        },
        "item": {
          "id": "641cb023-8339-4900-81c8-4cb602fe8cb3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "175bcde5-2d37-4281-a9e2-9188d6f4109d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd04641-44b7-4bdc-a73a-a5313dabffb0",
        "cursor": {
          "ref": "f5a1a44b-5c52-443c-83da-8b48d56bff4a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "78e43de8-2ae8-49c5-ab26-0a425f030f2e"
        },
        "item": {
          "id": "3dd04641-44b7-4bdc-a73a-a5313dabffb0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4deefb59-4d6a-49c8-96c9-fc2c1710300e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e41ebf-6baa-4332-9e31-36d1876270bb",
        "cursor": {
          "ref": "0e4b39e1-faae-41c9-8e0f-8a24026b8188",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5453955a-b32f-44c6-9ac5-5c32562e4bc0"
        },
        "item": {
          "id": "c1e41ebf-6baa-4332-9e31-36d1876270bb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "70558cdb-d52d-4032-9ce9-5c0ecca7bf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dabd98-9c2a-445a-b065-d1c7dbe03e18",
        "cursor": {
          "ref": "47b1f7de-0766-41e4-abec-907f5e850c4c",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "de2a2845-845f-4bbd-a3ed-a13f147cb293"
        },
        "item": {
          "id": "a0dabd98-9c2a-445a-b065-d1c7dbe03e18",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "194ba83b-e6e1-4c9d-b86d-41e1ca899617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdc6be4-5f7a-4b08-bbe3-9f2f3095135d",
        "cursor": {
          "ref": "65444d86-6807-4250-a35c-0b3543e747b6",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc15f071-3fd1-4c41-9d23-8ba450277756"
        },
        "item": {
          "id": "dbdc6be4-5f7a-4b08-bbe3-9f2f3095135d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "79179b7d-c885-4a03-8d04-f68796336af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa34df4b-2016-4bc6-bf17-e8455a3e7419",
        "cursor": {
          "ref": "935bfcfe-95c4-4c03-9cea-30403c4cea2a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7798900f-0749-43f9-99b3-dd29ab4c17ef"
        },
        "item": {
          "id": "fa34df4b-2016-4bc6-bf17-e8455a3e7419",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "84af3c97-40c7-407e-b2a2-f093e83b8377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2d6f53-b7b5-4515-b8fb-71bfdfa674a0",
        "cursor": {
          "ref": "3340abdd-ec83-4cdb-ad5a-82ddc1f8ec0f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cb9fef16-33cc-4b37-9b44-094efab40bb7"
        },
        "item": {
          "id": "0d2d6f53-b7b5-4515-b8fb-71bfdfa674a0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f9382b43-214b-4234-91ac-e982b9f311e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7681d5-734e-4a79-8f0b-cf8d9fcd979c",
        "cursor": {
          "ref": "b95e3f95-629f-4a22-ac5d-d6ccd5e4aeab",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1d4aea17-a036-4a7b-83e4-49c7be875eec"
        },
        "item": {
          "id": "ac7681d5-734e-4a79-8f0b-cf8d9fcd979c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4a35170e-cbae-40b8-a028-91bfd0793e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308db9ab-f811-4864-b750-132952cd31b3",
        "cursor": {
          "ref": "753c207f-e944-4a5f-8e34-4c4ad14eed84",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bae00b8c-619b-43bf-9d06-be5a7298f8ea"
        },
        "item": {
          "id": "308db9ab-f811-4864-b750-132952cd31b3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "733873e6-8961-4f20-b993-b0c443e219e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf53ba41-e5b0-4ce9-8d70-68fadf98277a",
        "cursor": {
          "ref": "29ddc0c0-98cd-45d6-937c-8e420ff3abe9",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bbce5d82-66f6-46cc-a851-076c7754e44d"
        },
        "item": {
          "id": "cf53ba41-e5b0-4ce9-8d70-68fadf98277a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b18e6e88-04a7-461a-bec4-d6426ff0ef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6f5bad-55e0-49c9-858e-5664c0f29b3f",
        "cursor": {
          "ref": "23931494-14ec-4daf-a2aa-619b8752b806",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2c1104b1-a8a5-4bf1-a6bf-1f05bd7c3c66"
        },
        "item": {
          "id": "ed6f5bad-55e0-49c9-858e-5664c0f29b3f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "863b19d9-4a8f-4ee5-8bf0-70895cb2a0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a04bd93-fd8c-49a5-a286-f02da180dc52",
        "cursor": {
          "ref": "898c3086-2aee-46d1-92cd-77995c13c0b2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "707351f3-460c-44e1-83db-24dedc8b20b7"
        },
        "item": {
          "id": "5a04bd93-fd8c-49a5-a286-f02da180dc52",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4fb7c747-5ee6-49d6-bfde-5853fc87c400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4442a3a4-6cf8-4403-a02b-4d55b9ecba83",
        "cursor": {
          "ref": "d0ff5281-e736-4347-b920-b857844ff072",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0de466ab-250d-46a1-90f3-adb29239f0b4"
        },
        "item": {
          "id": "4442a3a4-6cf8-4403-a02b-4d55b9ecba83",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "730d8ccd-9533-4126-932c-0ad4014b0bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab7bb2e-fd0a-47bb-b2fc-5e32e50506e1",
        "cursor": {
          "ref": "e9e9ac30-a3cf-4711-8da2-4048edc85f99",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "34ba7b06-c2bd-4138-af8e-fcebb86287db"
        },
        "item": {
          "id": "5ab7bb2e-fd0a-47bb-b2fc-5e32e50506e1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "343a2054-324c-4193-97dd-9c0bc6f6b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4183cbbb-8e10-45c9-8772-90c294d8f484",
        "cursor": {
          "ref": "e5f79884-511c-4852-a749-85d349b4af8a",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "554b2115-49a8-4cf4-baec-0cb4efd01b36"
        },
        "item": {
          "id": "4183cbbb-8e10-45c9-8772-90c294d8f484",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eb564009-0730-424f-bf44-4bfeec673c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d5cb9e-8661-4cc6-9ab4-9006dde19df7",
        "cursor": {
          "ref": "be94021d-a5c7-47a7-aace-5c155050ee2a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e4cc1437-edff-4d36-8939-232aba1b9630"
        },
        "item": {
          "id": "58d5cb9e-8661-4cc6-9ab4-9006dde19df7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9919d349-b32d-4227-8cde-e31e0d0f8c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ab40cc-1aee-4996-a61c-1c8bc45eb1e9",
        "cursor": {
          "ref": "5fa8b7bb-717b-45c7-ad7f-9c7574cf6006",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7c475527-2f03-43ca-8854-726e15e24a54"
        },
        "item": {
          "id": "a6ab40cc-1aee-4996-a61c-1c8bc45eb1e9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "68683323-95b4-409f-8545-ceee01636845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbd2ae3-68b4-49e4-9587-77bd28e71ece",
        "cursor": {
          "ref": "191e80f4-6319-4e71-b9c8-c0878751f8ad",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "70cf295a-c2a0-4ad6-b157-197969306b86"
        },
        "item": {
          "id": "6cbd2ae3-68b4-49e4-9587-77bd28e71ece",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "653fa7ec-10c0-4202-9de5-136ea1f2bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a76ede7-aef2-4bb5-a2e3-4c5969becdbc",
        "cursor": {
          "ref": "14229858-1a39-4d59-b728-c0b722aed769",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ce325fc1-a37f-4416-9f71-7be61172f49e"
        },
        "item": {
          "id": "3a76ede7-aef2-4bb5-a2e3-4c5969becdbc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4df8ed78-9844-4e7b-a5db-a5d7169cba94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009149b9-29b7-487f-bfcc-829805597bb3",
        "cursor": {
          "ref": "5dcd586d-02dc-43d9-8b50-de4503b0b873",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "641d2e72-c89a-438d-aade-cf2e113a9296"
        },
        "item": {
          "id": "009149b9-29b7-487f-bfcc-829805597bb3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26e4cee7-ca92-42ea-946b-78789a56ee2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840c66d3-5d06-483e-acea-7f5e9a607bb6",
        "cursor": {
          "ref": "ea63d99a-95cd-475c-aa6c-b5111353ad06",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "195edb09-166c-44a1-a904-d97ffb487304"
        },
        "item": {
          "id": "840c66d3-5d06-483e-acea-7f5e9a607bb6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6f776e7-c00d-4b42-9444-7bb7eb341114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579e7cf0-c127-46d1-8a89-767f264be2b5",
        "cursor": {
          "ref": "b6cdb82b-b697-4e80-b790-df5034a0ddbb",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "569a7edd-23e5-4f9a-8c3c-53d2bae48138"
        },
        "item": {
          "id": "579e7cf0-c127-46d1-8a89-767f264be2b5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "03a055a0-a203-46b3-a31a-e32b75b97946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e1a432-abc1-424e-a0fe-1cc2b0b9d9c5",
        "cursor": {
          "ref": "80b51908-f174-400e-b784-51e549f7a76d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6247233c-5d23-4be6-b297-55133bd71e3a"
        },
        "item": {
          "id": "f5e1a432-abc1-424e-a0fe-1cc2b0b9d9c5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "55005d73-35e0-4499-abeb-4e1b89f2f6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de81e97-c045-4e3a-9a20-2f0846935bf0",
        "cursor": {
          "ref": "7245306b-f11e-45e2-bc6c-6ac9d273c1f9",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6ce80059-4d9a-4ba8-a467-e377930405aa"
        },
        "item": {
          "id": "1de81e97-c045-4e3a-9a20-2f0846935bf0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0bce583b-0843-41d7-94da-0b06a0a791d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac48690-eb43-433c-8bcc-0b4eb09e52e0",
        "cursor": {
          "ref": "fac42b66-eefe-433f-9577-a95d31fc87e3",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "99f9b487-63d5-41f6-b517-12e8fdc1d99a"
        },
        "item": {
          "id": "5ac48690-eb43-433c-8bcc-0b4eb09e52e0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "42424cb1-605c-4d2e-8c4c-9566c84422d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf1de09-810b-4469-9f31-00a06b649e6b",
        "cursor": {
          "ref": "7c599152-172f-4f37-bac8-90948f6d460a",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "00e31d2a-c54d-41b5-8e00-099357190ec9"
        },
        "item": {
          "id": "4bf1de09-810b-4469-9f31-00a06b649e6b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0ff39937-13b7-4e1c-a01a-f1611328511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f01e415-7f72-420a-873c-6d7f204e05ee",
        "cursor": {
          "ref": "c0fe2644-3f04-401b-9ebb-0f7be274baa5",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4fbd5a1c-2241-42e3-a0ba-f1de303b50a0"
        },
        "item": {
          "id": "2f01e415-7f72-420a-873c-6d7f204e05ee",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "489b65a3-2622-4ac4-8677-39376ba0b20a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad288a4-a1ec-42ee-9da0-bb6544b54a9d",
        "cursor": {
          "ref": "ebf6d550-9898-4d42-9c2b-d26f7275d487",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e5826842-bb01-4786-a732-f4a11dbb9f35"
        },
        "item": {
          "id": "bad288a4-a1ec-42ee-9da0-bb6544b54a9d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ea705ccd-b146-45c6-a5ff-c1fb92ccdc4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 514,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5778dc-146d-45cb-8a57-1287761ce019",
        "cursor": {
          "ref": "da36940a-a32f-4b73-a9df-a2714767c9a2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c89612cb-f9aa-44df-9983-934cf5e40715"
        },
        "item": {
          "id": "1f5778dc-146d-45cb-8a57-1287761ce019",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dca832ee-81b6-426e-a963-a5d61549767f",
          "status": "OK",
          "code": 200,
          "responseTime": 665,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "738743c3-429b-418d-954d-57a84b1c64ad",
        "cursor": {
          "ref": "d1b5d6f8-3182-4683-a68a-0f49d99b66d7",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "31d7ad27-6d73-43cd-a6e1-c87580e80f3e"
        },
        "item": {
          "id": "738743c3-429b-418d-954d-57a84b1c64ad",
          "name": "credentials_verify"
        },
        "response": {
          "id": "beda5e30-bf63-4809-81d4-921150ae4ad7",
          "status": "OK",
          "code": 200,
          "responseTime": 2145,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a343bb1-cbb4-4696-b346-7d12d42ddb5f",
        "cursor": {
          "ref": "0512528e-d67d-4e69-9df3-2d51dcc0ea2f",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1ad52b36-bebb-4b25-a36e-ff86d0f6f591"
        },
        "item": {
          "id": "1a343bb1-cbb4-4696-b346-7d12d42ddb5f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cd9ab643-055a-4358-8fb3-08ebece86c3e",
          "status": "OK",
          "code": 200,
          "responseTime": 1772,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
        "cursor": {
          "ref": "c9525656-7a81-4260-870f-fb22a5cba547",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "244d657e-94db-4468-8293-557cd25185b6"
        },
        "item": {
          "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0217d788-0e1c-4dd9-ac6f-0829b5be519e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
        "cursor": {
          "ref": "c9525656-7a81-4260-870f-fb22a5cba547",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "244d657e-94db-4468-8293-557cd25185b6"
        },
        "item": {
          "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0217d788-0e1c-4dd9-ac6f-0829b5be519e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
        "cursor": {
          "ref": "c9525656-7a81-4260-870f-fb22a5cba547",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "244d657e-94db-4468-8293-557cd25185b6"
        },
        "item": {
          "id": "4c11f495-3c22-4b19-b2e9-b58a01e55542",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0217d788-0e1c-4dd9-ac6f-0829b5be519e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad18beb7-fe96-4c1c-bb10-2fb0c4c95bd1",
        "cursor": {
          "ref": "f6a2870b-a331-4eeb-9bca-155720badc69",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c8960bba-583d-4e19-b4f6-82c37cc4705f"
        },
        "item": {
          "id": "ad18beb7-fe96-4c1c-bb10-2fb0c4c95bd1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fca6f41b-112d-4572-b70e-14977994efbc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 305,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be39784c-a8cd-4881-9904-a9ea32715403",
        "cursor": {
          "ref": "5ab7674f-e3c9-43ed-9bb2-ba195ece731e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "af29b7a5-dee1-4bd3-812c-11d3f479f5ef"
        },
        "item": {
          "id": "be39784c-a8cd-4881-9904-a9ea32715403",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "42de4d62-b59d-47b4-9376-280107509274",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be39784c-a8cd-4881-9904-a9ea32715403",
        "cursor": {
          "ref": "5ab7674f-e3c9-43ed-9bb2-ba195ece731e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "af29b7a5-dee1-4bd3-812c-11d3f479f5ef"
        },
        "item": {
          "id": "be39784c-a8cd-4881-9904-a9ea32715403",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "42de4d62-b59d-47b4-9376-280107509274",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72721a9-d108-4512-941d-a3223e4ede10",
        "cursor": {
          "ref": "27d851c4-b78e-45b0-959b-1689d7fe9d5c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ebfa8c96-d677-4d9f-b4ac-cf500cf12622"
        },
        "item": {
          "id": "b72721a9-d108-4512-941d-a3223e4ede10",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "dfade55f-da6b-4c95-989b-e67be1b2501c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 510,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e44bc2-e29a-4c56-b96c-8083a81bf7c2",
        "cursor": {
          "ref": "85c306a2-b1ea-45b6-b5f8-814dbbffdf05",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e691ec27-5ec9-41c7-a07f-59ee0720a2c6"
        },
        "item": {
          "id": "99e44bc2-e29a-4c56-b96c-8083a81bf7c2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e4e5fd5-7e5c-4c6a-a160-3b62e860314d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e44bc2-e29a-4c56-b96c-8083a81bf7c2",
        "cursor": {
          "ref": "85c306a2-b1ea-45b6-b5f8-814dbbffdf05",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e691ec27-5ec9-41c7-a07f-59ee0720a2c6"
        },
        "item": {
          "id": "99e44bc2-e29a-4c56-b96c-8083a81bf7c2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8e4e5fd5-7e5c-4c6a-a160-3b62e860314d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c21de-b637-4d36-9744-5a0ab89f4ed3",
        "cursor": {
          "ref": "7f625ca3-6f9b-43ac-af85-4086db55471c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b21e982b-dbe1-4245-b1c7-d195b52c83a1"
        },
        "item": {
          "id": "f20c21de-b637-4d36-9744-5a0ab89f4ed3",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "20a5c76b-01ce-4176-93d2-883528f1f47a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}